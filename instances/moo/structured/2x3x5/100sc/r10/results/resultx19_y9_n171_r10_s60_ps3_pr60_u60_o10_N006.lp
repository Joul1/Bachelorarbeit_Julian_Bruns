%%%%%
%Standard
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(1,2)),8).
move(1,((1,2),(1,1)),9).
move(1,((1,1),(2,1)),10).
move(1,((2,1),(2,2)),11).
move(1,((2,2),(2,3)),12).
move(1,((2,3),(2,4)),13).
move(1,((2,4),(3,4)),14).
move(1,((3,4),(4,4)),15).
move(1,((4,4),(4,5)),16).
move(1,((4,5),(4,6)),17).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(2,((3,3),(4,3)),8).
move(2,((4,3),(3,3)),10).
move(2,((3,3),(3,2)),11).
move(2,((3,2),(3,1)),12).
move(2,((3,1),(4,1)),13).
move(2,((4,1),(5,1)),14).
move(2,((5,1),(5,2)),15).
move(2,((5,2),(5,3)),16).
move(3,((3,9),(2,9)),1).
move(3,((2,9),(1,9)),2).
move(3,((1,9),(1,8)),3).
move(3,((1,8),(1,7)),4).
move(3,((1,7),(1,6)),5).
move(3,((1,6),(1,5)),6).
move(3,((1,5),(1,4)),7).
move(3,((1,4),(1,3)),8).
move(3,((1,3),(1,2)),9).
move(3,((1,2),(1,1)),10).
move(3,((1,1),(2,1)),12).
move(3,((2,1),(2,2)),13).
move(3,((2,2),(2,3)),14).
move(3,((2,3),(3,3)),15).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(5,6)),4).
move(4,((5,6),(5,5)),9).
move(4,((5,5),(4,5)),11).
move(4,((4,5),(4,6)),12).
move(4,((4,6),(5,6)),13).
move(4,((5,6),(6,6)),14).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(5,((6,3),(7,3)),8).
move(5,((7,3),(8,3)),9).
move(5,((8,3),(9,3)),10).
move(5,((9,3),(8,3)),11).
move(5,((8,3),(7,3)),12).
move(5,((7,3),(6,3)),13).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(7,2)),9).
move(6,((7,2),(8,2)),11).
move(6,((8,2),(8,3)),12).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(6,5)),7).
move(7,((6,5),(5,5)),8).
move(7,((5,5),(4,5)),9).
move(7,((4,5),(4,4)),11).
move(7,((4,4),(4,3)),12).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(11,9)),3).
move(8,((11,9),(11,8)),4).
move(8,((11,8),(11,7)),5).
move(8,((11,7),(12,7)),6).
move(8,((12,7),(12,6)),7).
move(8,((12,6),(13,6)),8).
move(8,((13,6),(13,5)),9).
move(8,((13,5),(14,5)),10).
move(8,((14,5),(14,4)),11).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(8,4)),6).
move(9,((8,4),(7,4)),7).
move(9,((7,4),(7,5)),8).
move(9,((7,5),(7,6)),9).
move(9,((7,6),(6,6)),10).
move(9,((6,6),(6,7)),11).
move(10,((10,9),(11,9)),1).
move(10,((11,9),(12,9)),2).
move(10,((12,9),(13,9)),3).
move(10,((13,9),(12,9)),5).
move(10,((12,9),(12,8)),7).
move(10,((12,8),(12,7)),8).
move(10,((12,7),(12,6)),9).
move(10,((12,6),(12,5)),10).
move(10,((12,5),(12,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 3.978s (Solving: 0.14s 1st Model: 0.14s Unsat: 0.00s)
CPU Time     : 3.969s

Choices      : 2790    
Conflicts    : 93       (Analyzed: 93)
Restarts     : 0       
Model-Level  : 464.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 93       (Deleted: 0)
  Binary     : 14       (Ratio:  15.05%)
  Ternary    : 2        (Ratio:   2.15%)
  Conflict   : 93       (Average Length:   37.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 93       (Average: 25.01 Max: 203 Sum:   2326)
  Executed   : 93       (Average: 25.01 Max: 203 Sum:   2326 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 826268   (Original: 769656)
  Choice     : 400     
Atoms        : 338345  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(5,9)),4).
move(1,((5,9),(5,8)),5).
move(1,((5,8),(5,7)),6).
move(1,((5,7),(5,6)),7).
move(1,((5,6),(5,5)),8).
move(1,((5,5),(5,6)),11).
move(1,((5,6),(4,6)),12).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(1,4)),6).
move(2,((1,4),(1,3)),7).
move(2,((1,3),(1,2)),8).
move(2,((1,2),(2,2)),9).
move(2,((2,2),(3,2)),10).
move(2,((3,2),(4,2)),11).
move(2,((4,2),(5,2)),12).
move(2,((5,2),(5,3)),13).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(4,6)),4).
move(3,((4,6),(5,6)),5).
move(3,((5,6),(6,6)),6).
move(3,((6,6),(5,6)),10).
move(3,((5,6),(4,6)),11).
move(3,((4,6),(4,5)),12).
move(3,((4,5),(4,4)),13).
move(3,((4,4),(3,4)),14).
move(3,((3,4),(3,3)),15).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(5,4)),6).
move(4,((5,4),(5,5)),7).
move(4,((5,5),(6,5)),8).
move(4,((6,5),(6,6)),10).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((7,9),(6,9)),1).
move(7,((6,9),(5,9)),2).
move(7,((5,9),(5,8)),3).
move(7,((5,8),(4,8)),4).
move(7,((4,8),(4,7)),5).
move(7,((4,7),(4,6)),6).
move(7,((4,6),(4,5)),7).
move(7,((4,5),(3,5)),8).
move(7,((3,5),(3,4)),9).
move(7,((3,4),(3,3)),10).
move(7,((3,3),(4,3)),12).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(11,9)),3).
move(8,((11,9),(11,8)),4).
move(8,((11,8),(11,7)),5).
move(8,((11,7),(12,7)),6).
move(8,((12,7),(12,6)),7).
move(8,((12,6),(13,6)),8).
move(8,((13,6),(13,5)),9).
move(8,((13,5),(14,5)),10).
move(8,((14,5),(14,4)),11).
move(9,((9,9),(10,9)),1).
move(9,((10,9),(11,9)),2).
move(9,((11,9),(12,9)),3).
move(9,((12,9),(12,8)),4).
move(9,((12,8),(11,8)),5).
move(9,((11,8),(10,8)),6).
move(9,((10,8),(9,8)),7).
move(9,((9,8),(8,8)),8).
move(9,((8,8),(7,8)),9).
move(9,((7,8),(6,8)),10).
move(9,((6,8),(6,7)),11).
move(10,((10,9),(11,9)),1).
move(10,((11,9),(12,9)),2).
move(10,((12,9),(13,9)),3).
move(10,((13,9),(13,8)),4).
move(10,((13,8),(13,7)),5).
move(10,((13,7),(14,7)),6).
move(10,((14,7),(14,6)),7).
move(10,((14,6),(14,5)),8).
move(10,((14,5),(14,4)),9).
move(10,((14,4),(13,4)),10).
move(10,((13,4),(12,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 5.037s (Solving: 0.17s 1st Model: 0.17s Unsat: 0.00s)
CPU Time     : 4.938s

Choices      : 3058     (Domain: 35)
Conflicts    : 60       (Analyzed: 60)
Restarts     : 0       
Model-Level  : 601.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 60       (Deleted: 0)
  Binary     : 14       (Ratio:  23.33%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 60       (Average Length:   36.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 60       (Average: 40.95 Max: 236 Sum:   2457)
  Executed   : 60       (Average: 40.95 Max: 236 Sum:   2457 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 826418   (Original: 769806)
  Choice     : 400     
  Heuristic  : 36      
Atoms        : 338459  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(2,8)),2).
move(1,((2,8),(3,8)),3).
move(1,((3,8),(3,7)),4).
move(1,((3,7),(3,6)),5).
move(1,((3,6),(4,6)),6).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(4,8)),3).
move(2,((4,8),(4,7)),4).
move(2,((4,7),(4,6)),5).
move(2,((4,6),(4,5)),6).
move(2,((4,5),(4,4)),7).
move(2,((4,4),(4,3)),8).
move(2,((4,3),(5,3)),9).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(5,9)),1).
move(4,((5,9),(6,9)),2).
move(4,((6,9),(6,8)),3).
move(4,((6,8),(6,7)),4).
move(4,((6,7),(6,6)),5).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(6,7)),3).
move(5,((6,7),(6,6)),4).
move(5,((6,6),(6,5)),5).
move(5,((6,5),(6,4)),6).
move(5,((6,4),(6,3)),7).
move(6,((6,9),(7,9)),1).
move(6,((7,9),(7,8)),2).
move(6,((7,8),(8,8)),3).
move(6,((8,8),(8,7)),4).
move(6,((8,7),(8,6)),5).
move(6,((8,6),(8,5)),6).
move(6,((8,5),(8,4)),7).
move(6,((8,4),(8,3)),8).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(6,8)),2).
move(7,((6,8),(5,8)),3).
move(7,((5,8),(5,7)),4).
move(7,((5,7),(5,6)),5).
move(7,((5,6),(5,5)),6).
move(7,((5,5),(5,4)),7).
move(7,((5,4),(4,4)),8).
move(7,((4,4),(4,3)),9).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(9,8)),2).
move(8,((9,8),(10,8)),3).
move(8,((10,8),(11,8)),4).
move(8,((11,8),(12,8)),5).
move(8,((12,8),(12,7)),6).
move(8,((12,7),(13,7)),7).
move(8,((13,7),(13,6)),8).
move(8,((13,6),(13,5)),9).
move(8,((13,5),(14,5)),10).
move(8,((14,5),(14,4)),11).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(7,8)),3).
move(9,((7,8),(7,7)),4).
move(9,((7,7),(6,7)),5).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),6).
move(10,((11,4),(12,4)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.969s (Solving: 0.11s 1st Model: 0.11s Unsat: 0.00s)
CPU Time     : 4.938s

Choices      : 381      (Domain: 381)
Conflicts    : 3        (Analyzed: 3)
Restarts     : 0       
Model-Level  : 363.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 3        (Deleted: 0)
  Binary     : 3        (Ratio: 100.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 3        (Average Length:    2.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 3        (Average:  6.00 Max:   8 Sum:     18)
  Executed   : 3        (Average:  6.00 Max:   8 Sum:     18 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878887   (Original: 822385)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338469  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,9),(2,9)),2).
move(1,((2,9),(2,8)),4).
move(1,((2,8),(2,7)),5).
move(1,((2,7),(3,7)),7).
move(1,((3,7),(4,7)),8).
move(1,((4,7),(4,6)),10).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),8).
move(2,((2,5),(2,4)),9).
move(2,((2,4),(2,3)),10).
move(2,((2,3),(2,2)),11).
move(2,((2,2),(3,2)),12).
move(2,((3,2),(4,2)),13).
move(2,((4,2),(5,2)),14).
move(2,((5,2),(5,3)),15).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),2).
move(4,((4,8),(5,8)),4).
move(4,((5,8),(6,8)),5).
move(4,((6,8),(6,7)),6).
move(4,((6,7),(6,6)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),6).
move(5,((5,6),(5,5)),7).
move(5,((5,5),(4,5)),8).
move(5,((4,5),(3,5)),9).
move(5,((3,5),(4,5)),10).
move(5,((4,5),(4,4)),11).
move(5,((4,4),(5,4)),12).
move(5,((5,4),(6,4)),13).
move(5,((6,4),(6,3)),14).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(5,4)),8).
move(6,((5,4),(4,4)),9).
move(6,((4,4),(5,4)),10).
move(6,((5,4),(5,3)),11).
move(6,((5,3),(6,3)),12).
move(6,((6,3),(7,3)),13).
move(6,((7,3),(8,3)),14).
move(7,((7,9),(6,9)),1).
move(7,((6,9),(6,8)),2).
move(7,((6,8),(6,7)),3).
move(7,((6,7),(6,6)),4).
move(7,((6,6),(5,6)),5).
move(7,((5,6),(5,5)),6).
move(7,((5,5),(5,4)),7).
move(7,((5,4),(5,3)),8).
move(7,((5,3),(4,3)),9).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(11,9)),3).
move(8,((11,9),(12,9)),4).
move(8,((12,9),(12,8)),5).
move(8,((12,8),(13,8)),9).
move(8,((13,8),(14,8)),10).
move(8,((14,8),(14,7)),11).
move(8,((14,7),(14,6)),12).
move(8,((14,6),(14,5)),13).
move(8,((14,5),(14,4)),14).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(8,8)),2).
move(9,((8,8),(8,7)),5).
move(9,((8,7),(7,7)),6).
move(9,((7,7),(6,7)),7).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(11,6)),7).
move(10,((11,6),(11,5)),8).
move(10,((11,5),(11,6)),9).
move(10,((11,6),(11,5)),10).
move(10,((11,5),(12,5)),11).
move(10,((12,5),(12,4)),12).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 5.554s (Solving: 0.24s 1st Model: 0.24s Unsat: 0.00s)
CPU Time     : 5.328s

Choices      : 1612     (Domain: 321)
Conflicts    : 91       (Analyzed: 91)
Restarts     : 0       
Model-Level  : 360.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 91       (Deleted: 0)
  Binary     : 34       (Ratio:  37.36%)
  Ternary    : 2        (Ratio:   2.20%)
  Conflict   : 91       (Average Length:   28.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 91       (Average: 13.76 Max: 104 Sum:   1252)
  Executed   : 91       (Average: 13.76 Max: 104 Sum:   1252 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878887   (Original: 822385)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338469  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(3,8)),3).
move(1,((3,8),(3,7)),4).
move(1,((3,7),(3,6)),5).
move(1,((3,6),(4,6)),6).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(4,8)),3).
move(2,((4,8),(4,7)),4).
move(2,((4,7),(4,6)),5).
move(2,((4,6),(4,5)),6).
move(2,((4,5),(4,4)),7).
move(2,((4,4),(4,3)),8).
move(2,((4,3),(4,2)),9).
move(2,((4,2),(5,2)),10).
move(2,((5,2),(5,3)),11).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(5,9)),1).
move(4,((5,9),(5,8)),2).
move(4,((5,8),(6,8)),3).
move(4,((6,8),(6,7)),4).
move(4,((6,7),(6,6)),5).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(6,8)),2).
move(5,((6,8),(6,7)),3).
move(5,((6,7),(6,6)),4).
move(5,((6,6),(6,5)),5).
move(5,((6,5),(6,4)),6).
move(5,((6,4),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(7,8)),2).
move(6,((7,8),(8,8)),3).
move(6,((8,8),(8,7)),4).
move(6,((8,7),(8,6)),5).
move(6,((8,6),(8,5)),6).
move(6,((8,5),(8,4)),7).
move(6,((8,4),(8,3)),8).
move(7,((7,9),(6,9)),1).
move(7,((6,9),(5,9)),2).
move(7,((5,9),(5,8)),3).
move(7,((5,8),(5,7)),4).
move(7,((5,7),(5,6)),5).
move(7,((5,6),(5,5)),6).
move(7,((5,5),(5,4)),7).
move(7,((5,4),(5,3)),8).
move(7,((5,3),(4,3)),9).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(9,8)),2).
move(8,((9,8),(10,8)),3).
move(8,((10,8),(11,8)),4).
move(8,((11,8),(12,8)),5).
move(8,((12,8),(13,8)),6).
move(8,((13,8),(13,7)),7).
move(8,((13,7),(13,6)),8).
move(8,((13,6),(13,5)),9).
move(8,((13,5),(13,4)),10).
move(8,((13,4),(14,4)),11).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(7,8)),3).
move(9,((7,8),(7,7)),4).
move(9,((7,7),(6,7)),5).
move(10,((10,9),(11,9)),1).
move(10,((11,9),(12,9)),2).
move(10,((12,9),(12,8)),3).
move(10,((12,8),(12,7)),4).
move(10,((12,7),(12,6)),5).
move(10,((12,6),(12,5)),6).
move(10,((12,5),(12,4)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.822s (Solving: 0.08s 1st Model: 0.08s Unsat: 0.00s)
CPU Time     : 4.734s

Choices      : 383      (Domain: 49)
Conflicts    : 1        (Analyzed: 1)
Restarts     : 0       
Model-Level  : 377.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 1        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 1        (Average Length:   73.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 1        (Average:  6.00 Max:   6 Sum:      6)
  Executed   : 1        (Average:  6.00 Max:   6 Sum:      6 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 828150   (Original: 771558)
  Choice     : 400     
  Heuristic  : 1685     (Original: 1705)
Atoms        : 338542  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(2,6)),4).
move(1,((2,6),(3,6)),5).
move(1,((3,6),(4,6)),12).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(2,2)),7).
move(2,((2,2),(2,1)),8).
move(2,((2,1),(3,1)),9).
move(2,((3,1),(4,1)),10).
move(2,((4,1),(5,1)),11).
move(2,((5,1),(5,2)),12).
move(2,((5,2),(5,3)),13).
move(3,((3,9),(4,9)),1).
move(3,((4,9),(5,9)),2).
move(3,((5,9),(6,9)),3).
move(3,((6,9),(6,8)),4).
move(3,((6,8),(6,7)),5).
move(3,((6,7),(6,6)),7).
move(3,((6,6),(5,6)),10).
move(3,((5,6),(4,6)),11).
move(3,((4,6),(4,5)),12).
move(3,((4,5),(4,4)),13).
move(3,((4,4),(3,4)),14).
move(3,((3,4),(3,3)),15).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(5,8)),2).
move(4,((5,8),(6,8)),3).
move(4,((6,8),(7,8)),4).
move(4,((7,8),(7,7)),5).
move(4,((7,7),(7,6)),6).
move(4,((7,6),(6,6)),10).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,4)),7).
move(5,((5,4),(6,4)),8).
move(5,((6,4),(6,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(6,1)),8).
move(6,((6,1),(7,1)),9).
move(6,((7,1),(7,2)),10).
move(6,((7,2),(8,2)),11).
move(6,((8,2),(8,3)),12).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(6,3)),7).
move(7,((6,3),(5,3)),8).
move(7,((5,3),(4,3)),9).
move(7,((4,3),(5,3)),11).
move(7,((5,3),(4,3)),12).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(11,9)),3).
move(8,((11,9),(11,8)),4).
move(8,((11,8),(11,7)),5).
move(8,((11,7),(12,7)),6).
move(8,((12,7),(12,6)),7).
move(8,((12,6),(13,6)),8).
move(8,((13,6),(13,5)),9).
move(8,((13,5),(14,5)),10).
move(8,((14,5),(14,4)),11).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(8,6)),4).
move(9,((8,6),(7,6)),5).
move(9,((7,6),(6,6)),6).
move(9,((6,6),(5,6)),7).
move(9,((5,6),(5,7)),8).
move(9,((5,7),(6,7)),40).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(11,5)),5).
move(10,((11,5),(12,5)),6).
move(10,((12,5),(12,4)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.601s (Solving: 0.14s 1st Model: 0.13s Unsat: 0.00s)
CPU Time     : 4.516s

Choices      : 3473     (Domain: 734)
Conflicts    : 48       (Analyzed: 48)
Restarts     : 0       
Model-Level  : 1388.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 48       (Deleted: 0)
  Binary     : 9        (Ratio:  18.75%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 48       (Average Length:   35.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 48       (Average: 43.44 Max: 318 Sum:   2085)
  Executed   : 48       (Average: 43.44 Max: 318 Sum:   2085 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 827145   (Original: 770537)
  Choice     : 400     
  Heuristic  : 763      (Original: 767)
Atoms        : 338459  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(4,8)),4).
move(1,((4,8),(4,7)),5).
move(1,((4,7),(5,7)),6).
move(1,((5,7),(5,6)),7).
move(1,((5,6),(5,5)),8).
move(1,((5,5),(6,5)),9).
move(1,((6,5),(5,5)),10).
move(1,((5,5),(4,5)),11).
move(1,((4,5),(4,6)),13).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(2,2)),7).
move(2,((2,2),(2,1)),8).
move(2,((2,1),(3,1)),9).
move(2,((3,1),(4,1)),10).
move(2,((4,1),(5,1)),11).
move(2,((5,1),(5,2)),12).
move(2,((5,2),(5,3)),13).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(4,6)),4).
move(3,((4,6),(5,6)),5).
move(3,((5,6),(6,6)),6).
move(3,((6,6),(6,5)),10).
move(3,((6,5),(5,5)),11).
move(3,((5,5),(5,4)),12).
move(3,((5,4),(4,4)),13).
move(3,((4,4),(3,4)),14).
move(3,((3,4),(3,3)),15).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(3,4)),6).
move(4,((3,4),(3,5)),10).
move(4,((3,5),(3,6)),11).
move(4,((3,6),(4,6)),12).
move(4,((4,6),(5,6)),13).
move(4,((5,6),(6,6)),14).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(7,2)),9).
move(6,((7,2),(8,2)),11).
move(6,((8,2),(8,3)),12).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(6,5)),5).
move(7,((6,5),(5,5)),6).
move(7,((5,5),(4,5)),8).
move(7,((4,5),(4,4)),10).
move(7,((4,4),(4,3)),11).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(9,8)),2).
move(8,((9,8),(10,8)),3).
move(8,((10,8),(11,8)),4).
move(8,((11,8),(11,7)),5).
move(8,((11,7),(12,7)),6).
move(8,((12,7),(12,6)),7).
move(8,((12,6),(13,6)),8).
move(8,((13,6),(13,5)),9).
move(8,((13,5),(14,5)),10).
move(8,((14,5),(14,4)),11).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(6,9)),3).
move(9,((6,9),(6,8)),4).
move(9,((6,8),(6,7)),5).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(11,5)),5).
move(10,((11,5),(12,5)),6).
move(10,((12,5),(12,4)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.932s (Solving: 0.18s 1st Model: 0.18s Unsat: 0.00s)
CPU Time     : 4.828s

Choices      : 3590     (Domain: 2636)
Conflicts    : 62       (Analyzed: 62)
Restarts     : 0       
Model-Level  : 523.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 62       (Deleted: 0)
  Binary     : 14       (Ratio:  22.58%)
  Ternary    : 1        (Ratio:   1.61%)
  Conflict   : 62       (Average Length:   36.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 62       (Average: 49.47 Max: 300 Sum:   3067)
  Executed   : 62       (Average: 49.47 Max: 300 Sum:   3067 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878899   (Original: 822387)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338480  
Disjunctions : 0        (Original: 1)
Bodies       : 566810   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305314   (Atom=Atom: 428 Body=Body: 439 Other: 304447)
Tight        : Yes
Variables    : 567731   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531526  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,9),(2,9)),2).
move(1,((2,9),(2,8)),4).
move(1,((2,8),(2,7)),6).
move(1,((2,7),(2,6)),7).
move(1,((2,6),(1,6)),8).
move(1,((1,6),(2,6)),9).
move(1,((2,6),(3,6)),11).
move(1,((3,6),(3,7)),12).
move(1,((3,7),(3,6)),13).
move(1,((3,6),(2,6)),14).
move(1,((2,6),(2,7)),15).
move(1,((2,7),(3,7)),16).
move(1,((3,7),(4,7)),17).
move(1,((4,7),(4,6)),18).
move(1,((4,6),(3,6)),19).
move(1,((3,6),(2,6)),20).
move(1,((2,6),(2,7)),21).
move(1,((2,7),(3,7)),22).
move(1,((3,7),(4,7)),23).
move(1,((4,7),(4,6)),24).
move(1,((4,6),(4,7)),25).
move(1,((4,7),(3,7)),26).
move(1,((3,7),(3,6)),27).
move(1,((3,6),(2,6)),28).
move(1,((2,6),(2,7)),29).
move(1,((2,7),(3,7)),30).
move(1,((3,7),(4,7)),31).
move(1,((4,7),(4,8)),32).
move(1,((4,8),(3,8)),33).
move(1,((3,8),(2,8)),35).
move(1,((2,8),(2,7)),36).
move(1,((2,7),(2,6)),38).
move(1,((2,6),(3,6)),39).
move(1,((3,6),(4,6)),40).
move(2,((2,9),(2,8)),2).
move(2,((2,8),(2,7)),3).
move(2,((2,7),(3,7)),4).
move(2,((3,7),(2,7)),5).
move(2,((2,7),(2,6)),6).
move(2,((2,6),(2,5)),7).
move(2,((2,5),(2,4)),9).
move(2,((2,4),(2,3)),10).
move(2,((2,3),(2,4)),12).
move(2,((2,4),(3,4)),13).
move(2,((3,4),(4,4)),14).
move(2,((4,4),(3,4)),16).
move(2,((3,4),(4,4)),17).
move(2,((4,4),(4,3)),18).
move(2,((4,3),(3,3)),19).
move(2,((3,3),(2,3)),20).
move(2,((2,3),(2,4)),21).
move(2,((2,4),(3,4)),23).
move(2,((3,4),(3,3)),24).
move(2,((3,3),(4,3)),26).
move(2,((4,3),(5,3)),27).
move(2,((5,3),(4,3)),28).
move(2,((4,3),(5,3)),29).
move(2,((5,3),(4,3)),30).
move(2,((4,3),(4,4)),31).
move(2,((4,4),(5,4)),33).
move(2,((5,4),(5,3)),34).
move(2,((5,3),(4,3)),36).
move(2,((4,3),(5,3)),37).
move(2,((5,3),(5,4)),39).
move(2,((5,4),(5,3)),40).
move(3,((3,9),(3,8)),3).
move(3,((3,8),(3,7)),5).
move(3,((3,7),(3,6)),6).
move(3,((3,6),(3,5)),7).
move(3,((3,5),(3,4)),8).
move(3,((3,4),(3,3)),9).
move(3,((3,3),(3,4)),10).
move(3,((3,4),(3,5)),11).
move(3,((3,5),(3,6)),12).
move(3,((3,6),(3,5)),13).
move(3,((3,5),(3,4)),14).
move(3,((3,4),(3,5)),15).
move(3,((3,5),(3,6)),16).
move(3,((3,6),(3,5)),18).
move(3,((3,5),(3,4)),19).
move(3,((3,4),(3,3)),20).
move(3,((3,3),(3,4)),21).
move(3,((3,4),(3,5)),22).
move(3,((3,5),(3,6)),23).
move(3,((3,6),(3,7)),24).
move(3,((3,7),(3,8)),25).
move(3,((3,8),(3,7)),27).
move(3,((3,7),(3,8)),28).
move(3,((3,8),(3,7)),29).
move(3,((3,7),(3,6)),30).
move(3,((3,6),(3,5)),32).
move(3,((3,5),(3,4)),33).
move(3,((3,4),(3,3)),34).
move(3,((3,3),(3,4)),35).
move(3,((3,4),(3,5)),36).
move(3,((3,5),(3,6)),37).
move(3,((3,6),(3,5)),38).
move(3,((3,5),(3,4)),39).
move(3,((3,4),(3,3)),40).
move(4,((4,9),(5,9)),2).
move(4,((5,9),(5,8)),3).
move(4,((5,8),(5,7)),4).
move(4,((5,7),(5,6)),5).
move(4,((5,6),(6,6)),6).
move(4,((6,6),(6,7)),7).
move(4,((6,7),(6,8)),8).
move(4,((6,8),(5,8)),9).
move(4,((5,8),(6,8)),10).
move(4,((6,8),(6,7)),11).
move(4,((6,7),(5,7)),12).
move(4,((5,7),(5,8)),13).
move(4,((5,8),(4,8)),14).
move(4,((4,8),(4,7)),15).
move(4,((4,7),(5,7)),17).
move(4,((5,7),(6,7)),18).
move(4,((6,7),(6,8)),19).
move(4,((6,8),(5,8)),21).
move(4,((5,8),(5,7)),22).
move(4,((5,7),(6,7)),23).
move(4,((6,7),(5,7)),24).
move(4,((5,7),(6,7)),25).
move(4,((6,7),(6,8)),27).
move(4,((6,8),(5,8)),28).
move(4,((5,8),(5,7)),29).
move(4,((5,7),(5,6)),30).
move(4,((5,6),(6,6)),31).
move(4,((6,6),(5,6)),32).
move(4,((5,6),(6,6)),33).
move(4,((6,6),(5,6)),34).
move(4,((5,6),(6,6)),35).
move(4,((6,6),(5,6)),38).
move(4,((5,6),(6,6)),39).
move(5,((5,9),(5,8)),2).
move(5,((5,8),(5,7)),3).
move(5,((5,7),(5,6)),4).
move(5,((5,6),(5,5)),5).
move(5,((5,5),(5,4)),7).
move(5,((5,4),(5,3)),8).
move(5,((5,3),(5,4)),9).
move(5,((5,4),(5,5)),10).
move(5,((5,5),(5,6)),12).
move(5,((5,6),(6,6)),13).
move(5,((6,6),(6,7)),14).
move(5,((6,7),(6,6)),15).
move(5,((6,6),(6,5)),16).
move(5,((6,5),(5,5)),17).
move(5,((5,5),(5,6)),19).
move(5,((5,6),(5,7)),20).
move(5,((5,7),(6,7)),21).
move(5,((6,7),(6,8)),23).
move(5,((6,8),(5,8)),25).
move(5,((5,8),(5,9)),28).
move(5,((5,9),(5,8)),29).
move(5,((5,8),(5,7)),30).
move(5,((5,7),(5,8)),31).
move(5,((5,8),(5,7)),32).
move(5,((5,7),(5,6)),33).
move(5,((5,6),(5,5)),34).
move(5,((5,5),(5,4)),35).
move(5,((5,4),(5,3)),36).
move(5,((5,3),(6,3)),37).
move(5,((6,3),(6,4)),39).
move(5,((6,4),(6,3)),40).
move(6,((6,9),(6,8)),3).
move(6,((6,8),(6,7)),4).
move(6,((6,7),(6,6)),5).
move(6,((6,6),(6,5)),6).
move(6,((6,5),(6,4)),7).
move(6,((6,4),(6,3)),8).
move(6,((6,3),(6,4)),10).
move(6,((6,4),(6,5)),11).
move(6,((6,5),(7,5)),12).
move(6,((7,5),(8,5)),13).
move(6,((8,5),(8,6)),15).
move(6,((8,6),(7,6)),17).
move(6,((7,6),(8,6)),18).
move(6,((8,6),(8,5)),20).
move(6,((8,5),(7,5)),21).
move(6,((7,5),(7,6)),22).
move(6,((7,6),(8,6)),23).
move(6,((8,6),(7,6)),24).
move(6,((7,6),(7,5)),25).
move(6,((7,5),(7,6)),26).
move(6,((7,6),(7,5)),27).
move(6,((7,5),(7,4)),28).
move(6,((7,4),(7,5)),29).
move(6,((7,5),(7,6)),30).
move(6,((7,6),(7,5)),31).
move(6,((7,5),(7,4)),32).
move(6,((7,4),(7,5)),33).
move(6,((7,5),(6,5)),34).
move(6,((6,5),(7,5)),35).
move(6,((7,5),(7,4)),36).
move(6,((7,4),(8,4)),37).
move(6,((8,4),(7,4)),38).
move(6,((7,4),(8,4)),39).
move(6,((8,4),(8,3)),40).
move(7,((7,9),(7,8)),3).
move(7,((7,8),(7,7)),4).
move(7,((7,7),(7,6)),5).
move(7,((7,6),(7,5)),6).
move(7,((7,5),(7,4)),7).
move(7,((7,4),(7,3)),8).
move(7,((7,3),(7,4)),11).
move(7,((7,4),(6,4)),12).
move(7,((6,4),(5,4)),13).
move(7,((5,4),(5,3)),14).
move(7,((5,3),(4,3)),15).
move(7,((4,3),(5,3)),16).
move(7,((5,3),(4,3)),17).
move(7,((4,3),(5,3)),18).
move(7,((5,3),(5,4)),19).
move(7,((5,4),(6,4)),20).
move(7,((6,4),(6,5)),21).
move(7,((6,5),(6,6)),22).
move(7,((6,6),(6,5)),23).
move(7,((6,5),(6,4)),24).
move(7,((6,4),(5,4)),25).
move(7,((5,4),(5,3)),26).
move(7,((5,3),(6,3)),27).
move(7,((6,3),(6,4)),28).
move(7,((6,4),(5,4)),29).
move(7,((5,4),(5,3)),30).
move(7,((5,3),(4,3)),31).
move(7,((4,3),(5,3)),32).
move(7,((5,3),(4,3)),33).
move(7,((4,3),(4,4)),34).
move(7,((4,4),(4,5)),35).
move(7,((4,5),(4,4)),36).
move(7,((4,4),(4,3)),37).
move(7,((4,3),(4,4)),39).
move(7,((4,4),(4,3)),40).
move(8,((8,9),(8,8)),3).
move(8,((8,8),(8,7)),4).
move(8,((8,7),(8,6)),6).
move(8,((8,6),(8,5)),7).
move(8,((8,5),(9,5)),8).
move(8,((9,5),(9,4)),9).
move(8,((9,4),(10,4)),10).
move(8,((10,4),(9,4)),11).
move(8,((9,4),(8,4)),12).
move(8,((8,4),(8,5)),15).
move(8,((8,5),(8,6)),17).
move(8,((8,6),(8,5)),18).
move(8,((8,5),(8,4)),20).
move(8,((8,4),(8,5)),21).
move(8,((8,5),(8,6)),22).
move(8,((8,6),(8,5)),23).
move(8,((8,5),(8,6)),24).
move(8,((8,6),(8,7)),25).
move(8,((8,7),(9,7)),27).
move(8,((9,7),(8,7)),28).
move(8,((8,7),(9,7)),29).
move(8,((9,7),(10,7)),30).
move(8,((10,7),(11,7)),31).
move(8,((11,7),(12,7)),32).
move(8,((12,7),(13,7)),33).
move(8,((13,7),(13,6)),34).
move(8,((13,6),(13,5)),35).
move(8,((13,5),(13,4)),36).
move(8,((13,4),(14,4)),37).
move(9,((9,9),(8,9)),3).
move(9,((8,9),(8,8)),4).
move(9,((8,8),(9,8)),5).
move(9,((9,8),(8,8)),6).
move(9,((8,8),(7,8)),7).
move(9,((7,8),(8,8)),8).
move(9,((8,8),(8,7)),9).
move(9,((8,7),(7,7)),10).
move(9,((7,7),(7,8)),11).
move(9,((7,8),(7,7)),12).
move(9,((7,7),(8,7)),13).
move(9,((8,7),(9,7)),14).
move(9,((9,7),(9,8)),15).
move(9,((9,8),(8,8)),16).
move(9,((8,8),(9,8)),18).
move(9,((9,8),(8,8)),19).
move(9,((8,8),(8,7)),20).
move(9,((8,7),(7,7)),21).
move(9,((7,7),(8,7)),23).
move(9,((8,7),(7,7)),24).
move(9,((7,7),(7,8)),25).
move(9,((7,8),(7,7)),26).
move(9,((7,7),(6,7)),27).
move(9,((6,7),(6,8)),28).
move(9,((6,8),(6,7)),29).
move(9,((6,7),(7,7)),30).
move(9,((7,7),(6,7)),31).
move(9,((6,7),(6,8)),34).
move(9,((6,8),(6,7)),35).
move(9,((6,7),(6,8)),39).
move(9,((6,8),(6,7)),40).
move(10,((10,9),(10,8)),5).
move(10,((10,8),(10,7)),7).
move(10,((10,7),(11,7)),8).
move(10,((11,7),(11,6)),9).
move(10,((11,6),(11,5)),10).
move(10,((11,5),(11,4)),11).
move(10,((11,4),(12,4)),12).
move(10,((12,4),(12,5)),13).
move(10,((12,5),(12,6)),14).
move(10,((12,6),(12,7)),15).
move(10,((12,7),(12,8)),16).
move(10,((12,8),(11,8)),18).
move(10,((11,8),(12,8)),19).
move(10,((12,8),(12,7)),20).
move(10,((12,7),(12,6)),21).
move(10,((12,6),(12,5)),22).
move(10,((12,5),(12,4)),23).
move(10,((12,4),(12,5)),24).
move(10,((12,5),(12,4)),25).
move(10,((12,4),(11,4)),26).
move(10,((11,4),(12,4)),27).
move(10,((12,4),(11,4)),28).
move(10,((11,4),(12,4)),29).
move(10,((12,4),(11,4)),30).
move(10,((11,4),(12,4)),31).
move(10,((12,4),(11,4)),32).
move(10,((11,4),(12,4)),33).
move(10,((12,4),(11,4)),34).
move(10,((11,4),(11,5)),35).
move(10,((11,5),(12,5)),37).
move(10,((12,5),(12,6)),38).
move(10,((12,6),(12,5)),39).
move(10,((12,5),(12,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.665s (Solving: 0.31s 1st Model: 0.31s Unsat: 0.00s)
CPU Time     : 4.625s

Choices      : 3151     (Domain: 3151)
Conflicts    : 194      (Analyzed: 194)
Restarts     : 1        (Average: 194.00 Last: 133)
Model-Level  : 345.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 194      (Deleted: 0)
  Binary     : 79       (Ratio:  40.72%)
  Ternary    : 24       (Ratio:  12.37%)
  Conflict   : 194      (Average Length:    5.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 194      (Average: 14.46 Max: 161 Sum:   2806)
  Executed   : 194      (Average: 14.46 Max: 161 Sum:   2806 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878877   (Original: 822375)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338459  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,9),(2,9)),2).
move(1,((2,9),(2,8)),4).
move(1,((2,8),(2,7)),6).
move(1,((2,7),(2,6)),7).
move(1,((2,6),(2,5)),8).
move(1,((2,5),(2,4)),9).
move(1,((2,4),(2,3)),10).
move(1,((2,3),(2,2)),11).
move(1,((2,2),(2,1)),12).
move(1,((2,1),(1,1)),13).
move(1,((1,1),(1,2)),14).
move(1,((1,2),(2,2)),15).
move(1,((2,2),(2,3)),16).
move(1,((2,3),(2,4)),17).
move(1,((2,4),(2,5)),18).
move(1,((2,5),(2,6)),19).
move(1,((2,6),(2,7)),20).
move(1,((2,7),(2,6)),34).
move(1,((2,6),(3,6)),35).
move(1,((3,6),(4,6)),36).
move(1,((4,6),(4,5)),37).
move(1,((4,5),(4,6)),40).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(4,8)),3).
move(2,((4,8),(4,7)),4).
move(2,((4,7),(4,6)),5).
move(2,((4,6),(3,6)),6).
move(2,((3,6),(3,7)),7).
move(2,((3,7),(2,7)),8).
move(2,((2,7),(3,7)),20).
move(2,((3,7),(3,8)),31).
move(2,((3,8),(3,7)),32).
move(2,((3,7),(3,6)),33).
move(2,((3,6),(3,5)),34).
move(2,((3,5),(3,4)),36).
move(2,((3,4),(4,4)),38).
move(2,((4,4),(5,4)),39).
move(2,((5,4),(5,3)),40).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(2,8)),2).
move(3,((2,8),(2,7)),3).
move(3,((2,7),(2,6)),4).
move(3,((2,6),(3,6)),5).
move(3,((3,6),(3,5)),6).
move(3,((3,5),(3,4)),8).
move(3,((3,4),(3,3)),9).
move(3,((3,3),(3,2)),10).
move(3,((3,2),(3,1)),11).
move(3,((3,1),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(3,4)),14).
move(3,((3,4),(3,5)),15).
move(3,((3,5),(3,6)),16).
move(3,((3,6),(3,7)),17).
move(3,((3,7),(4,7)),18).
move(3,((4,7),(3,7)),19).
move(3,((3,7),(3,6)),20).
move(3,((3,6),(3,7)),31).
move(3,((3,7),(3,6)),32).
move(3,((3,6),(3,5)),33).
move(3,((3,5),(3,4)),34).
move(3,((3,4),(3,3)),36).
move(3,((3,3),(2,3)),37).
move(3,((2,3),(2,2)),38).
move(3,((2,2),(3,2)),39).
move(3,((3,2),(3,3)),40).
move(4,((4,9),(4,8)),2).
move(4,((4,8),(3,8)),3).
move(4,((3,8),(3,7)),5).
move(4,((3,7),(2,7)),7).
move(4,((2,7),(2,6)),8).
move(4,((2,6),(3,6)),9).
move(4,((3,6),(4,6)),10).
move(4,((4,6),(4,7)),11).
move(4,((4,7),(4,6)),18).
move(4,((4,6),(4,7)),19).
move(4,((4,7),(5,7)),33).
move(4,((5,7),(6,7)),34).
move(4,((6,7),(7,7)),35).
move(4,((7,7),(7,6)),36).
move(4,((7,6),(8,6)),37).
move(4,((8,6),(7,6)),38).
move(4,((7,6),(6,6)),40).
move(5,((5,9),(5,8)),3).
move(5,((5,8),(5,7)),4).
move(5,((5,7),(5,6)),5).
move(5,((5,6),(5,5)),6).
move(5,((5,5),(5,4)),7).
move(5,((5,4),(5,3)),8).
move(5,((5,3),(5,2)),9).
move(5,((5,2),(5,1)),10).
move(5,((5,1),(5,2)),11).
move(5,((5,2),(5,3)),12).
move(5,((5,3),(5,4)),13).
move(5,((5,4),(5,5)),14).
move(5,((5,5),(5,6)),15).
move(5,((5,6),(5,7)),16).
move(5,((5,7),(6,7)),33).
move(5,((6,7),(6,6)),34).
move(5,((6,6),(6,5)),35).
move(5,((6,5),(6,4)),36).
move(5,((6,4),(6,3)),37).
move(5,((6,3),(6,4)),38).
move(5,((6,4),(6,3)),40).
move(6,((6,9),(6,8)),3).
move(6,((6,8),(6,7)),4).
move(6,((6,7),(6,6)),5).
move(6,((6,6),(6,5)),6).
move(6,((6,5),(6,4)),7).
move(6,((6,4),(6,3)),8).
move(6,((6,3),(6,2)),9).
move(6,((6,2),(6,1)),10).
move(6,((6,1),(6,2)),11).
move(6,((6,2),(6,3)),12).
move(6,((6,3),(6,4)),13).
move(6,((6,4),(6,5)),14).
move(6,((6,5),(6,6)),15).
move(6,((6,6),(6,7)),16).
move(6,((6,7),(6,6)),31).
move(6,((6,6),(7,6)),32).
move(6,((7,6),(7,5)),33).
move(6,((7,5),(7,4)),34).
move(6,((7,4),(8,4)),35).
move(6,((8,4),(7,4)),37).
move(6,((7,4),(7,3)),38).
move(6,((7,3),(8,3)),39).
move(7,((7,9),(8,9)),1).
move(7,((8,9),(8,8)),2).
move(7,((8,8),(9,8)),3).
move(7,((9,8),(10,8)),4).
move(7,((10,8),(10,7)),5).
move(7,((10,7),(11,7)),6).
move(7,((11,7),(12,7)),7).
move(7,((12,7),(13,7)),9).
move(7,((13,7),(14,7)),10).
move(7,((14,7),(13,7)),11).
move(7,((13,7),(12,7)),12).
move(7,((12,7),(11,7)),13).
move(7,((11,7),(10,7)),14).
move(7,((10,7),(9,7)),15).
move(7,((9,7),(9,6)),16).
move(7,((9,6),(9,5)),17).
move(7,((9,5),(9,4)),18).
move(7,((9,4),(8,4)),19).
move(7,((8,4),(7,4)),20).
move(7,((7,4),(7,3)),21).
move(7,((7,3),(7,4)),23).
move(7,((7,4),(7,5)),24).
move(7,((7,5),(7,6)),25).
move(7,((7,6),(7,7)),26).
move(7,((7,7),(7,8)),27).
move(7,((7,8),(6,8)),28).
move(7,((6,8),(5,8)),30).
move(7,((5,8),(4,8)),31).
move(7,((4,8),(3,8)),32).
move(7,((3,8),(3,7)),33).
move(7,((3,7),(4,7)),34).
move(7,((4,7),(5,7)),35).
move(7,((5,7),(5,6)),36).
move(7,((5,6),(5,5)),37).
move(7,((5,5),(5,4)),38).
move(7,((5,4),(5,3)),39).
move(7,((5,3),(4,3)),40).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(7,8)),2).
move(8,((7,8),(8,8)),3).
move(8,((8,8),(9,8)),4).
move(8,((9,8),(9,7)),5).
move(8,((9,7),(10,7)),6).
move(8,((10,7),(11,7)),7).
move(8,((11,7),(11,6)),9).
move(8,((11,6),(12,6)),10).
move(8,((12,6),(13,6)),11).
move(8,((13,6),(14,6)),12).
move(8,((14,6),(14,5)),13).
move(8,((14,5),(15,5)),14).
move(8,((15,5),(16,5)),15).
move(8,((16,5),(16,4)),16).
move(8,((16,4),(16,3)),17).
move(8,((16,3),(16,2)),18).
move(8,((16,2),(17,2)),19).
move(8,((17,2),(17,1)),20).
move(8,((17,1),(18,1)),21).
move(8,((18,1),(19,1)),22).
move(8,((19,1),(18,1)),23).
move(8,((18,1),(18,2)),24).
move(8,((18,2),(17,2)),25).
move(8,((17,2),(16,2)),26).
move(8,((16,2),(15,2)),27).
move(8,((15,2),(14,2)),28).
move(8,((14,2),(13,2)),29).
move(8,((13,2),(12,2)),30).
move(8,((12,2),(11,2)),31).
move(8,((11,2),(10,2)),32).
move(8,((10,2),(11,2)),33).
move(8,((11,2),(11,3)),34).
move(8,((11,3),(12,3)),35).
move(8,((12,3),(13,3)),36).
move(8,((13,3),(14,3)),37).
move(8,((14,3),(14,4)),38).
move(9,((9,9),(8,9)),2).
move(9,((8,9),(8,8)),4).
move(9,((8,8),(9,8)),5).
move(9,((9,8),(10,8)),6).
move(9,((10,8),(10,7)),7).
move(9,((10,7),(10,6)),8).
move(9,((10,6),(10,5)),9).
move(9,((10,5),(10,4)),10).
move(9,((10,4),(11,4)),11).
move(9,((11,4),(11,3)),12).
move(9,((11,3),(11,2)),13).
move(9,((11,2),(10,2)),14).
move(9,((10,2),(9,2)),15).
move(9,((9,2),(8,2)),16).
move(9,((8,2),(7,2)),17).
move(9,((7,2),(6,2)),18).
move(9,((6,2),(5,2)),19).
move(9,((5,2),(4,2)),20).
move(9,((4,2),(3,2)),21).
move(9,((3,2),(2,2)),22).
move(9,((2,2),(3,2)),23).
move(9,((3,2),(4,2)),24).
move(9,((4,2),(5,2)),25).
move(9,((5,2),(6,2)),26).
move(9,((6,2),(7,2)),27).
move(9,((7,2),(8,2)),28).
move(9,((8,2),(9,2)),29).
move(9,((9,2),(9,3)),30).
move(9,((9,3),(9,4)),31).
move(9,((9,4),(9,5)),32).
move(9,((9,5),(8,5)),34).
move(9,((8,5),(8,6)),36).
move(9,((8,6),(8,7)),37).
move(9,((8,7),(7,7)),38).
move(9,((7,7),(6,7)),40).
move(10,((10,9),(10,8)),3).
move(10,((10,8),(11,8)),4).
move(10,((11,8),(10,8)),5).
move(10,((10,8),(11,8)),6).
move(10,((11,8),(12,8)),8).
move(10,((12,8),(13,8)),9).
move(10,((13,8),(14,8)),10).
move(10,((14,8),(15,8)),11).
move(10,((15,8),(16,8)),12).
move(10,((16,8),(16,7)),13).
move(10,((16,7),(17,7)),14).
move(10,((17,7),(18,7)),15).
move(10,((18,7),(18,6)),16).
move(10,((18,6),(18,5)),17).
move(10,((18,5),(18,4)),18).
move(10,((18,4),(18,3)),19).
move(10,((18,3),(18,2)),20).
move(10,((18,2),(19,2)),21).
move(10,((19,2),(18,2)),22).
move(10,((18,2),(17,2)),23).
move(10,((17,2),(16,2)),24).
move(10,((16,2),(15,2)),25).
move(10,((15,2),(14,2)),26).
move(10,((14,2),(13,2)),27).
move(10,((13,2),(12,2)),28).
move(10,((12,2),(11,2)),29).
move(10,((11,2),(10,2)),30).
move(10,((10,2),(10,3)),31).
move(10,((10,3),(10,4)),32).
move(10,((10,4),(10,5)),33).
move(10,((10,5),(10,6)),34).
move(10,((10,6),(10,5)),35).
move(10,((10,5),(10,4)),36).
move(10,((10,4),(9,4)),37).
move(10,((9,4),(10,4)),38).
move(10,((10,4),(11,4)),39).
move(10,((11,4),(12,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.815s (Solving: 0.46s 1st Model: 0.46s Unsat: 0.00s)
CPU Time     : 4.656s

Choices      : 1666     (Domain: 1666)
Conflicts    : 78       (Analyzed: 78)
Restarts     : 1        (Average: 78.00 Last: 17)
Model-Level  : 327.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 78       (Deleted: 0)
  Binary     : 23       (Ratio:  29.49%)
  Ternary    : 4        (Ratio:   5.13%)
  Conflict   : 78       (Average Length:   26.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 78       (Average: 17.17 Max: 142 Sum:   1339)
  Executed   : 78       (Average: 17.17 Max: 142 Sum:   1339 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878877   (Original: 822375)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338459  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

