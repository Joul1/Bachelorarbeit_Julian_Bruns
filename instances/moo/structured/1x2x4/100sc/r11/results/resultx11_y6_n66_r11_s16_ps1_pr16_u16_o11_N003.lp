%%%%%
%Standard
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),4).
move(1,((1,2),(2,2)),5).
move(1,((2,2),(2,3)),6).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),5).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(4,3)),5).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),5).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(8,4)),6).
move(6,((8,4),(8,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),3).
move(7,((7,4),(8,4)),4).
move(7,((8,4),(8,3)),6).
move(7,((8,3),(9,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),4).
move(8,((8,3),(9,3)),6).
move(8,((9,3),(10,3)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(2,6)),8).
move(9,((2,6),(2,5)),9).
move(9,((2,5),(2,4)),10).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(3,6)),5).
move(10,((3,6),(3,5)),6).
move(10,((3,5),(3,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(4,5)),9).
move(11,((4,5),(4,4)),10).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.636s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.641s

Choices      : 731     
Conflicts    : 28       (Analyzed: 28)
Restarts     : 0       
Model-Level  : 473.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 28       (Deleted: 0)
  Binary     : 7        (Ratio:  25.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 28       (Average Length:   18.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 28       (Average:  9.21 Max:  62 Sum:    258)
  Executed   : 28       (Average:  9.21 Max:  62 Sum:    258 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353468   (Original: 327181)
  Choice     : 440     
Atoms        : 141635  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(2,3)),4).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(4,3)),4).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),4).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(8,4)),6).
move(6,((8,4),(8,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),3).
move(7,((7,4),(8,4)),4).
move(7,((8,4),(8,3)),6).
move(7,((8,3),(9,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),4).
move(8,((8,3),(9,3)),6).
move(8,((9,3),(10,3)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(2,6)),8).
move(9,((2,6),(2,5)),9).
move(9,((2,5),(2,4)),10).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(3,6)),5).
move(10,((3,6),(3,5)),6).
move(10,((3,5),(3,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(4,5)),9).
move(11,((4,5),(4,4)),10).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.648s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.656s

Choices      : 952      (Domain: 206)
Conflicts    : 27       (Analyzed: 27)
Restarts     : 0       
Model-Level  : 689.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 27       (Deleted: 0)
  Binary     : 7        (Ratio:  25.93%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 27       (Average Length:   17.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 27       (Average:  9.74 Max:  58 Sum:    263)
  Executed   : 27       (Average:  9.74 Max:  58 Sum:    263 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353806   (Original: 327519)
  Choice     : 440     
  Heuristic  : 220     
Atoms        : 141753  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(2,5)),2).
move(1,((2,5),(2,4)),3).
move(1,((2,4),(2,3)),4).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(3,5)),2).
move(2,((3,5),(3,4)),3).
move(2,((3,4),(3,3)),4).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(4,5)),2).
move(3,((4,5),(4,4)),3).
move(3,((4,4),(4,3)),4).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(5,4)),3).
move(4,((5,4),(5,3)),4).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(8,4)),3).
move(6,((8,4),(8,3)),4).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(9,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(9,4)),4).
move(8,((9,4),(9,3)),5).
move(8,((9,3),(10,3)),6).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(2,6)),8).
move(9,((2,6),(2,5)),9).
move(9,((2,5),(2,4)),10).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(10,((4,4),(3,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(4,5)),8).
move(11,((4,5),(4,4)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.696s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 426      (Domain: 426)
Conflicts    : 3        (Analyzed: 3)
Restarts     : 0       
Model-Level  : 401.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 3        (Deleted: 0)
  Binary     : 2        (Ratio:  66.67%)
  Ternary    : 1        (Ratio:  33.33%)
  Conflict   : 3        (Average Length:    2.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 3        (Average:  8.33 Max:   9 Sum:     25)
  Executed   : 3        (Average:  8.33 Max:   9 Sum:     25 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378776   (Original: 352621)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141764  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(2,4)),3).
move(1,((2,4),(2,3)),4).
move(1,((2,3),(2,2)),5).
move(1,((2,2),(2,3)),6).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(2,3)),10).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(1,5)),6).
move(2,((1,5),(1,4)),7).
move(2,((1,4),(1,3)),8).
move(2,((1,3),(2,3)),9).
move(2,((2,3),(3,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(2,4)),6).
move(3,((2,4),(3,4)),7).
move(3,((3,4),(4,4)),8).
move(3,((4,4),(4,3)),9).
move(4,((4,6),(4,5)),2).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(5,3)),6).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(5,((7,3),(7,2)),6).
move(5,((7,2),(7,3)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(9,2)),4).
move(6,((9,2),(8,2)),8).
move(6,((8,2),(8,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(7,((8,3),(9,3)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(9,4)),4).
move(8,((9,4),(10,4)),5).
move(8,((10,4),(10,3)),6).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(2,6)),8).
move(9,((2,6),(2,5)),9).
move(9,((2,5),(2,4)),10).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(3,6)),5).
move(10,((3,6),(3,5)),6).
move(10,((3,5),(3,4)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(5,5)),7).
move(11,((5,5),(5,4)),8).
move(11,((5,4),(4,4)),9).
move(11,((4,4),(5,4)),12).
move(11,((5,4),(4,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.702s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 1.703s

Choices      : 876      (Domain: 207)
Conflicts    : 56       (Analyzed: 56)
Restarts     : 0       
Model-Level  : 397.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 56       (Deleted: 0)
  Binary     : 19       (Ratio:  33.93%)
  Ternary    : 2        (Ratio:   3.57%)
  Conflict   : 56       (Average Length:   22.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 56       (Average:  8.55 Max:  40 Sum:    479)
  Executed   : 56       (Average:  8.55 Max:  40 Sum:    479 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378776   (Original: 352621)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141764  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(2,5)),2).
move(1,((2,5),(2,4)),3).
move(1,((2,4),(2,3)),4).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(3,5)),2).
move(2,((3,5),(3,4)),3).
move(2,((3,4),(3,3)),4).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(4,5)),2).
move(3,((4,5),(4,4)),3).
move(3,((4,4),(4,3)),4).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(5,4)),3).
move(4,((5,4),(5,3)),4).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(9,6)),2).
move(6,((9,6),(10,6)),3).
move(6,((10,6),(9,6)),4).
move(6,((9,6),(9,5)),5).
move(6,((9,5),(9,4)),7).
move(6,((9,4),(8,4)),8).
move(6,((8,4),(8,3)),9).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(9,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(9,4)),4).
move(8,((9,4),(9,3)),5).
move(8,((9,3),(10,3)),6).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(9,5)),2).
move(9,((9,5),(9,4)),3).
move(9,((9,4),(8,4)),4).
move(9,((8,4),(7,4)),5).
move(9,((7,4),(6,4)),6).
move(9,((6,4),(5,4)),7).
move(9,((5,4),(4,4)),8).
move(9,((4,4),(3,4)),9).
move(9,((3,4),(2,4)),10).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(7,4)),3).
move(10,((7,4),(6,4)),4).
move(10,((6,4),(5,4)),5).
move(10,((5,4),(4,4)),6).
move(10,((4,4),(3,4)),7).
move(10,((3,4),(3,5)),8).
move(10,((3,5),(3,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(10,4)),3).
move(11,((10,4),(9,4)),6).
move(11,((9,4),(8,4)),7).
move(11,((8,4),(7,4)),8).
move(11,((7,4),(6,4)),9).
move(11,((6,4),(5,4)),10).
move(11,((5,4),(4,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.725s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.734s

Choices      : 445      (Domain: 34)
Conflicts    : 4        (Analyzed: 4)
Restarts     : 0       
Model-Level  : 408.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 4        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 4        (Average Length:   39.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 4        (Average:  9.25 Max:  13 Sum:     37)
  Executed   : 4        (Average:  9.25 Max:  13 Sum:     37 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354542   (Original: 328277)
  Choice     : 440     
  Heuristic  : 882      (Original: 904)
Atoms        : 141827  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(2,3)),4).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(4,3)),4).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),4).
move(4,((5,3),(6,3)),5).
move(4,((6,3),(5,3)),6).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(8,4)),6).
move(6,((8,4),(8,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),4).
move(8,((8,3),(9,3)),5).
move(8,((9,3),(10,3)),6).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(9,5)),2).
move(9,((9,5),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(6,5)),5).
move(9,((6,5),(5,5)),6).
move(9,((5,5),(4,5)),7).
move(9,((4,5),(3,5)),8).
move(9,((3,5),(3,4)),9).
move(9,((3,4),(2,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(6,4)),5).
move(10,((6,4),(5,4)),6).
move(10,((5,4),(4,4)),7).
move(10,((4,4),(3,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(4,5)),8).
move(11,((4,5),(4,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.758s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.719s

Choices      : 1683     (Domain: 930)
Conflicts    : 27       (Analyzed: 27)
Restarts     : 0       
Model-Level  : 1371.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 27       (Deleted: 0)
  Binary     : 5        (Ratio:  18.52%)
  Ternary    : 1        (Ratio:   3.70%)
  Conflict   : 27       (Average Length:   17.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 27       (Average: 11.56 Max:  37 Sum:    312)
  Executed   : 27       (Average: 11.56 Max:  37 Sum:    312 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354566   (Original: 328282)
  Choice     : 440     
  Heuristic  : 980      (Original: 983)
Atoms        : 141753  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(2,3)),4).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(4,3)),4).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),4).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(8,4)),6).
move(6,((8,4),(8,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),3).
move(7,((7,4),(8,4)),4).
move(7,((8,4),(8,3)),6).
move(7,((8,3),(9,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),4).
move(8,((8,3),(9,3)),6).
move(8,((9,3),(10,3)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(2,6)),8).
move(9,((2,6),(2,5)),9).
move(9,((2,5),(2,4)),10).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(3,6)),5).
move(10,((3,6),(3,5)),6).
move(10,((3,5),(3,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(4,5)),9).
move(11,((4,5),(4,4)),10).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.740s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.750s

Choices      : 746      (Domain: 242)
Conflicts    : 28       (Analyzed: 28)
Restarts     : 0       
Model-Level  : 490.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 28       (Deleted: 0)
  Binary     : 7        (Ratio:  25.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 28       (Average Length:   17.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 28       (Average:  9.14 Max:  61 Sum:    256)
  Executed   : 28       (Average:  9.14 Max:  61 Sum:    256 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378789   (Original: 352623)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141776  
Disjunctions : 0        (Original: 1)
Bodies       : 247623   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128049   (Atom=Atom: 470 Body=Body: 482 Other: 127097)
Tight        : Yes
Variables    : 246824   (Eliminated:    0 Frozen: 126446)
Constraints  : 678181   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),5).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(1,3)),8).
move(1,((1,3),(2,3)),9).
move(1,((2,3),(1,3)),10).
move(1,((1,3),(2,3)),11).
move(1,((2,3),(2,4)),12).
move(1,((2,4),(2,5)),14).
move(1,((2,5),(1,5)),16).
move(1,((1,5),(1,4)),17).
move(1,((1,4),(1,5)),18).
move(1,((1,5),(2,5)),19).
move(1,((2,5),(2,4)),21).
move(1,((2,4),(2,5)),22).
move(1,((2,5),(1,5)),23).
move(1,((1,5),(2,5)),24).
move(1,((2,5),(2,4)),25).
move(1,((2,4),(2,3)),26).
move(1,((2,3),(1,3)),27).
move(1,((1,3),(2,3)),28).
move(1,((2,3),(2,4)),29).
move(1,((2,4),(2,3)),32).
move(1,((2,3),(2,4)),33).
move(1,((2,4),(2,3)),34).
move(1,((2,3),(2,4)),35).
move(1,((2,4),(2,5)),38).
move(1,((2,5),(2,4)),39).
move(1,((2,4),(2,3)),40).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(3,5)),3).
move(2,((3,5),(2,5)),4).
move(2,((2,5),(3,5)),5).
move(2,((3,5),(2,5)),6).
move(2,((2,5),(2,4)),7).
move(2,((2,4),(3,4)),8).
move(2,((3,4),(3,3)),9).
move(2,((3,3),(2,3)),10).
move(2,((2,3),(2,4)),11).
move(2,((2,4),(2,5)),12).
move(2,((2,5),(3,5)),13).
move(2,((3,5),(3,6)),14).
move(2,((3,6),(3,5)),15).
move(2,((3,5),(2,5)),17).
move(2,((2,5),(2,4)),18).
move(2,((2,4),(2,3)),19).
move(2,((2,3),(2,4)),20).
move(2,((2,4),(3,4)),21).
move(2,((3,4),(2,4)),22).
move(2,((2,4),(2,5)),23).
move(2,((2,5),(2,4)),24).
move(2,((2,4),(3,4)),25).
move(2,((3,4),(2,4)),26).
move(2,((2,4),(2,3)),27).
move(2,((2,3),(3,3)),28).
move(2,((3,3),(3,4)),29).
move(2,((3,4),(3,3)),30).
move(2,((3,3),(3,4)),31).
move(2,((3,4),(2,4)),32).
move(2,((2,4),(2,5)),33).
move(2,((2,5),(3,5)),34).
move(2,((3,5),(3,6)),36).
move(2,((3,6),(3,5)),37).
move(2,((3,5),(3,4)),39).
move(2,((3,4),(3,3)),40).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(4,3)),7).
move(3,((4,3),(3,3)),8).
move(3,((3,3),(4,3)),9).
move(3,((4,3),(3,3)),10).
move(3,((3,3),(3,4)),11).
move(3,((3,4),(3,3)),13).
move(3,((3,3),(4,3)),15).
move(3,((4,3),(4,4)),16).
move(3,((4,4),(4,5)),18).
move(3,((4,5),(4,4)),19).
move(3,((4,4),(4,5)),20).
move(3,((4,5),(3,5)),22).
move(3,((3,5),(4,5)),23).
move(3,((4,5),(3,5)),24).
move(3,((3,5),(4,5)),25).
move(3,((4,5),(3,5)),26).
move(3,((3,5),(3,4)),27).
move(3,((3,4),(3,5)),29).
move(3,((3,5),(3,4)),30).
move(3,((3,4),(3,5)),31).
move(3,((3,5),(3,4)),33).
move(3,((3,4),(3,3)),34).
move(3,((3,3),(3,4)),35).
move(3,((3,4),(4,4)),39).
move(3,((4,4),(4,3)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,4)),6).
move(4,((4,4),(4,5)),7).
move(4,((4,5),(4,4)),8).
move(4,((4,4),(4,3)),10).
move(4,((4,3),(4,4)),12).
move(4,((4,4),(4,3)),14).
move(4,((4,3),(5,3)),15).
move(4,((5,3),(4,3)),16).
move(4,((4,3),(5,3)),17).
move(4,((5,3),(4,3)),19).
move(4,((4,3),(4,4)),20).
move(4,((4,4),(4,3)),21).
move(4,((4,3),(4,4)),23).
move(4,((4,4),(4,5)),24).
move(4,((4,5),(5,5)),25).
move(4,((5,5),(4,5)),26).
move(4,((4,5),(5,5)),27).
move(4,((5,5),(4,5)),28).
move(4,((4,5),(4,6)),29).
move(4,((4,6),(4,5)),30).
move(4,((4,5),(5,5)),31).
move(4,((5,5),(5,4)),32).
move(4,((5,4),(4,4)),33).
move(4,((4,4),(4,3)),34).
move(4,((4,3),(4,4)),35).
move(4,((4,4),(4,3)),36).
move(4,((4,3),(4,4)),38).
move(4,((4,4),(5,4)),39).
move(4,((5,4),(5,3)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,4)),6).
move(5,((5,4),(5,5)),8).
move(5,((5,5),(5,4)),10).
move(5,((5,4),(5,3)),13).
move(5,((5,3),(6,3)),14).
move(5,((6,3),(6,4)),15).
move(5,((6,4),(5,4)),16).
move(5,((5,4),(6,4)),18).
move(5,((6,4),(5,4)),19).
move(5,((5,4),(5,3)),20).
move(5,((5,3),(6,3)),21).
move(5,((6,3),(7,3)),22).
move(5,((7,3),(6,3)),23).
move(5,((6,3),(5,3)),24).
move(5,((5,3),(5,4)),25).
move(5,((5,4),(5,3)),27).
move(5,((5,3),(5,4)),28).
move(5,((5,4),(5,3)),30).
move(5,((5,3),(6,3)),31).
move(5,((6,3),(6,4)),32).
move(5,((6,4),(5,4)),33).
move(5,((5,4),(6,4)),38).
move(5,((6,4),(7,4)),39).
move(5,((7,4),(7,3)),40).
move(6,((9,6),(9,5)),3).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(8,3)),8).
move(6,((8,3),(8,4)),9).
move(6,((8,4),(8,3)),11).
move(6,((8,3),(8,4)),13).
move(6,((8,4),(9,4)),15).
move(6,((9,4),(8,4)),17).
move(6,((8,4),(8,3)),18).
move(6,((8,3),(8,4)),19).
move(6,((8,4),(8,3)),20).
move(6,((8,3),(8,4)),21).
move(6,((8,4),(8,3)),22).
move(6,((8,3),(8,4)),23).
move(6,((8,4),(8,3)),24).
move(6,((8,3),(8,4)),25).
move(6,((8,4),(8,3)),26).
move(6,((8,3),(8,4)),28).
move(6,((8,4),(8,5)),29).
move(6,((8,5),(8,4)),31).
move(6,((8,4),(8,3)),32).
move(6,((8,3),(8,4)),33).
move(6,((8,4),(8,3)),34).
move(6,((8,3),(8,4)),37).
move(6,((8,4),(8,3)),38).
move(6,((8,3),(8,4)),39).
move(6,((8,4),(8,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,4)),8).
move(7,((6,4),(6,3)),12).
move(7,((6,3),(6,4)),13).
move(7,((6,4),(7,4)),15).
move(7,((7,4),(6,4)),16).
move(7,((6,4),(6,3)),18).
move(7,((6,3),(6,4)),19).
move(7,((6,4),(6,3)),27).
move(7,((6,3),(7,3)),28).
move(7,((7,3),(7,4)),29).
move(7,((7,4),(6,4)),30).
move(7,((6,4),(7,4)),32).
move(7,((7,4),(6,4)),33).
move(7,((6,4),(7,4)),37).
move(7,((7,4),(8,4)),38).
move(7,((8,4),(9,4)),39).
move(7,((9,4),(9,3)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(8,3)),6).
move(8,((8,3),(8,4)),7).
move(8,((8,4),(9,4)),9).
move(8,((9,4),(8,4)),11).
move(8,((8,4),(7,4)),12).
move(8,((7,4),(7,3)),14).
move(8,((7,3),(7,4)),16).
move(8,((7,4),(8,4)),29).
move(8,((8,4),(7,4)),30).
move(8,((7,4),(7,5)),31).
move(8,((7,5),(7,4)),33).
move(8,((7,4),(8,4)),36).
move(8,((8,4),(9,4)),37).
move(8,((9,4),(10,4)),39).
move(8,((10,4),(10,3)),40).
move(9,((10,6),(10,5)),2).
move(9,((10,5),(10,4)),3).
move(9,((10,4),(9,4)),4).
move(9,((9,4),(10,4)),5).
move(9,((10,4),(9,4)),6).
move(9,((9,4),(10,4)),7).
move(9,((10,4),(10,5)),8).
move(9,((10,5),(10,4)),12).
move(9,((10,4),(10,5)),13).
move(9,((10,5),(9,5)),15).
move(9,((9,5),(10,5)),16).
move(9,((10,5),(10,4)),19).
move(9,((10,4),(10,5)),20).
move(9,((10,5),(9,5)),24).
move(9,((9,5),(9,4)),25).
move(9,((9,4),(9,5)),26).
move(9,((9,5),(9,4)),27).
move(9,((9,4),(9,5)),28).
move(9,((9,5),(9,4)),29).
move(9,((9,4),(9,5)),30).
move(9,((9,5),(9,6)),31).
move(9,((9,6),(8,6)),32).
move(9,((8,6),(7,6)),33).
move(9,((7,6),(6,6)),34).
move(9,((6,6),(5,6)),35).
move(9,((5,6),(4,6)),36).
move(9,((4,6),(3,6)),37).
move(9,((3,6),(2,6)),38).
move(9,((2,6),(2,5)),39).
move(9,((2,5),(2,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(7,4)),7).
move(10,((7,4),(7,5)),11).
move(10,((7,5),(8,5)),12).
move(10,((8,5),(8,4)),15).
move(10,((8,4),(8,5)),17).
move(10,((8,5),(7,5)),21).
move(10,((7,5),(8,5)),22).
move(10,((8,5),(8,4)),24).
move(10,((8,4),(8,5)),25).
move(10,((8,5),(8,4)),26).
move(10,((8,4),(8,5)),28).
move(10,((8,5),(7,5)),29).
move(10,((7,5),(8,5)),31).
move(10,((8,5),(8,4)),32).
move(10,((8,4),(8,5)),33).
move(10,((8,5),(7,5)),34).
move(10,((7,5),(6,5)),35).
move(10,((6,5),(5,5)),36).
move(10,((5,5),(4,5)),37).
move(10,((4,5),(3,5)),39).
move(10,((3,5),(3,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),4).
move(11,((10,5),(10,4)),6).
move(11,((10,4),(11,4)),7).
move(11,((11,4),(10,4)),8).
move(11,((10,4),(9,4)),12).
move(11,((9,4),(10,4)),13).
move(11,((10,4),(10,5)),15).
move(11,((10,5),(10,4)),16).
move(11,((10,4),(9,4)),19).
move(11,((9,4),(10,4)),20).
move(11,((10,4),(10,5)),24).
move(11,((10,5),(10,4)),25).
move(11,((10,4),(9,4)),28).
move(11,((9,4),(10,4)),29).
move(11,((10,4),(10,5)),33).
move(11,((10,5),(9,5)),34).
move(11,((9,5),(8,5)),35).
move(11,((8,5),(7,5)),36).
move(11,((7,5),(6,5)),37).
move(11,((6,5),(5,5)),38).
move(11,((5,5),(4,5)),39).
move(11,((4,5),(4,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.814s (Solving: 0.17s 1st Model: 0.17s Unsat: 0.00s)
CPU Time     : 1.812s

Choices      : 3752     (Domain: 3752)
Conflicts    : 166      (Analyzed: 166)
Restarts     : 0       
Model-Level  : 383.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 166      (Deleted: 0)
  Binary     : 46       (Ratio:  27.71%)
  Ternary    : 23       (Ratio:  13.86%)
  Conflict   : 166      (Average Length:    5.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 166      (Average: 20.30 Max: 169 Sum:   3369)
  Executed   : 166      (Average: 20.30 Max: 169 Sum:   3369 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378765   (Original: 352610)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141753  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),3).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(2,1)),9).
move(1,((2,1),(1,1)),10).
move(1,((1,1),(2,1)),12).
move(1,((2,1),(3,1)),13).
move(1,((3,1),(3,2)),14).
move(1,((3,2),(4,2)),15).
move(1,((4,2),(5,2)),16).
move(1,((5,2),(6,2)),17).
move(1,((6,2),(7,2)),18).
move(1,((7,2),(8,2)),19).
move(1,((8,2),(9,2)),20).
move(1,((9,2),(9,3)),21).
move(1,((9,3),(9,2)),22).
move(1,((9,2),(9,1)),23).
move(1,((9,1),(8,1)),24).
move(1,((8,1),(7,1)),25).
move(1,((7,1),(7,2)),26).
move(1,((7,2),(6,2)),27).
move(1,((6,2),(7,2)),30).
move(1,((7,2),(6,2)),31).
move(1,((6,2),(5,2)),32).
move(1,((5,2),(4,2)),33).
move(1,((4,2),(3,2)),34).
move(1,((3,2),(2,2)),35).
move(1,((2,2),(1,2)),36).
move(1,((1,2),(1,3)),37).
move(1,((1,3),(1,4)),38).
move(1,((1,4),(2,4)),39).
move(1,((2,4),(2,3)),40).
move(2,((2,6),(3,6)),3).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(4,5)),5).
move(2,((4,5),(5,5)),6).
move(2,((5,5),(5,4)),7).
move(2,((5,4),(6,4)),8).
move(2,((6,4),(7,4)),9).
move(2,((7,4),(8,4)),10).
move(2,((8,4),(9,4)),11).
move(2,((9,4),(9,5)),12).
move(2,((9,5),(8,5)),13).
move(2,((8,5),(8,4)),14).
move(2,((8,4),(8,3)),15).
move(2,((8,3),(7,3)),16).
move(2,((7,3),(7,4)),17).
move(2,((7,4),(8,4)),19).
move(2,((8,4),(9,4)),20).
move(2,((9,4),(10,4)),21).
move(2,((10,4),(10,3)),22).
move(2,((10,3),(10,2)),23).
move(2,((10,2),(10,3)),25).
move(2,((10,3),(10,4)),26).
move(2,((10,4),(9,4)),27).
move(2,((9,4),(9,3)),28).
move(2,((9,3),(9,2)),29).
move(2,((9,2),(8,2)),30).
move(2,((8,2),(7,2)),31).
move(2,((7,2),(6,2)),32).
move(2,((6,2),(5,2)),33).
move(2,((5,2),(4,2)),34).
move(2,((4,2),(3,2)),35).
move(2,((3,2),(4,2)),36).
move(2,((4,2),(5,2)),37).
move(2,((5,2),(4,2)),38).
move(2,((4,2),(3,2)),39).
move(2,((3,2),(3,3)),40).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),3).
move(3,((3,4),(3,3)),4).
move(3,((3,3),(4,3)),5).
move(3,((4,3),(3,3)),7).
move(3,((3,3),(4,3)),8).
move(3,((4,3),(5,3)),9).
move(3,((5,3),(6,3)),10).
move(3,((6,3),(7,3)),11).
move(3,((7,3),(6,3)),12).
move(3,((6,3),(5,3)),13).
move(3,((5,3),(4,3)),14).
move(3,((4,3),(5,3)),15).
move(3,((5,3),(6,3)),16).
move(3,((6,3),(7,3)),17).
move(3,((7,3),(8,3)),18).
move(3,((8,3),(9,3)),19).
move(3,((9,3),(10,3)),20).
move(3,((10,3),(10,2)),21).
move(3,((10,2),(9,2)),23).
move(3,((9,2),(9,3)),25).
move(3,((9,3),(10,3)),26).
move(3,((10,3),(10,4)),27).
move(3,((10,4),(10,3)),29).
move(3,((10,3),(9,3)),30).
move(3,((9,3),(8,3)),31).
move(3,((8,3),(7,3)),32).
move(3,((7,3),(6,3)),33).
move(3,((6,3),(5,3)),34).
move(3,((5,3),(5,2)),36).
move(3,((5,2),(5,3)),37).
move(3,((5,3),(4,3)),38).
move(3,((4,3),(4,2)),39).
move(3,((4,2),(4,3)),40).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,6)),2).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(5,4)),5).
move(4,((5,4),(6,4)),6).
move(4,((6,4),(7,4)),7).
move(4,((7,4),(7,3)),8).
move(4,((7,3),(6,3)),9).
move(4,((6,3),(6,4)),10).
move(4,((6,4),(5,4)),11).
move(4,((5,4),(6,4)),12).
move(4,((6,4),(5,4)),13).
move(4,((5,4),(4,4)),14).
move(4,((4,4),(3,4)),15).
move(4,((3,4),(3,5)),16).
move(4,((3,5),(2,5)),17).
move(4,((2,5),(2,4)),18).
move(4,((2,4),(1,4)),19).
move(4,((1,4),(2,4)),20).
move(4,((2,4),(2,5)),21).
move(4,((2,5),(3,5)),22).
move(4,((3,5),(4,5)),23).
move(4,((4,5),(5,5)),24).
move(4,((5,5),(6,5)),25).
move(4,((6,5),(6,4)),26).
move(4,((6,4),(5,4)),27).
move(4,((5,4),(5,3)),28).
move(4,((5,3),(4,3)),29).
move(4,((4,3),(4,2)),30).
move(4,((4,2),(4,1)),31).
move(4,((4,1),(3,1)),32).
move(4,((3,1),(2,1)),33).
move(4,((2,1),(2,2)),34).
move(4,((2,2),(2,1)),35).
move(4,((2,1),(3,1)),36).
move(4,((3,1),(4,1)),37).
move(4,((4,1),(5,1)),38).
move(4,((5,1),(5,2)),39).
move(4,((5,2),(5,3)),40).
move(5,((5,6),(4,6)),1).
move(5,((4,6),(3,6)),2).
move(5,((3,6),(3,5)),3).
move(5,((3,5),(3,4)),4).
move(5,((3,4),(3,5)),5).
move(5,((3,5),(2,5)),6).
move(5,((2,5),(2,4)),7).
move(5,((2,4),(2,5)),8).
move(5,((2,5),(3,5)),9).
move(5,((3,5),(3,4)),10).
move(5,((3,4),(2,4)),11).
move(5,((2,4),(2,5)),12).
move(5,((2,5),(3,5)),13).
move(5,((3,5),(3,4)),14).
move(5,((3,4),(3,3)),15).
move(5,((3,3),(2,3)),16).
move(5,((2,3),(2,4)),17).
move(5,((2,4),(2,3)),18).
move(5,((2,3),(2,4)),19).
move(5,((2,4),(3,4)),20).
move(5,((3,4),(3,3)),21).
move(5,((3,3),(4,3)),22).
move(5,((4,3),(5,3)),23).
move(5,((5,3),(6,3)),24).
move(5,((6,3),(7,3)),25).
move(5,((7,3),(7,4)),27).
move(5,((7,4),(7,5)),28).
move(5,((7,5),(6,5)),31).
move(5,((6,5),(5,5)),32).
move(5,((5,5),(6,5)),33).
move(5,((6,5),(5,5)),34).
move(5,((5,5),(6,5)),35).
move(5,((6,5),(5,5)),36).
move(5,((5,5),(5,4)),37).
move(5,((5,4),(6,4)),38).
move(5,((6,4),(7,4)),39).
move(5,((7,4),(7,3)),40).
move(6,((9,6),(10,6)),2).
move(6,((10,6),(10,5)),3).
move(6,((10,5),(10,6)),4).
move(6,((10,6),(10,5)),5).
move(6,((10,5),(10,4)),6).
move(6,((10,4),(9,4)),7).
move(6,((9,4),(9,5)),8).
move(6,((9,5),(9,4)),9).
move(6,((9,4),(9,5)),10).
move(6,((9,5),(8,5)),11).
move(6,((8,5),(7,5)),12).
move(6,((7,5),(8,5)),14).
move(6,((8,5),(9,5)),15).
move(6,((9,5),(10,5)),16).
move(6,((10,5),(10,4)),17).
move(6,((10,4),(10,3)),18).
move(6,((10,3),(10,2)),19).
move(6,((10,2),(10,1)),20).
move(6,((10,1),(9,1)),21).
move(6,((9,1),(8,1)),22).
move(6,((8,1),(7,1)),23).
move(6,((7,1),(7,2)),24).
move(6,((7,2),(6,2)),25).
move(6,((6,2),(5,2)),27).
move(6,((5,2),(5,3)),29).
move(6,((5,3),(6,3)),30).
move(6,((6,3),(7,3)),31).
move(6,((7,3),(7,2)),32).
move(6,((7,2),(8,2)),33).
move(6,((8,2),(8,3)),34).
move(6,((8,3),(7,3)),35).
move(6,((7,3),(6,3)),36).
move(6,((6,3),(7,3)),37).
move(6,((7,3),(8,3)),38).
move(6,((8,3),(8,4)),39).
move(6,((8,4),(8,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(5,2)),7).
move(7,((5,2),(4,2)),8).
move(7,((4,2),(4,3)),9).
move(7,((4,3),(3,3)),10).
move(7,((3,3),(3,4)),11).
move(7,((3,4),(3,3)),12).
move(7,((3,3),(2,3)),13).
move(7,((2,3),(2,2)),16).
move(7,((2,2),(3,2)),17).
move(7,((3,2),(4,2)),18).
move(7,((4,2),(5,2)),19).
move(7,((5,2),(6,2)),20).
move(7,((6,2),(5,2)),21).
move(7,((5,2),(6,2)),22).
move(7,((6,2),(7,2)),23).
move(7,((7,2),(8,2)),24).
move(7,((8,2),(7,2)),25).
move(7,((7,2),(8,2)),26).
move(7,((8,2),(8,3)),27).
move(7,((8,3),(8,4)),28).
move(7,((8,4),(7,4)),29).
move(7,((7,4),(8,4)),31).
move(7,((8,4),(8,3)),32).
move(7,((8,3),(9,3)),33).
move(7,((9,3),(9,2)),34).
move(7,((9,2),(8,2)),35).
move(7,((8,2),(8,3)),36).
move(7,((8,3),(9,3)),37).
move(7,((9,3),(9,2)),38).
move(7,((9,2),(9,3)),40).
move(8,((7,6),(7,5)),2).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,3)),7).
move(8,((7,3),(8,3)),8).
move(8,((8,3),(8,4)),9).
move(8,((8,4),(8,3)),10).
move(8,((8,3),(8,4)),11).
move(8,((8,4),(9,4)),12).
move(8,((9,4),(9,5)),13).
move(8,((9,5),(9,4)),15).
move(8,((9,4),(9,5)),16).
move(8,((9,5),(10,5)),17).
move(8,((10,5),(11,5)),18).
move(8,((11,5),(11,4)),19).
move(8,((11,4),(11,3)),20).
move(8,((11,3),(11,2)),21).
move(8,((11,2),(11,3)),22).
move(8,((11,3),(10,3)),23).
move(8,((10,3),(10,4)),25).
move(8,((10,4),(11,4)),26).
move(8,((11,4),(11,3)),27).
move(8,((11,3),(10,3)),28).
move(8,((10,3),(9,3)),29).
move(8,((9,3),(9,2)),30).
move(8,((9,2),(10,2)),31).
move(8,((10,2),(10,3)),32).
move(8,((10,3),(10,4)),33).
move(8,((10,4),(10,5)),34).
move(8,((10,5),(10,4)),35).
move(8,((10,4),(10,3)),36).
move(8,((10,3),(10,4)),37).
move(8,((10,4),(10,5)),38).
move(8,((10,5),(10,4)),39).
move(8,((10,4),(10,3)),40).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(9,5)),2).
move(9,((9,5),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(9,2)),7).
move(9,((9,2),(8,2)),8).
move(9,((8,2),(7,2)),9).
move(9,((7,2),(7,3)),10).
move(9,((7,3),(7,2)),11).
move(9,((7,2),(6,2)),12).
move(9,((6,2),(5,2)),13).
move(9,((5,2),(5,3)),14).
move(9,((5,3),(5,4)),15).
move(9,((5,4),(6,4)),16).
move(9,((6,4),(6,3)),17).
move(9,((6,3),(5,3)),18).
move(9,((5,3),(4,3)),19).
move(9,((4,3),(3,3)),20).
move(9,((3,3),(2,3)),21).
move(9,((2,3),(2,4)),22).
move(9,((2,4),(2,5)),23).
move(9,((2,5),(2,4)),24).
move(9,((2,4),(3,4)),26).
move(9,((3,4),(3,5)),27).
move(9,((3,5),(4,5)),28).
move(9,((4,5),(3,5)),30).
move(9,((3,5),(2,5)),31).
move(9,((2,5),(2,4)),32).
move(9,((2,4),(2,3)),33).
move(9,((2,3),(1,3)),34).
move(9,((1,3),(1,2)),35).
move(9,((1,2),(1,3)),36).
move(9,((1,3),(1,4)),37).
move(9,((1,4),(2,4)),38).
move(9,((2,4),(2,5)),39).
move(9,((2,5),(2,4)),40).
move(10,((8,6),(7,6)),2).
move(10,((7,6),(6,6)),3).
move(10,((6,6),(5,6)),4).
move(10,((5,6),(4,6)),5).
move(10,((4,6),(4,5)),6).
move(10,((4,5),(4,4)),7).
move(10,((4,4),(3,4)),8).
move(10,((3,4),(3,3)),9).
move(10,((3,3),(3,2)),10).
move(10,((3,2),(2,2)),12).
move(10,((2,2),(3,2)),13).
move(10,((3,2),(2,2)),14).
move(10,((2,2),(3,2)),15).
move(10,((3,2),(3,3)),16).
move(10,((3,3),(2,3)),17).
move(10,((2,3),(3,3)),18).
move(10,((3,3),(2,3)),19).
move(10,((2,3),(2,2)),20).
move(10,((2,2),(1,2)),21).
move(10,((1,2),(2,2)),22).
move(10,((2,2),(2,1)),23).
move(10,((2,1),(3,1)),24).
move(10,((3,1),(2,1)),25).
move(10,((2,1),(1,1)),26).
move(10,((1,1),(2,1)),27).
move(10,((2,1),(2,2)),28).
move(10,((2,2),(3,2)),29).
move(10,((3,2),(3,3)),30).
move(10,((3,3),(3,2)),31).
move(10,((3,2),(2,2)),32).
move(10,((2,2),(3,2)),33).
move(10,((3,2),(3,3)),34).
move(10,((3,3),(3,4)),35).
move(10,((3,4),(4,4)),36).
move(10,((4,4),(4,5)),37).
move(10,((4,5),(3,5)),38).
move(10,((3,5),(3,4)),40).
move(11,((11,6),(11,5)),3).
move(11,((11,5),(10,5)),4).
move(11,((10,5),(10,4)),5).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(10,2)),7).
move(11,((10,2),(10,3)),8).
move(11,((10,3),(9,3)),9).
move(11,((9,3),(9,2)),10).
move(11,((9,2),(10,2)),11).
move(11,((10,2),(10,3)),12).
move(11,((10,3),(9,3)),13).
move(11,((9,3),(9,4)),14).
move(11,((9,4),(8,4)),15).
move(11,((8,4),(7,4)),16).
move(11,((7,4),(6,4)),17).
move(11,((6,4),(6,5)),18).
move(11,((6,5),(5,5)),19).
move(11,((5,5),(4,5)),20).
move(11,((4,5),(4,4)),21).
move(11,((4,4),(3,4)),22).
move(11,((3,4),(3,5)),23).
move(11,((3,5),(4,5)),25).
move(11,((4,5),(4,4)),26).
move(11,((4,4),(4,3)),28).
move(11,((4,3),(3,3)),29).
move(11,((3,3),(2,3)),30).
move(11,((2,3),(3,3)),31).
move(11,((3,3),(3,4)),32).
move(11,((3,4),(4,4)),33).
move(11,((4,4),(5,4)),35).
move(11,((5,4),(6,4)),36).
move(11,((6,4),(6,5)),37).
move(11,((6,5),(5,5)),38).
move(11,((5,5),(4,5)),39).
move(11,((4,5),(4,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.657s (Solving: 0.99s 1st Model: 0.99s Unsat: 0.00s)
CPU Time     : 2.656s

Choices      : 16600    (Domain: 16600)
Conflicts    : 472      (Analyzed: 472)
Restarts     : 2        (Average: 236.00 Last: 300)
Model-Level  : 318.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 472      (Deleted: 0)
  Binary     : 135      (Ratio:  28.60%)
  Ternary    : 52       (Ratio:  11.02%)
  Conflict   : 472      (Average Length:    9.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 472      (Average: 34.49 Max: 271 Sum:  16277)
  Executed   : 472      (Average: 34.49 Max: 271 Sum:  16277 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378765   (Original: 352610)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141753  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

