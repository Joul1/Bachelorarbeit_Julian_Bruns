%%%%%
%Standard
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(5,4)),5).
move(1,((5,4),(5,3)),6).
move(1,((5,3),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(7,6)),6).
move(2,((7,6),(6,6)),7).
move(2,((6,6),(5,6)),8).
move(2,((5,6),(4,6)),9).
move(2,((4,6),(4,5)),10).
move(2,((4,5),(4,4)),11).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(8,6)),6).
move(3,((8,6),(8,5)),7).
move(3,((8,5),(8,4)),9).
move(3,((8,4),(7,4)),10).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(9,6)),6).
move(4,((9,6),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(8,6)),4).
move(5,((8,6),(9,6)),5).
move(5,((9,6),(9,5)),6).
move(5,((9,5),(9,4)),7).
move(5,((9,4),(8,4)),8).
move(5,((8,4),(9,4)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(5,2)),4).
move(6,((5,2),(5,3)),5).
move(6,((5,3),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(10,4)),6).
move(7,((10,4),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,2)),4).
move(8,((7,2),(6,2)),5).
move(8,((6,2),(5,2)),7).
move(8,((5,2),(5,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.592s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 1.594s

Choices      : 884     
Conflicts    : 40       (Analyzed: 40)
Restarts     : 0       
Model-Level  : 368.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 40       (Deleted: 0)
  Binary     : 7        (Ratio:  17.50%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 40       (Average Length:   24.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 40       (Average: 12.90 Max:  79 Sum:    516)
  Executed   : 40       (Average: 12.90 Max:  79 Sum:    516 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261077   (Original: 241134)
  Choice     : 320     
Atoms        : 106367  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(1,((8,3),(7,3)),4).
move(1,((7,3),(6,3)),5).
move(1,((6,3),(5,3)),6).
move(1,((5,3),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(1,3)),3).
move(2,((1,3),(2,3)),7).
move(2,((2,3),(2,4)),8).
move(2,((2,4),(3,4)),9).
move(2,((3,4),(4,4)),10).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(4,5)),3).
move(3,((4,5),(5,5)),4).
move(3,((5,5),(6,5)),5).
move(3,((6,5),(6,6)),6).
move(3,((6,6),(7,6)),8).
move(3,((7,6),(7,5)),9).
move(3,((7,5),(7,4)),10).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(5,5)),3).
move(4,((5,5),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(7,4)),6).
move(4,((7,4),(8,4)),7).
move(4,((8,4),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(8,6)),4).
move(5,((8,6),(8,5)),5).
move(5,((8,5),(8,4)),6).
move(5,((8,4),(9,4)),7).
move(5,((9,4),(9,5)),8).
move(5,((9,5),(9,4)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(6,4)),4).
move(6,((6,4),(7,4)),5).
move(6,((7,4),(7,3)),6).
move(6,((7,3),(8,3)),7).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(10,4)),6).
move(7,((10,4),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(6,3)),4).
move(8,((6,3),(6,4)),5).
move(8,((6,4),(5,4)),7).
move(8,((5,4),(5,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.814s (Solving: 0.07s 1st Model: 0.07s Unsat: 0.00s)
CPU Time     : 1.797s

Choices      : 1262     (Domain: 180)
Conflicts    : 41       (Analyzed: 41)
Restarts     : 0       
Model-Level  : 511.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 41       (Deleted: 0)
  Binary     : 9        (Ratio:  21.95%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 41       (Average Length:   22.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 41       (Average: 18.32 Max: 100 Sum:    751)
  Executed   : 41       (Average: 18.32 Max: 100 Sum:    751 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261365   (Original: 241422)
  Choice     : 320     
  Heuristic  : 187     
Atoms        : 106468  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDistance.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(3,5)),3).
move(2,((3,5),(3,4)),4).
move(2,((3,4),(4,4)),5).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(6,5)),5).
move(3,((6,5),(6,4)),6).
move(3,((6,4),(7,4)),7).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(6,5)),4).
move(4,((6,5),(6,4)),5).
move(4,((6,4),(6,3)),6).
move(4,((6,3),(7,3)),7).
move(4,((7,3),(7,2)),8).
move(4,((7,2),(8,2)),9).
move(4,((8,2),(9,2)),10).
move(4,((9,2),(9,3)),11).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(7,5)),4).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(8,4)),6).
move(5,((8,4),(9,4)),7).
move(6,((5,6),(6,6)),1).
move(6,((6,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(8,5)),4).
move(6,((8,5),(8,4)),5).
move(6,((8,4),(8,3)),6).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),3).
move(7,((7,4),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(5,4)),4).
move(8,((5,4),(5,3)),5).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.698s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 415      (Domain: 415)
Conflicts    : 4        (Analyzed: 4)
Restarts     : 0       
Model-Level  : 285.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 4        (Deleted: 0)
  Binary     : 4        (Ratio: 100.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 4        (Average Length:    2.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 4        (Average: 32.50 Max: 112 Sum:    130)
  Executed   : 4        (Average: 32.50 Max: 112 Sum:    130 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279642   (Original: 259771)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106476  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(3,5)),3).
move(2,((3,5),(3,4)),4).
move(2,((3,4),(4,4)),5).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(6,5)),5).
move(3,((6,5),(6,4)),6).
move(3,((6,4),(7,4)),7).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(9,6)),6).
move(4,((9,6),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(8,4)),9).
move(4,((8,4),(8,3)),10).
move(4,((8,3),(9,3)),40).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(7,5)),4).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(8,4)),6).
move(5,((8,4),(9,4)),7).
move(5,((9,4),(10,4)),8).
move(5,((10,4),(9,4)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(6,4)),3).
move(6,((6,4),(7,4)),6).
move(6,((7,4),(7,3)),7).
move(6,((7,3),(7,2)),8).
move(6,((7,2),(8,2)),9).
move(6,((8,2),(8,3)),40).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(8,5)),3).
move(7,((8,5),(8,4)),7).
move(7,((8,4),(8,3)),8).
move(7,((8,3),(9,3)),9).
move(7,((9,3),(10,3)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(5,4)),4).
move(8,((5,4),(5,3)),5).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.827s (Solving: 0.10s 1st Model: 0.10s Unsat: 0.00s)
CPU Time     : 1.828s

Choices      : 459      (Domain: 68)
Conflicts    : 35       (Analyzed: 35)
Restarts     : 0       
Model-Level  : 281.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 35       (Deleted: 0)
  Binary     : 15       (Ratio:  42.86%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 35       (Average Length:   43.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 35       (Average:  5.09 Max:  27 Sum:    178)
  Executed   : 35       (Average:  5.09 Max:  27 Sum:    178 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279642   (Original: 259771)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106476  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(4,4)),6).
move(1,((4,4),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),3).
move(2,((3,5),(3,4)),4).
move(2,((3,4),(4,4)),5).
move(2,((4,4),(4,3)),6).
move(2,((4,3),(4,4)),7).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(7,5)),6).
move(3,((7,5),(7,4)),8).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(8,5)),6).
move(4,((8,5),(8,4)),7).
move(4,((8,4),(8,3)),8).
move(4,((8,3),(9,3)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(8,6)),4).
move(5,((8,6),(8,5)),5).
move(5,((8,5),(8,4)),6).
move(5,((8,4),(9,4)),7).
move(6,((5,6),(6,6)),1).
move(6,((6,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(8,5)),4).
move(6,((8,5),(8,4)),5).
move(6,((8,4),(7,4)),6).
move(6,((7,4),(8,4)),8).
move(6,((8,4),(8,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),3).
move(7,((7,4),(8,4)),4).
move(7,((8,4),(9,4)),5).
move(7,((9,4),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(5,4)),4).
move(8,((5,4),(5,3)),5).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.816s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.828s

Choices      : 318      (Domain: 31)
Conflicts    : 3        (Analyzed: 3)
Restarts     : 0       
Model-Level  : 313.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 3        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 3        (Average Length:   32.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 3        (Average:  1.67 Max:   3 Sum:      5)
  Executed   : 3        (Average:  1.67 Max:   3 Sum:      5 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 262176   (Original: 242249)
  Choice     : 320     
  Heuristic  : 936      (Original: 952)
Atoms        : 106530  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(1,((8,3),(7,3)),4).
move(1,((7,3),(6,3)),5).
move(1,((6,3),(5,3)),6).
move(1,((5,3),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(2,5)),2).
move(2,((2,5),(3,5)),3).
move(2,((3,5),(4,5)),4).
move(2,((4,5),(4,4)),5).
move(2,((4,4),(5,4)),7).
move(2,((5,4),(4,4)),8).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(3,5)),2).
move(3,((3,5),(4,5)),3).
move(3,((4,5),(5,5)),4).
move(3,((5,5),(6,5)),5).
move(3,((6,5),(7,5)),6).
move(3,((7,5),(7,4)),7).
move(3,((7,4),(7,3)),8).
move(3,((7,3),(7,4)),9).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(4,5)),2).
move(4,((4,5),(5,5)),3).
move(4,((5,5),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(8,5)),6).
move(4,((8,5),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(6,4)),4).
move(5,((6,4),(7,4)),6).
move(5,((7,4),(8,4)),7).
move(5,((8,4),(9,4)),40).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(6,5)),2).
move(6,((6,5),(7,5)),3).
move(6,((7,5),(7,4)),5).
move(6,((7,4),(7,3)),6).
move(6,((7,3),(8,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(10,4)),6).
move(7,((10,4),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(5,4)),4).
move(8,((5,4),(5,3)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.695s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 1527     (Domain: 937)
Conflicts    : 22       (Analyzed: 22)
Restarts     : 0       
Model-Level  : 1299.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 22       (Deleted: 0)
  Binary     : 6        (Ratio:  27.27%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 22       (Average Length:   24.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 22       (Average: 10.36 Max:  72 Sum:    228)
  Executed   : 22       (Average: 10.36 Max:  72 Sum:    228 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 262170   (Original: 242228)
  Choice     : 320     
  Heuristic  : 992      (Original: 993)
Atoms        : 106468  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(5,4)),5).
move(1,((5,4),(4,4)),6).
move(1,((4,4),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(1,3)),3).
move(2,((1,3),(1,2)),4).
move(2,((1,2),(2,2)),5).
move(2,((2,2),(3,2)),6).
move(2,((3,2),(4,2)),8).
move(2,((4,2),(4,3)),9).
move(2,((4,3),(4,4)),11).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(7,5)),7).
move(3,((7,5),(7,4)),8).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(9,6)),6).
move(4,((9,6),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(8,6)),4).
move(5,((8,6),(9,6)),5).
move(5,((9,6),(10,6)),6).
move(5,((10,6),(10,5)),7).
move(5,((10,5),(9,5)),8).
move(5,((9,5),(9,4)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(6,4)),3).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(10,4)),6).
move(7,((10,4),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(6,3)),4).
move(8,((6,3),(5,3)),5).
move(8,((5,3),(5,2)),7).
move(8,((5,2),(5,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.800s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 1.797s

Choices      : 981      (Domain: 596)
Conflicts    : 49       (Analyzed: 49)
Restarts     : 0       
Model-Level  : 373.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 49       (Deleted: 0)
  Binary     : 10       (Ratio:  20.41%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 49       (Average Length:   21.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 49       (Average: 12.41 Max:  84 Sum:    608)
  Executed   : 49       (Average: 12.41 Max:  84 Sum:    608 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279652   (Original: 259773)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106485  
Disjunctions : 0        (Original: 1)
Bodies       : 183368   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93247    (Atom=Atom: 342 Body=Body: 351 Other: 92554)
Tight        : Yes
Variables    : 182697   (Eliminated:    0 Frozen: 92083)
Constraints  : 500665   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((8,6),(8,5)),3).
move(1,((8,5),(8,4)),4).
move(1,((8,4),(7,4)),5).
move(1,((7,4),(8,4)),6).
move(1,((8,4),(8,3)),7).
move(1,((8,3),(7,3)),8).
move(1,((7,3),(6,3)),9).
move(1,((6,3),(5,3)),10).
move(1,((5,3),(5,4)),11).
move(1,((5,4),(4,4)),12).
move(1,((4,4),(5,4)),15).
move(1,((5,4),(6,4)),16).
move(1,((6,4),(6,3)),17).
move(1,((6,3),(7,3)),18).
move(1,((7,3),(8,3)),19).
move(1,((8,3),(8,4)),20).
move(1,((8,4),(8,3)),21).
move(1,((8,3),(8,4)),22).
move(1,((8,4),(8,5)),24).
move(1,((8,5),(8,4)),25).
move(1,((8,4),(8,5)),29).
move(1,((8,5),(8,4)),30).
move(1,((8,4),(8,3)),32).
move(1,((8,3),(8,2)),33).
move(1,((8,2),(7,2)),34).
move(1,((7,2),(6,2)),35).
move(1,((6,2),(5,2)),36).
move(1,((5,2),(5,3)),37).
move(1,((5,3),(4,3)),38).
move(1,((4,3),(3,3)),39).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(1,4)),7).
move(2,((1,4),(2,4)),8).
move(2,((2,4),(3,4)),23).
move(2,((3,4),(4,4)),24).
move(2,((4,4),(4,5)),26).
move(2,((4,5),(4,4)),27).
move(2,((4,4),(3,4)),28).
move(2,((3,4),(3,5)),29).
move(2,((3,5),(2,5)),30).
move(2,((2,5),(2,4)),32).
move(2,((2,4),(2,5)),33).
move(2,((2,5),(3,5)),34).
move(2,((3,5),(4,5)),35).
move(2,((4,5),(3,5)),36).
move(2,((3,5),(3,4)),37).
move(2,((3,4),(2,4)),38).
move(2,((2,4),(3,4)),39).
move(2,((3,4),(4,4)),40).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(2,4)),7).
move(3,((2,4),(2,5)),8).
move(3,((2,5),(3,5)),19).
move(3,((3,5),(4,5)),20).
move(3,((4,5),(5,5)),21).
move(3,((5,5),(6,5)),22).
move(3,((6,5),(7,5)),23).
move(3,((7,5),(7,4)),24).
move(3,((7,4),(6,4)),26).
move(3,((6,4),(7,4)),28).
move(3,((7,4),(7,5)),31).
move(3,((7,5),(7,4)),32).
move(3,((7,4),(6,4)),33).
move(3,((6,4),(5,4)),34).
move(3,((5,4),(4,4)),35).
move(3,((4,4),(3,4)),36).
move(3,((3,4),(4,4)),37).
move(3,((4,4),(5,4)),38).
move(3,((5,4),(6,4)),39).
move(3,((6,4),(7,4)),40).
move(4,((3,6),(3,5)),2).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(3,3)),5).
move(4,((3,3),(3,4)),8).
move(4,((3,4),(3,3)),15).
move(4,((3,3),(3,4)),16).
move(4,((3,4),(3,5)),18).
move(4,((3,5),(3,4)),19).
move(4,((3,4),(3,3)),21).
move(4,((3,3),(3,4)),22).
move(4,((3,4),(3,3)),23).
move(4,((3,3),(4,3)),24).
move(4,((4,3),(3,3)),25).
move(4,((3,3),(3,4)),26).
move(4,((3,4),(3,3)),27).
move(4,((3,3),(3,4)),29).
move(4,((3,4),(3,3)),33).
move(4,((3,3),(4,3)),35).
move(4,((4,3),(5,3)),36).
move(4,((5,3),(6,3)),37).
move(4,((6,3),(7,3)),38).
move(4,((7,3),(8,3)),39).
move(4,((8,3),(9,3)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,5)),5).
move(5,((4,5),(5,5)),7).
move(5,((5,5),(4,5)),8).
move(5,((4,5),(4,4)),9).
move(5,((4,4),(5,4)),10).
move(5,((5,4),(4,4)),11).
move(5,((4,4),(4,5)),12).
move(5,((4,5),(5,5)),13).
move(5,((5,5),(4,5)),14).
move(5,((4,5),(4,4)),15).
move(5,((4,4),(5,4)),17).
move(5,((5,4),(6,4)),18).
move(5,((6,4),(5,4)),20).
move(5,((5,4),(4,4)),21).
move(5,((4,4),(4,5)),22).
move(5,((4,5),(5,5)),26).
move(5,((5,5),(4,5)),27).
move(5,((4,5),(4,4)),28).
move(5,((4,4),(4,5)),29).
move(5,((4,5),(5,5)),32).
move(5,((5,5),(5,4)),33).
move(5,((5,4),(5,5)),34).
move(5,((5,5),(6,5)),35).
move(5,((6,5),(7,5)),36).
move(5,((7,5),(8,5)),37).
move(5,((8,5),(9,5)),38).
move(5,((9,5),(9,4)),40).
move(6,((5,6),(6,6)),2).
move(6,((6,6),(6,5)),3).
move(6,((6,5),(7,5)),4).
move(6,((7,5),(8,5)),6).
move(6,((8,5),(8,4)),7).
move(6,((8,4),(8,3)),8).
move(6,((8,3),(7,3)),9).
move(6,((7,3),(6,3)),10).
move(6,((6,3),(5,3)),11).
move(6,((5,3),(5,4)),12).
move(6,((5,4),(6,4)),13).
move(6,((6,4),(5,4)),14).
move(6,((5,4),(5,3)),15).
move(6,((5,3),(6,3)),16).
move(6,((6,3),(5,3)),17).
move(6,((5,3),(5,4)),19).
move(6,((5,4),(5,5)),20).
move(6,((5,5),(6,5)),21).
move(6,((6,5),(7,5)),22).
move(6,((7,5),(7,4)),23).
move(6,((7,4),(6,4)),24).
move(6,((6,4),(6,3)),25).
move(6,((6,3),(5,3)),26).
move(6,((5,3),(5,4)),27).
move(6,((5,4),(6,4)),28).
move(6,((6,4),(5,4)),29).
move(6,((5,4),(5,5)),30).
move(6,((5,5),(5,4)),31).
move(6,((5,4),(5,3)),32).
move(6,((5,3),(6,3)),33).
move(6,((6,3),(5,3)),35).
move(6,((5,3),(5,4)),36).
move(6,((5,4),(6,4)),37).
move(6,((6,4),(7,4)),38).
move(6,((7,4),(7,3)),39).
move(6,((7,3),(8,3)),40).
move(7,((6,6),(6,5)),2).
move(7,((6,5),(6,4)),3).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,4)),7).
move(7,((6,4),(6,3)),11).
move(7,((6,3),(6,4)),12).
move(7,((6,4),(6,5)),13).
move(7,((6,5),(6,4)),14).
move(7,((6,4),(6,5)),16).
move(7,((6,5),(6,4)),17).
move(7,((6,4),(6,3)),18).
move(7,((6,3),(6,4)),20).
move(7,((6,4),(6,3)),21).
move(7,((6,3),(6,4)),22).
move(7,((6,4),(6,3)),24).
move(7,((6,3),(7,3)),25).
move(7,((7,3),(7,4)),26).
move(7,((7,4),(7,3)),28).
move(7,((7,3),(6,3)),29).
move(7,((6,3),(7,3)),30).
move(7,((7,3),(6,3)),31).
move(7,((6,3),(7,3)),33).
move(7,((7,3),(6,3)),35).
move(7,((6,3),(7,3)),37).
move(7,((7,3),(8,3)),38).
move(7,((8,3),(9,3)),39).
move(7,((9,3),(10,3)),40).
move(8,((7,6),(6,6)),3).
move(8,((6,6),(6,5)),4).
move(8,((6,5),(6,4)),5).
move(8,((6,4),(7,4)),6).
move(8,((7,4),(7,3)),7).
move(8,((7,3),(7,4)),8).
move(8,((7,4),(6,4)),21).
move(8,((6,4),(5,4)),22).
move(8,((5,4),(5,3)),23).
move(8,((5,3),(5,4)),24).
move(8,((5,4),(6,4)),25).
move(8,((6,4),(6,3)),26).
move(8,((6,3),(5,3)),27).
move(8,((5,3),(6,3)),28).
move(8,((6,3),(6,4)),29).
move(8,((6,4),(7,4)),31).
move(8,((7,4),(6,4)),32).
move(8,((6,4),(6,5)),33).
move(8,((6,5),(6,4)),34).
move(8,((6,4),(5,4)),35).
move(8,((5,4),(6,4)),36).
move(8,((6,4),(6,5)),37).
move(8,((6,5),(5,5)),38).
move(8,((5,5),(5,4)),39).
move(8,((5,4),(5,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.999s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 1.984s

Choices      : 465      (Domain: 465)
Conflicts    : 35       (Analyzed: 35)
Restarts     : 0       
Model-Level  : 270.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 35       (Deleted: 0)
  Binary     : 11       (Ratio:  31.43%)
  Ternary    : 2        (Ratio:   5.71%)
  Conflict   : 35       (Average Length:    8.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 35       (Average:  5.57 Max:  44 Sum:    195)
  Executed   : 35       (Average:  5.57 Max:  44 Sum:    195 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279634   (Original: 259763)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106468  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hStrange.lp
%%%%%
move(1,((8,6),(7,6)),2).
move(1,((7,6),(7,5)),5).
move(1,((7,5),(7,4)),6).
move(1,((7,4),(8,4)),7).
move(1,((8,4),(8,3)),8).
move(1,((8,3),(8,2)),9).
move(1,((8,2),(9,2)),10).
move(1,((9,2),(10,2)),11).
move(1,((10,2),(10,1)),12).
move(1,((10,1),(11,1)),13).
move(1,((11,1),(10,1)),14).
move(1,((10,1),(10,2)),15).
move(1,((10,2),(9,2)),16).
move(1,((9,2),(8,2)),17).
move(1,((8,2),(8,3)),18).
move(1,((8,3),(8,4)),19).
move(1,((8,4),(7,4)),34).
move(1,((7,4),(6,4)),35).
move(1,((6,4),(5,4)),36).
move(1,((5,4),(4,4)),37).
move(1,((4,4),(4,3)),38).
move(1,((4,3),(3,3)),39).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(2,2)),8).
move(2,((2,2),(1,2)),9).
move(2,((1,2),(1,1)),10).
move(2,((1,1),(1,2)),11).
move(2,((1,2),(2,2)),12).
move(2,((2,2),(2,3)),13).
move(2,((2,3),(2,4)),14).
move(2,((2,4),(2,3)),34).
move(2,((2,3),(2,4)),36).
move(2,((2,4),(3,4)),39).
move(2,((3,4),(4,4)),40).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(3,1)),8).
move(3,((3,1),(2,1)),9).
move(3,((2,1),(2,2)),10).
move(3,((2,2),(2,3)),11).
move(3,((2,3),(2,4)),12).
move(3,((2,4),(3,4)),14).
move(3,((3,4),(3,3)),20).
move(3,((3,3),(4,3)),21).
move(3,((4,3),(5,3)),22).
move(3,((5,3),(5,2)),23).
move(3,((5,2),(4,2)),24).
move(3,((4,2),(3,2)),25).
move(3,((3,2),(2,2)),26).
move(3,((2,2),(2,3)),27).
move(3,((2,3),(3,3)),34).
move(3,((3,3),(4,3)),36).
move(3,((4,3),(5,3)),37).
move(3,((5,3),(5,4)),38).
move(3,((5,4),(6,4)),39).
move(3,((6,4),(7,4)),40).
move(4,((3,6),(3,5)),2).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(3,3)),5).
move(4,((3,3),(3,2)),6).
move(4,((3,2),(2,2)),7).
move(4,((2,2),(1,2)),8).
move(4,((1,2),(1,1)),9).
move(4,((1,1),(2,1)),10).
move(4,((2,1),(2,2)),11).
move(4,((2,2),(3,2)),12).
move(4,((3,2),(3,3)),13).
move(4,((3,3),(3,2)),20).
move(4,((3,2),(3,3)),21).
move(4,((3,3),(3,4)),22).
move(4,((3,4),(4,4)),34).
move(4,((4,4),(4,3)),35).
move(4,((4,3),(5,3)),36).
move(4,((5,3),(6,3)),37).
move(4,((6,3),(7,3)),38).
move(4,((7,3),(8,3)),39).
move(4,((8,3),(9,3)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(4,2)),6).
move(5,((4,2),(4,1)),7).
move(5,((4,1),(4,2)),8).
move(5,((4,2),(4,3)),9).
move(5,((4,3),(4,4)),10).
move(5,((4,4),(5,4)),33).
move(5,((5,4),(5,3)),34).
move(5,((5,3),(6,3)),35).
move(5,((6,3),(6,4)),36).
move(5,((6,4),(7,4)),37).
move(5,((7,4),(8,4)),39).
move(5,((8,4),(9,4)),40).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(7,2)),8).
move(6,((7,2),(7,1)),9).
move(6,((7,1),(8,1)),10).
move(6,((8,1),(9,1)),11).
move(6,((9,1),(9,2)),12).
move(6,((9,2),(8,2)),13).
move(6,((8,2),(7,2)),14).
move(6,((7,2),(6,2)),15).
move(6,((6,2),(5,2)),16).
move(6,((5,2),(5,3)),17).
move(6,((5,3),(5,4)),18).
move(6,((5,4),(6,4)),33).
move(6,((6,4),(6,3)),34).
move(6,((6,3),(7,3)),35).
move(6,((7,3),(8,3)),36).
move(6,((8,3),(9,3)),37).
move(6,((9,3),(9,2)),38).
move(6,((9,2),(8,2)),39).
move(6,((8,2),(8,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(7,5)),4).
move(7,((7,5),(8,5)),5).
move(7,((8,5),(9,5)),7).
move(7,((9,5),(9,4)),8).
move(7,((9,4),(9,3)),9).
move(7,((9,3),(10,3)),10).
move(7,((10,3),(11,3)),11).
move(7,((11,3),(11,2)),12).
move(7,((11,2),(10,2)),13).
move(7,((10,2),(9,2)),14).
move(7,((9,2),(8,2)),15).
move(7,((8,2),(7,2)),16).
move(7,((7,2),(6,2)),17).
move(7,((6,2),(6,3)),18).
move(7,((6,3),(6,4)),19).
move(7,((6,4),(6,5)),33).
move(7,((6,5),(7,5)),35).
move(7,((7,5),(8,5)),36).
move(7,((8,5),(9,5)),37).
move(7,((9,5),(10,5)),38).
move(7,((10,5),(10,4)),39).
move(7,((10,4),(10,3)),40).
move(8,((7,6),(7,5)),2).
move(8,((7,5),(7,4)),3).
move(8,((7,4),(6,4)),4).
move(8,((6,4),(7,4)),5).
move(8,((7,4),(7,3)),6).
move(8,((7,3),(7,4)),8).
move(8,((7,4),(7,3)),19).
move(8,((7,3),(7,4)),20).
move(8,((7,4),(7,5)),21).
move(8,((7,5),(7,4)),22).
move(8,((7,4),(7,3)),33).
move(8,((7,3),(7,2)),34).
move(8,((7,2),(6,2)),35).
move(8,((6,2),(6,3)),36).
move(8,((6,3),(6,4)),37).
move(8,((6,4),(6,3)),38).
move(8,((6,3),(5,3)),39).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.840s (Solving: 0.04s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.828s

Choices      : 340      (Domain: 340)
Conflicts    : 14       (Analyzed: 14)
Restarts     : 0       
Model-Level  : 283.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 14       (Deleted: 0)
  Binary     : 1        (Ratio:   7.14%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 14       (Average Length:   30.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 14       (Average:  4.07 Max:  11 Sum:     57)
  Executed   : 14       (Average:  4.07 Max:  11 Sum:     57 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279634   (Original: 259763)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106468  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

