%%%%%
%Standard
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(2,((4,4),(4,3)),6).
move(2,((4,3),(5,3)),7).
move(2,((5,3),(6,3)),9).
move(2,((6,3),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(2,5)),2).
move(3,((2,5),(1,5)),3).
move(3,((1,5),(2,5)),5).
move(3,((2,5),(2,4)),6).
move(3,((2,4),(2,3)),7).
move(3,((2,3),(3,3)),8).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(7,3)),6).
move(4,((7,3),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(5,2)),4).
move(5,((5,2),(6,2)),5).
move(5,((6,2),(6,3)),6).
move(5,((6,3),(7,3)),8).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(9,2)),5).
move(6,((9,2),(8,2)),6).
move(6,((8,2),(7,2)),7).
move(6,((7,2),(6,2)),8).
move(6,((6,2),(5,2)),9).
move(6,((5,2),(4,2)),10).
move(6,((4,2),(4,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(8,6)),4).
move(7,((8,6),(8,5)),5).
move(7,((8,5),(8,4)),6).
move(7,((8,4),(9,4)),7).
move(7,((9,4),(8,4)),40).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),6).
move(8,((2,6),(2,5)),7).
move(8,((2,5),(2,4)),8).
move(8,((2,4),(2,3)),40).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(5,5)),6).
move(9,((5,5),(6,5)),8).
move(9,((6,5),(7,5)),9).
move(9,((7,5),(7,4)),10).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(5,4)),5).
move(10,((5,4),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(2,6)),9).
move(11,((2,6),(3,6)),10).
move(11,((3,6),(3,5)),11).
move(11,((3,5),(3,4)),12).
move(11,((3,4),(2,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.697s (Solving: 0.07s 1st Model: 0.07s Unsat: 0.00s)
CPU Time     : 1.703s

Choices      : 1503    
Conflicts    : 62       (Analyzed: 62)
Restarts     : 0       
Model-Level  : 442.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 62       (Deleted: 0)
  Binary     : 11       (Ratio:  17.74%)
  Ternary    : 1        (Ratio:   1.61%)
  Conflict   : 62       (Average Length:   34.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 62       (Average: 17.11 Max: 127 Sum:   1061)
  Executed   : 62       (Average: 17.11 Max: 127 Sum:   1061 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353468   (Original: 327181)
  Choice     : 440     
Atoms        : 141635  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(3,5)),2).
move(2,((3,5),(4,5)),3).
move(2,((4,5),(5,5)),4).
move(2,((5,5),(5,4)),5).
move(2,((5,4),(5,3)),7).
move(2,((5,3),(6,3)),8).
move(2,((6,3),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(2,2)),5).
move(3,((2,2),(2,3)),6).
move(3,((2,3),(2,4)),7).
move(3,((2,4),(3,4)),8).
move(3,((3,4),(3,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(5,6)),4).
move(6,((5,6),(4,6)),5).
move(6,((4,6),(4,5)),6).
move(6,((4,5),(4,4)),7).
move(6,((4,4),(5,4)),8).
move(6,((5,4),(5,3)),9).
move(6,((5,3),(4,3)),10).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),3).
move(7,((7,5),(8,5)),4).
move(7,((8,5),(8,4)),5).
move(7,((8,4),(9,4)),6).
move(7,((9,4),(8,4)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(5,4)),4).
move(8,((5,4),(4,4)),5).
move(8,((4,4),(3,4)),6).
move(8,((3,4),(3,3)),7).
move(8,((3,3),(2,3)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(6,5)),5).
move(9,((6,5),(6,4)),6).
move(9,((6,4),(7,4)),7).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(7,4)),3).
move(10,((7,4),(6,4)),4).
move(10,((6,4),(6,3)),5).
move(10,((6,3),(5,3)),6).
move(10,((5,3),(4,3)),7).
move(10,((4,3),(4,4)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(3,5)),9).
move(11,((3,5),(3,4)),10).
move(11,((3,4),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.766s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 1.766s

Choices      : 1224     (Domain: 175)
Conflicts    : 48       (Analyzed: 48)
Restarts     : 0       
Model-Level  : 627.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 48       (Deleted: 0)
  Binary     : 11       (Ratio:  22.92%)
  Ternary    : 2        (Ratio:   4.17%)
  Conflict   : 48       (Average Length:   24.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 48       (Average: 12.44 Max:  87 Sum:    597)
  Executed   : 48       (Average: 12.44 Max:  87 Sum:    597 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353796   (Original: 327509)
  Choice     : 440     
  Heuristic  : 186     
Atoms        : 141777  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(5,4)),6).
move(1,((5,4),(6,4)),7).
move(1,((6,4),(6,3)),8).
move(1,((6,3),(6,2)),9).
move(1,((6,2),(7,2)),10).
move(1,((7,2),(8,2)),11).
move(1,((8,2),(8,3)),12).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(2,((4,4),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(4,((9,4),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(8,5)),2).
move(6,((8,5),(8,4)),3).
move(6,((8,4),(8,3)),4).
move(6,((8,3),(8,2)),5).
move(6,((8,2),(7,2)),6).
move(6,((7,2),(6,2)),7).
move(6,((6,2),(5,2)),8).
move(6,((5,2),(4,2)),9).
move(6,((4,2),(4,3)),10).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),3).
move(7,((7,4),(8,4)),4).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(3,4)),6).
move(8,((3,4),(2,4)),7).
move(8,((2,4),(2,3)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(7,4)),5).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(10,5)),2).
move(11,((10,5),(9,5)),3).
move(11,((9,5),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(5,5)),7).
move(11,((5,5),(4,5)),8).
move(11,((4,5),(3,5)),9).
move(11,((3,5),(3,4)),10).
move(11,((3,4),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.778s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.781s

Choices      : 408      (Domain: 408)
Conflicts    : 4        (Analyzed: 4)
Restarts     : 0       
Model-Level  : 382.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 4        (Deleted: 0)
  Binary     : 3        (Ratio:  75.00%)
  Ternary    : 1        (Ratio:  25.00%)
  Conflict   : 4        (Average Length:    2.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 4        (Average:  6.50 Max:  11 Sum:     26)
  Executed   : 4        (Average:  6.50 Max:  11 Sum:     26 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378800   (Original: 352645)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141788  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),9).
move(1,((1,2),(2,2)),10).
move(1,((2,2),(3,2)),11).
move(1,((3,2),(4,2)),12).
move(1,((4,2),(5,2)),13).
move(1,((5,2),(5,3)),14).
move(1,((5,3),(6,3)),15).
move(1,((6,3),(7,3)),16).
move(1,((7,3),(7,2)),17).
move(1,((7,2),(7,3)),18).
move(1,((7,3),(7,4)),20).
move(1,((7,4),(8,4)),21).
move(1,((8,4),(8,3)),22).
move(1,((8,3),(7,3)),23).
move(1,((7,3),(8,3)),30).
move(1,((8,3),(7,3)),32).
move(1,((7,3),(8,3)),40).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(3,4)),3).
move(2,((3,4),(3,3)),4).
move(2,((3,3),(2,3)),5).
move(2,((2,3),(3,3)),6).
move(2,((3,3),(3,2)),7).
move(2,((3,2),(2,2)),8).
move(2,((2,2),(3,2)),9).
move(2,((3,2),(4,2)),10).
move(2,((4,2),(5,2)),11).
move(2,((5,2),(6,2)),12).
move(2,((6,2),(7,2)),13).
move(2,((7,2),(8,2)),15).
move(2,((8,2),(9,2)),16).
move(2,((9,2),(9,3)),17).
move(2,((9,3),(8,3)),18).
move(2,((8,3),(7,3)),20).
move(2,((7,3),(7,4)),21).
move(2,((7,4),(6,4)),22).
move(2,((6,4),(6,5)),23).
move(2,((6,5),(5,5)),24).
move(2,((5,5),(4,5)),25).
move(2,((4,5),(4,4)),26).
move(2,((4,4),(4,3)),29).
move(2,((4,3),(4,4)),30).
move(2,((4,4),(4,5)),31).
move(2,((4,5),(5,5)),33).
move(2,((5,5),(5,4)),34).
move(2,((5,4),(5,3)),35).
move(2,((5,3),(6,3)),36).
move(2,((6,3),(6,2)),38).
move(2,((6,2),(5,2)),39).
move(2,((5,2),(5,3)),40).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(5,5)),3).
move(3,((5,5),(6,5)),4).
move(3,((6,5),(7,5)),5).
move(3,((7,5),(7,4)),6).
move(3,((7,4),(8,4)),7).
move(3,((8,4),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(3,((9,3),(9,2)),10).
move(3,((9,2),(9,3)),11).
move(3,((9,3),(10,3)),12).
move(3,((10,3),(10,2)),13).
move(3,((10,2),(9,2)),14).
move(3,((9,2),(9,1)),16).
move(3,((9,1),(8,1)),17).
move(3,((8,1),(7,1)),18).
move(3,((7,1),(7,2)),20).
move(3,((7,2),(6,2)),21).
move(3,((6,2),(5,2)),23).
move(3,((5,2),(5,3)),24).
move(3,((5,3),(5,2)),25).
move(3,((5,2),(4,2)),29).
move(3,((4,2),(3,2)),31).
move(3,((3,2),(4,2)),32).
move(3,((4,2),(3,2)),34).
move(3,((3,2),(3,3)),40).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(3,5)),2).
move(4,((3,5),(2,5)),3).
move(4,((2,5),(2,4)),4).
move(4,((2,4),(3,4)),5).
move(4,((3,4),(2,4)),6).
move(4,((2,4),(2,3)),7).
move(4,((2,3),(2,2)),9).
move(4,((2,2),(3,2)),10).
move(4,((3,2),(3,1)),11).
move(4,((3,1),(3,2)),12).
move(4,((3,2),(3,1)),13).
move(4,((3,1),(4,1)),14).
move(4,((4,1),(5,1)),15).
move(4,((5,1),(5,2)),16).
move(4,((5,2),(6,2)),17).
move(4,((6,2),(7,2)),18).
move(4,((7,2),(8,2)),19).
move(4,((8,2),(8,1)),21).
move(4,((8,1),(7,1)),22).
move(4,((7,1),(7,2)),23).
move(4,((7,2),(6,2)),24).
move(4,((6,2),(7,2)),27).
move(4,((7,2),(8,2)),32).
move(4,((8,2),(8,1)),34).
move(4,((8,1),(8,2)),36).
move(4,((8,2),(8,3)),39).
move(4,((8,3),(9,3)),40).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(4,1)),8).
move(5,((4,1),(5,1)),10).
move(5,((5,1),(6,1)),11).
move(5,((6,1),(6,2)),13).
move(5,((6,2),(6,3)),14).
move(5,((6,3),(6,2)),15).
move(5,((6,2),(6,3)),17).
move(5,((6,3),(6,2)),18).
move(5,((6,2),(6,3)),19).
move(5,((6,3),(6,4)),26).
move(5,((6,4),(6,3)),27).
move(5,((6,3),(7,3)),30).
move(5,((7,3),(7,2)),32).
move(5,((7,2),(8,2)),34).
move(5,((8,2),(7,2)),36).
move(5,((7,2),(6,2)),37).
move(5,((6,2),(7,2)),38).
move(5,((7,2),(7,3)),40).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(10,5)),2).
move(6,((10,5),(10,4)),3).
move(6,((10,4),(10,5)),7).
move(6,((10,5),(9,5)),10).
move(6,((9,5),(8,5)),11).
move(6,((8,5),(7,5)),12).
move(6,((7,5),(8,5)),13).
move(6,((8,5),(8,4)),14).
move(6,((8,4),(8,3)),15).
move(6,((8,3),(7,3)),17).
move(6,((7,3),(6,3)),18).
move(6,((6,3),(6,4)),19).
move(6,((6,4),(5,4)),20).
move(6,((5,4),(4,4)),21).
move(6,((4,4),(3,4)),22).
move(6,((3,4),(3,3)),24).
move(6,((3,3),(3,2)),25).
move(6,((3,2),(4,2)),26).
move(6,((4,2),(3,2)),27).
move(6,((3,2),(3,1)),28).
move(6,((3,1),(4,1)),29).
move(6,((4,1),(5,1)),30).
move(6,((5,1),(5,2)),31).
move(6,((5,2),(4,2)),34).
move(6,((4,2),(4,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(5,2)),7).
move(7,((5,2),(4,2)),8).
move(7,((4,2),(4,3)),9).
move(7,((4,3),(5,3)),10).
move(7,((5,3),(5,4)),11).
move(7,((5,4),(6,4)),12).
move(7,((6,4),(7,4)),13).
move(7,((7,4),(7,5)),14).
move(7,((7,5),(7,4)),15).
move(7,((7,4),(8,4)),16).
move(7,((8,4),(9,4)),19).
move(7,((9,4),(9,5)),20).
move(7,((9,5),(10,5)),22).
move(7,((10,5),(10,4)),23).
move(7,((10,4),(9,4)),25).
move(7,((9,4),(9,3)),26).
move(7,((9,3),(10,3)),29).
move(7,((10,3),(10,4)),31).
move(7,((10,4),(9,4)),32).
move(7,((9,4),(9,3)),33).
move(7,((9,3),(10,3)),34).
move(7,((10,3),(11,3)),35).
move(7,((11,3),(10,3)),36).
move(7,((10,3),(9,3)),38).
move(7,((9,3),(9,4)),39).
move(7,((9,4),(8,4)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(6,2)),10).
move(8,((6,2),(6,3)),11).
move(8,((6,3),(5,3)),12).
move(8,((5,3),(4,3)),13).
move(8,((4,3),(4,2)),14).
move(8,((4,2),(5,2)),15).
move(8,((5,2),(5,3)),16).
move(8,((5,3),(4,3)),24).
move(8,((4,3),(5,3)),26).
move(8,((5,3),(4,3)),27).
move(8,((4,3),(3,3)),28).
move(8,((3,3),(4,3)),31).
move(8,((4,3),(3,3)),32).
move(8,((3,3),(2,3)),33).
move(8,((2,3),(3,3)),34).
move(8,((3,3),(2,3)),36).
move(8,((2,3),(3,3)),37).
move(8,((3,3),(2,3)),39).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,6)),2).
move(9,((10,6),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(8,3)),7).
move(9,((8,3),(7,3)),8).
move(9,((7,3),(6,3)),9).
move(9,((6,3),(6,4)),10).
move(9,((6,4),(7,4)),11).
move(9,((7,4),(7,5)),13).
move(9,((7,5),(8,5)),14).
move(9,((8,5),(7,5)),15).
move(9,((7,5),(6,5)),16).
move(9,((6,5),(7,5)),19).
move(9,((7,5),(8,5)),20).
move(9,((8,5),(7,5)),21).
move(9,((7,5),(8,5)),23).
move(9,((8,5),(7,5)),24).
move(9,((7,5),(6,5)),28).
move(9,((6,5),(7,5)),29).
move(9,((7,5),(7,4)),30).
move(9,((7,4),(6,4)),31).
move(9,((6,4),(7,4)),33).
move(9,((7,4),(7,5)),34).
move(9,((7,5),(8,5)),36).
move(9,((8,5),(7,5)),37).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(10,((4,4),(3,4)),7).
move(10,((3,4),(3,3)),8).
move(10,((3,3),(2,3)),9).
move(10,((2,3),(3,3)),10).
move(10,((3,3),(2,3)),12).
move(10,((2,3),(2,2)),13).
move(10,((2,2),(2,3)),14).
move(10,((2,3),(2,4)),16).
move(10,((2,4),(2,3)),17).
move(10,((2,3),(2,2)),19).
move(10,((2,2),(2,3)),24).
move(10,((2,3),(3,3)),25).
move(10,((3,3),(3,4)),26).
move(10,((3,4),(3,5)),28).
move(10,((3,5),(4,5)),29).
move(10,((4,5),(3,5)),31).
move(10,((3,5),(3,4)),32).
move(10,((3,4),(4,4)),33).
move(10,((4,4),(4,5)),34).
move(10,((4,5),(5,5)),35).
move(10,((5,5),(4,5)),36).
move(10,((4,5),(4,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(4,5)),8).
move(11,((4,5),(3,5)),9).
move(11,((3,5),(3,4)),10).
move(11,((3,4),(2,4)),11).
move(11,((2,4),(2,5)),12).
move(11,((2,5),(3,5)),14).
move(11,((3,5),(4,5)),15).
move(11,((4,5),(5,5)),16).
move(11,((5,5),(5,4)),17).
move(11,((5,4),(6,4)),18).
move(11,((6,4),(6,5)),19).
move(11,((6,5),(6,6)),20).
move(11,((6,6),(5,6)),21).
move(11,((5,6),(4,6)),22).
move(11,((4,6),(4,5)),23).
move(11,((4,5),(3,5)),24).
move(11,((3,5),(3,6)),28).
move(11,((3,6),(3,5)),29).
move(11,((3,5),(3,6)),30).
move(11,((3,6),(2,6)),36).
move(11,((2,6),(2,5)),38).
move(11,((2,5),(2,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.410s (Solving: 0.69s 1st Model: 0.69s Unsat: 0.00s)
CPU Time     : 2.406s

Choices      : 23906    (Domain: 5905)
Conflicts    : 375      (Analyzed: 375)
Restarts     : 2        (Average: 187.50 Last: 55)
Model-Level  : 854.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 375      (Deleted: 0)
  Binary     : 68       (Ratio:  18.13%)
  Ternary    : 21       (Ratio:   5.60%)
  Conflict   : 375      (Average Length:   38.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 375      (Average: 59.99 Max: 762 Sum:  22495)
  Executed   : 375      (Average: 59.99 Max: 762 Sum:  22495 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378800   (Original: 352645)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141788  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(8,6)),7).
move(1,((8,6),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(2,((4,4),(4,3)),5).
move(2,((4,3),(4,2)),6).
move(2,((4,2),(5,2)),7).
move(2,((5,2),(5,1)),8).
move(2,((5,1),(5,2)),9).
move(2,((5,2),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(4,3)),4).
move(3,((4,3),(5,3)),5).
move(3,((5,3),(4,3)),7).
move(3,((4,3),(3,3)),8).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(4,((9,4),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),6).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(8,5)),2).
move(6,((8,5),(8,4)),3).
move(6,((8,4),(8,3)),4).
move(6,((8,3),(7,3)),5).
move(6,((7,3),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(8,4)),6).
move(7,((8,4),(7,4)),7).
move(7,((7,4),(8,4)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(5,4)),4).
move(8,((5,4),(4,4)),5).
move(8,((4,4),(3,4)),6).
move(8,((3,4),(3,3)),7).
move(8,((3,3),(2,3)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(9,5)),2).
move(9,((9,5),(9,4)),3).
move(9,((9,4),(8,4)),4).
move(9,((8,4),(8,5)),5).
move(9,((8,5),(8,6)),6).
move(9,((8,6),(9,6)),7).
move(9,((9,6),(8,6)),8).
move(9,((8,6),(7,6)),9).
move(9,((7,6),(7,5)),10).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(8,6)),2).
move(10,((8,6),(8,5)),4).
move(10,((8,5),(7,5)),5).
move(10,((7,5),(6,5)),6).
move(10,((6,5),(5,5)),7).
move(10,((5,5),(4,5)),8).
move(10,((4,5),(4,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(9,5)),3).
move(11,((9,5),(9,4)),4).
move(11,((9,4),(8,4)),5).
move(11,((8,4),(7,4)),6).
move(11,((7,4),(6,4)),7).
move(11,((6,4),(5,4)),8).
move(11,((5,4),(4,4)),9).
move(11,((4,4),(3,4)),10).
move(11,((3,4),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.722s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.719s

Choices      : 539      (Domain: 44)
Conflicts    : 11       (Analyzed: 11)
Restarts     : 0       
Model-Level  : 447.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 11       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 11       (Average Length:   35.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 11       (Average:  8.36 Max:  44 Sum:     92)
  Executed   : 11       (Average:  8.36 Max:  44 Sum:     92 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354968   (Original: 328703)
  Choice     : 440     
  Heuristic  : 1273     (Original: 1295)
Atoms        : 141862  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(6,5)),7).
move(1,((6,5),(7,5)),8).
move(1,((7,5),(8,5)),9).
move(1,((8,5),(8,4)),10).
move(1,((8,4),(8,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),5).
move(2,((3,3),(4,3)),6).
move(2,((4,3),(5,3)),8).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(3,1)),5).
move(3,((3,1),(3,2)),6).
move(3,((3,2),(3,3)),7).
move(3,((3,3),(4,3)),8).
move(3,((4,3),(3,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(9,4)),7).
move(4,((9,4),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(5,2)),4).
move(5,((5,2),(6,2)),5).
move(5,((6,2),(7,2)),6).
move(5,((7,2),(7,3)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(8,5)),2).
move(6,((8,5),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(5,4)),6).
move(6,((5,4),(4,4)),8).
move(6,((4,4),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),4).
move(7,((6,2),(6,3)),5).
move(7,((6,3),(6,4)),6).
move(7,((6,4),(7,4)),7).
move(7,((7,4),(8,4)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(8,((2,4),(2,3)),8).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(9,3)),4).
move(9,((9,3),(8,3)),5).
move(9,((8,3),(7,3)),6).
move(9,((7,3),(6,3)),7).
move(9,((6,3),(6,2)),8).
move(9,((6,2),(6,3)),9).
move(9,((6,3),(6,4)),10).
move(9,((6,4),(7,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,3)),4).
move(10,((8,3),(7,3)),5).
move(10,((7,3),(6,3)),6).
move(10,((6,3),(5,3)),7).
move(10,((5,3),(5,4)),8).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(2,6)),9).
move(11,((2,6),(2,5)),10).
move(11,((2,5),(2,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.715s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.719s

Choices      : 2863     (Domain: 1447)
Conflicts    : 51       (Analyzed: 51)
Restarts     : 0       
Model-Level  : 1926.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 51       (Deleted: 0)
  Binary     : 5        (Ratio:   9.80%)
  Ternary    : 1        (Ratio:   1.96%)
  Conflict   : 51       (Average Length:   21.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 51       (Average: 18.37 Max: 101 Sum:    937)
  Executed   : 51       (Average: 18.37 Max: 101 Sum:    937 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 355136   (Original: 328856)
  Choice     : 440     
  Heuristic  : 1526     (Original: 1533)
Atoms        : 141777  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(3,5)),2).
move(2,((3,5),(4,5)),6).
move(2,((4,5),(4,4)),7).
move(2,((4,4),(5,4)),8).
move(2,((5,4),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(4,2)),5).
move(3,((4,2),(5,2)),6).
move(3,((5,2),(5,3)),7).
move(3,((5,3),(4,3)),8).
move(3,((4,3),(3,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(5,2)),4).
move(5,((5,2),(6,2)),5).
move(5,((6,2),(7,2)),6).
move(5,((7,2),(7,3)),8).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(8,5)),2).
move(6,((8,5),(8,4)),4).
move(6,((8,4),(7,4)),5).
move(6,((7,4),(7,3)),6).
move(6,((7,3),(6,3)),8).
move(6,((6,3),(5,3)),9).
move(6,((5,3),(4,3)),10).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),4).
move(7,((8,5),(8,4)),5).
move(7,((8,4),(9,4)),6).
move(7,((9,4),(8,4)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(5,4)),4).
move(8,((5,4),(4,4)),5).
move(8,((4,4),(3,4)),6).
move(8,((3,4),(3,3)),7).
move(8,((3,3),(2,3)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(6,5)),5).
move(9,((6,5),(6,4)),6).
move(9,((6,4),(7,4)),8).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(3,6)),5).
move(10,((3,6),(3,5)),6).
move(10,((3,5),(3,4)),7).
move(10,((3,4),(4,4)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(2,6)),9).
move(11,((2,6),(2,5)),10).
move(11,((2,5),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.755s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 1.750s

Choices      : 1175     (Domain: 672)
Conflicts    : 54       (Analyzed: 54)
Restarts     : 0       
Model-Level  : 467.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 54       (Deleted: 0)
  Binary     : 9        (Ratio:  16.67%)
  Ternary    : 2        (Ratio:   3.70%)
  Conflict   : 54       (Average Length:   25.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 54       (Average: 13.11 Max: 105 Sum:    708)
  Executed   : 54       (Average: 13.11 Max: 105 Sum:    708 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378813   (Original: 352647)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141800  
Disjunctions : 0        (Original: 1)
Bodies       : 247623   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128049   (Atom=Atom: 470 Body=Body: 482 Other: 127097)
Tight        : Yes
Variables    : 246824   (Eliminated:    0 Frozen: 126446)
Constraints  : 678181   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(1,5)),3).
move(1,((1,5),(1,4)),4).
move(1,((1,4),(2,4)),5).
move(1,((2,4),(2,3)),6).
move(1,((2,3),(1,3)),7).
move(1,((1,3),(2,3)),9).
move(1,((2,3),(3,3)),10).
move(1,((3,3),(4,3)),11).
move(1,((4,3),(4,4)),12).
move(1,((4,4),(4,5)),14).
move(1,((4,5),(3,5)),15).
move(1,((3,5),(4,5)),16).
move(1,((4,5),(4,4)),17).
move(1,((4,4),(4,3)),19).
move(1,((4,3),(3,3)),20).
move(1,((3,3),(2,3)),21).
move(1,((2,3),(2,4)),22).
move(1,((2,4),(2,3)),23).
move(1,((2,3),(2,4)),24).
move(1,((2,4),(2,5)),25).
move(1,((2,5),(2,4)),29).
move(1,((2,4),(2,5)),30).
move(1,((2,5),(3,5)),31).
move(1,((3,5),(2,5)),32).
move(1,((2,5),(3,5)),33).
move(1,((3,5),(4,5)),34).
move(1,((4,5),(5,5)),35).
move(1,((5,5),(6,5)),36).
move(1,((6,5),(7,5)),37).
move(1,((7,5),(7,4)),38).
move(1,((7,4),(8,4)),39).
move(1,((8,4),(8,3)),40).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(2,4)),9).
move(2,((2,4),(2,3)),10).
move(2,((2,3),(3,3)),12).
move(2,((3,3),(4,3)),13).
move(2,((4,3),(4,4)),14).
move(2,((4,4),(4,5)),15).
move(2,((4,5),(4,4)),16).
move(2,((4,4),(5,4)),17).
move(2,((5,4),(5,5)),18).
move(2,((5,5),(5,4)),21).
move(2,((5,4),(5,3)),22).
move(2,((5,3),(5,4)),23).
move(2,((5,4),(5,5)),24).
move(2,((5,5),(4,5)),25).
move(2,((4,5),(4,4)),26).
move(2,((4,4),(4,5)),27).
move(2,((4,5),(5,5)),28).
move(2,((5,5),(4,5)),29).
move(2,((4,5),(5,5)),30).
move(2,((5,5),(5,4)),31).
move(2,((5,4),(4,4)),32).
move(2,((4,4),(4,3)),33).
move(2,((4,3),(3,3)),34).
move(2,((3,3),(2,3)),35).
move(2,((2,3),(3,3)),36).
move(2,((3,3),(4,3)),38).
move(2,((4,3),(5,3)),39).
move(3,((3,6),(3,5)),3).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,4)),7).
move(3,((3,4),(3,3)),9).
move(3,((3,3),(3,4)),10).
move(3,((3,4),(3,3)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(5,4)),5).
move(4,((5,4),(6,4)),6).
move(4,((6,4),(7,4)),7).
move(4,((7,4),(8,4)),8).
move(4,((8,4),(8,5)),10).
move(4,((8,5),(8,4)),11).
move(4,((8,4),(8,3)),12).
move(4,((8,3),(8,4)),13).
move(4,((8,4),(8,3)),14).
move(4,((8,3),(9,3)),15).
move(4,((9,3),(8,3)),17).
move(4,((8,3),(8,4)),18).
move(4,((8,4),(8,3)),19).
move(4,((8,3),(9,3)),20).
move(4,((9,3),(9,4)),21).
move(4,((9,4),(9,3)),22).
move(4,((9,3),(9,4)),23).
move(4,((9,4),(9,3)),24).
move(4,((9,3),(8,3)),26).
move(4,((8,3),(7,3)),27).
move(4,((7,3),(7,4)),28).
move(4,((7,4),(7,3)),29).
move(4,((7,3),(8,3)),30).
move(4,((8,3),(8,4)),31).
move(4,((8,4),(8,5)),32).
move(4,((8,5),(9,5)),33).
move(4,((9,5),(9,4)),35).
move(4,((9,4),(9,5)),36).
move(4,((9,5),(8,5)),37).
move(4,((8,5),(8,4)),38).
move(4,((8,4),(9,4)),39).
move(4,((9,4),(9,3)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,4)),6).
move(5,((5,4),(6,4)),7).
move(5,((6,4),(7,4)),8).
move(5,((7,4),(7,3)),9).
move(5,((7,3),(6,3)),10).
move(5,((6,3),(5,3)),11).
move(5,((5,3),(5,4)),12).
move(5,((5,4),(5,3)),13).
move(5,((5,3),(5,4)),15).
move(5,((5,4),(5,3)),17).
move(5,((5,3),(6,3)),18).
move(5,((6,3),(6,4)),19).
move(5,((6,4),(7,4)),20).
move(5,((7,4),(7,3)),21).
move(5,((7,3),(6,3)),22).
move(5,((6,3),(5,3)),24).
move(5,((5,3),(5,4)),25).
move(5,((5,4),(5,3)),30).
move(5,((5,3),(5,4)),33).
move(5,((5,4),(5,3)),37).
move(5,((5,3),(6,3)),39).
move(5,((6,3),(7,3)),40).
move(6,((9,6),(9,5)),3).
move(6,((9,5),(9,4)),4).
move(6,((9,4),(9,3)),5).
move(6,((9,3),(8,3)),7).
move(6,((8,3),(9,3)),8).
move(6,((9,3),(8,3)),9).
move(6,((8,3),(7,3)),11).
move(6,((7,3),(6,3)),12).
move(6,((6,3),(7,3)),13).
move(6,((7,3),(6,3)),14).
move(6,((6,3),(7,3)),15).
move(6,((7,3),(7,4)),16).
move(6,((7,4),(7,5)),17).
move(6,((7,5),(7,6)),18).
move(6,((7,6),(6,6)),19).
move(6,((6,6),(6,5)),20).
move(6,((6,5),(7,5)),21).
move(6,((7,5),(7,4)),22).
move(6,((7,4),(7,3)),23).
move(6,((7,3),(8,3)),24).
move(6,((8,3),(7,3)),25).
move(6,((7,3),(7,4)),26).
move(6,((7,4),(6,4)),27).
move(6,((6,4),(6,3)),28).
move(6,((6,3),(5,3)),29).
move(6,((5,3),(4,3)),30).
move(6,((4,3),(4,4)),31).
move(6,((4,4),(4,3)),32).
move(6,((4,3),(5,3)),33).
move(6,((5,3),(4,3)),35).
move(6,((4,3),(4,4)),36).
move(6,((4,4),(4,5)),37).
move(6,((4,5),(4,4)),38).
move(6,((4,4),(4,3)),39).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(7,4)),5).
move(7,((7,4),(7,5)),6).
move(7,((7,5),(6,5)),7).
move(7,((6,5),(6,4)),9).
move(7,((6,4),(6,5)),18).
move(7,((6,5),(7,5)),20).
move(7,((7,5),(7,4)),21).
move(7,((7,4),(8,4)),22).
move(7,((8,4),(7,4)),23).
move(7,((7,4),(8,4)),24).
move(7,((8,4),(7,4)),25).
move(7,((7,4),(8,4)),26).
move(7,((8,4),(7,4)),27).
move(7,((7,4),(8,4)),28).
move(7,((8,4),(7,4)),29).
move(7,((7,4),(6,4)),30).
move(7,((6,4),(7,4)),39).
move(7,((7,4),(8,4)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(6,3)),6).
move(8,((6,3),(5,3)),7).
move(8,((5,3),(4,3)),8).
move(8,((4,3),(4,2)),9).
move(8,((4,2),(3,2)),10).
move(8,((3,2),(2,2)),11).
move(8,((2,2),(2,3)),12).
move(8,((2,3),(2,4)),13).
move(8,((2,4),(2,3)),14).
move(8,((2,3),(3,3)),15).
move(8,((3,3),(4,3)),16).
move(8,((4,3),(3,3)),17).
move(8,((3,3),(4,3)),18).
move(8,((4,3),(5,3)),19).
move(8,((5,3),(6,3)),20).
move(8,((6,3),(6,4)),21).
move(8,((6,4),(5,4)),22).
move(8,((5,4),(6,4)),23).
move(8,((6,4),(6,3)),25).
move(8,((6,3),(5,3)),26).
move(8,((5,3),(4,3)),27).
move(8,((4,3),(3,3)),28).
move(8,((3,3),(2,3)),29).
move(8,((2,3),(2,4)),30).
move(8,((2,4),(2,5)),31).
move(8,((2,5),(2,4)),32).
move(8,((2,4),(2,5)),33).
move(8,((2,5),(2,6)),34).
move(8,((2,6),(2,5)),35).
move(8,((2,5),(2,6)),36).
move(8,((2,6),(2,5)),37).
move(8,((2,5),(2,4)),38).
move(8,((2,4),(2,3)),40).
move(9,((10,6),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(10,4)),6).
move(9,((10,4),(10,5)),7).
move(9,((10,5),(9,5)),8).
move(9,((9,5),(9,4)),10).
move(9,((9,4),(10,4)),11).
move(9,((10,4),(9,4)),16).
move(9,((9,4),(10,4)),18).
move(9,((10,4),(9,4)),31).
move(9,((9,4),(10,4)),34).
move(9,((10,4),(10,5)),36).
move(9,((10,5),(9,5)),37).
move(9,((9,5),(8,5)),38).
move(9,((8,5),(7,5)),39).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,5)),8).
move(10,((8,5),(7,5)),9).
move(10,((7,5),(6,5)),10).
move(10,((6,5),(5,5)),11).
move(10,((5,5),(6,5)),13).
move(10,((6,5),(5,5)),14).
move(10,((5,5),(4,5)),18).
move(10,((4,5),(4,4)),19).
move(10,((4,4),(5,4)),20).
move(10,((5,4),(4,4)),21).
move(10,((4,4),(4,5)),23).
move(10,((4,5),(4,4)),24).
move(10,((4,4),(4,3)),26).
move(10,((4,3),(4,4)),27).
move(10,((4,4),(4,5)),28).
move(10,((4,5),(4,4)),29).
move(10,((4,4),(4,5)),30).
move(10,((4,5),(5,5)),32).
move(10,((5,5),(4,5)),33).
move(10,((4,5),(4,4)),34).
move(10,((4,4),(4,5)),35).
move(10,((4,5),(5,5)),36).
move(10,((5,5),(6,5)),37).
move(10,((6,5),(5,5)),38).
move(10,((5,5),(4,5)),39).
move(10,((4,5),(4,4)),40).
move(11,((11,6),(10,6)),3).
move(11,((10,6),(10,5)),4).
move(11,((10,5),(11,5)),6).
move(11,((11,5),(11,4)),7).
move(11,((11,4),(10,4)),8).
move(11,((10,4),(10,5)),10).
move(11,((10,5),(9,5)),11).
move(11,((9,5),(9,4)),12).
move(11,((9,4),(8,4)),15).
move(11,((8,4),(9,4)),18).
move(11,((9,4),(8,4)),21).
move(11,((8,4),(9,4)),22).
move(11,((9,4),(8,4)),23).
move(11,((8,4),(8,5)),24).
move(11,((8,5),(8,4)),25).
move(11,((8,4),(9,4)),26).
move(11,((9,4),(8,4)),30).
move(11,((8,4),(7,4)),31).
move(11,((7,4),(7,5)),32).
move(11,((7,5),(6,5)),33).
move(11,((6,5),(5,5)),34).
move(11,((5,5),(5,6)),35).
move(11,((5,6),(4,6)),36).
move(11,((4,6),(3,6)),37).
move(11,((3,6),(3,5)),38).
move(11,((3,5),(2,5)),39).
move(11,((2,5),(2,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.819s (Solving: 0.08s 1st Model: 0.08s Unsat: 0.00s)
CPU Time     : 1.828s

Choices      : 1688     (Domain: 1688)
Conflicts    : 130      (Analyzed: 130)
Restarts     : 0       
Model-Level  : 374.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 130      (Deleted: 0)
  Binary     : 14       (Ratio:  10.77%)
  Ternary    : 19       (Ratio:  14.62%)
  Conflict   : 130      (Average Length:   20.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 130      (Average: 10.11 Max:  66 Sum:   1314)
  Executed   : 130      (Average: 10.11 Max:  66 Sum:   1314 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378789   (Original: 352634)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141777  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(1,2)),9).
move(1,((1,2),(1,1)),10).
move(1,((1,1),(1,2)),11).
move(1,((1,2),(2,2)),12).
move(1,((2,2),(2,3)),13).
move(1,((2,3),(2,4)),14).
move(1,((2,4),(2,3)),34).
move(1,((2,3),(3,3)),35).
move(1,((3,3),(4,3)),36).
move(1,((4,3),(5,3)),37).
move(1,((5,3),(6,3)),38).
move(1,((6,3),(7,3)),39).
move(1,((7,3),(8,3)),40).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(3,2)),7).
move(2,((3,2),(3,1)),8).
move(2,((3,1),(2,1)),9).
move(2,((2,1),(2,2)),10).
move(2,((2,2),(2,3)),11).
move(2,((2,3),(2,4)),12).
move(2,((2,4),(3,4)),14).
move(2,((3,4),(3,3)),33).
move(2,((3,3),(4,3)),35).
move(2,((4,3),(4,2)),36).
move(2,((4,2),(4,3)),37).
move(2,((4,3),(3,3)),38).
move(2,((3,3),(4,3)),39).
move(2,((4,3),(5,3)),40).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),5).
move(3,((3,3),(3,2)),6).
move(3,((3,2),(2,2)),7).
move(3,((2,2),(2,1)),8).
move(3,((2,1),(1,1)),9).
move(3,((1,1),(2,1)),10).
move(3,((2,1),(2,2)),11).
move(3,((2,2),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(4,3)),33).
move(3,((4,3),(4,4)),34).
move(3,((4,4),(5,4)),35).
move(3,((5,4),(4,4)),36).
move(3,((4,4),(3,4)),37).
move(3,((3,4),(2,4)),38).
move(3,((2,4),(2,3)),39).
move(3,((2,3),(3,3)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,2)),6).
move(4,((4,2),(4,1)),7).
move(4,((4,1),(4,2)),8).
move(4,((4,2),(4,3)),9).
move(4,((4,3),(4,4)),11).
move(4,((4,4),(5,4)),33).
move(4,((5,4),(5,3)),34).
move(4,((5,3),(6,3)),35).
move(4,((6,3),(5,3)),36).
move(4,((5,3),(6,3)),37).
move(4,((6,3),(7,3)),38).
move(4,((7,3),(8,3)),39).
move(4,((8,3),(9,3)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(5,2)),8).
move(5,((5,2),(5,3)),9).
move(5,((5,3),(5,4)),10).
move(5,((5,4),(5,5)),33).
move(5,((5,5),(5,4)),34).
move(5,((5,4),(5,3)),35).
move(5,((5,3),(5,2)),36).
move(5,((5,2),(6,2)),37).
move(5,((6,2),(7,2)),38).
move(5,((7,2),(7,3)),40).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,2)),7).
move(6,((9,2),(10,2)),8).
move(6,((10,2),(10,1)),9).
move(6,((10,1),(11,1)),10).
move(6,((11,1),(10,1)),11).
move(6,((10,1),(10,2)),12).
move(6,((10,2),(9,2)),13).
move(6,((9,2),(9,3)),14).
move(6,((9,3),(9,4)),15).
move(6,((9,4),(9,5)),33).
move(6,((9,5),(9,4)),34).
move(6,((9,4),(8,4)),35).
move(6,((8,4),(7,4)),36).
move(6,((7,4),(6,4)),37).
move(6,((6,4),(5,4)),38).
move(6,((5,4),(4,4)),39).
move(6,((4,4),(4,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(6,1)),7).
move(7,((6,1),(6,2)),8).
move(7,((6,2),(6,3)),9).
move(7,((6,3),(6,2)),10).
move(7,((6,2),(6,3)),11).
move(7,((6,3),(6,4)),12).
move(7,((6,4),(6,3)),33).
move(7,((6,3),(6,2)),35).
move(7,((6,2),(7,2)),36).
move(7,((7,2),(8,2)),37).
move(7,((8,2),(8,3)),38).
move(7,((8,3),(8,4)),39).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(7,4)),10).
move(8,((7,4),(6,4)),33).
move(8,((6,4),(5,4)),36).
move(8,((5,4),(4,4)),37).
move(8,((4,4),(3,4)),38).
move(8,((3,4),(2,4)),39).
move(8,((2,4),(2,3)),40).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(10,6)),3).
move(9,((10,6),(10,5)),4).
move(9,((10,5),(10,4)),6).
move(9,((10,4),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(9,((11,3),(11,2)),9).
move(9,((11,2),(10,2)),10).
move(9,((10,2),(10,3)),11).
move(9,((10,3),(10,4)),12).
move(9,((10,4),(10,3)),33).
move(9,((10,3),(9,3)),34).
move(9,((9,3),(8,3)),35).
move(9,((8,3),(8,2)),36).
move(9,((8,2),(8,3)),37).
move(9,((8,3),(8,4)),38).
move(9,((8,4),(7,4)),39).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,3)),5).
move(10,((8,3),(8,2)),6).
move(10,((8,2),(8,1)),7).
move(10,((8,1),(9,1)),8).
move(10,((9,1),(9,2)),9).
move(10,((9,2),(8,2)),10).
move(10,((8,2),(8,3)),11).
move(10,((8,3),(8,4)),12).
move(10,((8,4),(7,4)),33).
move(10,((7,4),(7,5)),34).
move(10,((7,5),(6,5)),35).
move(10,((6,5),(5,5)),36).
move(10,((5,5),(4,5)),37).
move(10,((4,5),(3,5)),38).
move(10,((3,5),(4,5)),39).
move(10,((4,5),(4,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(10,2)),7).
move(11,((10,2),(11,2)),8).
move(11,((11,2),(11,1)),9).
move(11,((11,1),(11,2)),10).
move(11,((11,2),(10,2)),11).
move(11,((10,2),(10,3)),12).
move(11,((10,3),(9,3)),32).
move(11,((9,3),(9,4)),33).
move(11,((9,4),(8,4)),34).
move(11,((8,4),(7,4)),35).
move(11,((7,4),(6,4)),36).
move(11,((6,4),(5,4)),37).
move(11,((5,4),(4,4)),38).
move(11,((4,4),(3,4)),39).
move(11,((3,4),(2,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.788s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.797s

Choices      : 499      (Domain: 499)
Conflicts    : 19       (Analyzed: 19)
Restarts     : 0       
Model-Level  : 376.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 19       (Deleted: 0)
  Binary     : 2        (Ratio:  10.53%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 19       (Average Length:   15.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 19       (Average:  6.47 Max:  13 Sum:    123)
  Executed   : 19       (Average:  6.47 Max:  13 Sum:    123 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378789   (Original: 352634)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141777  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

