%%%%%
%Standard
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(4,6)),7).
move(1,((4,6),(3,6)),8).
move(1,((3,6),(3,5)),9).
move(1,((3,5),(3,4)),10).
move(1,((3,4),(3,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(2,2)),4).
move(2,((2,2),(3,2)),5).
move(2,((3,2),(3,3)),7).
move(2,((3,3),(4,3)),9).
move(2,((4,3),(4,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(7,6)),4).
move(3,((7,6),(8,6)),5).
move(3,((8,6),(7,6)),7).
move(3,((7,6),(7,5)),8).
move(3,((7,5),(7,4)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(8,6)),3).
move(5,((8,6),(9,6)),4).
move(5,((9,6),(9,5)),6).
move(5,((9,5),(9,4)),7).
move(5,((9,4),(8,4)),8).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(8,4)),4).
move(6,((8,4),(7,4)),5).
move(6,((7,4),(7,3)),6).
move(6,((7,3),(7,2)),7).
move(6,((7,2),(8,2)),8).
move(6,((8,2),(8,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,2)),4).
move(8,((7,2),(6,2)),5).
move(8,((6,2),(5,2)),7).
move(8,((5,2),(5,3)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(8,5)),6).
move(9,((8,5),(8,4)),7).
move(9,((8,4),(8,5)),8).
move(9,((8,5),(9,5)),9).
move(9,((9,5),(9,4)),10).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(6,4)),7).
move(10,((6,4),(5,4)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(8,5)),4).
move(11,((8,5),(8,4)),5).
move(11,((8,4),(9,4)),6).
move(11,((9,4),(9,3)),7).
move(11,((9,3),(9,2)),8).
move(11,((9,2),(8,2)),9).
move(11,((8,2),(7,2)),10).
move(11,((7,2),(7,3)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.696s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.688s

Choices      : 1211    
Conflicts    : 69       (Analyzed: 69)
Restarts     : 0       
Model-Level  : 215.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 69       (Deleted: 0)
  Binary     : 7        (Ratio:  10.14%)
  Ternary    : 1        (Ratio:   1.45%)
  Conflict   : 69       (Average Length:   22.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 69       (Average: 14.43 Max: 118 Sum:    996)
  Executed   : 69       (Average: 14.43 Max: 118 Sum:    996 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165688   (Original: 153701)
  Choice     : 220     
Atoms        : 69035   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(2,4)),4).
move(1,((2,4),(3,4)),5).
move(1,((3,4),(3,3)),9).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(2,2)),4).
move(2,((2,2),(1,2)),5).
move(2,((1,2),(1,3)),6).
move(2,((1,3),(2,3)),7).
move(2,((2,3),(3,3)),8).
move(2,((3,3),(4,3)),9).
move(2,((4,3),(4,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(5,5)),3).
move(3,((5,5),(5,4)),5).
move(3,((5,4),(5,3)),6).
move(3,((5,3),(6,3)),7).
move(3,((6,3),(7,3)),8).
move(3,((7,3),(7,4)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(8,6)),3).
move(5,((8,6),(9,6)),4).
move(5,((9,6),(9,5)),6).
move(5,((9,5),(8,5)),7).
move(5,((8,5),(8,4)),8).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(9,2)),4).
move(6,((9,2),(9,1)),6).
move(6,((9,1),(9,2)),7).
move(6,((9,2),(8,2)),8).
move(6,((8,2),(8,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,2)),4).
move(8,((7,2),(6,2)),5).
move(8,((6,2),(5,2)),7).
move(8,((5,2),(5,3)),8).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,5)),3).
move(9,((10,5),(9,5)),4).
move(9,((9,5),(9,4)),6).
move(9,((9,4),(8,4)),7).
move(9,((8,4),(9,4)),8).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),6).
move(10,((6,5),(6,4)),7).
move(10,((6,4),(5,4)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(8,5)),4).
move(11,((8,5),(8,4)),5).
move(11,((8,4),(7,4)),6).
move(11,((7,4),(6,4)),9).
move(11,((6,4),(6,3)),10).
move(11,((6,3),(7,3)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.706s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.703s

Choices      : 1171    
Conflicts    : 66       (Analyzed: 66)
Restarts     : 0       
Model-Level  : 253.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 66       (Deleted: 0)
  Binary     : 8        (Ratio:  12.12%)
  Ternary    : 1        (Ratio:   1.52%)
  Conflict   : 66       (Average Length:   21.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 66       (Average: 13.91 Max: 118 Sum:    918)
  Executed   : 66       (Average: 13.91 Max: 118 Sum:    918 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165846   (Original: 153859)
  Choice     : 220     
  Heuristic  : 47      
Atoms        : 69146   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(2,4)),4).
move(1,((2,4),(3,4)),5).
move(1,((3,4),(3,3)),9).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(2,2)),4).
move(2,((2,2),(1,2)),5).
move(2,((1,2),(1,3)),6).
move(2,((1,3),(2,3)),7).
move(2,((2,3),(3,3)),8).
move(2,((3,3),(4,3)),9).
move(2,((4,3),(4,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(5,5)),3).
move(3,((5,5),(5,4)),5).
move(3,((5,4),(5,3)),6).
move(3,((5,3),(6,3)),7).
move(3,((6,3),(7,3)),8).
move(3,((7,3),(7,4)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(8,6)),3).
move(5,((8,6),(9,6)),4).
move(5,((9,6),(9,5)),6).
move(5,((9,5),(8,5)),7).
move(5,((8,5),(8,4)),8).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(9,2)),4).
move(6,((9,2),(9,1)),6).
move(6,((9,1),(9,2)),7).
move(6,((9,2),(8,2)),8).
move(6,((8,2),(8,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,2)),4).
move(8,((7,2),(6,2)),5).
move(8,((6,2),(5,2)),7).
move(8,((5,2),(5,3)),8).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,5)),3).
move(9,((10,5),(9,5)),4).
move(9,((9,5),(9,4)),6).
move(9,((9,4),(8,4)),7).
move(9,((8,4),(9,4)),8).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),6).
move(10,((6,5),(6,4)),7).
move(10,((6,4),(5,4)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(8,5)),4).
move(11,((8,5),(8,4)),5).
move(11,((8,4),(7,4)),6).
move(11,((7,4),(6,4)),9).
move(11,((6,4),(6,3)),10).
move(11,((6,3),(7,3)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.697s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.703s

Choices      : 1171    
Conflicts    : 66       (Analyzed: 66)
Restarts     : 0       
Model-Level  : 253.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 66       (Deleted: 0)
  Binary     : 8        (Ratio:  12.12%)
  Ternary    : 1        (Ratio:   1.52%)
  Conflict   : 66       (Average Length:   21.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 66       (Average: 13.91 Max: 118 Sum:    918)
  Executed   : 66       (Average: 13.91 Max: 118 Sum:    918 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165810   (Original: 153823)
  Choice     : 220     
Atoms        : 69157   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),4).
move(1,((1,2),(1,1)),5).
move(1,((1,1),(2,1)),6).
move(1,((2,1),(3,1)),7).
move(1,((3,1),(4,1)),8).
move(1,((4,1),(4,2)),9).
move(1,((4,2),(4,3)),10).
move(1,((4,3),(3,3)),11).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(5,6)),6).
move(2,((5,6),(5,5)),7).
move(2,((5,5),(4,5)),8).
move(2,((4,5),(4,4)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(4,4)),3).
move(3,((4,4),(4,3)),4).
move(3,((4,3),(4,4)),6).
move(3,((4,4),(5,4)),7).
move(3,((5,4),(6,4)),8).
move(3,((6,4),(7,4)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(6,5)),3).
move(4,((6,5),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(7,3)),6).
move(4,((7,3),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(8,6)),4).
move(5,((8,6),(9,6)),5).
move(5,((9,6),(9,5)),6).
move(5,((9,5),(9,4)),7).
move(5,((9,4),(8,4)),8).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(8,5)),3).
move(6,((8,5),(8,4)),4).
move(6,((8,4),(8,3)),5).
move(6,((8,3),(8,2)),7).
move(6,((8,2),(8,3)),9).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(4,4)),5).
move(8,((4,4),(5,4)),6).
move(8,((5,4),(5,3)),7).
move(9,((10,6),(11,6)),1).
move(9,((11,6),(11,5)),2).
move(9,((11,5),(10,5)),4).
move(9,((10,5),(9,5)),5).
move(9,((9,5),(8,5)),6).
move(9,((8,5),(8,4)),7).
move(9,((8,4),(8,5)),8).
move(9,((8,5),(9,5)),9).
move(9,((9,5),(9,4)),10).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),4).
move(10,((6,5),(5,5)),5).
move(10,((5,5),(4,5)),6).
move(10,((4,5),(4,4)),7).
move(10,((4,4),(5,4)),8).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(10,4)),3).
move(11,((10,4),(9,4)),4).
move(11,((9,4),(8,4)),5).
move(11,((8,4),(9,4)),6).
move(11,((9,4),(9,3)),7).
move(11,((9,3),(9,2)),8).
move(11,((9,2),(8,2)),9).
move(11,((8,2),(7,2)),10).
move(11,((7,2),(7,3)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.708s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.703s

Choices      : 1308    
Conflicts    : 73       (Analyzed: 73)
Restarts     : 0       
Model-Level  : 333.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 73       (Deleted: 0)
  Binary     : 13       (Ratio:  17.81%)
  Ternary    : 5        (Ratio:   6.85%)
  Conflict   : 73       (Average Length:   18.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 73       (Average: 13.36 Max: 108 Sum:    975)
  Executed   : 73       (Average: 13.36 Max: 108 Sum:    975 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 166605   (Original: 154640)
  Choice     : 220     
  Heuristic  : 736      (Original: 758)
Atoms        : 69216   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(2,3)),4).
move(1,((2,3),(3,3)),5).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(1,4)),4).
move(2,((1,4),(2,4)),5).
move(2,((2,4),(3,4)),6).
move(2,((3,4),(4,4)),7).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(5,5)),3).
move(3,((5,5),(5,4)),5).
move(3,((5,4),(6,4)),7).
move(3,((6,4),(7,4)),8).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),4).
move(4,((5,3),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(4,((7,3),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(8,5)),4).
move(5,((8,5),(8,4)),5).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),4).
move(6,((7,5),(6,5)),5).
move(6,((6,5),(6,4)),6).
move(6,((6,4),(7,4)),7).
move(6,((7,4),(7,3)),8).
move(6,((7,3),(8,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(5,4)),4).
move(8,((5,4),(5,3)),5).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(9,4)),3).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),5).
move(10,((5,5),(5,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(7,5)),5).
move(11,((7,5),(7,4)),6).
move(11,((7,4),(7,3)),7).
move(11,((7,3),(6,3)),8).
move(11,((6,3),(7,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.703s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.703s

Choices      : 635     
Conflicts    : 41       (Analyzed: 41)
Restarts     : 0       
Model-Level  : 259.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 41       (Deleted: 0)
  Binary     : 6        (Ratio:  14.63%)
  Ternary    : 2        (Ratio:   4.88%)
  Conflict   : 41       (Average Length:   18.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 41       (Average:  9.17 Max:  38 Sum:    376)
  Executed   : 41       (Average:  9.17 Max:  38 Sum:    376 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 166295   (Original: 154314)
  Choice     : 220     
  Heuristic  : 496      (Original: 502)
Atoms        : 69146   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),3).
move(1,((2,5),(2,4)),4).
move(1,((2,4),(2,3)),5).
move(1,((2,3),(3,3)),6).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(2,((4,4),(3,4)),5).
move(2,((3,4),(4,4)),6).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(4,5)),2).
move(3,((4,5),(5,5)),3).
move(3,((5,5),(6,5)),4).
move(3,((6,5),(5,5)),5).
move(3,((5,5),(5,4)),6).
move(3,((5,4),(6,4)),7).
move(3,((6,4),(7,4)),8).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(5,3)),4).
move(4,((5,3),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(4,((7,3),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(8,4)),6).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(9,2)),4).
move(6,((9,2),(9,3)),5).
move(6,((9,3),(9,2)),6).
move(6,((9,2),(8,2)),7).
move(6,((8,2),(8,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(4,5)),4).
move(8,((4,5),(4,4)),5).
move(8,((4,4),(4,3)),6).
move(8,((4,3),(5,3)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),4).
move(9,((10,4),(9,4)),8).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(5,4)),5).
move(10,((5,4),(5,3)),6).
move(10,((5,3),(5,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),4).
move(11,((8,6),(7,6)),5).
move(11,((7,6),(7,5)),6).
move(11,((7,5),(7,4)),7).
move(11,((7,4),(7,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.772s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.750s

Choices      : 835     
Conflicts    : 48       (Analyzed: 48)
Restarts     : 0       
Model-Level  : 270.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 48       (Deleted: 0)
  Binary     : 9        (Ratio:  18.75%)
  Ternary    : 3        (Ratio:   6.25%)
  Conflict   : 48       (Average Length:   17.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 48       (Average: 11.77 Max:  65 Sum:    565)
  Executed   : 48       (Average: 11.77 Max:  65 Sum:    565 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176458   (Original: 164603)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69146   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(2,1)),9).
move(1,((2,1),(1,1)),10).
move(1,((1,1),(1,2)),11).
move(1,((1,2),(2,2)),12).
move(1,((2,2),(2,3)),13).
move(1,((2,3),(2,4)),14).
move(1,((2,4),(2,3)),17).
move(1,((2,3),(2,2)),18).
move(1,((2,2),(2,3)),19).
move(1,((2,3),(3,3)),20).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(3,2)),7).
move(2,((3,2),(3,1)),8).
move(2,((3,1),(3,2)),9).
move(2,((3,2),(2,2)),10).
move(2,((2,2),(2,3)),11).
move(2,((2,3),(2,4)),12).
move(2,((2,4),(3,4)),14).
move(2,((3,4),(3,3)),15).
move(2,((3,3),(2,3)),16).
move(2,((2,3),(3,3)),17).
move(2,((3,3),(3,4)),19).
move(2,((3,4),(4,4)),20).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),5).
move(3,((3,3),(3,2)),6).
move(3,((3,2),(2,2)),7).
move(3,((2,2),(1,2)),8).
move(3,((1,2),(2,2)),11).
move(3,((2,2),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(4,3)),15).
move(3,((4,3),(5,3)),17).
move(3,((5,3),(6,3)),18).
move(3,((6,3),(6,4)),19).
move(3,((6,4),(7,4)),20).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,2)),6).
move(4,((4,2),(4,1)),7).
move(4,((4,1),(4,2)),8).
move(4,((4,2),(4,3)),9).
move(4,((4,3),(4,4)),10).
move(4,((4,4),(5,4)),15).
move(4,((5,4),(6,4)),16).
move(4,((6,4),(7,4)),17).
move(4,((7,4),(8,4)),18).
move(4,((8,4),(9,4)),19).
move(4,((9,4),(9,3)),20).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(5,2)),8).
move(5,((5,2),(5,3)),9).
move(5,((5,3),(5,4)),10).
move(5,((5,4),(5,3)),15).
move(5,((5,3),(6,3)),16).
move(5,((6,3),(6,4)),17).
move(5,((6,4),(7,4)),18).
move(5,((7,4),(8,4)),20).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,2)),7).
move(6,((9,2),(10,2)),8).
move(6,((10,2),(11,2)),9).
move(6,((11,2),(11,1)),10).
move(6,((11,1),(10,1)),11).
move(6,((10,1),(10,2)),12).
move(6,((10,2),(9,2)),13).
move(6,((9,2),(9,3)),14).
move(6,((9,3),(9,4)),15).
move(6,((9,4),(8,4)),17).
move(6,((8,4),(8,5)),18).
move(6,((8,5),(8,4)),19).
move(6,((8,4),(8,3)),20).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(6,1)),7).
move(7,((6,1),(6,2)),8).
move(7,((6,2),(6,3)),9).
move(7,((6,3),(6,4)),10).
move(7,((6,4),(7,4)),16).
move(7,((7,4),(7,3)),17).
move(7,((7,3),(8,3)),18).
move(7,((8,3),(9,3)),19).
move(7,((9,3),(10,3)),20).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(7,4)),10).
move(8,((7,4),(7,3)),16).
move(8,((7,3),(6,3)),17).
move(8,((6,3),(6,2)),18).
move(8,((6,2),(5,2)),19).
move(8,((5,2),(5,3)),20).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(10,6)),3).
move(9,((10,6),(10,5)),4).
move(9,((10,5),(10,4)),6).
move(9,((10,4),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(9,((11,3),(10,3)),9).
move(9,((10,3),(10,4)),11).
move(9,((10,4),(10,5)),17).
move(9,((10,5),(10,4)),18).
move(9,((10,4),(9,4)),20).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,3)),5).
move(10,((8,3),(8,2)),6).
move(10,((8,2),(8,1)),7).
move(10,((8,1),(9,1)),8).
move(10,((9,1),(9,2)),9).
move(10,((9,2),(8,2)),10).
move(10,((8,2),(8,3)),11).
move(10,((8,3),(8,4)),12).
move(10,((8,4),(8,3)),14).
move(10,((8,3),(8,4)),15).
move(10,((8,4),(8,5)),16).
move(10,((8,5),(7,5)),17).
move(10,((7,5),(6,5)),18).
move(10,((6,5),(5,5)),19).
move(10,((5,5),(5,4)),20).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(10,2)),7).
move(11,((10,2),(10,1)),8).
move(11,((10,1),(10,2)),10).
move(11,((10,2),(10,3)),11).
move(11,((10,3),(9,3)),16).
move(11,((9,3),(8,3)),17).
move(11,((8,3),(8,2)),18).
move(11,((8,2),(7,2)),19).
move(11,((7,2),(7,3)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.693s (Solving: 0.01s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 0.688s

Choices      : 246      (Domain: 246)
Conflicts    : 16       (Analyzed: 16)
Restarts     : 0       
Model-Level  : 173.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 16       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 16       (Average Length:   19.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 16       (Average:  4.56 Max:  15 Sum:     73)
  Executed   : 16       (Average:  4.56 Max:  15 Sum:     73 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176458   (Original: 164603)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69146   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

