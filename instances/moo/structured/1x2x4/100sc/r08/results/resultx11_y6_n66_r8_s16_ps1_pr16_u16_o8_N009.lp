%%%%%
%Standard
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(7,6)),6).
move(2,((7,6),(8,6)),7).
move(2,((8,6),(9,6)),8).
move(2,((9,6),(10,6)),9).
move(2,((10,6),(10,5)),10).
move(2,((10,5),(10,4)),11).
move(2,((10,4),(10,3)),12).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(8,6)),6).
move(3,((8,6),(9,6)),7).
move(3,((9,6),(9,5)),8).
move(3,((9,5),(9,4)),9).
move(3,((9,4),(9,3)),10).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(8,5)),6).
move(4,((8,5),(9,5)),9).
move(4,((9,5),(9,4)),10).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(4,3)),7).
move(5,((4,3),(3,3)),8).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(6,4)),3).
move(6,((6,4),(7,4)),4).
move(6,((7,4),(7,3)),5).
move(6,((7,3),(8,3)),6).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(5,4)),3).
move(7,((5,4),(5,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(6,3)),4).
move(8,((6,3),(5,3)),5).
move(8,((5,3),(4,3)),6).
move(8,((4,3),(3,3)),7).
move(8,((3,3),(2,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.266s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.266s

Choices      : 529     
Conflicts    : 19       (Analyzed: 19)
Restarts     : 0       
Model-Level  : 318.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 19       (Deleted: 0)
  Binary     : 5        (Ratio:  26.32%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 19       (Average Length:   26.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 19       (Average: 11.11 Max:  51 Sum:    211)
  Executed   : 19       (Average: 11.11 Max:  51 Sum:    211 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261077   (Original: 241134)
  Choice     : 320     
Atoms        : 106367  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(7,6)),6).
move(2,((7,6),(8,6)),7).
move(2,((8,6),(9,6)),8).
move(2,((9,6),(10,6)),9).
move(2,((10,6),(10,5)),10).
move(2,((10,5),(10,4)),11).
move(2,((10,4),(10,3)),12).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(8,6)),6).
move(3,((8,6),(9,6)),7).
move(3,((9,6),(9,5)),8).
move(3,((9,5),(9,4)),9).
move(3,((9,4),(9,3)),10).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(8,5)),6).
move(4,((8,5),(9,5)),9).
move(4,((9,5),(9,4)),10).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(4,3)),7).
move(5,((4,3),(3,3)),8).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(6,4)),3).
move(6,((6,4),(7,4)),4).
move(6,((7,4),(7,3)),5).
move(6,((7,3),(8,3)),6).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(5,4)),3).
move(7,((5,4),(5,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(6,3)),4).
move(8,((6,3),(5,3)),5).
move(8,((5,3),(4,3)),6).
move(8,((4,3),(3,3)),7).
move(8,((3,3),(2,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.288s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.281s

Choices      : 599      (Domain: 70)
Conflicts    : 19       (Analyzed: 19)
Restarts     : 0       
Model-Level  : 387.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 19       (Deleted: 0)
  Binary     : 5        (Ratio:  26.32%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 19       (Average Length:   26.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 19       (Average: 11.16 Max:  51 Sum:    212)
  Executed   : 19       (Average: 11.16 Max:  51 Sum:    212 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261247   (Original: 241304)
  Choice     : 320     
  Heuristic  : 74      
Atoms        : 106463  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDistance.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(3,5)),3).
move(2,((3,5),(4,5)),4).
move(2,((4,5),(5,5)),5).
move(2,((5,5),(6,5)),6).
move(2,((6,5),(7,5)),7).
move(2,((7,5),(8,5)),8).
move(2,((8,5),(9,5)),9).
move(2,((9,5),(10,5)),10).
move(2,((10,5),(10,4)),11).
move(2,((10,4),(10,3)),12).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(4,5)),3).
move(3,((4,5),(4,4)),4).
move(3,((4,4),(5,4)),5).
move(3,((5,4),(6,4)),6).
move(3,((6,4),(6,3)),7).
move(3,((6,3),(7,3)),8).
move(3,((7,3),(7,2)),9).
move(3,((7,2),(8,2)),10).
move(3,((8,2),(9,2)),11).
move(3,((9,2),(9,3)),12).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(4,5)),2).
move(4,((4,5),(5,5)),3).
move(4,((5,5),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(8,5)),6).
move(4,((8,5),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(3,5)),2).
move(5,((3,5),(3,4)),3).
move(5,((3,4),(3,3)),4).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(6,5)),2).
move(6,((6,5),(7,5)),3).
move(6,((7,5),(7,4)),4).
move(6,((7,4),(7,3)),5).
move(6,((7,3),(8,3)),6).
move(7,((6,6),(5,6)),1).
move(7,((5,6),(5,5)),2).
move(7,((5,5),(5,4)),3).
move(7,((5,4),(5,3)),4).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(3,5)),5).
move(8,((3,5),(3,4)),6).
move(8,((3,4),(2,4)),7).
move(8,((2,4),(2,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.269s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.266s

Choices      : 827      (Domain: 827)
Conflicts    : 7        (Analyzed: 7)
Restarts     : 0       
Model-Level  : 282.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 7        (Deleted: 0)
  Binary     : 4        (Ratio:  57.14%)
  Ternary    : 2        (Ratio:  28.57%)
  Conflict   : 7        (Average Length:    2.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 7        (Average: 77.86 Max: 263 Sum:    545)
  Executed   : 7        (Average: 77.86 Max: 263 Sum:    545 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279637   (Original: 259766)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106471  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((8,6),(7,6)),3).
move(1,((7,6),(7,5)),4).
move(1,((7,5),(8,5)),5).
move(1,((8,5),(8,4)),6).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(2,2)),8).
move(2,((2,2),(2,1)),9).
move(2,((2,1),(3,1)),10).
move(2,((3,1),(4,1)),11).
move(2,((4,1),(5,1)),12).
move(2,((5,1),(6,1)),13).
move(2,((6,1),(7,1)),14).
move(2,((7,1),(8,1)),15).
move(2,((8,1),(9,1)),33).
move(2,((9,1),(10,1)),34).
move(2,((10,1),(11,1)),35).
move(2,((11,1),(11,2)),36).
move(2,((11,2),(11,3)),37).
move(2,((11,3),(10,3)),40).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(8,6)),6).
move(3,((8,6),(9,6)),7).
move(3,((9,6),(9,5)),8).
move(3,((9,5),(9,4)),9).
move(3,((9,4),(9,3)),10).
move(3,((9,3),(10,3)),11).
move(3,((10,3),(9,3)),40).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(8,5)),6).
move(4,((8,5),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(10,4)),9).
move(4,((10,4),(9,4)),10).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(4,3)),3).
move(5,((4,3),(4,2)),4).
move(5,((4,2),(4,3)),11).
move(5,((4,3),(3,3)),40).
move(6,((5,6),(6,6)),1).
move(6,((6,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(7,4)),4).
move(6,((7,4),(8,4)),5).
move(6,((8,4),(8,3)),6).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(5,4)),3).
move(7,((5,4),(5,3)),4).
move(7,((5,3),(5,2)),5).
move(7,((5,2),(6,2)),6).
move(7,((6,2),(5,2)),7).
move(7,((5,2),(5,3)),10).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(6,3)),8).
move(8,((6,3),(5,3)),9).
move(8,((5,3),(4,3)),10).
move(8,((4,3),(3,3)),11).
move(8,((3,3),(2,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.288s (Solving: 0.08s 1st Model: 0.08s Unsat: 0.00s)
CPU Time     : 1.297s

Choices      : 1432     (Domain: 185)
Conflicts    : 65       (Analyzed: 65)
Restarts     : 0       
Model-Level  : 796.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 65       (Deleted: 0)
  Binary     : 21       (Ratio:  32.31%)
  Ternary    : 3        (Ratio:   4.62%)
  Conflict   : 65       (Average Length:   53.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 65       (Average:  9.78 Max: 218 Sum:    636)
  Executed   : 65       (Average:  9.78 Max: 218 Sum:    636 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279637   (Original: 259766)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106471  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(8,6)),7).
move(1,((8,6),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(2,4)),3).
move(2,((2,4),(3,4)),4).
move(2,((3,4),(3,3)),5).
move(2,((3,3),(4,3)),6).
move(2,((4,3),(5,3)),7).
move(2,((5,3),(6,3)),8).
move(2,((6,3),(7,3)),9).
move(2,((7,3),(8,3)),10).
move(2,((8,3),(9,3)),11).
move(2,((9,3),(10,3)),12).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(8,6)),6).
move(3,((8,6),(9,6)),7).
move(3,((9,6),(9,5)),8).
move(3,((9,5),(9,4)),9).
move(3,((9,4),(9,3)),40).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(8,5)),6).
move(4,((8,5),(8,4)),7).
move(4,((8,4),(9,4)),8).
move(4,((9,4),(10,4)),9).
move(4,((10,4),(9,4)),40).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(3,5)),2).
move(5,((3,5),(3,4)),3).
move(5,((3,4),(3,5)),4).
move(5,((3,5),(3,6)),5).
move(5,((3,6),(3,5)),8).
move(5,((3,5),(3,4)),9).
move(5,((3,4),(3,3)),40).
move(6,((5,6),(6,6)),1).
move(6,((6,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(8,5)),4).
move(6,((8,5),(8,4)),5).
move(6,((8,4),(8,3)),6).
move(6,((8,3),(8,2)),8).
move(6,((8,2),(8,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(5,4)),3).
move(7,((5,4),(4,4)),4).
move(7,((4,4),(4,3)),7).
move(7,((4,3),(5,3)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(3,4)),6).
move(8,((3,4),(3,3)),7).
move(8,((3,3),(2,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.242s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.250s

Choices      : 408      (Domain: 35)
Conflicts    : 8        (Analyzed: 8)
Restarts     : 0       
Model-Level  : 348.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 8        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 8        (Average Length:   45.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 8        (Average:  7.50 Max:  31 Sum:     60)
  Executed   : 8        (Average:  7.50 Max:  31 Sum:     60 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 262280   (Original: 242353)
  Choice     : 320     
  Heuristic  : 1045     (Original: 1061)
Atoms        : 106525  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(7,6)),6).
move(2,((7,6),(8,6)),7).
move(2,((8,6),(9,6)),8).
move(2,((9,6),(10,6)),9).
move(2,((10,6),(10,5)),11).
move(2,((10,5),(10,4)),12).
move(2,((10,4),(10,3)),40).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(8,6)),6).
move(3,((8,6),(9,6)),7).
move(3,((9,6),(9,5)),8).
move(3,((9,5),(9,4)),9).
move(3,((9,4),(10,4)),10).
move(3,((10,4),(10,3)),11).
move(3,((10,3),(9,3)),40).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(3,3)),3).
move(4,((3,3),(4,3)),4).
move(4,((4,3),(5,3)),5).
move(4,((5,3),(6,3)),6).
move(4,((6,3),(7,3)),7).
move(4,((7,3),(8,3)),8).
move(4,((8,3),(9,3)),9).
move(4,((9,3),(9,4)),40).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(3,4)),4).
move(5,((3,4),(2,4)),5).
move(5,((2,4),(2,3)),6).
move(5,((2,3),(3,3)),40).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(5,2)),4).
move(6,((5,2),(6,2)),5).
move(6,((6,2),(7,2)),6).
move(6,((7,2),(8,2)),7).
move(6,((8,2),(8,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(5,4)),3).
move(7,((5,4),(4,4)),4).
move(7,((4,4),(4,3)),5).
move(7,((4,3),(5,3)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(2,5)),6).
move(8,((2,5),(1,5)),7).
move(8,((1,5),(1,4)),8).
move(8,((1,4),(1,3)),9).
move(8,((1,3),(2,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.226s (Solving: 0.04s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.234s

Choices      : 1446     (Domain: 836)
Conflicts    : 22       (Analyzed: 22)
Restarts     : 0       
Model-Level  : 1246.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 22       (Deleted: 0)
  Binary     : 4        (Ratio:  18.18%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 22       (Average Length:   22.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 22       (Average:  9.09 Max:  37 Sum:    200)
  Executed   : 22       (Average:  9.09 Max:  37 Sum:    200 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 262055   (Original: 242119)
  Choice     : 320     
  Heuristic  : 882      (Original: 889)
Atoms        : 106463  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(7,6)),6).
move(2,((7,6),(8,6)),7).
move(2,((8,6),(9,6)),8).
move(2,((9,6),(10,6)),9).
move(2,((10,6),(10,5)),10).
move(2,((10,5),(10,4)),11).
move(2,((10,4),(10,3)),12).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(8,6)),6).
move(3,((8,6),(9,6)),7).
move(3,((9,6),(9,5)),8).
move(3,((9,5),(9,4)),9).
move(3,((9,4),(9,3)),10).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(8,5)),6).
move(4,((8,5),(9,5)),9).
move(4,((9,5),(9,4)),10).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(4,3)),7).
move(5,((4,3),(3,3)),8).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(6,4)),3).
move(6,((6,4),(7,4)),4).
move(6,((7,4),(7,3)),5).
move(6,((7,3),(8,3)),6).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(5,4)),3).
move(7,((5,4),(5,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(6,3)),4).
move(8,((6,3),(5,3)),5).
move(8,((5,3),(4,3)),6).
move(8,((4,3),(3,3)),7).
move(8,((3,3),(2,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.310s (Solving: 0.04s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.312s

Choices      : 528      (Domain: 229)
Conflicts    : 19       (Analyzed: 19)
Restarts     : 0       
Model-Level  : 319.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 19       (Deleted: 0)
  Binary     : 5        (Ratio:  26.32%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 19       (Average Length:   26.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 19       (Average: 11.00 Max:  51 Sum:    209)
  Executed   : 19       (Average: 11.00 Max:  51 Sum:    209 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279647   (Original: 259768)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106480  
Disjunctions : 0        (Original: 1)
Bodies       : 183368   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93247    (Atom=Atom: 342 Body=Body: 351 Other: 92554)
Tight        : Yes
Variables    : 182697   (Eliminated:    0 Frozen: 92083)
Constraints  : 500665   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((8,6),(8,5)),5).
move(1,((8,5),(8,4)),7).
move(1,((8,4),(8,5)),17).
move(1,((8,5),(8,4)),18).
move(1,((8,4),(8,5)),39).
move(1,((8,5),(8,4)),40).
move(2,((1,6),(1,5)),3).
move(2,((1,5),(1,4)),4).
move(2,((1,4),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(1,3)),7).
move(2,((1,3),(2,3)),9).
move(2,((2,3),(2,4)),10).
move(2,((2,4),(3,4)),12).
move(2,((3,4),(2,4)),13).
move(2,((2,4),(2,5)),14).
move(2,((2,5),(2,4)),15).
move(2,((2,4),(2,3)),17).
move(2,((2,3),(2,4)),18).
move(2,((2,4),(2,5)),20).
move(2,((2,5),(2,4)),21).
move(2,((2,4),(2,3)),23).
move(2,((2,3),(2,4)),24).
move(2,((2,4),(2,3)),29).
move(2,((2,3),(2,2)),30).
move(2,((2,2),(3,2)),31).
move(2,((3,2),(4,2)),32).
move(2,((4,2),(5,2)),33).
move(2,((5,2),(6,2)),34).
move(2,((6,2),(7,2)),35).
move(2,((7,2),(7,3)),36).
move(2,((7,3),(8,3)),37).
move(2,((8,3),(9,3)),38).
move(2,((9,3),(10,3)),39).
move(3,((2,6),(2,5)),4).
move(3,((2,5),(2,4)),6).
move(3,((2,4),(2,3)),7).
move(3,((2,3),(3,3)),8).
move(3,((3,3),(3,4)),9).
move(3,((3,4),(3,3)),10).
move(3,((3,3),(2,3)),11).
move(3,((2,3),(2,4)),12).
move(3,((2,4),(2,3)),13).
move(3,((2,3),(3,3)),14).
move(3,((3,3),(2,3)),15).
move(3,((2,3),(3,3)),17).
move(3,((3,3),(3,2)),18).
move(3,((3,2),(4,2)),19).
move(3,((4,2),(5,2)),20).
move(3,((5,2),(6,2)),21).
move(3,((6,2),(7,2)),22).
move(3,((7,2),(7,3)),23).
move(3,((7,3),(6,3)),24).
move(3,((6,3),(6,4)),25).
move(3,((6,4),(5,4)),28).
move(3,((5,4),(4,4)),29).
move(3,((4,4),(3,4)),30).
move(3,((3,4),(3,5)),31).
move(3,((3,5),(4,5)),32).
move(3,((4,5),(5,5)),33).
move(3,((5,5),(6,5)),34).
move(3,((6,5),(7,5)),35).
move(3,((7,5),(8,5)),36).
move(3,((8,5),(9,5)),37).
move(3,((9,5),(9,4)),38).
move(3,((9,4),(9,3)),40).
move(4,((3,6),(3,5)),3).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(4,4)),5).
move(4,((4,4),(3,4)),6).
move(4,((3,4),(4,4)),7).
move(4,((4,4),(5,4)),8).
move(4,((5,4),(6,4)),9).
move(4,((6,4),(5,4)),10).
move(4,((5,4),(5,5)),12).
move(4,((5,5),(6,5)),13).
move(4,((6,5),(5,5)),14).
move(4,((5,5),(4,5)),15).
move(4,((4,5),(4,4)),16).
move(4,((4,4),(4,5)),17).
move(4,((4,5),(4,4)),19).
move(4,((4,4),(3,4)),20).
move(4,((3,4),(4,4)),21).
move(4,((4,4),(4,5)),22).
move(4,((4,5),(3,5)),24).
move(4,((3,5),(3,4)),25).
move(4,((3,4),(3,5)),26).
move(4,((3,5),(4,5)),30).
move(4,((4,5),(4,4)),31).
move(4,((4,4),(3,4)),32).
move(4,((3,4),(4,4)),33).
move(4,((4,4),(5,4)),34).
move(4,((5,4),(6,4)),35).
move(4,((6,4),(7,4)),36).
move(4,((7,4),(7,5)),37).
move(4,((7,5),(8,5)),38).
move(4,((8,5),(9,5)),39).
move(4,((9,5),(9,4)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(3,5)),4).
move(5,((3,5),(3,4)),5).
move(5,((3,4),(3,3)),6).
move(5,((3,3),(3,4)),7).
move(5,((3,4),(4,4)),8).
move(5,((4,4),(3,4)),10).
move(5,((3,4),(4,4)),11).
move(5,((4,4),(3,4)),13).
move(5,((3,4),(4,4)),14).
move(5,((4,4),(4,3)),16).
move(5,((4,3),(4,4)),17).
move(5,((4,4),(4,3)),18).
move(5,((4,3),(3,3)),20).
move(5,((3,3),(4,3)),21).
move(5,((4,3),(4,4)),22).
move(5,((4,4),(3,4)),23).
move(5,((3,4),(4,4)),24).
move(5,((4,4),(4,3)),25).
move(5,((4,3),(4,4)),26).
move(5,((4,4),(3,4)),29).
move(5,((3,4),(3,3)),30).
move(5,((3,3),(4,3)),31).
move(5,((4,3),(3,3)),32).
move(5,((3,3),(3,4)),33).
move(5,((3,4),(3,3)),34).
move(5,((3,3),(4,3)),35).
move(5,((4,3),(4,4)),36).
move(5,((4,4),(3,4)),37).
move(5,((3,4),(3,3)),38).
move(5,((3,3),(3,4)),39).
move(5,((3,4),(3,3)),40).
move(6,((5,6),(6,6)),3).
move(6,((6,6),(7,6)),4).
move(6,((7,6),(7,5)),5).
move(6,((7,5),(7,4)),6).
move(6,((7,4),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(6,((8,3),(7,3)),9).
move(6,((7,3),(6,3)),10).
move(6,((6,3),(5,3)),11).
move(6,((5,3),(5,4)),15).
move(6,((5,4),(5,3)),16).
move(6,((5,3),(5,4)),17).
move(6,((5,4),(5,3)),19).
move(6,((5,3),(5,4)),20).
move(6,((5,4),(5,5)),22).
move(6,((5,5),(5,4)),23).
move(6,((5,4),(5,3)),25).
move(6,((5,3),(5,4)),26).
move(6,((5,4),(5,3)),27).
move(6,((5,3),(6,3)),28).
move(6,((6,3),(5,3)),29).
move(6,((5,3),(5,4)),30).
move(6,((5,4),(5,3)),31).
move(6,((5,3),(5,4)),32).
move(6,((5,4),(5,3)),33).
move(6,((5,3),(5,4)),35).
move(6,((5,4),(6,4)),37).
move(6,((6,4),(7,4)),38).
move(6,((7,4),(7,3)),39).
move(6,((7,3),(8,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),5).
move(7,((6,4),(6,3)),6).
move(7,((6,3),(6,4)),7).
move(7,((6,4),(6,3)),9).
move(7,((6,3),(6,4)),10).
move(7,((6,4),(5,4)),12).
move(7,((5,4),(6,4)),14).
move(7,((6,4),(6,3)),15).
move(7,((6,3),(6,4)),16).
move(7,((6,4),(6,3)),18).
move(7,((6,3),(6,4)),19).
move(7,((6,4),(6,3)),22).
move(7,((6,3),(6,4)),24).
move(7,((6,4),(6,5)),25).
move(7,((6,5),(5,5)),26).
move(7,((5,5),(5,4)),27).
move(7,((5,4),(5,5)),28).
move(7,((5,5),(5,4)),29).
move(7,((5,4),(6,4)),30).
move(7,((6,4),(6,5)),31).
move(7,((6,5),(6,4)),32).
move(7,((6,4),(5,4)),33).
move(7,((5,4),(6,4)),34).
move(7,((6,4),(6,5)),35).
move(7,((6,5),(5,5)),37).
move(7,((5,5),(5,4)),39).
move(7,((5,4),(5,3)),40).
move(8,((7,6),(7,5)),4).
move(8,((7,5),(7,4)),5).
move(8,((7,4),(7,3)),6).
move(8,((7,3),(6,3)),7).
move(8,((6,3),(7,3)),8).
move(8,((7,3),(7,4)),9).
move(8,((7,4),(7,3)),12).
move(8,((7,3),(7,4)),13).
move(8,((7,4),(7,5)),14).
move(8,((7,5),(7,4)),16).
move(8,((7,4),(7,3)),18).
move(8,((7,3),(7,4)),19).
move(8,((7,4),(7,3)),20).
move(8,((7,3),(6,3)),21).
move(8,((6,3),(7,3)),22).
move(8,((7,3),(7,4)),23).
move(8,((7,4),(7,5)),26).
move(8,((7,5),(7,4)),27).
move(8,((7,4),(7,3)),29).
move(8,((7,3),(7,4)),30).
move(8,((7,4),(7,5)),32).
move(8,((7,5),(7,4)),33).
move(8,((7,4),(7,3)),35).
move(8,((7,3),(6,3)),36).
move(8,((6,3),(5,3)),37).
move(8,((5,3),(4,3)),38).
move(8,((4,3),(3,3)),39).
move(8,((3,3),(2,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.305s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.297s

Choices      : 457      (Domain: 457)
Conflicts    : 21       (Analyzed: 21)
Restarts     : 0       
Model-Level  : 272.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 21       (Deleted: 0)
  Binary     : 5        (Ratio:  23.81%)
  Ternary    : 4        (Ratio:  19.05%)
  Conflict   : 21       (Average Length:   16.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 21       (Average:  8.81 Max:  81 Sum:    185)
  Executed   : 21       (Average:  8.81 Max:  81 Sum:    185 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279629   (Original: 259758)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106463  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hStrange.lp
%%%%%
move(1,((8,6),(7,6)),2).
move(1,((7,6),(7,5)),5).
move(1,((7,5),(7,4)),6).
move(1,((7,4),(8,4)),7).
move(1,((8,4),(8,3)),8).
move(1,((8,3),(8,2)),9).
move(1,((8,2),(9,2)),10).
move(1,((9,2),(10,2)),11).
move(1,((10,2),(10,1)),12).
move(1,((10,1),(11,1)),13).
move(1,((11,1),(10,1)),14).
move(1,((10,1),(10,2)),15).
move(1,((10,2),(9,2)),16).
move(1,((9,2),(8,2)),17).
move(1,((8,2),(8,3)),18).
move(1,((8,3),(8,4)),19).
move(1,((8,4),(7,4)),32).
move(1,((7,4),(8,4)),33).
move(1,((8,4),(8,5)),34).
move(1,((8,5),(9,5)),35).
move(1,((9,5),(8,5)),36).
move(1,((8,5),(8,4)),37).
move(1,((8,4),(8,5)),38).
move(1,((8,5),(8,4)),40).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(2,2)),8).
move(2,((2,2),(1,2)),9).
move(2,((1,2),(1,1)),10).
move(2,((1,1),(1,2)),11).
move(2,((1,2),(2,2)),12).
move(2,((2,2),(2,3)),13).
move(2,((2,3),(2,4)),14).
move(2,((2,4),(3,4)),32).
move(2,((3,4),(3,3)),33).
move(2,((3,3),(4,3)),34).
move(2,((4,3),(5,3)),35).
move(2,((5,3),(6,3)),36).
move(2,((6,3),(7,3)),37).
move(2,((7,3),(8,3)),38).
move(2,((8,3),(9,3)),39).
move(2,((9,3),(10,3)),40).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(3,1)),8).
move(3,((3,1),(2,1)),9).
move(3,((2,1),(2,2)),10).
move(3,((2,2),(2,3)),11).
move(3,((2,3),(2,4)),12).
move(3,((2,4),(3,4)),14).
move(3,((3,4),(3,3)),20).
move(3,((3,3),(4,3)),21).
move(3,((4,3),(5,3)),22).
move(3,((5,3),(5,2)),23).
move(3,((5,2),(4,2)),24).
move(3,((4,2),(3,2)),25).
move(3,((3,2),(2,2)),26).
move(3,((2,2),(2,3)),27).
move(3,((2,3),(2,4)),32).
move(3,((2,4),(3,4)),33).
move(3,((3,4),(4,4)),34).
move(3,((4,4),(5,4)),35).
move(3,((5,4),(6,4)),36).
move(3,((6,4),(7,4)),37).
move(3,((7,4),(8,4)),38).
move(3,((8,4),(9,4)),39).
move(3,((9,4),(9,3)),40).
move(4,((3,6),(3,5)),2).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(3,3)),5).
move(4,((3,3),(3,2)),6).
move(4,((3,2),(2,2)),7).
move(4,((2,2),(1,2)),8).
move(4,((1,2),(1,1)),9).
move(4,((1,1),(2,1)),10).
move(4,((2,1),(2,2)),11).
move(4,((2,2),(3,2)),12).
move(4,((3,2),(3,3)),13).
move(4,((3,3),(3,2)),20).
move(4,((3,2),(3,3)),21).
move(4,((3,3),(3,4)),22).
move(4,((3,4),(3,3)),31).
move(4,((3,3),(2,3)),32).
move(4,((2,3),(2,4)),33).
move(4,((2,4),(3,4)),34).
move(4,((3,4),(4,4)),35).
move(4,((4,4),(5,4)),36).
move(4,((5,4),(6,4)),37).
move(4,((6,4),(7,4)),38).
move(4,((7,4),(8,4)),39).
move(4,((8,4),(9,4)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(4,2)),6).
move(5,((4,2),(4,1)),7).
move(5,((4,1),(4,2)),8).
move(5,((4,2),(4,3)),9).
move(5,((4,3),(4,4)),10).
move(5,((4,4),(4,3)),31).
move(5,((4,3),(5,3)),32).
move(5,((5,3),(4,3)),33).
move(5,((4,3),(4,2)),34).
move(5,((4,2),(4,3)),35).
move(5,((4,3),(3,3)),37).
move(5,((3,3),(4,3)),38).
move(5,((4,3),(3,3)),40).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(7,2)),8).
move(6,((7,2),(7,1)),9).
move(6,((7,1),(8,1)),10).
move(6,((8,1),(9,1)),11).
move(6,((9,1),(9,2)),12).
move(6,((9,2),(8,2)),13).
move(6,((8,2),(7,2)),14).
move(6,((7,2),(6,2)),15).
move(6,((6,2),(5,2)),16).
move(6,((5,2),(5,3)),17).
move(6,((5,3),(5,4)),18).
move(6,((5,4),(4,4)),31).
move(6,((4,4),(5,4)),33).
move(6,((5,4),(5,3)),34).
move(6,((5,3),(6,3)),35).
move(6,((6,3),(6,2)),36).
move(6,((6,2),(7,2)),37).
move(6,((7,2),(7,3)),39).
move(6,((7,3),(8,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(7,5)),4).
move(7,((7,5),(8,5)),5).
move(7,((8,5),(9,5)),7).
move(7,((9,5),(9,4)),8).
move(7,((9,4),(9,3)),9).
move(7,((9,3),(10,3)),10).
move(7,((10,3),(11,3)),11).
move(7,((11,3),(11,2)),12).
move(7,((11,2),(10,2)),13).
move(7,((10,2),(9,2)),14).
move(7,((9,2),(8,2)),15).
move(7,((8,2),(7,2)),16).
move(7,((7,2),(6,2)),17).
move(7,((6,2),(6,3)),18).
move(7,((6,3),(6,4)),19).
move(7,((6,4),(6,3)),31).
move(7,((6,3),(6,2)),32).
move(7,((6,2),(6,3)),33).
move(7,((6,3),(6,4)),34).
move(7,((6,4),(6,5)),36).
move(7,((6,5),(5,5)),37).
move(7,((5,5),(5,4)),38).
move(7,((5,4),(5,3)),39).
move(8,((7,6),(7,5)),2).
move(8,((7,5),(7,4)),3).
move(8,((7,4),(6,4)),4).
move(8,((6,4),(7,4)),5).
move(8,((7,4),(7,3)),6).
move(8,((7,3),(7,4)),8).
move(8,((7,4),(7,5)),21).
move(8,((7,5),(7,4)),22).
move(8,((7,4),(6,4)),31).
move(8,((6,4),(6,3)),32).
move(8,((6,3),(5,3)),33).
move(8,((5,3),(5,2)),34).
move(8,((5,2),(4,2)),37).
move(8,((4,2),(3,2)),38).
move(8,((3,2),(2,2)),39).
move(8,((2,2),(2,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.301s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.297s

Choices      : 342      (Domain: 342)
Conflicts    : 16       (Analyzed: 16)
Restarts     : 0       
Model-Level  : 277.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 16       (Deleted: 0)
  Binary     : 2        (Ratio:  12.50%)
  Ternary    : 1        (Ratio:   6.25%)
  Conflict   : 16       (Average Length:   23.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 16       (Average:  4.06 Max:  11 Sum:     65)
  Executed   : 16       (Average:  4.06 Max:  11 Sum:     65 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279629   (Original: 259758)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106463  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

