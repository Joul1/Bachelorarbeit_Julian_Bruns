%%%%%
%Standard
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(1,2)),7).
move(1,((1,2),(2,2)),8).
move(1,((2,2),(3,2)),9).
move(1,((3,2),(3,3)),10).
move(1,((3,3),(2,3)),11).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(2,((3,3),(3,4)),8).
move(2,((3,4),(3,3)),11).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,5)),7).
move(3,((3,5),(4,5)),8).
move(3,((4,5),(4,4)),9).
move(3,((4,4),(4,3)),10).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(4,((5,3),(4,3)),9).
move(4,((4,3),(5,3)),10).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(6,2)),8).
move(5,((6,2),(6,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),8).
move(6,((7,3),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(8,3)),8).
move(7,((8,3),(9,3)),9).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(8,7)),2).
move(8,((8,7),(8,6)),3).
move(8,((8,6),(8,5)),4).
move(8,((8,5),(8,4)),5).
move(8,((8,4),(8,3)),6).
move(8,((8,3),(9,3)),8).
move(8,((9,3),(10,3)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(11,5)),5).
move(10,((11,5),(12,5)),6).
move(10,((12,5),(12,4)),7).
move(10,((12,4),(12,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.074s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 2.078s

Choices      : 1131    
Conflicts    : 38       (Analyzed: 38)
Restarts     : 0       
Model-Level  : 260.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 38       (Deleted: 0)
  Binary     : 8        (Ratio:  21.05%)
  Ternary    : 1        (Ratio:   2.63%)
  Conflict   : 38       (Average Length:   34.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 38       (Average: 22.92 Max: 137 Sum:    871)
  Executed   : 38       (Average: 22.92 Max: 137 Sum:    871 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 396175   (Original: 344034)
  Choice     : 200     
Atoms        : 175925   (Original: 161215 Auxiliary: 14710)
Bodies       : 251747   (Original: 214406)
  Count      : 1941     (Original: 2832)
Equivalences : 144983   (Atom=Atom: 228 Body=Body: 239 Other: 144516)
Tight        : Yes
Variables    : 250449   (Eliminated:    0 Frozen: 143293)
Constraints  : 627398   (Binary:  82.5% Ternary:  12.7% Other:   4.8%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,5)),7).
move(3,((3,5),(4,5)),8).
move(3,((4,5),(4,4)),9).
move(3,((4,4),(4,3)),10).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(4,((5,3),(5,4)),9).
move(4,((5,4),(5,3)),10).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(6,2)),8).
move(5,((6,2),(6,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(7,((8,3),(9,3)),8).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(8,7)),2).
move(8,((8,7),(8,6)),3).
move(8,((8,6),(8,5)),4).
move(8,((8,5),(8,4)),5).
move(8,((8,4),(9,4)),6).
move(8,((9,4),(10,4)),8).
move(8,((10,4),(10,3)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(11,5)),5).
move(10,((11,5),(12,5)),6).
move(10,((12,5),(12,4)),7).
move(10,((12,4),(12,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.012s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 2.000s

Choices      : 1056    
Conflicts    : 37       (Analyzed: 37)
Restarts     : 0       
Model-Level  : 247.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 37       (Deleted: 0)
  Binary     : 9        (Ratio:  24.32%)
  Ternary    : 1        (Ratio:   2.70%)
  Conflict   : 37       (Average Length:   32.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 37       (Average: 21.86 Max: 131 Sum:    809)
  Executed   : 37       (Average: 21.86 Max: 131 Sum:    809 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 396274   (Original: 344133)
  Choice     : 200     
Atoms        : 176024   (Original: 161314 Auxiliary: 14710)
Bodies       : 251747   (Original: 214406)
  Count      : 1941     (Original: 2832)
Equivalences : 144983   (Atom=Atom: 228 Body=Body: 239 Other: 144516)
Tight        : Yes
Variables    : 250449   (Eliminated:    0 Frozen: 143293)
Constraints  : 627398   (Binary:  82.5% Ternary:  12.7% Other:   4.8%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,5)),7).
move(3,((3,5),(4,5)),8).
move(3,((4,5),(4,4)),9).
move(3,((4,4),(4,3)),10).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(4,((5,3),(5,4)),9).
move(4,((5,4),(5,3)),10).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(6,2)),8).
move(5,((6,2),(6,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(7,((8,3),(9,3)),8).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(8,7)),2).
move(8,((8,7),(8,6)),3).
move(8,((8,6),(8,5)),4).
move(8,((8,5),(8,4)),5).
move(8,((8,4),(9,4)),6).
move(8,((9,4),(10,4)),8).
move(8,((10,4),(10,3)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(11,5)),5).
move(10,((11,5),(12,5)),6).
move(10,((12,5),(12,4)),7).
move(10,((12,4),(12,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.100s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 2.109s

Choices      : 1056    
Conflicts    : 37       (Analyzed: 37)
Restarts     : 0       
Model-Level  : 247.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 37       (Deleted: 0)
  Binary     : 9        (Ratio:  24.32%)
  Ternary    : 1        (Ratio:   2.70%)
  Conflict   : 37       (Average Length:   32.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 37       (Average: 21.86 Max: 131 Sum:    809)
  Executed   : 37       (Average: 21.86 Max: 131 Sum:    809 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 396284   (Original: 344143)
  Choice     : 200     
Atoms        : 176034   (Original: 161324 Auxiliary: 14710)
Bodies       : 251747   (Original: 214406)
  Count      : 1941     (Original: 2832)
Equivalences : 144983   (Atom=Atom: 228 Body=Body: 239 Other: 144516)
Tight        : Yes
Variables    : 250449   (Eliminated:    0 Frozen: 143293)
Constraints  : 627398   (Binary:  82.5% Ternary:  12.7% Other:   4.8%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,5)),7).
move(3,((3,5),(4,5)),8).
move(3,((4,5),(4,4)),9).
move(3,((4,4),(4,3)),10).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(4,((5,3),(5,4)),9).
move(4,((5,4),(5,3)),10).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(6,2)),8).
move(5,((6,2),(6,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(7,((8,3),(9,3)),8).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(8,7)),2).
move(8,((8,7),(8,6)),3).
move(8,((8,6),(8,5)),4).
move(8,((8,5),(8,4)),5).
move(8,((8,4),(9,4)),6).
move(8,((9,4),(10,4)),8).
move(8,((10,4),(10,3)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(11,5)),5).
move(10,((11,5),(12,5)),6).
move(10,((12,5),(12,4)),7).
move(10,((12,4),(12,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.183s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 2.172s

Choices      : 1056    
Conflicts    : 37       (Analyzed: 37)
Restarts     : 0       
Model-Level  : 247.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 37       (Deleted: 0)
  Binary     : 9        (Ratio:  24.32%)
  Ternary    : 1        (Ratio:   2.70%)
  Conflict   : 37       (Average Length:   32.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 37       (Average: 21.86 Max: 131 Sum:    809)
  Executed   : 37       (Average: 21.86 Max: 131 Sum:    809 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 396284   (Original: 344143)
  Choice     : 200     
Atoms        : 176034   (Original: 161324 Auxiliary: 14710)
Bodies       : 251747   (Original: 214406)
  Count      : 1941     (Original: 2832)
Equivalences : 144983   (Atom=Atom: 228 Body=Body: 239 Other: 144516)
Tight        : Yes
Variables    : 250449   (Eliminated:    0 Frozen: 143293)
Constraints  : 627398   (Binary:  82.5% Ternary:  12.7% Other:   4.8%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),7).
move(1,((1,3),(2,3)),8).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(3,3)),8).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),6).
move(3,((3,4),(3,3)),7).
move(3,((3,3),(4,3)),8).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),6).
move(4,((4,4),(4,3)),7).
move(4,((4,3),(5,3)),8).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),6).
move(5,((5,4),(5,3)),7).
move(5,((5,3),(6,3)),8).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(7,4)),7).
move(6,((7,4),(7,3)),8).
move(6,((7,3),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),5).
move(7,((7,5),(7,4)),6).
move(7,((7,4),(8,4)),7).
move(7,((8,4),(9,4)),8).
move(7,((9,4),(9,3)),9).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(8,7)),2).
move(8,((8,7),(8,6)),3).
move(8,((8,6),(8,5)),4).
move(8,((8,5),(9,5)),5).
move(8,((9,5),(9,4)),6).
move(8,((9,4),(9,3)),7).
move(8,((9,3),(10,3)),8).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),5).
move(10,((10,5),(10,4)),6).
move(10,((10,4),(11,4)),7).
move(10,((11,4),(12,4)),8).
move(10,((12,4),(12,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.133s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 2.125s

Choices      : 556     
Conflicts    : 31       (Analyzed: 31)
Restarts     : 0       
Model-Level  : 241.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 31       (Deleted: 0)
  Binary     : 10       (Ratio:  32.26%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 31       (Average Length:   32.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 31       (Average: 10.16 Max:  54 Sum:    315)
  Executed   : 31       (Average: 10.16 Max:  54 Sum:    315 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 397939   (Original: 345818)
  Choice     : 200     
  Heuristic  : 1580     (Original: 1600)
Atoms        : 176109   (Original: 161399 Auxiliary: 14710)
Bodies       : 251747   (Original: 214406)
  Count      : 1941     (Original: 2832)
Equivalences : 144983   (Atom=Atom: 228 Body=Body: 239 Other: 144516)
Tight        : Yes
Variables    : 250449   (Eliminated:    0 Frozen: 143293)
Constraints  : 627398   (Binary:  82.5% Ternary:  12.7% Other:   4.8%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(3,4)),6).
move(2,((3,4),(3,3)),9).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(4,3)),7).
move(3,((4,3),(4,2)),9).
move(3,((4,2),(4,3)),10).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(4,((5,3),(4,3)),9).
move(4,((4,3),(5,3)),10).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(6,2)),8).
move(5,((6,2),(6,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(7,((8,3),(9,3)),8).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(8,7)),2).
move(8,((8,7),(8,6)),3).
move(8,((8,6),(8,5)),4).
move(8,((8,5),(9,5)),5).
move(8,((9,5),(10,5)),6).
move(8,((10,5),(10,4)),8).
move(8,((10,4),(10,3)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(11,5)),5).
move(10,((11,5),(12,5)),6).
move(10,((12,5),(12,4)),7).
move(10,((12,4),(12,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.974s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 1.969s

Choices      : 1262    
Conflicts    : 43       (Analyzed: 43)
Restarts     : 0       
Model-Level  : 281.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 43       (Deleted: 0)
  Binary     : 10       (Ratio:  23.26%)
  Ternary    : 2        (Ratio:   4.65%)
  Conflict   : 43       (Average Length:   32.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 43       (Average: 22.81 Max: 128 Sum:    981)
  Executed   : 43       (Average: 22.81 Max: 128 Sum:    981 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 396354   (Original: 344213)
  Choice     : 200     
  Heuristic  : 80      
Atoms        : 176024   (Original: 161314 Auxiliary: 14710)
Bodies       : 251747   (Original: 214406)
  Count      : 1941     (Original: 2832)
Equivalences : 144983   (Atom=Atom: 228 Body=Body: 239 Other: 144516)
Tight        : Yes
Variables    : 250449   (Eliminated:    0 Frozen: 143293)
Constraints  : 627398   (Binary:  82.5% Ternary:  12.7% Other:   4.8%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(4,3)),7).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(7,4)),6).
move(6,((7,4),(7,3)),8).
move(6,((7,3),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(7,((8,3),(9,3)),8).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(10,8)),3).
move(8,((10,8),(10,7)),4).
move(8,((10,7),(10,6)),5).
move(8,((10,6),(10,5)),6).
move(8,((10,5),(10,4)),7).
move(8,((10,4),(10,3)),8).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(10,5)),5).
move(9,((10,5),(11,5)),6).
move(9,((11,5),(11,4)),7).
move(9,((11,4),(11,3)),8).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(10,3)),6).
move(10,((10,3),(11,3)),7).
move(10,((11,3),(12,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.081s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 2.078s

Choices      : 498      (Domain: 111)
Conflicts    : 25       (Analyzed: 25)
Restarts     : 0       
Model-Level  : 159.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 25       (Deleted: 0)
  Binary     : 2        (Ratio:   8.00%)
  Ternary    : 1        (Ratio:   4.00%)
  Conflict   : 25       (Average Length:   39.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 25       (Average: 13.56 Max:  33 Sum:    339)
  Executed   : 25       (Average: 13.56 Max:  33 Sum:    339 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 414657   (Original: 362628)
  Choice     : 200     
  Heuristic  : 18363    (Original: 18475)
Atoms        : 176044   (Original: 161334 Auxiliary: 14710)
Bodies       : 251747   (Original: 214406)
  Count      : 1941     (Original: 2832)
Equivalences : 144983   (Atom=Atom: 228 Body=Body: 239 Other: 144516)
Tight        : Yes
Variables    : 250449   (Eliminated:    0 Frozen: 143293)
Constraints  : 627398   (Binary:  82.5% Ternary:  12.7% Other:   4.8%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(3,7)),4).
move(2,((3,7),(3,6)),5).
move(2,((3,6),(3,5)),6).
move(2,((3,5),(3,4)),7).
move(2,((3,4),(3,3)),8).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(4,7)),4).
move(3,((4,7),(4,6)),5).
move(3,((4,6),(4,5)),6).
move(3,((4,5),(4,4)),7).
move(3,((4,4),(4,3)),8).
move(4,((4,9),(5,9)),2).
move(4,((5,9),(5,8)),3).
move(4,((5,8),(5,7)),4).
move(4,((5,7),(5,6)),5).
move(4,((5,6),(5,5)),6).
move(4,((5,5),(5,4)),7).
move(4,((5,4),(5,3)),8).
move(5,((5,9),(6,9)),1).
move(5,((6,9),(6,8)),2).
move(5,((6,8),(6,7)),3).
move(5,((6,7),(6,6)),4).
move(5,((6,6),(6,5)),6).
move(5,((6,5),(6,4)),7).
move(5,((6,4),(6,3)),8).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(7,4)),6).
move(6,((7,4),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),5).
move(7,((7,5),(8,5)),6).
move(7,((8,5),(8,4)),7).
move(7,((8,4),(9,4)),8).
move(7,((9,4),(9,3)),9).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(8,7)),2).
move(8,((8,7),(8,6)),3).
move(8,((8,6),(8,5)),4).
move(8,((8,5),(9,5)),5).
move(8,((9,5),(9,4)),6).
move(8,((9,4),(9,3)),7).
move(8,((9,3),(10,3)),8).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(10,((10,9),(11,9)),1).
move(10,((11,9),(11,8)),3).
move(10,((11,8),(11,7)),4).
move(10,((11,7),(11,6)),5).
move(10,((11,6),(11,5)),6).
move(10,((11,5),(12,5)),7).
move(10,((12,5),(12,4)),8).
move(10,((12,4),(12,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.181s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 2.172s

Choices      : 754     
Conflicts    : 47       (Analyzed: 47)
Restarts     : 0       
Model-Level  : 352.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 47       (Deleted: 0)
  Binary     : 12       (Ratio:  25.53%)
  Ternary    : 1        (Ratio:   2.13%)
  Conflict   : 47       (Average Length:   23.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 47       (Average:  8.55 Max:  59 Sum:    402)
  Executed   : 47       (Average:  8.55 Max:  59 Sum:    402 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 414637   (Original: 362608)
  Choice     : 200     
  Heuristic  : 18363    (Original: 18475)
Atoms        : 176024   (Original: 161314 Auxiliary: 14710)
Bodies       : 251747   (Original: 214406)
  Count      : 1941     (Original: 2832)
Equivalences : 144983   (Atom=Atom: 228 Body=Body: 239 Other: 144516)
Tight        : Yes
Variables    : 250449   (Eliminated:    0 Frozen: 143293)
Constraints  : 627398   (Binary:  82.5% Ternary:  12.7% Other:   4.8%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,9),(2,9)),3).
move(1,((2,9),(2,8)),4).
move(1,((2,8),(2,7)),6).
move(1,((2,7),(2,6)),7).
move(1,((2,6),(2,5)),8).
move(1,((2,5),(2,4)),9).
move(1,((2,4),(2,3)),10).
move(1,((2,3),(2,2)),11).
move(1,((2,2),(1,2)),12).
move(1,((1,2),(2,2)),13).
move(1,((2,2),(2,3)),14).
move(1,((2,3),(2,4)),15).
move(1,((2,4),(3,4)),16).
move(1,((3,4),(2,4)),17).
move(1,((2,4),(2,5)),18).
move(1,((2,5),(2,4)),19).
move(1,((2,4),(2,3)),20).
move(2,((2,9),(3,9)),3).
move(2,((3,9),(3,8)),4).
move(2,((3,8),(3,7)),5).
move(2,((3,7),(3,6)),6).
move(2,((3,6),(3,5)),7).
move(2,((3,5),(3,4)),8).
move(2,((3,4),(3,3)),9).
move(2,((3,3),(3,2)),10).
move(2,((3,2),(3,1)),11).
move(2,((3,1),(2,1)),12).
move(2,((2,1),(2,2)),14).
move(2,((2,2),(2,3)),15).
move(2,((2,3),(2,4)),16).
move(2,((2,4),(2,5)),17).
move(2,((2,5),(3,5)),18).
move(2,((3,5),(3,4)),19).
move(2,((3,4),(3,3)),20).
move(3,((3,9),(3,8)),3).
move(3,((3,8),(3,7)),4).
move(3,((3,7),(3,6)),5).
move(3,((3,6),(3,5)),6).
move(3,((3,5),(2,5)),7).
move(3,((2,5),(2,4)),8).
move(3,((2,4),(2,3)),9).
move(3,((2,3),(2,2)),10).
move(3,((2,2),(2,1)),11).
move(3,((2,1),(1,1)),12).
move(3,((1,1),(1,2)),14).
move(3,((1,2),(2,2)),15).
move(3,((2,2),(2,3)),17).
move(3,((2,3),(3,3)),19).
move(3,((3,3),(4,3)),20).
move(4,((4,9),(4,8)),3).
move(4,((4,8),(4,7)),4).
move(4,((4,7),(4,6)),5).
move(4,((4,6),(4,5)),6).
move(4,((4,5),(4,4)),7).
move(4,((4,4),(4,3)),8).
move(4,((4,3),(4,2)),9).
move(4,((4,2),(4,1)),10).
move(4,((4,1),(4,2)),11).
move(4,((4,2),(4,3)),12).
move(4,((4,3),(4,4)),13).
move(4,((4,4),(4,5)),14).
move(4,((4,5),(4,6)),15).
move(4,((4,6),(5,6)),16).
move(4,((5,6),(5,5)),17).
move(4,((5,5),(5,4)),18).
move(4,((5,4),(5,3)),20).
move(5,((5,9),(5,8)),3).
move(5,((5,8),(5,7)),4).
move(5,((5,7),(5,6)),5).
move(5,((5,6),(5,5)),6).
move(5,((5,5),(5,4)),7).
move(5,((5,4),(5,3)),8).
move(5,((5,3),(5,2)),9).
move(5,((5,2),(5,1)),10).
move(5,((5,1),(5,2)),11).
move(5,((5,2),(5,3)),12).
move(5,((5,3),(5,4)),13).
move(5,((5,4),(5,5)),14).
move(5,((5,5),(5,6)),15).
move(5,((5,6),(6,6)),16).
move(5,((6,6),(6,5)),18).
move(5,((6,5),(6,4)),19).
move(5,((6,4),(6,3)),20).
move(6,((6,9),(6,8)),3).
move(6,((6,8),(6,7)),4).
move(6,((6,7),(6,6)),5).
move(6,((6,6),(6,5)),6).
move(6,((6,5),(6,4)),7).
move(6,((6,4),(6,3)),8).
move(6,((6,3),(6,2)),9).
move(6,((6,2),(6,1)),10).
move(6,((6,1),(6,2)),11).
move(6,((6,2),(6,3)),12).
move(6,((6,3),(6,4)),13).
move(6,((6,4),(6,5)),14).
move(6,((6,5),(6,6)),15).
move(6,((6,6),(6,5)),16).
move(6,((6,5),(7,5)),17).
move(6,((7,5),(8,5)),18).
move(6,((8,5),(8,4)),19).
move(6,((8,4),(8,3)),20).
move(7,((7,9),(7,8)),3).
move(7,((7,8),(8,8)),4).
move(7,((8,8),(8,7)),5).
move(7,((8,7),(9,7)),6).
move(7,((9,7),(10,7)),7).
move(7,((10,7),(11,7)),8).
move(7,((11,7),(11,6)),9).
move(7,((11,6),(11,7)),10).
move(7,((11,7),(12,7)),11).
move(7,((12,7),(13,7)),12).
move(7,((13,7),(12,7)),13).
move(7,((12,7),(11,7)),14).
move(7,((11,7),(10,7)),15).
move(7,((10,7),(9,7)),16).
move(7,((9,7),(9,6)),17).
move(7,((9,6),(9,5)),18).
move(7,((9,5),(9,4)),19).
move(7,((9,4),(9,3)),20).
move(8,((8,9),(8,8)),3).
move(8,((8,8),(9,8)),4).
move(8,((9,8),(10,8)),6).
move(8,((10,8),(11,8)),7).
move(8,((11,8),(12,8)),8).
move(8,((12,8),(12,7)),9).
move(8,((12,7),(12,6)),10).
move(8,((12,6),(13,6)),11).
move(8,((13,6),(13,5)),12).
move(8,((13,5),(13,4)),13).
move(8,((13,4),(13,3)),14).
move(8,((13,3),(13,2)),16).
move(8,((13,2),(12,2)),17).
move(8,((12,2),(11,2)),18).
move(8,((11,2),(10,2)),19).
move(8,((10,2),(10,3)),20).
move(9,((9,9),(9,8)),3).
move(9,((9,8),(9,7)),4).
move(9,((9,7),(9,6)),5).
move(9,((9,6),(8,6)),6).
move(9,((8,6),(9,6)),7).
move(9,((9,6),(10,6)),8).
move(9,((10,6),(10,5)),9).
move(9,((10,5),(10,4)),10).
move(9,((10,4),(10,3)),11).
move(9,((10,3),(10,2)),12).
move(9,((10,2),(11,2)),13).
move(9,((11,2),(12,2)),14).
move(9,((12,2),(13,2)),15).
move(9,((13,2),(14,2)),16).
move(9,((14,2),(13,2)),17).
move(9,((13,2),(12,2)),18).
move(9,((12,2),(11,2)),19).
move(9,((11,2),(11,3)),20).
move(10,((10,9),(9,9)),3).
move(10,((9,9),(10,9)),5).
move(10,((10,9),(11,9)),6).
move(10,((11,9),(12,9)),7).
move(10,((12,9),(13,9)),8).
move(10,((13,9),(13,8)),9).
move(10,((13,8),(13,7)),10).
move(10,((13,7),(14,7)),11).
move(10,((14,7),(14,6)),12).
move(10,((14,6),(14,5)),13).
move(10,((14,5),(14,4)),14).
move(10,((14,4),(14,3)),15).
move(10,((14,3),(14,2)),17).
move(10,((14,2),(14,3)),18).
move(10,((14,3),(13,3)),19).
move(10,((13,3),(12,3)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.153s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 2.156s

Choices      : 324      (Domain: 324)
Conflicts    : 28       (Analyzed: 28)
Restarts     : 0       
Model-Level  : 157.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 28       (Deleted: 0)
  Binary     : 4        (Ratio:  14.29%)
  Ternary    : 4        (Ratio:  14.29%)
  Conflict   : 28       (Average Length:   18.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 28       (Average:  5.96 Max:  46 Sum:    167)
  Executed   : 28       (Average:  5.96 Max:  46 Sum:    167 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 414637   (Original: 362608)
  Choice     : 200     
  Heuristic  : 18363    (Original: 18475)
Atoms        : 176024   (Original: 161314 Auxiliary: 14710)
Bodies       : 251747   (Original: 214406)
  Count      : 1941     (Original: 2832)
Equivalences : 144983   (Atom=Atom: 228 Body=Body: 239 Other: 144516)
Tight        : Yes
Variables    : 250449   (Eliminated:    0 Frozen: 143293)
Constraints  : 627398   (Binary:  82.5% Ternary:  12.7% Other:   4.8%)

