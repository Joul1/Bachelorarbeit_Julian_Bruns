%%%%%
%Standard
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(7,6)),6).
move(2,((7,6),(8,6)),7).
move(2,((8,6),(9,6)),8).
move(2,((9,6),(10,6)),9).
move(2,((10,6),(10,5)),10).
move(2,((10,5),(10,4)),11).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(7,5)),6).
move(3,((7,5),(7,4)),7).
move(3,((7,4),(8,4)),8).
move(3,((8,4),(9,4)),9).
move(3,((9,4),(9,3)),10).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(9,6)),6).
move(4,((9,6),(9,5)),7).
move(4,((9,5),(9,4)),10).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(4,3)),3).
move(5,((4,3),(5,3)),4).
move(5,((5,3),(6,3)),6).
move(5,((6,3),(7,3)),7).
move(5,((7,3),(8,3)),8).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(4,4)),5).
move(6,((4,4),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),4).
move(7,((6,2),(5,2)),5).
move(7,((5,2),(5,3)),6).
move(7,((5,3),(4,3)),7).
move(8,((7,6),(8,6)),1).
move(8,((8,6),(9,6)),2).
move(8,((9,6),(10,6)),3).
move(8,((10,6),(11,6)),4).
move(8,((11,6),(11,5)),5).
move(8,((11,5),(11,4)),6).
move(8,((11,4),(11,3)),7).
move(8,((11,3),(10,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.796s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.781s

Choices      : 659     
Conflicts    : 26       (Analyzed: 26)
Restarts     : 0       
Model-Level  : 320.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 26       (Deleted: 0)
  Binary     : 7        (Ratio:  26.92%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 26       (Average Length:   21.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 26       (Average: 13.04 Max:  57 Sum:    339)
  Executed   : 26       (Average: 13.04 Max:  57 Sum:    339 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261077   (Original: 241134)
  Choice     : 320     
Atoms        : 106367  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(1,((8,3),(7,3)),4).
move(1,((7,3),(6,3)),5).
move(1,((6,3),(5,3)),6).
move(1,((5,3),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),3).
move(2,((3,5),(4,5)),4).
move(2,((4,5),(5,5)),5).
move(2,((5,5),(6,5)),6).
move(2,((6,5),(7,5)),7).
move(2,((7,5),(8,5)),8).
move(2,((8,5),(9,5)),9).
move(2,((9,5),(10,5)),10).
move(2,((10,5),(10,4)),11).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(4,5)),3).
move(3,((4,5),(5,5)),4).
move(3,((5,5),(6,5)),5).
move(3,((6,5),(7,5)),6).
move(3,((7,5),(8,5)),7).
move(3,((8,5),(9,5)),8).
move(3,((9,5),(9,4)),9).
move(3,((9,4),(9,3)),10).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(9,6)),6).
move(4,((9,6),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(10,4)),9).
move(4,((10,4),(9,4)),10).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(5,4)),5).
move(5,((5,4),(6,4)),6).
move(5,((6,4),(7,4)),7).
move(5,((7,4),(8,4)),8).
move(5,((8,4),(8,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(4,3)),5).
move(6,((4,3),(4,2)),6).
move(6,((4,2),(5,2)),7).
move(6,((5,2),(5,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),5).
move(7,((5,3),(5,4)),6).
move(7,((5,4),(4,4)),7).
move(7,((4,4),(4,3)),8).
move(8,((7,6),(8,6)),1).
move(8,((8,6),(9,6)),2).
move(8,((9,6),(10,6)),3).
move(8,((10,6),(11,6)),4).
move(8,((11,6),(11,5)),5).
move(8,((11,5),(11,4)),6).
move(8,((11,4),(11,3)),7).
move(8,((11,3),(10,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.342s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.328s

Choices      : 831      (Domain: 140)
Conflicts    : 37       (Analyzed: 37)
Restarts     : 0       
Model-Level  : 432.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 37       (Deleted: 0)
  Binary     : 6        (Ratio:  16.22%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 37       (Average Length:   19.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 37       (Average: 10.78 Max:  83 Sum:    399)
  Executed   : 37       (Average: 10.78 Max:  83 Sum:    399 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261329   (Original: 241386)
  Choice     : 320     
  Heuristic  : 147     
Atoms        : 106472  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDistance.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(7,6)),6).
move(2,((7,6),(8,6)),7).
move(2,((8,6),(9,6)),8).
move(2,((9,6),(10,6)),9).
move(2,((10,6),(10,5)),10).
move(2,((10,5),(10,4)),11).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(6,5)),5).
move(3,((6,5),(6,4)),6).
move(3,((6,4),(6,3)),7).
move(3,((6,3),(7,3)),8).
move(3,((7,3),(7,2)),9).
move(3,((7,2),(8,2)),10).
move(3,((8,2),(9,2)),11).
move(3,((9,2),(9,3)),12).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(8,5)),6).
move(4,((8,5),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(7,5)),4).
move(5,((7,5),(8,5)),5).
move(5,((8,5),(8,4)),6).
move(5,((8,4),(8,3)),7).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(4,4)),4).
move(7,((4,4),(4,3)),5).
move(8,((7,6),(8,6)),1).
move(8,((8,6),(9,6)),2).
move(8,((9,6),(9,5)),3).
move(8,((9,5),(9,4)),4).
move(8,((9,4),(9,3)),5).
move(8,((9,3),(10,3)),6).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.247s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.250s

Choices      : 317      (Domain: 317)
Conflicts    : 7        (Analyzed: 7)
Restarts     : 0       
Model-Level  : 276.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 7        (Deleted: 0)
  Binary     : 6        (Ratio:  85.71%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 7        (Average Length:    2.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 7        (Average:  5.86 Max:  14 Sum:     41)
  Executed   : 7        (Average:  5.86 Max:  14 Sum:     41 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279646   (Original: 259775)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106480  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(4,4)),6).
move(1,((4,4),(3,4)),7).
move(1,((3,4),(3,3)),9).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(7,6)),6).
move(2,((7,6),(7,5)),7).
move(2,((7,5),(8,5)),9).
move(2,((8,5),(8,4)),10).
move(2,((8,4),(9,4)),11).
move(2,((9,4),(10,4)),12).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(7,5)),6).
move(3,((7,5),(8,5)),7).
move(3,((8,5),(8,4)),8).
move(3,((8,4),(8,3)),9).
move(3,((8,3),(9,3)),40).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(8,5)),6).
move(4,((8,5),(9,5)),7).
move(4,((9,5),(10,5)),8).
move(4,((10,5),(9,5)),9).
move(4,((9,5),(9,4)),40).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(8,6)),4).
move(5,((8,6),(8,5)),5).
move(5,((8,5),(8,4)),6).
move(5,((8,4),(8,3)),7).
move(5,((8,3),(8,2)),9).
move(5,((8,2),(8,3)),40).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(4,4)),4).
move(7,((4,4),(4,3)),5).
move(7,((4,3),(4,4)),7).
move(7,((4,4),(4,3)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),6).
move(8,((7,4),(8,4)),7).
move(8,((8,4),(9,4)),8).
move(8,((9,4),(9,3)),9).
move(8,((9,3),(10,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.287s (Solving: 0.09s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 1.281s

Choices      : 653      (Domain: 208)
Conflicts    : 71       (Analyzed: 71)
Restarts     : 0       
Model-Level  : 282.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 71       (Deleted: 0)
  Binary     : 21       (Ratio:  29.58%)
  Ternary    : 4        (Ratio:   5.63%)
  Conflict   : 71       (Average Length:   85.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 71       (Average:  5.23 Max:  30 Sum:    371)
  Executed   : 71       (Average:  5.23 Max:  30 Sum:    371 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279646   (Original: 259775)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106480  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(2,5)),2).
move(2,((2,5),(3,5)),3).
move(2,((3,5),(3,4)),4).
move(2,((3,4),(4,4)),5).
move(2,((4,4),(5,4)),6).
move(2,((5,4),(6,4)),7).
move(2,((6,4),(7,4)),8).
move(2,((7,4),(8,4)),9).
move(2,((8,4),(9,4)),10).
move(2,((9,4),(10,4)),11).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(8,6)),6).
move(3,((8,6),(9,6)),7).
move(3,((9,6),(9,5)),8).
move(3,((9,5),(9,4)),9).
move(3,((9,4),(9,3)),10).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(8,5)),6).
move(4,((8,5),(8,4)),7).
move(4,((8,4),(8,5)),8).
move(4,((8,5),(8,4)),10).
move(4,((8,4),(9,4)),40).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(7,5)),4).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(7,3)),6).
move(5,((7,3),(8,3)),7).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(4,4)),4).
move(7,((4,4),(4,3)),5).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(9,4)),4).
move(8,((9,4),(10,4)),5).
move(8,((10,4),(10,3)),6).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.205s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.203s

Choices      : 303      (Domain: 38)
Conflicts    : 1        (Analyzed: 1)
Restarts     : 0       
Model-Level  : 302.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 1        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 1        (Average Length:   48.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 1        (Average:  1.00 Max:   1 Sum:      1)
  Executed   : 1        (Average:  1.00 Max:   1 Sum:      1 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 262361   (Original: 242434)
  Choice     : 320     
  Heuristic  : 1113     (Original: 1129)
Atoms        : 106538  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(7,6)),6).
move(2,((7,6),(8,6)),7).
move(2,((8,6),(9,6)),8).
move(2,((9,6),(10,6)),9).
move(2,((10,6),(10,5)),10).
move(2,((10,5),(10,4)),11).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(3,4)),3).
move(3,((3,4),(4,4)),4).
move(3,((4,4),(5,4)),5).
move(3,((5,4),(6,4)),6).
move(3,((6,4),(7,4)),7).
move(3,((7,4),(8,4)),8).
move(3,((8,4),(8,3)),9).
move(3,((8,3),(9,3)),10).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(4,4)),3).
move(4,((4,4),(5,4)),4).
move(4,((5,4),(5,5)),5).
move(4,((5,5),(6,5)),6).
move(4,((6,5),(7,5)),7).
move(4,((7,5),(8,5)),8).
move(4,((8,5),(8,4)),9).
move(4,((8,4),(9,4)),40).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(7,5)),4).
move(5,((7,5),(7,4)),6).
move(5,((7,4),(7,3)),7).
move(5,((7,3),(8,3)),40).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(6,5)),2).
move(6,((6,5),(6,4)),3).
move(6,((6,4),(6,3)),5).
move(6,((6,3),(6,2)),6).
move(6,((6,2),(6,3)),7).
move(6,((6,3),(5,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),4).
move(7,((5,3),(4,3)),5).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(6,3)),4).
move(8,((6,3),(7,3)),5).
move(8,((7,3),(8,3)),6).
move(8,((8,3),(9,3)),7).
move(8,((9,3),(10,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.209s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.203s

Choices      : 1542     (Domain: 956)
Conflicts    : 27       (Analyzed: 27)
Restarts     : 0       
Model-Level  : 1273.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 27       (Deleted: 0)
  Binary     : 4        (Ratio:  14.81%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 27       (Average Length:   21.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 27       (Average:  9.96 Max:  49 Sum:    269)
  Executed   : 27       (Average:  9.96 Max:  49 Sum:    269 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 262189   (Original: 242249)
  Choice     : 320     
  Heuristic  : 1007     (Original: 1010)
Atoms        : 106472  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(7,6)),6).
move(2,((7,6),(8,6)),7).
move(2,((8,6),(9,6)),8).
move(2,((9,6),(10,6)),9).
move(2,((10,6),(10,5)),10).
move(2,((10,5),(10,4)),11).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(7,5)),6).
move(3,((7,5),(7,4)),7).
move(3,((7,4),(8,4)),8).
move(3,((8,4),(9,4)),9).
move(3,((9,4),(9,3)),10).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(9,6)),6).
move(4,((9,6),(9,5)),7).
move(4,((9,5),(9,4)),10).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(4,3)),3).
move(5,((4,3),(5,3)),4).
move(5,((5,3),(6,3)),6).
move(5,((6,3),(7,3)),7).
move(5,((7,3),(8,3)),8).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(4,4)),3).
move(6,((4,4),(4,3)),4).
move(6,((4,3),(4,4)),6).
move(6,((4,4),(5,4)),7).
move(6,((5,4),(5,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(5,4)),3).
move(7,((5,4),(5,3)),6).
move(7,((5,3),(4,3)),7).
move(8,((7,6),(8,6)),1).
move(8,((8,6),(9,6)),2).
move(8,((9,6),(10,6)),3).
move(8,((10,6),(11,6)),4).
move(8,((11,6),(11,5)),5).
move(8,((11,5),(11,4)),6).
move(8,((11,4),(11,3)),7).
move(8,((11,3),(10,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.224s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.203s

Choices      : 692      (Domain: 365)
Conflicts    : 30       (Analyzed: 30)
Restarts     : 0       
Model-Level  : 345.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 30       (Deleted: 0)
  Binary     : 9        (Ratio:  30.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 30       (Average Length:   20.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 30       (Average: 11.57 Max:  57 Sum:    347)
  Executed   : 30       (Average: 11.57 Max:  57 Sum:    347 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279656   (Original: 259777)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106489  
Disjunctions : 0        (Original: 1)
Bodies       : 183368   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93247    (Atom=Atom: 342 Body=Body: 351 Other: 92554)
Tight        : Yes
Variables    : 182697   (Eliminated:    0 Frozen: 92083)
Constraints  : 500665   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((8,6),(8,5)),3).
move(1,((8,5),(8,6)),4).
move(1,((8,6),(8,5)),5).
move(1,((8,5),(8,4)),7).
move(1,((8,4),(7,4)),8).
move(1,((7,4),(8,4)),9).
move(1,((8,4),(8,3)),24).
move(1,((8,3),(8,4)),25).
move(1,((8,4),(8,5)),29).
move(1,((8,5),(8,4)),30).
move(1,((8,4),(8,5)),33).
move(1,((8,5),(7,5)),34).
move(1,((7,5),(6,5)),35).
move(1,((6,5),(5,5)),36).
move(1,((5,5),(4,5)),37).
move(1,((4,5),(4,4)),38).
move(1,((4,4),(3,4)),39).
move(1,((3,4),(3,3)),40).
move(2,((1,6),(1,5)),3).
move(2,((1,5),(1,4)),4).
move(2,((1,4),(2,4)),5).
move(2,((2,4),(1,4)),6).
move(2,((1,4),(2,4)),8).
move(2,((2,4),(2,5)),9).
move(2,((2,5),(2,4)),10).
move(2,((2,4),(3,4)),14).
move(2,((3,4),(2,4)),15).
move(2,((2,4),(3,4)),17).
move(2,((3,4),(2,4)),18).
move(2,((2,4),(2,5)),20).
move(2,((2,5),(2,4)),21).
move(2,((2,4),(3,4)),23).
move(2,((3,4),(2,4)),24).
move(2,((2,4),(3,4)),29).
move(2,((3,4),(4,4)),30).
move(2,((4,4),(4,3)),31).
move(2,((4,3),(5,3)),32).
move(2,((5,3),(6,3)),33).
move(2,((6,3),(7,3)),34).
move(2,((7,3),(8,3)),35).
move(2,((8,3),(8,4)),36).
move(2,((8,4),(8,5)),37).
move(2,((8,5),(9,5)),38).
move(2,((9,5),(10,5)),39).
move(2,((10,5),(10,4)),40).
move(3,((2,6),(2,5)),4).
move(3,((2,5),(2,4)),6).
move(3,((2,4),(2,3)),7).
move(3,((2,3),(3,3)),8).
move(3,((3,3),(3,4)),9).
move(3,((3,4),(3,3)),11).
move(3,((3,3),(2,3)),12).
move(3,((2,3),(2,4)),14).
move(3,((2,4),(2,3)),15).
move(3,((2,3),(2,4)),17).
move(3,((2,4),(2,3)),18).
move(3,((2,3),(3,3)),19).
move(3,((3,3),(4,3)),20).
move(3,((4,3),(5,3)),21).
move(3,((5,3),(6,3)),22).
move(3,((6,3),(7,3)),23).
move(3,((7,3),(6,3)),25).
move(3,((6,3),(7,3)),26).
move(3,((7,3),(6,3)),27).
move(3,((6,3),(5,3)),28).
move(3,((5,3),(4,3)),29).
move(3,((4,3),(3,3)),30).
move(3,((3,3),(2,3)),31).
move(3,((2,3),(3,3)),32).
move(3,((3,3),(4,3)),33).
move(3,((4,3),(5,3)),34).
move(3,((5,3),(6,3)),35).
move(3,((6,3),(7,3)),36).
move(3,((7,3),(7,4)),37).
move(3,((7,4),(8,4)),38).
move(3,((8,4),(8,3)),39).
move(3,((8,3),(9,3)),40).
move(4,((3,6),(3,5)),3).
move(4,((3,5),(3,4)),5).
move(4,((3,4),(4,4)),8).
move(4,((4,4),(4,5)),9).
move(4,((4,5),(3,5)),10).
move(4,((3,5),(3,4)),13).
move(4,((3,4),(4,4)),14).
move(4,((4,4),(3,4)),15).
move(4,((3,4),(4,4)),16).
move(4,((4,4),(3,4)),19).
move(4,((3,4),(4,4)),22).
move(4,((4,4),(4,5)),23).
move(4,((4,5),(3,5)),24).
move(4,((3,5),(3,4)),25).
move(4,((3,4),(3,5)),27).
move(4,((3,5),(3,4)),31).
move(4,((3,4),(4,4)),33).
move(4,((4,4),(4,3)),34).
move(4,((4,3),(5,3)),35).
move(4,((5,3),(6,3)),36).
move(4,((6,3),(7,3)),37).
move(4,((7,3),(7,4)),38).
move(4,((7,4),(8,4)),39).
move(4,((8,4),(9,4)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(4,4)),6).
move(5,((4,4),(4,3)),7).
move(5,((4,3),(4,4)),9).
move(5,((4,4),(4,5)),10).
move(5,((4,5),(4,4)),15).
move(5,((4,4),(4,5)),16).
move(5,((4,5),(4,4)),20).
move(5,((4,4),(4,3)),21).
move(5,((4,3),(5,3)),22).
move(5,((5,3),(6,3)),23).
move(5,((6,3),(5,3)),24).
move(5,((5,3),(6,3)),26).
move(5,((6,3),(5,3)),27).
move(5,((5,3),(4,3)),28).
move(5,((4,3),(4,4)),29).
move(5,((4,4),(4,5)),30).
move(5,((4,5),(4,4)),34).
move(5,((4,4),(4,3)),35).
move(5,((4,3),(5,3)),36).
move(5,((5,3),(6,3)),37).
move(5,((6,3),(7,3)),38).
move(5,((7,3),(8,3)),40).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(5,4)),4).
move(6,((5,4),(5,3)),5).
move(6,((5,3),(5,4)),6).
move(6,((5,4),(5,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),5).
move(7,((6,4),(6,3)),6).
move(7,((6,3),(5,3)),8).
move(7,((5,3),(6,3)),9).
move(7,((6,3),(6,4)),10).
move(7,((6,4),(6,3)),24).
move(7,((6,3),(6,4)),25).
move(7,((6,4),(6,3)),38).
move(7,((6,3),(5,3)),39).
move(7,((5,3),(4,3)),40).
move(8,((7,6),(7,5)),4).
move(8,((7,5),(7,4)),6).
move(8,((7,4),(7,3)),7).
move(8,((7,3),(8,3)),8).
move(8,((8,3),(9,3)),9).
move(8,((9,3),(10,3)),10).
move(8,((10,3),(9,3)),11).
move(8,((9,3),(8,3)),12).
move(8,((8,3),(7,3)),13).
move(8,((7,3),(8,3)),14).
move(8,((8,3),(7,3)),15).
move(8,((7,3),(7,4)),16).
move(8,((7,4),(7,3)),21).
move(8,((7,3),(7,4)),22).
move(8,((7,4),(7,3)),31).
move(8,((7,3),(7,4)),32).
move(8,((7,4),(8,4)),37).
move(8,((8,4),(9,4)),38).
move(8,((9,4),(10,4)),39).
move(8,((10,4),(10,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.213s (Solving: 0.03s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1.219s

Choices      : 288      (Domain: 288)
Conflicts    : 12       (Analyzed: 12)
Restarts     : 0       
Model-Level  : 274.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 12       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 2        (Ratio:  16.67%)
  Conflict   : 12       (Average Length:   27.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 12       (Average:  1.17 Max:   2 Sum:     14)
  Executed   : 12       (Average:  1.17 Max:   2 Sum:     14 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279638   (Original: 259767)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106472  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hStrange.lp
%%%%%
move(1,((8,6),(7,6)),2).
move(1,((7,6),(7,5)),5).
move(1,((7,5),(7,4)),6).
move(1,((7,4),(8,4)),7).
move(1,((8,4),(8,3)),8).
move(1,((8,3),(8,2)),9).
move(1,((8,2),(9,2)),10).
move(1,((9,2),(10,2)),11).
move(1,((10,2),(10,1)),12).
move(1,((10,1),(11,1)),13).
move(1,((11,1),(10,1)),14).
move(1,((10,1),(10,2)),15).
move(1,((10,2),(9,2)),16).
move(1,((9,2),(8,2)),17).
move(1,((8,2),(8,3)),18).
move(1,((8,3),(8,4)),19).
move(1,((8,4),(9,4)),20).
move(1,((9,4),(8,4)),21).
move(1,((8,4),(8,3)),33).
move(1,((8,3),(8,2)),34).
move(1,((8,2),(7,2)),35).
move(1,((7,2),(6,2)),36).
move(1,((6,2),(5,2)),37).
move(1,((5,2),(4,2)),38).
move(1,((4,2),(3,2)),39).
move(1,((3,2),(3,3)),40).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(2,2)),8).
move(2,((2,2),(1,2)),9).
move(2,((1,2),(1,1)),10).
move(2,((1,1),(1,2)),11).
move(2,((1,2),(2,2)),12).
move(2,((2,2),(2,3)),13).
move(2,((2,3),(2,4)),14).
move(2,((2,4),(3,4)),33).
move(2,((3,4),(4,4)),34).
move(2,((4,4),(5,4)),35).
move(2,((5,4),(6,4)),36).
move(2,((6,4),(7,4)),37).
move(2,((7,4),(8,4)),38).
move(2,((8,4),(9,4)),39).
move(2,((9,4),(10,4)),40).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(3,1)),8).
move(3,((3,1),(2,1)),9).
move(3,((2,1),(2,2)),10).
move(3,((2,2),(2,3)),11).
move(3,((2,3),(2,4)),12).
move(3,((2,4),(3,4)),14).
move(3,((3,4),(3,3)),20).
move(3,((3,3),(4,3)),21).
move(3,((4,3),(5,3)),22).
move(3,((5,3),(5,2)),23).
move(3,((5,2),(4,2)),24).
move(3,((4,2),(3,2)),25).
move(3,((3,2),(2,2)),26).
move(3,((2,2),(2,3)),27).
move(3,((2,3),(3,3)),33).
move(3,((3,3),(4,3)),35).
move(3,((4,3),(5,3)),36).
move(3,((5,3),(6,3)),37).
move(3,((6,3),(7,3)),38).
move(3,((7,3),(8,3)),39).
move(3,((8,3),(9,3)),40).
move(4,((3,6),(3,5)),2).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(3,3)),5).
move(4,((3,3),(3,2)),6).
move(4,((3,2),(2,2)),7).
move(4,((2,2),(1,2)),8).
move(4,((1,2),(1,1)),9).
move(4,((1,1),(2,1)),10).
move(4,((2,1),(2,2)),11).
move(4,((2,2),(3,2)),12).
move(4,((3,2),(3,3)),13).
move(4,((3,3),(3,2)),20).
move(4,((3,2),(3,3)),21).
move(4,((3,3),(3,4)),22).
move(4,((3,4),(4,4)),33).
move(4,((4,4),(4,3)),34).
move(4,((4,3),(5,3)),35).
move(4,((5,3),(6,3)),36).
move(4,((6,3),(6,4)),37).
move(4,((6,4),(7,4)),38).
move(4,((7,4),(8,4)),39).
move(4,((8,4),(9,4)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(4,2)),6).
move(5,((4,2),(4,1)),7).
move(5,((4,1),(4,2)),8).
move(5,((4,2),(4,3)),9).
move(5,((4,3),(4,4)),10).
move(5,((4,4),(4,5)),32).
move(5,((4,5),(4,4)),35).
move(5,((4,4),(5,4)),36).
move(5,((5,4),(5,3)),37).
move(5,((5,3),(6,3)),38).
move(5,((6,3),(7,3)),39).
move(5,((7,3),(8,3)),40).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(7,2)),8).
move(6,((7,2),(7,1)),9).
move(6,((7,1),(8,1)),10).
move(6,((8,1),(9,1)),11).
move(6,((9,1),(9,2)),12).
move(6,((9,2),(8,2)),13).
move(6,((8,2),(7,2)),14).
move(6,((7,2),(6,2)),15).
move(6,((6,2),(5,2)),16).
move(6,((5,2),(5,3)),17).
move(6,((5,3),(5,4)),18).
move(6,((5,4),(5,3)),32).
move(6,((5,3),(5,4)),33).
move(6,((5,4),(5,5)),34).
move(6,((5,5),(4,5)),36).
move(6,((4,5),(4,4)),37).
move(6,((4,4),(5,4)),38).
move(6,((5,4),(5,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(7,5)),4).
move(7,((7,5),(8,5)),5).
move(7,((8,5),(9,5)),7).
move(7,((9,5),(9,4)),8).
move(7,((9,4),(9,3)),9).
move(7,((9,3),(10,3)),10).
move(7,((10,3),(11,3)),11).
move(7,((11,3),(11,2)),12).
move(7,((11,2),(10,2)),13).
move(7,((10,2),(9,2)),14).
move(7,((9,2),(8,2)),15).
move(7,((8,2),(7,2)),16).
move(7,((7,2),(6,2)),17).
move(7,((6,2),(6,3)),18).
move(7,((6,3),(6,4)),19).
move(7,((6,4),(6,5)),32).
move(7,((6,5),(6,4)),33).
move(7,((6,4),(6,5)),36).
move(7,((6,5),(5,5)),37).
move(7,((5,5),(4,5)),38).
move(7,((4,5),(4,4)),39).
move(7,((4,4),(4,3)),40).
move(8,((7,6),(7,5)),2).
move(8,((7,5),(7,4)),3).
move(8,((7,4),(6,4)),4).
move(8,((6,4),(7,4)),5).
move(8,((7,4),(7,3)),6).
move(8,((7,3),(7,4)),8).
move(8,((7,4),(7,5)),21).
move(8,((7,5),(7,4)),22).
move(8,((7,4),(6,4)),32).
move(8,((6,4),(7,4)),33).
move(8,((7,4),(8,4)),35).
move(8,((8,4),(7,4)),36).
move(8,((7,4),(7,3)),37).
move(8,((7,3),(8,3)),38).
move(8,((8,3),(9,3)),39).
move(8,((9,3),(10,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.202s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1.203s

Choices      : 305      (Domain: 305)
Conflicts    : 6        (Analyzed: 6)
Restarts     : 0       
Model-Level  : 276.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 6        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 6        (Average Length:   33.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 6        (Average:  4.83 Max:   8 Sum:     29)
  Executed   : 6        (Average:  4.83 Max:   8 Sum:     29 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279638   (Original: 259767)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106472  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

