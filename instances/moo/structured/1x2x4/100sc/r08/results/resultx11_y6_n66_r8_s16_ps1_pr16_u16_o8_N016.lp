%%%%%
%Standard
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(5,5)),5).
move(2,((5,5),(5,4)),6).
move(2,((5,4),(5,3)),7).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(3,4)),4).
move(3,((3,4),(3,3)),7).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(9,6)),6).
move(4,((9,6),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(5,4)),3).
move(5,((5,4),(6,4)),4).
move(5,((6,4),(6,3)),5).
move(5,((6,3),(7,3)),6).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(4,4)),3).
move(6,((4,4),(4,3)),6).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),4).
move(7,((5,3),(4,3)),5).
move(7,((4,3),(3,3)),6).
move(7,((3,3),(2,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(8,4)),4).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.798s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.797s

Choices      : 438     
Conflicts    : 17       (Analyzed: 17)
Restarts     : 0       
Model-Level  : 346.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 17       (Deleted: 0)
  Binary     : 3        (Ratio:  17.65%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 17       (Average Length:   18.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 17       (Average:  5.41 Max:  13 Sum:     92)
  Executed   : 17       (Average:  5.41 Max:  13 Sum:     92 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261077   (Original: 241134)
  Choice     : 320     
Atoms        : 106367  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(5,5)),5).
move(2,((5,5),(5,4)),6).
move(2,((5,4),(5,3)),7).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(3,4)),3).
move(3,((3,4),(3,3)),7).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(9,6)),6).
move(4,((9,6),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(5,4)),3).
move(5,((5,4),(6,4)),4).
move(5,((6,4),(6,3)),5).
move(5,((6,3),(7,3)),6).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(4,4)),3).
move(6,((4,4),(4,3)),6).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),4).
move(7,((5,3),(4,3)),5).
move(7,((4,3),(3,3)),6).
move(7,((3,3),(2,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(8,4)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.736s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.734s

Choices      : 470      (Domain: 36)
Conflicts    : 17       (Analyzed: 17)
Restarts     : 0       
Model-Level  : 381.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 17       (Deleted: 0)
  Binary     : 3        (Ratio:  17.65%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 17       (Average Length:   18.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 17       (Average:  5.24 Max:  13 Sum:     89)
  Executed   : 17       (Average:  5.24 Max:  13 Sum:     89 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261188   (Original: 241245)
  Choice     : 320     
  Heuristic  : 37      
Atoms        : 106441  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDistance.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(3,5)),3).
move(2,((3,5),(3,4)),4).
move(2,((3,4),(4,4)),5).
move(2,((4,4),(5,4)),6).
move(2,((5,4),(5,3)),7).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),3).
move(3,((3,4),(3,3)),4).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(5,5)),3).
move(4,((5,5),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(8,5)),6).
move(4,((8,5),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(6,5)),3).
move(5,((6,5),(6,4)),4).
move(5,((6,4),(6,3)),5).
move(5,((6,3),(7,3)),6).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(4,5)),2).
move(6,((4,5),(4,4)),3).
move(6,((4,4),(4,3)),4).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(3,5)),4).
move(7,((3,5),(3,4)),5).
move(7,((3,4),(2,4)),6).
move(7,((2,4),(2,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(8,4)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.765s (Solving: 0.08s 1st Model: 0.08s Unsat: 0.00s)
CPU Time     : 1.719s

Choices      : 582      (Domain: 582)
Conflicts    : 2        (Analyzed: 2)
Restarts     : 0       
Model-Level  : 297.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 2        (Deleted: 0)
  Binary     : 1        (Ratio:  50.00%)
  Ternary    : 1        (Ratio:  50.00%)
  Conflict   : 2        (Average Length:    2.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 2        (Average: 142.50 Max: 280 Sum:    285)
  Executed   : 2        (Average: 142.50 Max: 280 Sum:    285 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279615   (Original: 259744)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106449  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(3,5)),6).
move(2,((3,5),(4,5)),7).
move(2,((4,5),(4,4)),8).
move(2,((4,4),(5,4)),9).
move(2,((5,4),(5,3)),11).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(3,4)),7).
move(3,((3,4),(3,3)),8).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(4,5)),2).
move(4,((4,5),(5,5)),3).
move(4,((5,5),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(8,5)),6).
move(4,((8,5),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(6,4)),4).
move(5,((6,4),(7,4)),5).
move(5,((7,4),(7,3)),6).
move(5,((7,3),(7,2)),8).
move(5,((7,2),(7,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,6)),2).
move(6,((5,6),(6,6)),3).
move(6,((6,6),(5,6)),4).
move(6,((5,6),(5,5)),5).
move(6,((5,5),(5,4)),6).
move(6,((5,4),(4,4)),7).
move(6,((4,4),(4,3)),8).
move(7,((6,6),(5,6)),1).
move(7,((5,6),(4,6)),2).
move(7,((4,6),(3,6)),3).
move(7,((3,6),(3,5)),4).
move(7,((3,5),(3,4)),5).
move(7,((3,4),(3,3)),6).
move(7,((3,3),(2,3)),7).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(8,5)),5).
move(8,((8,5),(8,4)),6).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.846s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.812s

Choices      : 671      (Domain: 137)
Conflicts    : 42       (Analyzed: 42)
Restarts     : 0       
Model-Level  : 296.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 42       (Deleted: 0)
  Binary     : 16       (Ratio:  38.10%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 42       (Average Length:   15.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 42       (Average:  8.93 Max:  36 Sum:    375)
  Executed   : 42       (Average:  8.93 Max:  36 Sum:    375 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279615   (Original: 259744)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106449  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(1,((8,3),(7,3)),4).
move(1,((7,3),(8,3)),9).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(5,5)),5).
move(2,((5,5),(5,4)),6).
move(2,((5,4),(5,3)),7).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),3).
move(3,((3,4),(4,4)),4).
move(3,((4,4),(3,4)),6).
move(3,((3,4),(3,3)),7).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(8,5)),6).
move(4,((8,5),(8,4)),7).
move(4,((8,4),(8,3)),8).
move(4,((8,3),(9,3)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(6,5)),3).
move(5,((6,5),(6,4)),4).
move(5,((6,4),(6,3)),5).
move(5,((6,3),(7,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(4,5)),2).
move(6,((4,5),(4,4)),3).
move(6,((4,4),(4,3)),4).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(3,5)),4).
move(7,((3,5),(3,4)),5).
move(7,((3,4),(3,3)),6).
move(7,((3,3),(2,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,5)),3).
move(8,((7,5),(7,6)),5).
move(8,((7,6),(8,6)),6).
move(8,((8,6),(8,5)),7).
move(8,((8,5),(8,4)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.825s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.812s

Choices      : 379      (Domain: 26)
Conflicts    : 7        (Analyzed: 7)
Restarts     : 0       
Model-Level  : 365.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 7        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 7        (Average Length:   41.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 7        (Average:  2.00 Max:   5 Sum:     14)
  Executed   : 7        (Average:  2.00 Max:   5 Sum:     14 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261800   (Original: 241873)
  Choice     : 320     
  Heuristic  : 598      (Original: 614)
Atoms        : 106492  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(5,5)),5).
move(2,((5,5),(5,4)),7).
move(2,((5,4),(5,3)),8).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(3,5)),2).
move(3,((3,5),(4,5)),3).
move(3,((4,5),(5,5)),4).
move(3,((5,5),(5,4)),5).
move(3,((5,4),(4,4)),7).
move(3,((4,4),(3,4)),8).
move(3,((3,4),(3,3)),9).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(4,5)),2).
move(4,((4,5),(5,5)),3).
move(4,((5,5),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(8,5)),6).
move(4,((8,5),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(7,5)),4).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(7,3)),6).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(6,3)),4).
move(6,((6,3),(5,3)),6).
move(6,((5,3),(4,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(5,4)),3).
move(7,((5,4),(5,3)),4).
move(7,((5,3),(4,3)),5).
move(7,((4,3),(3,3)),6).
move(7,((3,3),(2,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(7,4)),6).
move(8,((7,4),(8,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.799s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.797s

Choices      : 963      (Domain: 527)
Conflicts    : 15       (Analyzed: 15)
Restarts     : 0       
Model-Level  : 885.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 15       (Deleted: 0)
  Binary     : 2        (Ratio:  13.33%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 15       (Average Length:   22.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 15       (Average:  5.20 Max:  20 Sum:     78)
  Executed   : 15       (Average:  5.20 Max:  20 Sum:     78 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261697   (Original: 241755)
  Choice     : 320     
  Heuristic  : 546      (Original: 547)
Atoms        : 106441  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(4,5)),4).
move(2,((4,5),(4,4)),5).
move(2,((4,4),(4,5)),6).
move(2,((4,5),(5,5)),7).
move(2,((5,5),(5,4)),8).
move(2,((5,4),(5,3)),9).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(5,5)),5).
move(3,((5,5),(5,4)),6).
move(3,((5,4),(4,4)),7).
move(3,((4,4),(3,4)),8).
move(3,((3,4),(3,3)),9).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(9,6)),6).
move(4,((9,6),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(5,4)),3).
move(5,((5,4),(6,4)),4).
move(5,((6,4),(6,3)),5).
move(5,((6,3),(7,3)),6).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(5,2)),4).
move(6,((5,2),(5,3)),5).
move(6,((5,3),(4,3)),6).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),4).
move(7,((5,3),(4,3)),5).
move(7,((4,3),(3,3)),6).
move(7,((3,3),(2,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(8,4)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.758s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.750s

Choices      : 627      (Domain: 234)
Conflicts    : 24       (Analyzed: 24)
Restarts     : 0       
Model-Level  : 358.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 24       (Deleted: 0)
  Binary     : 3        (Ratio:  12.50%)
  Ternary    : 1        (Ratio:   4.17%)
  Conflict   : 24       (Average Length:   18.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 24       (Average: 11.21 Max:  37 Sum:    269)
  Executed   : 24       (Average: 11.21 Max:  37 Sum:    269 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279625   (Original: 259746)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106458  
Disjunctions : 0        (Original: 1)
Bodies       : 183368   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93247    (Atom=Atom: 342 Body=Body: 351 Other: 92554)
Tight        : Yes
Variables    : 182697   (Eliminated:    0 Frozen: 92083)
Constraints  : 500665   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((8,6),(8,5)),5).
move(1,((8,5),(8,4)),7).
move(1,((8,4),(8,3)),8).
move(1,((8,3),(8,4)),9).
move(1,((8,4),(8,3)),40).
move(2,((1,6),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(1,5)),6).
move(2,((1,5),(1,4)),7).
move(2,((1,4),(1,3)),8).
move(2,((1,3),(2,3)),10).
move(2,((2,3),(3,3)),11).
move(2,((3,3),(2,3)),12).
move(2,((2,3),(3,3)),14).
move(2,((3,3),(2,3)),15).
move(2,((2,3),(2,4)),16).
move(2,((2,4),(2,3)),17).
move(2,((2,3),(3,3)),19).
move(2,((3,3),(3,4)),20).
move(2,((3,4),(3,3)),23).
move(2,((3,3),(2,3)),24).
move(2,((2,3),(3,3)),26).
move(2,((3,3),(2,3)),27).
move(2,((2,3),(3,3)),28).
move(2,((3,3),(2,3)),29).
move(2,((2,3),(3,3)),31).
move(2,((3,3),(2,3)),33).
move(2,((2,3),(3,3)),37).
move(2,((3,3),(4,3)),38).
move(2,((4,3),(5,3)),39).
move(3,((2,6),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(2,4)),6).
move(3,((2,4),(2,3)),7).
move(3,((2,3),(3,3)),8).
move(3,((3,3),(2,3)),9).
move(3,((2,3),(2,4)),10).
move(3,((2,4),(2,3)),11).
move(3,((2,3),(2,4)),12).
move(3,((2,4),(3,4)),16).
move(3,((3,4),(2,4)),17).
move(3,((2,4),(2,3)),19).
move(3,((2,3),(2,4)),20).
move(3,((2,4),(3,4)),26).
move(3,((3,4),(2,4)),27).
move(3,((2,4),(2,3)),28).
move(3,((2,3),(2,4)),29).
move(3,((2,4),(3,4)),33).
move(3,((3,4),(2,4)),34).
move(3,((2,4),(3,4)),39).
move(3,((3,4),(3,3)),40).
move(4,((3,6),(3,5)),3).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(3,3)),5).
move(4,((3,3),(3,4)),7).
move(4,((3,4),(4,4)),8).
move(4,((4,4),(3,4)),9).
move(4,((3,4),(3,3)),15).
move(4,((3,3),(3,4)),17).
move(4,((3,4),(3,5)),18).
move(4,((3,5),(3,4)),19).
move(4,((3,4),(4,4)),20).
move(4,((4,4),(4,5)),22).
move(4,((4,5),(3,5)),23).
move(4,((3,5),(3,4)),25).
move(4,((3,4),(4,4)),26).
move(4,((4,4),(3,4)),28).
move(4,((3,4),(3,3)),30).
move(4,((3,3),(3,4)),31).
move(4,((3,4),(3,3)),33).
move(4,((3,3),(4,3)),35).
move(4,((4,3),(5,3)),36).
move(4,((5,3),(6,3)),37).
move(4,((6,3),(7,3)),38).
move(4,((7,3),(8,3)),39).
move(4,((8,3),(9,3)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(4,4)),6).
move(5,((4,4),(4,3)),8).
move(5,((4,3),(5,3)),10).
move(5,((5,3),(4,3)),11).
move(5,((4,3),(5,3)),12).
move(5,((5,3),(4,3)),14).
move(5,((4,3),(4,4)),15).
move(5,((4,4),(4,5)),17).
move(5,((4,5),(5,5)),21).
move(5,((5,5),(6,5)),22).
move(5,((6,5),(6,4)),23).
move(5,((6,4),(5,4)),25).
move(5,((5,4),(6,4)),26).
move(5,((6,4),(5,4)),27).
move(5,((5,4),(4,4)),28).
move(5,((4,4),(4,5)),29).
move(5,((4,5),(4,4)),33).
move(5,((4,4),(4,3)),37).
move(5,((4,3),(5,3)),38).
move(5,((5,3),(6,3)),39).
move(5,((6,3),(7,3)),40).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(5,4)),4).
move(6,((5,4),(5,3)),5).
move(6,((5,3),(4,3)),6).
move(6,((4,3),(5,3)),7).
move(6,((5,3),(5,4)),8).
move(6,((5,4),(4,4)),9).
move(6,((4,4),(5,4)),12).
move(6,((5,4),(4,4)),13).
move(6,((4,4),(5,4)),14).
move(6,((5,4),(5,3)),15).
move(6,((5,3),(5,4)),17).
move(6,((5,4),(5,3)),18).
move(6,((5,3),(5,4)),19).
move(6,((5,4),(5,5)),20).
move(6,((5,5),(5,4)),21).
move(6,((5,4),(5,5)),23).
move(6,((5,5),(5,4)),24).
move(6,((5,4),(5,3)),25).
move(6,((5,3),(5,4)),26).
move(6,((5,4),(5,5)),27).
move(6,((5,5),(5,4)),29).
move(6,((5,4),(4,4)),30).
move(6,((4,4),(5,4)),31).
move(6,((5,4),(5,3)),32).
move(6,((5,3),(4,3)),34).
move(6,((4,3),(5,3)),35).
move(6,((5,3),(5,4)),36).
move(6,((5,4),(4,4)),39).
move(6,((4,4),(4,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),5).
move(7,((6,4),(6,3)),6).
move(7,((6,3),(5,3)),8).
move(7,((5,3),(6,3)),9).
move(7,((6,3),(6,4)),10).
move(7,((6,4),(6,3)),11).
move(7,((6,3),(6,4)),13).
move(7,((6,4),(6,3)),16).
move(7,((6,3),(6,4)),17).
move(7,((6,4),(6,3)),18).
move(7,((6,3),(6,4)),19).
move(7,((6,4),(6,3)),23).
move(7,((6,3),(5,3)),24).
move(7,((5,3),(6,3)),25).
move(7,((6,3),(6,4)),28).
move(7,((6,4),(6,3)),29).
move(7,((6,3),(5,3)),30).
move(7,((5,3),(6,3)),31).
move(7,((6,3),(6,4)),32).
move(7,((6,4),(6,3)),33).
move(7,((6,3),(5,3)),34).
move(7,((5,3),(5,2)),35).
move(7,((5,2),(4,2)),36).
move(7,((4,2),(3,2)),37).
move(7,((3,2),(3,3)),38).
move(7,((3,3),(2,3)),39).
move(8,((7,6),(7,5)),4).
move(8,((7,5),(7,4)),6).
move(8,((7,4),(7,5)),7).
move(8,((7,5),(7,4)),8).
move(8,((7,4),(8,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.794s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.781s

Choices      : 295      (Domain: 295)
Conflicts    : 4        (Analyzed: 4)
Restarts     : 0       
Model-Level  : 289.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 4        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 4        (Average Length:   16.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 4        (Average:  1.50 Max:   2 Sum:      6)
  Executed   : 4        (Average:  1.50 Max:   2 Sum:      6 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279607   (Original: 259736)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106441  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hStrange.lp
%%%%%
move(1,((8,6),(7,6)),2).
move(1,((7,6),(7,5)),5).
move(1,((7,5),(7,4)),6).
move(1,((7,4),(8,4)),7).
move(1,((8,4),(8,3)),8).
move(1,((8,3),(8,2)),9).
move(1,((8,2),(9,2)),10).
move(1,((9,2),(10,2)),11).
move(1,((10,2),(10,1)),12).
move(1,((10,1),(11,1)),13).
move(1,((11,1),(10,1)),14).
move(1,((10,1),(10,2)),15).
move(1,((10,2),(9,2)),16).
move(1,((9,2),(8,2)),17).
move(1,((8,2),(8,3)),18).
move(1,((8,3),(8,4)),19).
move(1,((8,4),(7,4)),34).
move(1,((7,4),(7,5)),35).
move(1,((7,5),(7,4)),36).
move(1,((7,4),(6,4)),37).
move(1,((6,4),(7,4)),38).
move(1,((7,4),(8,4)),39).
move(1,((8,4),(8,3)),40).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(2,2)),8).
move(2,((2,2),(1,2)),9).
move(2,((1,2),(1,1)),10).
move(2,((1,1),(1,2)),11).
move(2,((1,2),(2,2)),12).
move(2,((2,2),(2,3)),13).
move(2,((2,3),(2,4)),14).
move(2,((2,4),(3,4)),34).
move(2,((3,4),(4,4)),35).
move(2,((4,4),(3,4)),36).
move(2,((3,4),(4,4)),37).
move(2,((4,4),(5,4)),38).
move(2,((5,4),(5,3)),40).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(3,1)),8).
move(3,((3,1),(2,1)),9).
move(3,((2,1),(2,2)),10).
move(3,((2,2),(2,3)),11).
move(3,((2,3),(2,4)),12).
move(3,((2,4),(3,4)),14).
move(3,((3,4),(3,3)),20).
move(3,((3,3),(4,3)),21).
move(3,((4,3),(5,3)),22).
move(3,((5,3),(5,2)),23).
move(3,((5,2),(4,2)),24).
move(3,((4,2),(3,2)),25).
move(3,((3,2),(2,2)),26).
move(3,((2,2),(2,3)),27).
move(3,((2,3),(2,4)),35).
move(3,((2,4),(2,5)),36).
move(3,((2,5),(2,4)),37).
move(3,((2,4),(3,4)),39).
move(3,((3,4),(3,3)),40).
move(4,((3,6),(3,5)),2).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(3,3)),5).
move(4,((3,3),(3,2)),6).
move(4,((3,2),(2,2)),7).
move(4,((2,2),(1,2)),8).
move(4,((1,2),(1,1)),9).
move(4,((1,1),(2,1)),10).
move(4,((2,1),(2,2)),11).
move(4,((2,2),(3,2)),12).
move(4,((3,2),(3,3)),13).
move(4,((3,3),(3,2)),20).
move(4,((3,2),(3,3)),21).
move(4,((3,3),(3,4)),22).
move(4,((3,4),(4,4)),34).
move(4,((4,4),(4,3)),35).
move(4,((4,3),(5,3)),36).
move(4,((5,3),(6,3)),37).
move(4,((6,3),(7,3)),38).
move(4,((7,3),(8,3)),39).
move(4,((8,3),(9,3)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(4,2)),6).
move(5,((4,2),(4,1)),7).
move(5,((4,1),(4,2)),8).
move(5,((4,2),(4,3)),9).
move(5,((4,3),(4,4)),10).
move(5,((4,4),(4,3)),34).
move(5,((4,3),(4,2)),35).
move(5,((4,2),(4,3)),36).
move(5,((4,3),(5,3)),37).
move(5,((5,3),(6,3)),39).
move(5,((6,3),(7,3)),40).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(7,2)),8).
move(6,((7,2),(7,1)),9).
move(6,((7,1),(8,1)),10).
move(6,((8,1),(9,1)),11).
move(6,((9,1),(9,2)),12).
move(6,((9,2),(8,2)),13).
move(6,((8,2),(7,2)),14).
move(6,((7,2),(6,2)),15).
move(6,((6,2),(5,2)),16).
move(6,((5,2),(5,3)),17).
move(6,((5,3),(5,4)),18).
move(6,((5,4),(6,4)),33).
move(6,((6,4),(6,3)),34).
move(6,((6,3),(7,3)),35).
move(6,((7,3),(7,2)),36).
move(6,((7,2),(6,2)),37).
move(6,((6,2),(5,2)),38).
move(6,((5,2),(4,2)),39).
move(6,((4,2),(4,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(7,5)),4).
move(7,((7,5),(8,5)),5).
move(7,((8,5),(9,5)),7).
move(7,((9,5),(9,4)),8).
move(7,((9,4),(9,3)),9).
move(7,((9,3),(10,3)),10).
move(7,((10,3),(11,3)),11).
move(7,((11,3),(11,2)),12).
move(7,((11,2),(10,2)),13).
move(7,((10,2),(9,2)),14).
move(7,((9,2),(8,2)),15).
move(7,((8,2),(7,2)),16).
move(7,((7,2),(6,2)),17).
move(7,((6,2),(6,3)),18).
move(7,((6,3),(6,4)),19).
move(7,((6,4),(6,3)),33).
move(7,((6,3),(6,2)),34).
move(7,((6,2),(5,2)),35).
move(7,((5,2),(4,2)),37).
move(7,((4,2),(3,2)),38).
move(7,((3,2),(2,2)),39).
move(7,((2,2),(2,3)),40).
move(8,((7,6),(7,5)),2).
move(8,((7,5),(7,4)),3).
move(8,((7,4),(6,4)),4).
move(8,((6,4),(7,4)),5).
move(8,((7,4),(7,3)),6).
move(8,((7,3),(7,4)),8).
move(8,((7,4),(7,5)),21).
move(8,((7,5),(7,4)),22).
move(8,((7,4),(7,5)),33).
move(8,((7,5),(6,5)),34).
move(8,((6,5),(6,4)),35).
move(8,((6,4),(6,5)),36).
move(8,((6,5),(7,5)),37).
move(8,((7,5),(8,5)),39).
move(8,((8,5),(8,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.723s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.703s

Choices      : 346      (Domain: 346)
Conflicts    : 10       (Analyzed: 10)
Restarts     : 0       
Model-Level  : 293.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 10       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 1        (Ratio:  10.00%)
  Conflict   : 10       (Average Length:   18.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 10       (Average:  5.30 Max:   8 Sum:     53)
  Executed   : 10       (Average:  5.30 Max:   8 Sum:     53 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279607   (Original: 259736)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106441  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

