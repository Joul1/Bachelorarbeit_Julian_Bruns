%%%%%
%Standard
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(6,3)),8).
move(1,((6,3),(7,3)),9).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(2,((3,3),(4,3)),6).
move(2,((4,3),(5,3)),7).
move(3,((3,6),(2,6)),1).
move(3,((2,6),(1,6)),2).
move(3,((1,6),(1,5)),3).
move(3,((1,5),(1,4)),4).
move(3,((1,4),(2,4)),5).
move(3,((2,4),(3,4)),6).
move(3,((3,4),(3,3)),7).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(5,2)),4).
move(5,((5,2),(5,1)),5).
move(5,((5,1),(6,1)),6).
move(5,((6,1),(7,1)),7).
move(5,((7,1),(7,2)),8).
move(5,((7,2),(7,3)),20).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(8,4)),3).
move(6,((8,4),(7,4)),4).
move(6,((7,4),(7,3)),5).
move(6,((7,3),(6,3)),7).
move(6,((6,3),(6,2)),8).
move(6,((6,2),(5,2)),9).
move(6,((5,2),(4,2)),10).
move(6,((4,2),(4,3)),20).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(9,4)),8).
move(7,((9,4),(8,4)),20).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),7).
move(8,((2,5),(2,4)),8).
move(8,((2,4),(2,3)),20).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(9,4)),3).
move(9,((9,4),(8,4)),5).
move(9,((8,4),(9,4)),6).
move(9,((9,4),(8,4)),8).
move(9,((8,4),(7,4)),10).
move(9,((7,4),(7,3)),11).
move(9,((7,3),(7,4)),20).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(7,4)),3).
move(10,((7,4),(6,4)),4).
move(10,((6,4),(5,4)),6).
move(10,((5,4),(5,5)),7).
move(10,((5,5),(4,5)),8).
move(10,((4,5),(4,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(7,5)),5).
move(11,((7,5),(7,4)),6).
move(11,((7,4),(7,3)),7).
move(11,((7,3),(7,4)),8).
move(11,((7,4),(6,4)),9).
move(11,((6,4),(5,4)),10).
move(11,((5,4),(4,4)),11).
move(11,((4,4),(3,4)),12).
move(11,((3,4),(2,4)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.731s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 0.734s

Choices      : 1547    
Conflicts    : 80       (Analyzed: 80)
Restarts     : 0       
Model-Level  : 300.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 80       (Deleted: 0)
  Binary     : 15       (Ratio:  18.75%)
  Ternary    : 2        (Ratio:   2.50%)
  Conflict   : 80       (Average Length:   21.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 80       (Average: 15.59 Max:  88 Sum:   1247)
  Executed   : 80       (Average: 15.59 Max:  88 Sum:   1247 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165688   (Original: 153701)
  Choice     : 220     
Atoms        : 69035   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(4,4)),6).
move(1,((4,4),(5,4)),7).
move(1,((5,4),(6,4)),8).
move(1,((6,4),(7,4)),9).
move(1,((7,4),(7,3)),10).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(3,4)),3).
move(2,((3,4),(4,4)),5).
move(2,((4,4),(4,3)),6).
move(2,((4,3),(4,4)),8).
move(2,((4,4),(5,4)),9).
move(2,((5,4),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(2,3)),8).
move(3,((2,3),(3,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),4).
move(5,((6,4),(7,4)),5).
move(5,((7,4),(7,3)),6).
move(5,((7,3),(7,2)),7).
move(5,((7,2),(7,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),7).
move(6,((6,3),(6,2)),8).
move(6,((6,2),(5,2)),9).
move(6,((5,2),(4,2)),10).
move(6,((4,2),(4,3)),20).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),3).
move(7,((7,4),(8,4)),4).
move(7,((8,4),(9,4)),5).
move(7,((9,4),(8,4)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(8,((2,4),(2,3)),20).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(6,5)),5).
move(9,((6,5),(5,5)),6).
move(9,((5,5),(5,4)),8).
move(9,((5,4),(5,3)),9).
move(9,((5,3),(6,3)),10).
move(9,((6,3),(7,3)),11).
move(9,((7,3),(7,4)),20).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,3)),3).
move(10,((8,3),(8,2)),4).
move(10,((8,2),(7,2)),5).
move(10,((7,2),(6,2)),6).
move(10,((6,2),(5,2)),7).
move(10,((5,2),(4,2)),8).
move(10,((4,2),(4,3)),9).
move(10,((4,3),(4,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(7,5)),5).
move(11,((7,5),(6,5)),8).
move(11,((6,5),(6,4)),9).
move(11,((6,4),(5,4)),10).
move(11,((5,4),(4,4)),11).
move(11,((4,4),(3,4)),12).
move(11,((3,4),(2,4)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.728s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 0.734s

Choices      : 1484    
Conflicts    : 84       (Analyzed: 84)
Restarts     : 0       
Model-Level  : 253.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 84       (Deleted: 0)
  Binary     : 19       (Ratio:  22.62%)
  Ternary    : 4        (Ratio:   4.76%)
  Conflict   : 84       (Average Length:   25.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 84       (Average: 14.65 Max: 106 Sum:   1231)
  Executed   : 84       (Average: 14.65 Max: 106 Sum:   1231 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165916   (Original: 153929)
  Choice     : 220     
  Heuristic  : 86      
Atoms        : 69177   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(1,5)),2).
move(1,((1,5),(2,5)),3).
move(1,((2,5),(3,5)),4).
move(1,((3,5),(4,5)),5).
move(1,((4,5),(5,5)),6).
move(1,((5,5),(5,4)),7).
move(1,((5,4),(6,4)),8).
move(1,((6,4),(7,4)),9).
move(1,((7,4),(7,3)),10).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),5).
move(2,((3,3),(4,3)),6).
move(2,((4,3),(4,4)),8).
move(2,((4,4),(5,4)),9).
move(2,((5,4),(5,3)),10).
move(3,((3,6),(3,5)),3).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(3,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),4).
move(5,((6,4),(7,4)),5).
move(5,((7,4),(7,3)),6).
move(5,((7,3),(7,2)),7).
move(5,((7,2),(7,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),7).
move(6,((6,3),(6,2)),8).
move(6,((6,2),(5,2)),9).
move(6,((5,2),(4,2)),10).
move(6,((4,2),(4,3)),20).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(8,4)),5).
move(7,((8,4),(9,4)),6).
move(7,((9,4),(8,4)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(8,((2,4),(2,3)),20).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(6,5)),5).
move(9,((6,5),(6,6)),6).
move(9,((6,6),(7,6)),8).
move(9,((7,6),(7,5)),9).
move(9,((7,5),(7,4)),10).
move(9,((7,4),(7,3)),11).
move(9,((7,3),(7,4)),20).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,3)),3).
move(10,((8,3),(8,2)),4).
move(10,((8,2),(7,2)),5).
move(10,((7,2),(6,2)),6).
move(10,((6,2),(5,2)),7).
move(10,((5,2),(4,2)),8).
move(10,((4,2),(4,3)),9).
move(10,((4,3),(4,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(7,5)),5).
move(11,((7,5),(6,5)),8).
move(11,((6,5),(6,4)),9).
move(11,((6,4),(5,4)),10).
move(11,((5,4),(4,4)),11).
move(11,((4,4),(3,4)),12).
move(11,((3,4),(2,4)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.735s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 0.734s

Choices      : 1448    
Conflicts    : 84       (Analyzed: 84)
Restarts     : 0       
Model-Level  : 238.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 84       (Deleted: 0)
  Binary     : 18       (Ratio:  21.43%)
  Ternary    : 4        (Ratio:   4.76%)
  Conflict   : 84       (Average Length:   26.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 84       (Average: 14.40 Max: 108 Sum:   1210)
  Executed   : 84       (Average: 14.40 Max: 108 Sum:   1210 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165841   (Original: 153854)
  Choice     : 220     
Atoms        : 69188   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(1,5)),2).
move(1,((1,5),(2,5)),3).
move(1,((2,5),(3,5)),4).
move(1,((3,5),(4,5)),5).
move(1,((4,5),(5,5)),6).
move(1,((5,5),(5,4)),7).
move(1,((5,4),(6,4)),8).
move(1,((6,4),(7,4)),9).
move(1,((7,4),(7,3)),10).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),5).
move(2,((3,3),(4,3)),6).
move(2,((4,3),(4,4)),8).
move(2,((4,4),(5,4)),9).
move(2,((5,4),(5,3)),10).
move(3,((3,6),(3,5)),3).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(3,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),4).
move(5,((6,4),(7,4)),5).
move(5,((7,4),(7,3)),6).
move(5,((7,3),(7,2)),7).
move(5,((7,2),(7,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),7).
move(6,((6,3),(6,2)),8).
move(6,((6,2),(5,2)),9).
move(6,((5,2),(4,2)),10).
move(6,((4,2),(4,3)),20).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(8,4)),5).
move(7,((8,4),(9,4)),6).
move(7,((9,4),(8,4)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(8,((2,4),(2,3)),20).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(6,5)),5).
move(9,((6,5),(6,6)),6).
move(9,((6,6),(7,6)),8).
move(9,((7,6),(7,5)),9).
move(9,((7,5),(7,4)),10).
move(9,((7,4),(7,3)),11).
move(9,((7,3),(7,4)),20).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,3)),3).
move(10,((8,3),(8,2)),4).
move(10,((8,2),(7,2)),5).
move(10,((7,2),(6,2)),6).
move(10,((6,2),(5,2)),7).
move(10,((5,2),(4,2)),8).
move(10,((4,2),(4,3)),9).
move(10,((4,3),(4,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(7,5)),5).
move(11,((7,5),(6,5)),8).
move(11,((6,5),(6,4)),9).
move(11,((6,4),(5,4)),10).
move(11,((5,4),(4,4)),11).
move(11,((4,4),(3,4)),12).
move(11,((3,4),(2,4)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.740s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 0.734s

Choices      : 1448    
Conflicts    : 84       (Analyzed: 84)
Restarts     : 0       
Model-Level  : 238.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 84       (Deleted: 0)
  Binary     : 18       (Ratio:  21.43%)
  Ternary    : 4        (Ratio:   4.76%)
  Conflict   : 84       (Average Length:   26.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 84       (Average: 14.40 Max: 108 Sum:   1210)
  Executed   : 84       (Average: 14.40 Max: 108 Sum:   1210 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165841   (Original: 153854)
  Choice     : 220     
Atoms        : 69188   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(2,((3,3),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(2,((5,3),(5,4)),7).
move(2,((5,4),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(4,2)),5).
move(3,((4,2),(4,3)),6).
move(3,((4,3),(5,3)),7).
move(3,((5,3),(4,3)),8).
move(3,((4,3),(3,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(8,5)),5).
move(4,((8,5),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(4,((9,4),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(7,3)),6).
move(5,((7,3),(8,3)),7).
move(5,((8,3),(7,3)),8).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),7).
move(6,((6,3),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),4).
move(7,((6,2),(6,3)),6).
move(7,((6,3),(7,3)),7).
move(7,((7,3),(7,4)),8).
move(7,((7,4),(8,4)),20).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(4,4)),5).
move(8,((4,4),(3,4)),6).
move(8,((3,4),(2,4)),7).
move(8,((2,4),(2,3)),8).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(9,5)),3).
move(9,((9,5),(8,5)),4).
move(9,((8,5),(8,4)),5).
move(9,((8,4),(7,4)),7).
move(9,((7,4),(7,5)),8).
move(9,((7,5),(6,5)),9).
move(9,((6,5),(6,4)),10).
move(9,((6,4),(7,4)),20).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(3,5)),9).
move(11,((3,5),(2,5)),10).
move(11,((2,5),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.712s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.703s

Choices      : 891     
Conflicts    : 57       (Analyzed: 57)
Restarts     : 0       
Model-Level  : 386.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 57       (Deleted: 0)
  Binary     : 7        (Ratio:  12.28%)
  Ternary    : 3        (Ratio:   5.26%)
  Conflict   : 57       (Average Length:   19.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 57       (Average:  8.86 Max:  56 Sum:    505)
  Executed   : 57       (Average:  8.86 Max:  56 Sum:    505 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 167188   (Original: 155223)
  Choice     : 220     
  Heuristic  : 1273     (Original: 1295)
Atoms        : 69262   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(7,4)),8).
move(1,((7,4),(7,3)),9).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(2,((3,3),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(3,3)),5).
move(3,((3,3),(4,3)),6).
move(3,((4,3),(3,3)),7).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(7,3)),6).
move(4,((7,3),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(5,2)),4).
move(5,((5,2),(5,1)),5).
move(5,((5,1),(6,1)),6).
move(5,((6,1),(6,2)),7).
move(5,((6,2),(7,2)),8).
move(5,((7,2),(7,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(5,6)),4).
move(6,((5,6),(4,6)),5).
move(6,((4,6),(4,5)),6).
move(6,((4,5),(3,5)),8).
move(6,((3,5),(3,4)),9).
move(6,((3,4),(4,4)),10).
move(6,((4,4),(4,3)),20).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(8,4)),20).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(8,((2,4),(2,3)),20).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(6,5)),5).
move(9,((6,5),(6,4)),6).
move(9,((6,4),(6,3)),7).
move(9,((6,3),(7,3)),11).
move(9,((7,3),(7,4)),20).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(10,((4,4),(4,5)),8).
move(10,((4,5),(4,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(3,5)),9).
move(11,((3,5),(3,4)),12).
move(11,((3,4),(2,4)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.743s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.750s

Choices      : 1091    
Conflicts    : 45       (Analyzed: 45)
Restarts     : 0       
Model-Level  : 297.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 45       (Deleted: 0)
  Binary     : 10       (Ratio:  22.22%)
  Ternary    : 1        (Ratio:   2.22%)
  Conflict   : 45       (Average Length:   26.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 45       (Average: 17.64 Max: 105 Sum:    794)
  Executed   : 45       (Average: 17.64 Max: 105 Sum:    794 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 166536   (Original: 154556)
  Choice     : 220     
  Heuristic  : 706      (Original: 713)
Atoms        : 69177   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),10).
move(1,((8,4),(8,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(3,4)),3).
move(2,((3,4),(4,4)),4).
move(2,((4,4),(5,4)),5).
move(2,((5,4),(5,3)),8).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(8,4)),20).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(4,4)),5).
move(8,((4,4),(3,4)),6).
move(8,((3,4),(2,4)),7).
move(8,((2,4),(2,3)),8).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(9,4)),4).
move(9,((9,4),(8,4)),5).
move(9,((8,4),(7,4)),6).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(3,5)),9).
move(11,((3,5),(3,4)),10).
move(11,((3,4),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.876s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.875s

Choices      : 247      (Domain: 44)
Conflicts    : 24       (Analyzed: 24)
Restarts     : 0       
Model-Level  : 168.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 24       (Deleted: 0)
  Binary     : 4        (Ratio:  16.67%)
  Ternary    : 1        (Ratio:   4.17%)
  Conflict   : 24       (Average Length:   21.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 24       (Average:  3.29 Max:  13 Sum:     79)
  Executed   : 24       (Average:  3.29 Max:  13 Sum:     79 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176511   (Original: 164656)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69199   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(5,5)),4).
move(2,((5,5),(5,4)),5).
move(2,((5,4),(5,3)),8).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),8).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(8,4)),20).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(5,5)),3).
move(8,((5,5),(5,4)),4).
move(8,((5,4),(4,4)),5).
move(8,((4,4),(4,3)),6).
move(8,((4,3),(3,3)),7).
move(8,((3,3),(2,3)),8).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(9,5)),2).
move(9,((9,5),(9,4)),3).
move(9,((9,4),(8,4)),4).
move(9,((8,4),(7,4)),5).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(3,5)),9).
move(11,((3,5),(2,5)),10).
move(11,((2,5),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.925s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.922s

Choices      : 400     
Conflicts    : 29       (Analyzed: 29)
Restarts     : 0       
Model-Level  : 223.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 29       (Deleted: 0)
  Binary     : 7        (Ratio:  24.14%)
  Ternary    : 2        (Ratio:   6.90%)
  Conflict   : 29       (Average Length:   20.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 29       (Average:  6.10 Max:  26 Sum:    177)
  Executed   : 29       (Average:  6.10 Max:  26 Sum:    177 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176489   (Original: 164634)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69177   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(2,1)),9).
move(1,((2,1),(1,1)),10).
move(1,((1,1),(1,2)),11).
move(1,((1,2),(2,2)),12).
move(1,((2,2),(2,3)),13).
move(1,((2,3),(3,3)),15).
move(1,((3,3),(4,3)),16).
move(1,((4,3),(5,3)),17).
move(1,((5,3),(6,3)),18).
move(1,((6,3),(7,3)),19).
move(1,((7,3),(8,3)),20).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(3,2)),7).
move(2,((3,2),(3,1)),8).
move(2,((3,1),(3,2)),9).
move(2,((3,2),(2,2)),10).
move(2,((2,2),(2,3)),11).
move(2,((2,3),(2,4)),12).
move(2,((2,4),(3,4)),13).
move(2,((3,4),(3,3)),14).
move(2,((3,3),(3,2)),15).
move(2,((3,2),(4,2)),16).
move(2,((4,2),(4,3)),17).
move(2,((4,3),(3,3)),18).
move(2,((3,3),(4,3)),19).
move(2,((4,3),(5,3)),20).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),5).
move(3,((3,3),(3,2)),6).
move(3,((3,2),(2,2)),7).
move(3,((2,2),(1,2)),8).
move(3,((1,2),(2,2)),11).
move(3,((2,2),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(3,2)),14).
move(3,((3,2),(2,2)),15).
move(3,((2,2),(3,2)),17).
move(3,((3,2),(4,2)),18).
move(3,((4,2),(3,2)),19).
move(3,((3,2),(3,3)),20).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,2)),6).
move(4,((4,2),(4,1)),7).
move(4,((4,1),(4,2)),8).
move(4,((4,2),(4,3)),9).
move(4,((4,3),(4,4)),10).
move(4,((4,4),(4,3)),14).
move(4,((4,3),(5,3)),15).
move(4,((5,3),(6,3)),16).
move(4,((6,3),(7,3)),17).
move(4,((7,3),(8,3)),18).
move(4,((8,3),(9,3)),19).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(5,2)),8).
move(5,((5,2),(5,3)),9).
move(5,((5,3),(5,4)),10).
move(5,((5,4),(6,4)),13).
move(5,((6,4),(7,4)),14).
move(5,((7,4),(7,5)),15).
move(5,((7,5),(6,5)),16).
move(5,((6,5),(6,4)),17).
move(5,((6,4),(6,3)),19).
move(5,((6,3),(7,3)),20).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,2)),7).
move(6,((9,2),(10,2)),8).
move(6,((10,2),(11,2)),9).
move(6,((11,2),(11,1)),10).
move(6,((11,1),(10,1)),11).
move(6,((10,1),(10,2)),12).
move(6,((10,2),(9,2)),13).
move(6,((9,2),(8,2)),14).
move(6,((8,2),(7,2)),15).
move(6,((7,2),(6,2)),16).
move(6,((6,2),(5,2)),18).
move(6,((5,2),(4,2)),19).
move(6,((4,2),(4,3)),20).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(6,1)),7).
move(7,((6,1),(6,2)),8).
move(7,((6,2),(6,3)),9).
move(7,((6,3),(6,4)),10).
move(7,((6,4),(7,4)),13).
move(7,((7,4),(7,5)),14).
move(7,((7,5),(8,5)),15).
move(7,((8,5),(9,5)),16).
move(7,((9,5),(10,5)),17).
move(7,((10,5),(10,4)),18).
move(7,((10,4),(9,4)),19).
move(7,((9,4),(8,4)),20).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(7,4)),10).
move(8,((7,4),(7,5)),13).
move(8,((7,5),(6,5)),14).
move(8,((6,5),(5,5)),15).
move(8,((5,5),(4,5)),16).
move(8,((4,5),(3,5)),17).
move(8,((3,5),(3,4)),18).
move(8,((3,4),(2,4)),19).
move(8,((2,4),(2,3)),20).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(10,6)),3).
move(9,((10,6),(10,5)),4).
move(9,((10,5),(10,4)),6).
move(9,((10,4),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(9,((11,3),(10,3)),9).
move(9,((10,3),(10,4)),11).
move(9,((10,4),(10,3)),13).
move(9,((10,3),(9,3)),14).
move(9,((9,3),(8,3)),15).
move(9,((8,3),(8,2)),16).
move(9,((8,2),(7,2)),17).
move(9,((7,2),(7,3)),18).
move(9,((7,3),(7,4)),19).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,3)),5).
move(10,((8,3),(8,2)),6).
move(10,((8,2),(8,1)),7).
move(10,((8,1),(9,1)),8).
move(10,((9,1),(9,2)),9).
move(10,((9,2),(8,2)),10).
move(10,((8,2),(8,3)),11).
move(10,((8,3),(7,3)),12).
move(10,((7,3),(6,3)),13).
move(10,((6,3),(6,2)),14).
move(10,((6,2),(5,2)),15).
move(10,((5,2),(4,2)),17).
move(10,((4,2),(4,3)),18).
move(10,((4,3),(4,4)),19).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(10,2)),7).
move(11,((10,2),(10,1)),8).
move(11,((10,1),(10,2)),10).
move(11,((10,2),(10,3)),11).
move(11,((10,3),(9,3)),12).
move(11,((9,3),(9,4)),13).
move(11,((9,4),(8,4)),14).
move(11,((8,4),(7,4)),15).
move(11,((7,4),(6,4)),16).
move(11,((6,4),(5,4)),17).
move(11,((5,4),(4,4)),18).
move(11,((4,4),(3,4)),19).
move(11,((3,4),(2,4)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.911s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.906s

Choices      : 388      (Domain: 388)
Conflicts    : 38       (Analyzed: 38)
Restarts     : 0       
Model-Level  : 157.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 38       (Deleted: 0)
  Binary     : 3        (Ratio:   7.89%)
  Ternary    : 4        (Ratio:  10.53%)
  Conflict   : 38       (Average Length:   15.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 38       (Average:  6.08 Max:  27 Sum:    231)
  Executed   : 38       (Average:  6.08 Max:  27 Sum:    231 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176489   (Original: 164634)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69177   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

