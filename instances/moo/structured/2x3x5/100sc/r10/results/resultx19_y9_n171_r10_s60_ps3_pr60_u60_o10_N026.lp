%%%%%
%Standard
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(4,8)),4).
move(1,((4,8),(5,8)),5).
move(1,((5,8),(6,8)),6).
move(1,((6,8),(6,7)),7).
move(1,((6,7),(7,7)),8).
move(1,((7,7),(8,7)),9).
move(1,((8,7),(8,6)),10).
move(1,((8,6),(8,5)),11).
move(1,((8,5),(9,5)),12).
move(1,((9,5),(9,4)),14).
move(1,((9,4),(8,4)),15).
move(1,((8,4),(7,4)),16).
move(1,((7,4),(7,3)),17).
move(1,((7,3),(6,3)),18).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(5,9)),3).
move(2,((5,9),(5,8)),4).
move(2,((5,8),(6,8)),5).
move(2,((6,8),(7,8)),6).
move(2,((7,8),(7,7)),7).
move(2,((7,7),(8,7)),8).
move(2,((8,7),(8,6)),9).
move(2,((8,6),(9,6)),10).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(4,6)),4).
move(3,((4,6),(5,6)),5).
move(3,((5,6),(6,6)),6).
move(3,((6,6),(7,6)),7).
move(3,((7,6),(8,6)),8).
move(3,((8,6),(8,5)),9).
move(3,((8,5),(9,5)),10).
move(3,((9,5),(10,5)),11).
move(3,((10,5),(10,6)),12).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(5,7)),3).
move(4,((5,7),(5,6)),6).
move(4,((5,6),(6,6)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(5,3)),8).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(7,((8,3),(7,3)),8).
move(7,((7,3),(8,3)),11).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(8,7)),2).
move(8,((8,7),(8,6)),3).
move(8,((8,6),(8,5)),4).
move(8,((8,5),(8,4)),5).
move(8,((8,4),(8,3)),6).
move(8,((8,3),(8,2)),7).
move(8,((8,2),(8,1)),8).
move(8,((8,1),(8,2)),9).
move(8,((8,2),(8,3)),10).
move(8,((8,3),(9,3)),11).
move(8,((9,3),(10,3)),12).
move(8,((10,3),(11,3)),13).
move(8,((11,3),(12,3)),14).
move(8,((12,3),(12,4)),15).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(6,9)),3).
move(9,((6,9),(5,9)),4).
move(9,((5,9),(4,9)),5).
move(9,((4,9),(3,9)),6).
move(9,((3,9),(2,9)),7).
move(9,((2,9),(1,9)),8).
move(9,((1,9),(1,8)),9).
move(9,((1,8),(1,9)),10).
move(9,((1,9),(2,9)),11).
move(9,((2,9),(3,9)),12).
move(9,((3,9),(3,8)),13).
move(9,((3,8),(3,7)),14).
move(9,((3,7),(3,6)),15).
move(10,((10,9),(11,9)),1).
move(10,((11,9),(12,9)),2).
move(10,((12,9),(13,9)),3).
move(10,((13,9),(13,8)),4).
move(10,((13,8),(13,7)),5).
move(10,((13,7),(14,7)),6).
move(10,((14,7),(14,6)),7).
move(10,((14,6),(15,6)),8).
move(10,((15,6),(15,5)),9).
move(10,((15,5),(16,5)),10).
move(10,((16,5),(17,5)),11).
move(10,((17,5),(17,4)),12).
move(10,((17,4),(18,4)),13).
move(10,((18,4),(18,3)),14).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.602s (Solving: 0.27s 1st Model: 0.27s Unsat: 0.00s)
CPU Time     : 4.500s

Choices      : 6129    
Conflicts    : 70       (Analyzed: 70)
Restarts     : 0       
Model-Level  : 1164.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 70       (Deleted: 0)
  Binary     : 17       (Ratio:  24.29%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 70       (Average Length:   50.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 70       (Average: 70.93 Max: 458 Sum:   4965)
  Executed   : 70       (Average: 70.93 Max: 458 Sum:   4965 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 826268   (Original: 769656)
  Choice     : 400     
Atoms        : 338345  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(3,8)),3).
move(1,((3,8),(4,8)),4).
move(1,((4,8),(4,7)),5).
move(1,((4,7),(4,6)),6).
move(1,((4,6),(4,5)),7).
move(1,((4,5),(5,5)),8).
move(1,((5,5),(6,5)),9).
move(1,((6,5),(6,4)),10).
move(1,((6,4),(6,3)),11).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(3,8)),2).
move(2,((3,8),(4,8)),3).
move(2,((4,8),(5,8)),4).
move(2,((5,8),(6,8)),5).
move(2,((6,8),(7,8)),6).
move(2,((7,8),(8,8)),7).
move(2,((8,8),(9,8)),8).
move(2,((9,8),(9,7)),9).
move(2,((9,7),(9,6)),10).
move(3,((3,9),(4,9)),1).
move(3,((4,9),(5,9)),2).
move(3,((5,9),(5,8)),3).
move(3,((5,8),(6,8)),4).
move(3,((6,8),(7,8)),5).
move(3,((7,8),(8,8)),6).
move(3,((8,8),(9,8)),7).
move(3,((9,8),(10,8)),8).
move(3,((10,8),(10,7)),9).
move(3,((10,7),(10,6)),10).
move(3,((10,6),(10,5)),11).
move(3,((10,5),(10,6)),12).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,9)),2).
move(4,((4,9),(5,9)),3).
move(4,((5,9),(4,9)),4).
move(4,((4,9),(3,9)),5).
move(4,((3,9),(2,9)),6).
move(4,((2,9),(2,8)),7).
move(4,((2,8),(2,9)),8).
move(4,((2,9),(3,9)),9).
move(4,((3,9),(4,9)),10).
move(4,((4,9),(4,8)),13).
move(4,((4,8),(4,7)),14).
move(4,((4,7),(4,6)),15).
move(4,((4,6),(5,6)),16).
move(4,((5,6),(6,6)),17).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(5,3)),8).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(8,7)),2).
move(8,((8,7),(8,6)),3).
move(8,((8,6),(9,6)),4).
move(8,((9,6),(10,6)),5).
move(8,((10,6),(10,5)),6).
move(8,((10,5),(11,5)),7).
move(8,((11,5),(11,4)),8).
move(8,((11,4),(12,4)),9).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(6,9)),3).
move(9,((6,9),(5,9)),4).
move(9,((5,9),(4,9)),5).
move(9,((4,9),(3,9)),6).
move(9,((3,9),(2,9)),7).
move(9,((2,9),(1,9)),8).
move(9,((1,9),(1,8)),9).
move(9,((1,8),(1,9)),10).
move(9,((1,9),(2,9)),11).
move(9,((2,9),(3,9)),12).
move(9,((3,9),(3,8)),13).
move(9,((3,8),(3,7)),14).
move(9,((3,7),(3,6)),15).
move(10,((10,9),(11,9)),1).
move(10,((11,9),(12,9)),2).
move(10,((12,9),(13,9)),3).
move(10,((13,9),(14,9)),4).
move(10,((14,9),(15,9)),5).
move(10,((15,9),(15,8)),6).
move(10,((15,8),(15,7)),7).
move(10,((15,7),(15,6)),8).
move(10,((15,6),(15,5)),9).
move(10,((15,5),(16,5)),10).
move(10,((16,5),(17,5)),11).
move(10,((17,5),(17,4)),12).
move(10,((17,4),(18,4)),13).
move(10,((18,4),(18,3)),14).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 5.035s (Solving: 0.23s 1st Model: 0.23s Unsat: 0.00s)
CPU Time     : 4.719s

Choices      : 4541     (Domain: 72)
Conflicts    : 60       (Analyzed: 60)
Restarts     : 0       
Model-Level  : 1134.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 60       (Deleted: 0)
  Binary     : 11       (Ratio:  18.33%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 60       (Average Length:   45.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 60       (Average: 56.78 Max: 211 Sum:   3407)
  Executed   : 60       (Average: 56.78 Max: 211 Sum:   3407 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 826477   (Original: 769865)
  Choice     : 400     
  Heuristic  : 75      
Atoms        : 338479  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(2,8)),2).
move(1,((2,8),(3,8)),3).
move(1,((3,8),(3,7)),4).
move(1,((3,7),(3,6)),5).
move(1,((3,6),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(4,4)),8).
move(1,((4,4),(5,4)),9).
move(1,((5,4),(6,4)),10).
move(1,((6,4),(6,3)),11).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(5,9)),3).
move(2,((5,9),(5,8)),4).
move(2,((5,8),(6,8)),5).
move(2,((6,8),(6,7)),6).
move(2,((6,7),(7,7)),7).
move(2,((7,7),(7,6)),8).
move(2,((7,6),(8,6)),9).
move(2,((8,6),(9,6)),10).
move(3,((3,9),(4,9)),1).
move(3,((4,9),(5,9)),2).
move(3,((5,9),(5,8)),3).
move(3,((5,8),(6,8)),4).
move(3,((6,8),(7,8)),5).
move(3,((7,8),(7,7)),6).
move(3,((7,7),(8,7)),7).
move(3,((8,7),(8,6)),8).
move(3,((8,6),(9,6)),9).
move(3,((9,6),(10,6)),10).
move(4,((4,9),(5,9)),1).
move(4,((5,9),(6,9)),2).
move(4,((6,9),(6,8)),3).
move(4,((6,8),(6,7)),4).
move(4,((6,7),(6,6)),5).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(5,8)),2).
move(6,((5,8),(4,8)),3).
move(6,((4,8),(4,7)),4).
move(6,((4,7),(4,6)),5).
move(6,((4,6),(4,5)),6).
move(6,((4,5),(4,4)),7).
move(6,((4,4),(4,3)),8).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(8,8)),2).
move(7,((8,8),(8,7)),3).
move(7,((8,7),(8,6)),4).
move(7,((8,6),(8,5)),5).
move(7,((8,5),(8,4)),6).
move(7,((8,4),(8,3)),7).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(9,8)),2).
move(8,((9,8),(9,7)),3).
move(8,((9,7),(9,6)),4).
move(8,((9,6),(9,5)),5).
move(8,((9,5),(9,4)),6).
move(8,((9,4),(10,4)),7).
move(8,((10,4),(11,4)),8).
move(8,((11,4),(12,4)),9).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(6,9)),3).
move(9,((6,9),(5,9)),4).
move(9,((5,9),(5,8)),5).
move(9,((5,8),(5,7)),6).
move(9,((5,7),(5,6)),7).
move(9,((5,6),(4,6)),8).
move(9,((4,6),(3,6)),9).
move(10,((10,9),(11,9)),1).
move(10,((11,9),(12,9)),2).
move(10,((12,9),(13,9)),3).
move(10,((13,9),(14,9)),4).
move(10,((14,9),(15,9)),5).
move(10,((15,9),(16,9)),6).
move(10,((16,9),(17,9)),7).
move(10,((17,9),(17,8)),8).
move(10,((17,8),(17,7)),9).
move(10,((17,7),(17,6)),10).
move(10,((17,6),(18,6)),11).
move(10,((18,6),(18,5)),12).
move(10,((18,5),(18,4)),13).
move(10,((18,4),(18,3)),14).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.584s (Solving: 0.09s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 4.406s

Choices      : 483      (Domain: 483)
Conflicts    : 13       (Analyzed: 13)
Restarts     : 0       
Model-Level  : 359.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 13       (Deleted: 0)
  Binary     : 13       (Ratio: 100.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 13       (Average Length:    2.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 13       (Average:  9.54 Max:  14 Sum:    124)
  Executed   : 13       (Average:  9.54 Max:  14 Sum:    124 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878907   (Original: 822405)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338489  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(2,4)),6).
move(1,((2,4),(3,4)),10).
move(1,((3,4),(4,4)),11).
move(1,((4,4),(5,4)),12).
move(1,((5,4),(6,4)),13).
move(1,((6,4),(6,3)),14).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(3,5)),9).
move(2,((3,5),(4,5)),10).
move(2,((4,5),(5,5)),11).
move(2,((5,5),(6,5)),12).
move(2,((6,5),(7,5)),13).
move(2,((7,5),(7,6)),15).
move(2,((7,6),(8,6)),16).
move(2,((8,6),(9,6)),19).
move(2,((9,6),(8,6)),20).
move(2,((8,6),(9,6)),21).
move(3,((3,9),(2,9)),2).
move(3,((2,9),(3,9)),3).
move(3,((3,9),(2,9)),4).
move(3,((2,9),(2,8)),5).
move(3,((2,8),(2,7)),6).
move(3,((2,7),(2,6)),7).
move(3,((2,6),(3,6)),10).
move(3,((3,6),(4,6)),11).
move(3,((4,6),(4,5)),12).
move(3,((4,5),(5,5)),13).
move(3,((5,5),(6,5)),14).
move(3,((6,5),(7,5)),15).
move(3,((7,5),(8,5)),16).
move(3,((8,5),(9,5)),17).
move(3,((9,5),(9,6)),18).
move(3,((9,6),(10,6)),19).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(3,8)),4).
move(4,((3,8),(3,7)),5).
move(4,((3,7),(4,7)),6).
move(4,((4,7),(5,7)),7).
move(4,((5,7),(5,6)),8).
move(4,((5,6),(6,6)),9).
move(5,((5,9),(4,9)),1).
move(5,((4,9),(3,9)),2).
move(5,((3,9),(3,8)),3).
move(5,((3,8),(3,7)),4).
move(5,((3,7),(3,6)),5).
move(5,((3,6),(3,5)),6).
move(5,((3,5),(3,4)),7).
move(5,((3,4),(3,3)),9).
move(5,((3,3),(2,3)),10).
move(5,((2,3),(2,2)),11).
move(5,((2,2),(3,2)),12).
move(5,((3,2),(4,2)),13).
move(5,((4,2),(5,2)),14).
move(5,((5,2),(5,3)),15).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),8).
move(6,((6,3),(6,2)),9).
move(6,((6,2),(6,1)),10).
move(6,((6,1),(6,2)),11).
move(6,((6,2),(6,3)),12).
move(6,((6,3),(5,3)),13).
move(6,((5,3),(4,3)),14).
move(7,((7,9),(7,8)),3).
move(7,((7,8),(7,7)),4).
move(7,((7,7),(7,6)),5).
move(7,((7,6),(7,5)),6).
move(7,((7,5),(8,5)),7).
move(7,((8,5),(9,5)),8).
move(7,((9,5),(9,4)),9).
move(7,((9,4),(10,4)),10).
move(7,((10,4),(11,4)),11).
move(7,((11,4),(11,3)),12).
move(7,((11,3),(10,3)),13).
move(7,((10,3),(9,3)),14).
move(7,((9,3),(8,3)),15).
move(8,((8,9),(8,8)),2).
move(8,((8,8),(8,7)),5).
move(8,((8,7),(8,6)),6).
move(8,((8,6),(9,6)),7).
move(8,((9,6),(10,6)),8).
move(8,((10,6),(11,6)),9).
move(8,((11,6),(12,6)),10).
move(8,((12,6),(13,6)),11).
move(8,((13,6),(14,6)),12).
move(8,((14,6),(15,6)),13).
move(8,((15,6),(15,5)),14).
move(8,((15,5),(15,4)),15).
move(8,((15,4),(15,3)),16).
move(8,((15,3),(15,2)),17).
move(8,((15,2),(14,2)),18).
move(8,((14,2),(13,2)),19).
move(8,((13,2),(12,2)),20).
move(8,((12,2),(12,3)),21).
move(8,((12,3),(12,4)),24).
move(8,((12,4),(12,3)),25).
move(8,((12,3),(11,3)),27).
move(8,((11,3),(11,4)),28).
move(8,((11,4),(11,3)),31).
move(8,((11,3),(11,4)),32).
move(8,((11,4),(11,3)),33).
move(8,((11,3),(12,3)),34).
move(8,((12,3),(12,4)),40).
move(9,((9,9),(9,8)),2).
move(9,((9,8),(8,8)),6).
move(9,((8,8),(8,7)),7).
move(9,((8,7),(7,7)),8).
move(9,((7,7),(6,7)),9).
move(9,((6,7),(5,7)),10).
move(9,((5,7),(4,7)),11).
move(9,((4,7),(3,7)),12).
move(9,((3,7),(3,6)),15).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(9,7)),3).
move(10,((9,7),(10,7)),7).
move(10,((10,7),(11,7)),8).
move(10,((11,7),(12,7)),9).
move(10,((12,7),(13,7)),10).
move(10,((13,7),(14,7)),11).
move(10,((14,7),(15,7)),12).
move(10,((15,7),(16,7)),13).
move(10,((16,7),(16,6)),14).
move(10,((16,6),(16,5)),15).
move(10,((16,5),(16,4)),16).
move(10,((16,4),(16,3)),17).
move(10,((16,3),(16,2)),23).
move(10,((16,2),(16,3)),24).
move(10,((16,3),(15,3)),25).
move(10,((15,3),(15,2)),26).
move(10,((15,2),(16,2)),36).
move(10,((16,2),(17,2)),37).
move(10,((17,2),(18,2)),38).
move(10,((18,2),(18,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.882s (Solving: 0.50s 1st Model: 0.50s Unsat: 0.00s)
CPU Time     : 4.766s

Choices      : 4145     (Domain: 859)
Conflicts    : 162      (Analyzed: 162)
Restarts     : 1        (Average: 162.00 Last: 78)
Model-Level  : 367.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 162      (Deleted: 0)
  Binary     : 49       (Ratio:  30.25%)
  Ternary    : 3        (Ratio:   1.85%)
  Conflict   : 162      (Average Length:   36.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 162      (Average: 22.00 Max: 351 Sum:   3564)
  Executed   : 162      (Average: 22.00 Max: 351 Sum:   3564 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878907   (Original: 822405)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338489  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(2,4)),6).
move(1,((2,4),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(1,((3,3),(4,3)),9).
move(1,((4,3),(5,3)),10).
move(1,((5,3),(5,2)),11).
move(1,((5,2),(6,2)),12).
move(1,((6,2),(6,3)),13).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(5,9)),3).
move(2,((5,9),(6,9)),4).
move(2,((6,9),(7,9)),5).
move(2,((7,9),(8,9)),6).
move(2,((8,9),(9,9)),7).
move(2,((9,9),(9,8)),8).
move(2,((9,8),(9,7)),9).
move(2,((9,7),(9,6)),10).
move(3,((3,9),(4,9)),1).
move(3,((4,9),(5,9)),2).
move(3,((5,9),(6,9)),3).
move(3,((6,9),(7,9)),4).
move(3,((7,9),(8,9)),5).
move(3,((8,9),(9,9)),6).
move(3,((9,9),(10,9)),7).
move(3,((10,9),(10,8)),8).
move(3,((10,8),(10,7)),9).
move(3,((10,7),(10,6)),10).
move(4,((4,9),(5,9)),1).
move(4,((5,9),(6,9)),2).
move(4,((6,9),(6,8)),3).
move(4,((6,8),(6,7)),4).
move(4,((6,7),(6,6)),5).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(5,((6,3),(5,3)),11).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(5,8)),2).
move(6,((5,8),(4,8)),3).
move(6,((4,8),(4,7)),4).
move(6,((4,7),(4,6)),5).
move(6,((4,6),(4,5)),6).
move(6,((4,5),(4,4)),7).
move(6,((4,4),(4,3)),10).
move(7,((7,9),(8,9)),1).
move(7,((8,9),(8,8)),2).
move(7,((8,8),(8,7)),3).
move(7,((8,7),(8,6)),4).
move(7,((8,6),(8,5)),5).
move(7,((8,5),(8,4)),6).
move(7,((8,4),(8,3)),7).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(11,9)),3).
move(8,((11,9),(12,9)),4).
move(8,((12,9),(12,8)),5).
move(8,((12,8),(12,7)),6).
move(8,((12,7),(12,6)),7).
move(8,((12,6),(12,5)),8).
move(8,((12,5),(12,4)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(8,8)),3).
move(9,((8,8),(7,8)),4).
move(9,((7,8),(6,8)),5).
move(9,((6,8),(5,8)),6).
move(9,((5,8),(5,7)),7).
move(9,((5,7),(5,6)),8).
move(9,((5,6),(4,6)),9).
move(9,((4,6),(3,6)),10).
move(10,((10,9),(11,9)),1).
move(10,((11,9),(12,9)),2).
move(10,((12,9),(13,9)),3).
move(10,((13,9),(14,9)),4).
move(10,((14,9),(15,9)),5).
move(10,((15,9),(16,9)),6).
move(10,((16,9),(17,9)),7).
move(10,((17,9),(18,9)),8).
move(10,((18,9),(18,8)),9).
move(10,((18,8),(18,7)),10).
move(10,((18,7),(18,6)),11).
move(10,((18,6),(18,5)),12).
move(10,((18,5),(18,4)),13).
move(10,((18,4),(18,3)),14).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.436s (Solving: 0.09s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 4.438s

Choices      : 479      (Domain: 68)
Conflicts    : 4        (Analyzed: 4)
Restarts     : 0       
Model-Level  : 417.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 4        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 4        (Average Length:   79.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 4        (Average: 15.50 Max:  50 Sum:     62)
  Executed   : 4        (Average: 15.50 Max:  50 Sum:     62 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 829310   (Original: 772718)
  Choice     : 400     
  Heuristic  : 2809     (Original: 2829)
Atoms        : 338578  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(4,8)),4).
move(1,((4,8),(4,7)),5).
move(1,((4,7),(4,6)),6).
move(1,((4,6),(4,5)),7).
move(1,((4,5),(5,5)),8).
move(1,((5,5),(6,5)),9).
move(1,((6,5),(6,4)),10).
move(1,((6,4),(6,3)),11).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(5,9)),3).
move(2,((5,9),(6,9)),4).
move(2,((6,9),(7,9)),5).
move(2,((7,9),(7,8)),6).
move(2,((7,8),(7,7)),7).
move(2,((7,7),(8,7)),8).
move(2,((8,7),(8,6)),9).
move(2,((8,6),(9,6)),10).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(4,8)),2).
move(3,((4,8),(5,8)),3).
move(3,((5,8),(6,8)),4).
move(3,((6,8),(7,8)),5).
move(3,((7,8),(8,8)),6).
move(3,((8,8),(8,7)),7).
move(3,((8,7),(9,7)),8).
move(3,((9,7),(9,6)),9).
move(3,((9,6),(9,5)),10).
move(3,((9,5),(10,5)),11).
move(3,((10,5),(10,6)),12).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(5,8)),2).
move(4,((5,8),(6,8)),3).
move(4,((6,8),(7,8)),4).
move(4,((7,8),(7,7)),5).
move(4,((7,7),(7,6)),6).
move(4,((7,6),(6,6)),7).
move(5,((5,9),(6,9)),1).
move(5,((6,9),(7,9)),2).
move(5,((7,9),(8,9)),3).
move(5,((8,9),(9,9)),4).
move(5,((9,9),(10,9)),5).
move(5,((10,9),(9,9)),6).
move(5,((9,9),(8,9)),7).
move(5,((8,9),(7,9)),8).
move(5,((7,9),(7,8)),9).
move(5,((7,8),(7,7)),10).
move(5,((7,7),(7,6)),11).
move(5,((7,6),(7,5)),12).
move(5,((7,5),(7,4)),13).
move(5,((7,4),(7,3)),14).
move(5,((7,3),(7,2)),15).
move(5,((7,2),(6,2)),16).
move(5,((6,2),(5,2)),17).
move(5,((5,2),(5,3)),40).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(6,((5,3),(4,3)),40).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(7,2)),7).
move(7,((7,2),(8,2)),8).
move(7,((8,2),(8,3)),9).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(8,7)),2).
move(8,((8,7),(8,6)),3).
move(8,((8,6),(8,5)),4).
move(8,((8,5),(8,4)),5).
move(8,((8,4),(8,3)),6).
move(8,((8,3),(9,3)),7).
move(8,((9,3),(10,3)),8).
move(8,((10,3),(11,3)),9).
move(8,((11,3),(12,3)),10).
move(8,((12,3),(12,4)),14).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(8,7)),3).
move(9,((8,7),(7,7)),4).
move(9,((7,7),(6,7)),5).
move(9,((6,7),(6,6)),6).
move(9,((6,6),(6,5)),7).
move(9,((6,5),(6,4)),8).
move(9,((6,4),(5,4)),9).
move(9,((5,4),(4,4)),10).
move(9,((4,4),(4,5)),12).
move(9,((4,5),(4,6)),14).
move(9,((4,6),(3,6)),15).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(11,8)),2).
move(10,((11,8),(12,8)),3).
move(10,((12,8),(13,8)),4).
move(10,((13,8),(14,8)),5).
move(10,((14,8),(15,8)),6).
move(10,((15,8),(15,7)),7).
move(10,((15,7),(15,6)),8).
move(10,((15,6),(15,5)),9).
move(10,((15,5),(16,5)),10).
move(10,((16,5),(17,5)),11).
move(10,((17,5),(17,4)),12).
move(10,((17,4),(18,4)),13).
move(10,((18,4),(18,3)),14).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.995s (Solving: 0.28s 1st Model: 0.27s Unsat: 0.00s)
CPU Time     : 4.953s

Choices      : 6459     (Domain: 825)
Conflicts    : 73       (Analyzed: 73)
Restarts     : 0       
Model-Level  : 1835.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 73       (Deleted: 0)
  Binary     : 15       (Ratio:  20.55%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 73       (Average Length:   48.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 73       (Average: 63.34 Max: 252 Sum:   4624)
  Executed   : 73       (Average: 63.34 Max: 252 Sum:   4624 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 827274   (Original: 770664)
  Choice     : 400     
  Heuristic  : 872      (Original: 874)
Atoms        : 338479  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(4,8)),4).
move(1,((4,8),(4,7)),5).
move(1,((4,7),(4,6)),6).
move(1,((4,6),(4,5)),7).
move(1,((4,5),(5,5)),8).
move(1,((5,5),(6,5)),9).
move(1,((6,5),(6,4)),10).
move(1,((6,4),(6,3)),11).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(5,9)),3).
move(2,((5,9),(5,8)),4).
move(2,((5,8),(6,8)),5).
move(2,((6,8),(7,8)),6).
move(2,((7,8),(8,8)),7).
move(2,((8,8),(9,8)),8).
move(2,((9,8),(9,7)),9).
move(2,((9,7),(9,6)),10).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(4,6)),4).
move(3,((4,6),(5,6)),5).
move(3,((5,6),(6,6)),6).
move(3,((6,6),(7,6)),7).
move(3,((7,6),(8,6)),8).
move(3,((8,6),(8,5)),9).
move(3,((8,5),(9,5)),10).
move(3,((9,5),(10,5)),11).
move(3,((10,5),(10,6)),12).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(5,7)),3).
move(4,((5,7),(6,7)),4).
move(4,((6,7),(6,6)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(5,3)),8).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(9,8)),2).
move(8,((9,8),(10,8)),3).
move(8,((10,8),(10,7)),4).
move(8,((10,7),(10,6)),5).
move(8,((10,6),(10,5)),6).
move(8,((10,5),(11,5)),7).
move(8,((11,5),(11,4)),8).
move(8,((11,4),(12,4)),9).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(6,9)),3).
move(9,((6,9),(5,9)),4).
move(9,((5,9),(4,9)),5).
move(9,((4,9),(3,9)),6).
move(9,((3,9),(2,9)),7).
move(9,((2,9),(1,9)),8).
move(9,((1,9),(1,8)),9).
move(9,((1,8),(1,9)),10).
move(9,((1,9),(2,9)),11).
move(9,((2,9),(3,9)),12).
move(9,((3,9),(3,8)),13).
move(9,((3,8),(3,7)),14).
move(9,((3,7),(3,6)),15).
move(10,((10,9),(11,9)),1).
move(10,((11,9),(12,9)),2).
move(10,((12,9),(13,9)),3).
move(10,((13,9),(14,9)),4).
move(10,((14,9),(15,9)),5).
move(10,((15,9),(16,9)),6).
move(10,((16,9),(17,9)),7).
move(10,((17,9),(17,8)),8).
move(10,((17,8),(17,7)),9).
move(10,((17,7),(18,7)),10).
move(10,((18,7),(18,6)),11).
move(10,((18,6),(18,5)),12).
move(10,((18,5),(18,4)),13).
move(10,((18,4),(18,3)),14).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.481s (Solving: 0.26s 1st Model: 0.26s Unsat: 0.00s)
CPU Time     : 4.484s

Choices      : 4451     (Domain: 2569)
Conflicts    : 50       (Analyzed: 50)
Restarts     : 0       
Model-Level  : 1033.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 50       (Deleted: 0)
  Binary     : 10       (Ratio:  20.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 50       (Average Length:   41.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 50       (Average: 68.36 Max: 304 Sum:   3418)
  Executed   : 50       (Average: 68.36 Max: 304 Sum:   3418 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878919   (Original: 822407)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338500  
Disjunctions : 0        (Original: 1)
Bodies       : 566810   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305314   (Atom=Atom: 428 Body=Body: 439 Other: 304447)
Tight        : Yes
Variables    : 567731   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531526  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,9),(2,9)),3).
move(1,((2,9),(2,8)),4).
move(1,((2,8),(2,7)),6).
move(1,((2,7),(2,6)),7).
move(1,((2,6),(2,5)),8).
move(1,((2,5),(2,4)),9).
move(1,((2,4),(2,3)),10).
move(1,((2,3),(1,3)),11).
move(1,((1,3),(2,3)),12).
move(1,((2,3),(2,4)),13).
move(1,((2,4),(2,5)),14).
move(1,((2,5),(2,6)),15).
move(1,((2,6),(2,5)),16).
move(1,((2,5),(2,6)),18).
move(1,((2,6),(3,6)),19).
move(1,((3,6),(4,6)),21).
move(1,((4,6),(5,6)),22).
move(1,((5,6),(6,6)),23).
move(1,((6,6),(6,5)),24).
move(1,((6,5),(5,5)),25).
move(1,((5,5),(5,4)),26).
move(1,((5,4),(6,4)),27).
move(1,((6,4),(6,3)),28).
move(1,((6,3),(5,3)),30).
move(1,((5,3),(6,3)),31).
move(1,((6,3),(6,4)),32).
move(1,((6,4),(6,3)),33).
move(1,((6,3),(6,4)),34).
move(1,((6,4),(6,3)),35).
move(1,((6,3),(6,4)),36).
move(1,((6,4),(6,3)),37).
move(1,((6,3),(6,4)),38).
move(1,((6,4),(6,3)),40).
move(2,((2,9),(3,9)),3).
move(2,((3,9),(3,8)),4).
move(2,((3,8),(4,8)),5).
move(2,((4,8),(5,8)),6).
move(2,((5,8),(6,8)),7).
move(2,((6,8),(7,8)),8).
move(2,((7,8),(6,8)),9).
move(2,((6,8),(5,8)),10).
move(2,((5,8),(4,8)),11).
move(2,((4,8),(3,8)),12).
move(2,((3,8),(4,8)),13).
move(2,((4,8),(3,8)),14).
move(2,((3,8),(4,8)),15).
move(2,((4,8),(3,8)),16).
move(2,((3,8),(3,7)),18).
move(2,((3,7),(2,7)),21).
move(2,((2,7),(2,6)),22).
move(2,((2,6),(2,7)),23).
move(2,((2,7),(2,8)),25).
move(2,((2,8),(3,8)),26).
move(2,((3,8),(2,8)),28).
move(2,((2,8),(3,8)),29).
move(2,((3,8),(4,8)),30).
move(2,((4,8),(5,8)),31).
move(2,((5,8),(6,8)),32).
move(2,((6,8),(6,7)),34).
move(2,((6,7),(7,7)),35).
move(2,((7,7),(8,7)),36).
move(2,((8,7),(9,7)),37).
move(2,((9,7),(9,6)),38).
move(2,((9,6),(8,6)),39).
move(2,((8,6),(9,6)),40).
move(3,((3,9),(3,8)),3).
move(3,((3,8),(3,7)),4).
move(3,((3,7),(3,8)),7).
move(3,((3,8),(4,8)),8).
move(3,((4,8),(3,8)),9).
move(3,((3,8),(3,7)),10).
move(3,((3,7),(3,6)),11).
move(3,((3,6),(4,6)),12).
move(3,((4,6),(5,6)),14).
move(3,((5,6),(6,6)),15).
move(3,((6,6),(6,7)),16).
move(3,((6,7),(7,7)),17).
move(3,((7,7),(6,7)),18).
move(3,((6,7),(6,8)),19).
move(3,((6,8),(6,7)),20).
move(3,((6,7),(6,8)),21).
move(3,((6,8),(7,8)),22).
move(3,((7,8),(7,7)),24).
move(3,((7,7),(7,8)),25).
move(3,((7,8),(6,8)),26).
move(3,((6,8),(5,8)),27).
move(3,((5,8),(4,8)),28).
move(3,((4,8),(5,8)),29).
move(3,((5,8),(6,8)),30).
move(3,((6,8),(7,8)),32).
move(3,((7,8),(8,8)),33).
move(3,((8,8),(9,8)),34).
move(3,((9,8),(10,8)),36).
move(3,((10,8),(10,7)),37).
move(3,((10,7),(10,6)),40).
move(4,((4,9),(4,8)),3).
move(4,((4,8),(4,7)),4).
move(4,((4,7),(4,6)),5).
move(4,((4,6),(4,7)),6).
move(4,((4,7),(5,7)),20).
move(4,((5,7),(6,7)),21).
move(4,((6,7),(6,6)),22).
move(4,((6,6),(6,7)),23).
move(4,((6,7),(6,6)),24).
move(4,((6,6),(6,7)),25).
move(4,((6,7),(6,6)),26).
move(4,((6,6),(6,7)),27).
move(4,((6,7),(6,6)),28).
move(4,((6,6),(6,7)),29).
move(4,((6,7),(6,6)),30).
move(4,((6,6),(6,7)),33).
move(4,((6,7),(6,6)),34).
move(4,((6,6),(5,6)),37).
move(4,((5,6),(6,6)),39).
move(5,((5,9),(5,8)),3).
move(5,((5,8),(5,7)),4).
move(5,((5,7),(5,6)),5).
move(5,((5,6),(5,5)),6).
move(5,((5,5),(5,4)),7).
move(5,((5,4),(5,3)),8).
move(5,((5,3),(5,4)),9).
move(5,((5,4),(5,5)),10).
move(5,((5,5),(5,6)),11).
move(5,((5,6),(5,7)),12).
move(5,((5,7),(5,6)),20).
move(5,((5,6),(5,7)),22).
move(5,((5,7),(5,6)),35).
move(5,((5,6),(5,5)),36).
move(5,((5,5),(5,4)),37).
move(5,((5,4),(5,3)),38).
move(5,((5,3),(5,4)),39).
move(5,((5,4),(5,3)),40).
move(6,((6,9),(6,8)),3).
move(6,((6,8),(6,7)),4).
move(6,((6,7),(6,6)),5).
move(6,((6,6),(6,5)),6).
move(6,((6,5),(6,4)),7).
move(6,((6,4),(6,3)),8).
move(6,((6,3),(6,4)),9).
move(6,((6,4),(6,3)),11).
move(6,((6,3),(6,4)),13).
move(6,((6,4),(5,4)),14).
move(6,((5,4),(4,4)),15).
move(6,((4,4),(5,4)),16).
move(6,((5,4),(4,4)),17).
move(6,((4,4),(4,5)),18).
move(6,((4,5),(5,5)),20).
move(6,((5,5),(5,4)),21).
move(6,((5,4),(5,5)),22).
move(6,((5,5),(5,6)),23).
move(6,((5,6),(5,5)),24).
move(6,((5,5),(4,5)),25).
move(6,((4,5),(4,4)),27).
move(6,((4,4),(4,5)),28).
move(6,((4,5),(4,6)),29).
move(6,((4,6),(4,7)),30).
move(6,((4,7),(4,8)),31).
move(6,((4,8),(4,7)),33).
move(6,((4,7),(4,6)),34).
move(6,((4,6),(4,5)),35).
move(6,((4,5),(4,4)),36).
move(6,((4,4),(5,4)),38).
move(6,((5,4),(4,4)),39).
move(6,((4,4),(4,3)),40).
move(7,((7,9),(7,8)),3).
move(7,((7,8),(8,8)),4).
move(7,((8,8),(8,7)),5).
move(7,((8,7),(8,6)),6).
move(7,((8,6),(8,7)),7).
move(7,((8,7),(7,7)),8).
move(7,((7,7),(7,6)),9).
move(7,((7,6),(7,5)),10).
move(7,((7,5),(8,5)),12).
move(7,((8,5),(8,6)),13).
move(7,((8,6),(7,6)),14).
move(7,((7,6),(7,7)),15).
move(7,((7,7),(7,6)),17).
move(7,((7,6),(8,6)),19).
move(7,((8,6),(8,7)),21).
move(7,((8,7),(7,7)),22).
move(7,((7,7),(7,6)),23).
move(7,((7,6),(7,5)),24).
move(7,((7,5),(8,5)),25).
move(7,((8,5),(8,6)),26).
move(7,((8,6),(8,5)),27).
move(7,((8,5),(7,5)),28).
move(7,((7,5),(7,6)),29).
move(7,((7,6),(7,7)),30).
move(7,((7,7),(7,8)),31).
move(7,((7,8),(7,7)),32).
move(7,((7,7),(7,6)),33).
move(7,((7,6),(7,5)),34).
move(7,((7,5),(7,4)),35).
move(7,((7,4),(7,3)),36).
move(7,((7,3),(7,4)),37).
move(7,((7,4),(8,4)),38).
move(7,((8,4),(8,3)),39).
move(8,((8,9),(8,8)),3).
move(8,((8,8),(9,8)),4).
move(8,((9,8),(10,8)),6).
move(8,((10,8),(10,7)),7).
move(8,((10,7),(10,6)),8).
move(8,((10,6),(10,5)),9).
move(8,((10,5),(11,5)),10).
move(8,((11,5),(12,5)),11).
move(8,((12,5),(12,4)),12).
move(8,((12,4),(11,4)),13).
move(8,((11,4),(12,4)),14).
move(8,((12,4),(11,4)),15).
move(8,((11,4),(11,5)),16).
move(8,((11,5),(12,5)),17).
move(8,((12,5),(12,4)),18).
move(8,((12,4),(12,5)),19).
move(8,((12,5),(12,4)),20).
move(8,((12,4),(12,5)),22).
move(8,((12,5),(12,6)),23).
move(8,((12,6),(12,7)),24).
move(8,((12,7),(12,6)),25).
move(8,((12,6),(12,5)),26).
move(8,((12,5),(12,4)),27).
move(8,((12,4),(12,5)),28).
move(8,((12,5),(12,6)),29).
move(8,((12,6),(11,6)),30).
move(8,((11,6),(11,5)),31).
move(8,((11,5),(11,6)),32).
move(8,((11,6),(11,7)),33).
move(8,((11,7),(12,7)),34).
move(8,((12,7),(12,8)),35).
move(8,((12,8),(12,7)),37).
move(8,((12,7),(12,6)),38).
move(8,((12,6),(12,5)),39).
move(8,((12,5),(12,4)),40).
move(9,((9,9),(9,8)),3).
move(9,((9,8),(9,7)),4).
move(9,((9,7),(9,6)),7).
move(9,((9,6),(9,7)),8).
move(9,((9,7),(8,7)),9).
move(9,((8,7),(7,7)),10).
move(9,((7,7),(6,7)),11).
move(9,((6,7),(6,8)),13).
move(9,((6,8),(6,7)),14).
move(9,((6,7),(6,8)),16).
move(9,((6,8),(6,7)),17).
move(9,((6,7),(6,6)),18).
move(9,((6,6),(6,7)),19).
move(9,((6,7),(7,7)),20).
move(9,((7,7),(7,8)),21).
move(9,((7,8),(8,8)),22).
move(9,((8,8),(9,8)),24).
move(9,((9,8),(9,7)),25).
move(9,((9,7),(8,7)),27).
move(9,((8,7),(9,7)),28).
move(9,((9,7),(8,7)),29).
move(9,((8,7),(8,6)),30).
move(9,((8,6),(7,6)),31).
move(9,((7,6),(6,6)),33).
move(9,((6,6),(5,6)),34).
move(9,((5,6),(4,6)),35).
move(9,((4,6),(3,6)),36).
move(9,((3,6),(4,6)),38).
move(9,((4,6),(3,6)),40).
move(10,((10,9),(10,8)),5).
move(10,((10,8),(11,8)),6).
move(10,((11,8),(11,7)),8).
move(10,((11,7),(12,7)),9).
move(10,((12,7),(13,7)),10).
move(10,((13,7),(14,7)),11).
move(10,((14,7),(15,7)),12).
move(10,((15,7),(16,7)),13).
move(10,((16,7),(17,7)),14).
move(10,((17,7),(17,6)),15).
move(10,((17,6),(18,6)),16).
move(10,((18,6),(18,5)),17).
move(10,((18,5),(18,4)),18).
move(10,((18,4),(18,3)),19).
move(10,((18,3),(17,3)),20).
move(10,((17,3),(16,3)),22).
move(10,((16,3),(15,3)),23).
move(10,((15,3),(14,3)),24).
move(10,((14,3),(13,3)),25).
move(10,((13,3),(12,3)),26).
move(10,((12,3),(11,3)),27).
move(10,((11,3),(10,3)),28).
move(10,((10,3),(11,3)),29).
move(10,((11,3),(12,3)),30).
move(10,((12,3),(13,3)),31).
move(10,((13,3),(14,3)),32).
move(10,((14,3),(15,3)),33).
move(10,((15,3),(16,3)),34).
move(10,((16,3),(17,3)),35).
move(10,((17,3),(18,3)),36).
move(10,((18,3),(17,3)),39).
move(10,((17,3),(18,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.670s (Solving: 0.20s 1st Model: 0.20s Unsat: 0.00s)
CPU Time     : 4.609s

Choices      : 2037     (Domain: 2037)
Conflicts    : 146      (Analyzed: 146)
Restarts     : 1        (Average: 146.00 Last: 83)
Model-Level  : 327.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 146      (Deleted: 0)
  Binary     : 44       (Ratio:  30.14%)
  Ternary    : 14       (Ratio:   9.59%)
  Conflict   : 146      (Average Length:    8.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 146      (Average: 11.71 Max: 213 Sum:   1710)
  Executed   : 146      (Average: 11.71 Max: 213 Sum:   1710 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878897   (Original: 822395)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338479  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,9),(2,9)),2).
move(1,((2,9),(2,8)),4).
move(1,((2,8),(2,7)),6).
move(1,((2,7),(2,6)),7).
move(1,((2,6),(2,5)),8).
move(1,((2,5),(2,4)),9).
move(1,((2,4),(2,3)),10).
move(1,((2,3),(1,3)),11).
move(1,((1,3),(2,3)),12).
move(1,((2,3),(2,4)),13).
move(1,((2,4),(2,5)),14).
move(1,((2,5),(2,6)),15).
move(1,((2,6),(2,7)),16).
move(1,((2,7),(2,6)),32).
move(1,((2,6),(3,6)),33).
move(1,((3,6),(4,6)),34).
move(1,((4,6),(5,6)),35).
move(1,((5,6),(5,5)),36).
move(1,((5,5),(5,4)),38).
move(1,((5,4),(6,4)),39).
move(1,((6,4),(6,3)),40).
move(2,((2,9),(2,8)),2).
move(2,((2,8),(2,7)),4).
move(2,((2,7),(3,7)),5).
move(2,((3,7),(3,6)),6).
move(2,((3,6),(3,7)),7).
move(2,((3,7),(2,7)),8).
move(2,((2,7),(3,7)),16).
move(2,((3,7),(4,7)),28).
move(2,((4,7),(4,6)),29).
move(2,((4,6),(5,6)),30).
move(2,((5,6),(6,6)),31).
move(2,((6,6),(7,6)),32).
move(2,((7,6),(8,6)),33).
move(2,((8,6),(9,6)),34).
move(2,((9,6),(10,6)),35).
move(2,((10,6),(10,5)),36).
move(2,((10,5),(10,4)),37).
move(2,((10,4),(9,4)),38).
move(2,((9,4),(9,5)),39).
move(2,((9,5),(9,6)),40).
move(3,((3,9),(3,8)),3).
move(3,((3,8),(3,7)),4).
move(3,((3,7),(3,6)),5).
move(3,((3,6),(3,5)),6).
move(3,((3,5),(3,4)),8).
move(3,((3,4),(3,5)),9).
move(3,((3,5),(3,6)),10).
move(3,((3,6),(3,7)),11).
move(3,((3,7),(3,6)),16).
move(3,((3,6),(3,5)),22).
move(3,((3,5),(3,6)),23).
move(3,((3,6),(3,5)),28).
move(3,((3,5),(4,5)),29).
move(3,((4,5),(5,5)),30).
move(3,((5,5),(6,5)),31).
move(3,((6,5),(7,5)),32).
move(3,((7,5),(8,5)),33).
move(3,((8,5),(9,5)),34).
move(3,((9,5),(10,5)),35).
move(3,((10,5),(11,5)),36).
move(3,((11,5),(11,4)),37).
move(3,((11,4),(10,4)),38).
move(3,((10,4),(10,5)),39).
move(3,((10,5),(10,6)),40).
move(4,((4,9),(4,8)),3).
move(4,((4,8),(4,7)),4).
move(4,((4,7),(4,6)),5).
move(4,((4,6),(4,5)),6).
move(4,((4,5),(4,4)),7).
move(4,((4,4),(4,3)),8).
move(4,((4,3),(3,3)),9).
move(4,((3,3),(3,2)),10).
move(4,((3,2),(2,2)),11).
move(4,((2,2),(1,2)),12).
move(4,((1,2),(1,1)),13).
move(4,((1,1),(1,2)),14).
move(4,((1,2),(2,2)),15).
move(4,((2,2),(3,2)),16).
move(4,((3,2),(4,2)),17).
move(4,((4,2),(4,3)),18).
move(4,((4,3),(4,4)),19).
move(4,((4,4),(4,5)),20).
move(4,((4,5),(4,6)),21).
move(4,((4,6),(4,7)),22).
move(4,((4,7),(4,6)),28).
move(4,((4,6),(3,6)),29).
move(4,((3,6),(4,6)),30).
move(4,((4,6),(4,7)),31).
move(4,((4,7),(4,8)),32).
move(4,((4,8),(5,8)),33).
move(4,((5,8),(6,8)),34).
move(4,((6,8),(7,8)),35).
move(4,((7,8),(7,7)),36).
move(4,((7,7),(6,7)),38).
move(4,((6,7),(6,6)),40).
move(5,((5,9),(5,8)),3).
move(5,((5,8),(5,7)),4).
move(5,((5,7),(5,6)),5).
move(5,((5,6),(5,5)),6).
move(5,((5,5),(5,4)),7).
move(5,((5,4),(5,3)),8).
move(5,((5,3),(5,2)),9).
move(5,((5,2),(5,1)),10).
move(5,((5,1),(5,2)),11).
move(5,((5,2),(5,3)),12).
move(5,((5,3),(5,4)),13).
move(5,((5,4),(5,5)),14).
move(5,((5,5),(5,6)),15).
move(5,((5,6),(5,7)),16).
move(5,((5,7),(5,6)),31).
move(5,((5,6),(4,6)),32).
move(5,((4,6),(4,5)),33).
move(5,((4,5),(3,5)),34).
move(5,((3,5),(3,4)),35).
move(5,((3,4),(3,3)),36).
move(5,((3,3),(3,2)),37).
move(5,((3,2),(4,2)),38).
move(5,((4,2),(5,2)),39).
move(5,((5,2),(5,3)),40).
move(6,((6,9),(6,8)),3).
move(6,((6,8),(6,7)),4).
move(6,((6,7),(6,6)),5).
move(6,((6,6),(6,5)),6).
move(6,((6,5),(6,4)),7).
move(6,((6,4),(6,3)),8).
move(6,((6,3),(6,2)),9).
move(6,((6,2),(6,1)),10).
move(6,((6,1),(6,2)),11).
move(6,((6,2),(6,3)),12).
move(6,((6,3),(6,4)),13).
move(6,((6,4),(6,5)),14).
move(6,((6,5),(6,6)),15).
move(6,((6,6),(6,7)),16).
move(6,((6,7),(5,7)),31).
move(6,((5,7),(4,7)),32).
move(6,((4,7),(3,7)),33).
move(6,((3,7),(3,6)),34).
move(6,((3,6),(3,5)),35).
move(6,((3,5),(3,4)),36).
move(6,((3,4),(3,3)),37).
move(6,((3,3),(4,3)),38).
move(6,((4,3),(4,4)),39).
move(6,((4,4),(4,3)),40).
move(7,((7,9),(8,9)),2).
move(7,((8,9),(9,9)),3).
move(7,((9,9),(10,9)),4).
move(7,((10,9),(11,9)),5).
move(7,((11,9),(12,9)),6).
move(7,((12,9),(12,8)),7).
move(7,((12,8),(13,8)),8).
move(7,((13,8),(14,8)),9).
move(7,((14,8),(14,7)),10).
move(7,((14,7),(15,7)),12).
move(7,((15,7),(16,7)),13).
move(7,((16,7),(17,7)),14).
move(7,((17,7),(17,6)),15).
move(7,((17,6),(17,5)),16).
move(7,((17,5),(17,6)),17).
move(7,((17,6),(17,7)),18).
move(7,((17,7),(18,7)),19).
move(7,((18,7),(18,8)),20).
move(7,((18,8),(18,7)),21).
move(7,((18,7),(18,6)),22).
move(7,((18,6),(18,7)),23).
move(7,((18,7),(17,7)),24).
move(7,((17,7),(16,7)),25).
move(7,((16,7),(16,8)),26).
move(7,((16,8),(15,8)),28).
move(7,((15,8),(14,8)),29).
move(7,((14,8),(13,8)),30).
move(7,((13,8),(12,8)),31).
move(7,((12,8),(11,8)),32).
move(7,((11,8),(10,8)),33).
move(7,((10,8),(9,8)),34).
move(7,((9,8),(8,8)),35).
move(7,((8,8),(8,7)),36).
move(7,((8,7),(8,6)),37).
move(7,((8,6),(8,5)),38).
move(7,((8,5),(8,4)),39).
move(7,((8,4),(8,3)),40).
move(8,((8,9),(8,8)),2).
move(8,((8,8),(9,8)),4).
move(8,((9,8),(10,8)),5).
move(8,((10,8),(10,7)),6).
move(8,((10,7),(11,7)),7).
move(8,((11,7),(11,6)),9).
move(8,((11,6),(12,6)),10).
move(8,((12,6),(13,6)),11).
move(8,((13,6),(13,5)),12).
move(8,((13,5),(14,5)),13).
move(8,((14,5),(15,5)),14).
move(8,((15,5),(16,5)),15).
move(8,((16,5),(16,6)),16).
move(8,((16,6),(15,6)),17).
move(8,((15,6),(14,6)),18).
move(8,((14,6),(13,6)),19).
move(8,((13,6),(12,6)),20).
move(8,((12,6),(11,6)),21).
move(8,((11,6),(10,6)),22).
move(8,((10,6),(9,6)),23).
move(8,((9,6),(8,6)),24).
move(8,((8,6),(8,7)),25).
move(8,((8,7),(8,8)),27).
move(8,((8,8),(8,7)),28).
move(8,((8,7),(9,7)),29).
move(8,((9,7),(10,7)),30).
move(8,((10,7),(11,7)),31).
move(8,((11,7),(12,7)),32).
move(8,((12,7),(13,7)),33).
move(8,((13,7),(14,7)),34).
move(8,((14,7),(14,6)),35).
move(8,((14,6),(14,5)),36).
move(8,((14,5),(14,4)),37).
move(8,((14,4),(13,4)),39).
move(8,((13,4),(12,4)),40).
move(9,((9,9),(9,8)),2).
move(9,((9,8),(9,7)),3).
move(9,((9,7),(8,7)),4).
move(9,((8,7),(9,7)),5).
move(9,((9,7),(9,6)),6).
move(9,((9,6),(10,6)),7).
move(9,((10,6),(10,5)),8).
move(9,((10,5),(11,5)),9).
move(9,((11,5),(12,5)),10).
move(9,((12,5),(13,5)),11).
move(9,((13,5),(14,5)),12).
move(9,((14,5),(15,5)),13).
move(9,((15,5),(15,4)),14).
move(9,((15,4),(16,4)),15).
move(9,((16,4),(15,4)),17).
move(9,((15,4),(14,4)),18).
move(9,((14,4),(15,4)),19).
move(9,((15,4),(14,4)),20).
move(9,((14,4),(14,3)),21).
move(9,((14,3),(14,2)),22).
move(9,((14,2),(14,3)),23).
move(9,((14,3),(13,3)),24).
move(9,((13,3),(12,3)),25).
move(9,((12,3),(11,3)),26).
move(9,((11,3),(10,3)),27).
move(9,((10,3),(10,2)),28).
move(9,((10,2),(9,2)),29).
move(9,((9,2),(8,2)),30).
move(9,((8,2),(7,2)),31).
move(9,((7,2),(7,3)),32).
move(9,((7,3),(7,4)),33).
move(9,((7,4),(7,5)),34).
move(9,((7,5),(7,6)),35).
move(9,((7,6),(6,6)),37).
move(9,((6,6),(5,6)),38).
move(9,((5,6),(4,6)),39).
move(9,((4,6),(3,6)),40).
move(10,((10,9),(10,8)),3).
move(10,((10,8),(10,7)),4).
move(10,((10,7),(11,7)),5).
move(10,((11,7),(11,8)),6).
move(10,((11,8),(12,8)),8).
move(10,((12,8),(13,8)),9).
move(10,((13,8),(14,8)),10).
move(10,((14,8),(15,8)),11).
move(10,((15,8),(16,8)),12).
move(10,((16,8),(17,8)),13).
move(10,((17,8),(18,8)),14).
move(10,((18,8),(18,7)),15).
move(10,((18,7),(18,6)),16).
move(10,((18,6),(18,5)),17).
move(10,((18,5),(18,4)),18).
move(10,((18,4),(18,3)),19).
move(10,((18,3),(18,2)),20).
move(10,((18,2),(19,2)),21).
move(10,((19,2),(19,1)),22).
move(10,((19,1),(18,1)),23).
move(10,((18,1),(18,2)),24).
move(10,((18,2),(17,2)),25).
move(10,((17,2),(16,2)),26).
move(10,((16,2),(17,2)),27).
move(10,((17,2),(16,2)),28).
move(10,((16,2),(15,2)),29).
move(10,((15,2),(14,2)),30).
move(10,((14,2),(13,2)),31).
move(10,((13,2),(12,2)),32).
move(10,((12,2),(12,3)),33).
move(10,((12,3),(13,3)),34).
move(10,((13,3),(14,3)),35).
move(10,((14,3),(15,3)),36).
move(10,((15,3),(16,3)),37).
move(10,((16,3),(17,3)),38).
move(10,((17,3),(18,3)),39).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.837s (Solving: 0.37s 1st Model: 0.37s Unsat: 0.00s)
CPU Time     : 4.844s

Choices      : 2156     (Domain: 2156)
Conflicts    : 96       (Analyzed: 96)
Restarts     : 0       
Model-Level  : 312.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 96       (Deleted: 0)
  Binary     : 25       (Ratio:  26.04%)
  Ternary    : 7        (Ratio:   7.29%)
  Conflict   : 96       (Average Length:   24.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 96       (Average: 19.21 Max: 119 Sum:   1844)
  Executed   : 96       (Average: 19.21 Max: 119 Sum:   1844 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878897   (Original: 822395)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338479  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

