clingo version 5.5.2
Reading from ...nt/beegfs/home/jubruns/encoding/mif.lp ...
Solving...
Answer: 1
move(1,(6,7),(5,7),1) move(1,(5,7),(5,8),2) move(1,(5,8),(5,7),6) move(1,(5,7),(6,7),7) move(1,(6,7),(7,7),8) move(1,(7,7),(8,7),9) move(1,(8,7),(8,8),10) move(1,(8,8),(8,9),11) move(1,(8,9),(8,10),12) move(1,(8,10),(8,11),13) move(1,(8,11),(9,11),14) move(1,(9,11),(10,11),15) move(1,(10,11),(10,12),16) move(2,(8,6),(8,5),1) move(2,(8,5),(8,4),2) move(2,(8,4),(7,4),3) move(2,(7,4),(6,4),5) move(2,(6,4),(5,4),6) move(2,(5,4),(5,5),7) move(2,(5,5),(5,6),8) move(2,(5,6),(5,7),9) move(2,(5,7),(5,8),10) move(2,(5,8),(5,9),11) move(2,(5,9),(5,10),12) move(2,(5,10),(5,11),13) move(2,(5,11),(4,11),14) move(2,(4,11),(3,11),15) move(2,(3,11),(3,12),16) move(3,(10,11),(10,10),1) move(3,(10,10),(10,9),2) move(3,(10,9),(9,9),3) move(3,(9,9),(9,8),4) move(3,(9,8),(9,7),6) move(3,(9,7),(8,7),7) move(3,(8,7),(8,6),8) move(3,(8,6),(8,5),9) move(3,(8,5),(9,5),10) move(3,(9,5),(9,4),11) move(3,(9,4),(9,3),12) move(3,(9,3),(9,2),13) move(3,(9,2),(9,1),15) move(3,(9,1),(10,1),16) move(3,(10,1),(11,1),17) move(4,(3,1),(3,2),1) move(4,(3,2),(3,3),2) move(4,(3,3),(4,3),3) move(4,(4,3),(5,3),4) move(4,(5,3),(5,4),5) move(4,(5,4),(5,5),6) move(4,(5,5),(5,6),7) move(4,(5,6),(5,7),8) move(4,(5,7),(6,7),9) move(4,(6,7),(7,7),10) move(4,(7,7),(8,7),11) move(4,(8,7),(8,8),12) move(4,(8,8),(8,9),13) move(4,(8,9),(9,9),14) move(4,(9,9),(10,9),15) move(4,(10,9),(10,10),16) move(4,(10,10),(10,11),17) move(5,(11,9),(11,8),1) move(5,(11,8),(10,8),2) move(5,(10,8),(9,8),3) move(5,(9,8),(8,8),4) move(5,(8,8),(8,7),5) move(5,(8,7),(8,6),6) move(5,(8,6),(8,5),7) move(5,(8,5),(8,4),8) move(5,(8,4),(8,3),9) move(5,(8,3),(8,2),10) move(5,(8,2),(9,2),11) move(5,(9,2),(10,2),12) move(5,(10,2),(11,2),13) move(5,(11,2),(10,2),14) move(5,(10,2),(11,2),15) move(6,(2,10),(2,9),1) move(6,(2,9),(2,8),3) move(6,(2,8),(3,8),4) move(6,(3,8),(3,9),5) move(6,(3,9),(2,9),6) move(6,(2,9),(3,9),7) move(6,(3,9),(4,9),8) move(6,(4,9),(4,8),9) move(6,(4,8),(4,7),10) move(6,(4,7),(5,7),11) move(6,(5,7),(5,6),12) move(6,(5,6),(5,5),13) move(6,(5,5),(5,4),14) move(6,(5,4),(6,4),15) move(6,(6,4),(7,4),16) move(6,(7,4),(7,3),17) move(7,(2,3),(2,2),1) move(7,(2,2),(3,2),2) move(7,(3,2),(3,3),4) move(7,(3,3),(3,4),5) move(7,(3,4),(3,5),6) move(7,(3,5),(4,5),7) move(7,(4,5),(5,5),8) move(7,(5,5),(5,6),9) move(7,(5,6),(5,7),10) move(7,(5,7),(5,8),11) move(7,(5,8),(4,8),12) move(7,(4,8),(3,8),13) move(7,(3,8),(3,9),14) move(7,(3,9),(2,9),15) move(7,(2,9),(2,10),16) move(7,(2,10),(1,10),17) move(8,(4,1),(3,1),1) move(8,(3,1),(2,1),2) move(8,(2,1),(2,2),3) move(8,(2,2),(2,3),5) move(8,(2,3),(3,3),6) move(8,(3,3),(2,3),7) move(8,(2,3),(2,4),8) move(8,(2,4),(2,3),9) move(8,(2,3),(2,4),10) move(8,(2,4),(2,3),11) move(8,(2,3),(2,4),12) move(8,(2,4),(3,4),14) move(8,(3,4),(3,3),15) move(8,(3,3),(3,2),16) move(8,(3,2),(4,2),17) move(9,(11,10),(11,11),1) move(9,(11,11),(10,11),2) move(9,(10,11),(9,11),3) move(9,(9,11),(9,10),4) move(9,(9,10),(9,9),5) move(9,(9,9),(9,8),6) move(9,(9,8),(8,8),7) move(9,(8,8),(8,7),8) move(9,(8,7),(8,8),9) move(9,(8,8),(7,8),10) move(9,(7,8),(7,7),11) move(9,(7,7),(6,7),12) move(9,(6,7),(5,7),13) move(9,(5,7),(5,6),14) move(9,(5,6),(5,5),15) move(9,(5,5),(5,4),16) move(9,(5,4),(6,4),17) move(10,(12,9),(11,9),1) move(10,(11,9),(11,10),2) move(10,(11,10),(11,11),4) move(10,(11,11),(11,10),5) move(10,(11,10),(11,9),6) move(10,(11,9),(11,8),7) move(10,(11,8),(11,9),8) move(10,(11,9),(10,9),9) move(10,(10,9),(10,8),10) move(10,(10,8),(10,7),11) move(10,(10,7),(9,7),12) move(10,(9,7),(10,7),13) move(10,(10,7),(9,7),14) move(10,(9,7),(8,7),15) move(10,(8,7),(7,7),16) move(10,(7,7),(6,7),17)
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.923s (Solving: 2.78s 1st Model: 2.78s Unsat: 0.00s)
CPU Time     : 4.896s

Choices      : 294048   (Domain: 5917)
Conflicts    : 2947     (Analyzed: 2947)
Restarts     : 14       (Average: 210.50 Last: 105)
Model-Level  : 6301.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 3729     (Deleted: 1066)
  Binary     : 190      (Ratio:   5.10%)
  Ternary    : 97       (Ratio:   2.60%)
  Conflict   : 2947     (Average Length:  106.9 Ratio:  79.03%) 
  Loop       : 782      (Average Length:  176.2 Ratio:  20.97%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 2947     (Average: 82.81 Max: 7364 Sum: 244047)
  Executed   : 2947     (Average: 82.81 Max: 7364 Sum: 244047 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 1054826  (Original: 1197143)
  Choice     : 18388   
  Heuristic  : 496995   (Original: 774966)
Atoms        : 274240   (Original: 259493 Auxiliary: 14747)
Bodies       : 347447   (Original: 283822)
  Count      : 825      (Original: 33911)
Equivalences : 379637   (Atom=Atom: 33143 Body=Body: 32160 Other: 314334)
Tight        : No       (SCCs: 11 Non-Hcfs: 0 Nodes: 96093 Gammas: 0)
Variables    : 303500   (Eliminated:    0 Frozen: 116156)
Constraints  : 893760   (Binary:  74.8% Ternary:  17.9% Other:   7.3%)

