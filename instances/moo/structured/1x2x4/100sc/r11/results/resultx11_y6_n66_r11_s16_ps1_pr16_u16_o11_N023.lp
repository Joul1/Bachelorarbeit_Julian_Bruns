%%%%%
%Standard
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(2,((4,4),(5,4)),7).
move(2,((5,4),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(8,4)),5).
move(5,((8,4),(8,3)),6).
move(5,((8,3),(7,3)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),4).
move(6,((8,3),(7,3)),6).
move(6,((7,3),(6,3)),7).
move(6,((6,3),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),5).
move(7,((9,5),(9,4)),6).
move(7,((9,4),(8,4)),40).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(7,5)),5).
move(9,((7,5),(7,4)),6).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),6).
move(10,((4,5),(4,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(9,4)),4).
move(11,((9,4),(10,4)),5).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.658s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.656s

Choices      : 816     
Conflicts    : 35       (Analyzed: 35)
Restarts     : 0       
Model-Level  : 432.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 35       (Deleted: 0)
  Binary     : 6        (Ratio:  17.14%)
  Ternary    : 1        (Ratio:   2.86%)
  Conflict   : 35       (Average Length:   17.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 35       (Average: 10.97 Max:  59 Sum:    384)
  Executed   : 35       (Average: 10.97 Max:  59 Sum:    384 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353468   (Original: 327181)
  Choice     : 440     
Atoms        : 141635  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(7,4)),8).
move(1,((7,4),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(3,5)),2).
move(2,((3,5),(4,5)),3).
move(2,((4,5),(5,5)),4).
move(2,((5,5),(6,5)),5).
move(2,((6,5),(7,5)),6).
move(2,((7,5),(7,4)),7).
move(2,((7,4),(6,4)),8).
move(2,((6,4),(6,3)),9).
move(2,((6,3),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(5,2)),4).
move(5,((5,2),(6,2)),5).
move(5,((6,2),(7,2)),6).
move(5,((7,2),(7,3)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(8,4)),3).
move(6,((8,4),(7,4)),4).
move(6,((7,4),(7,3)),5).
move(6,((7,3),(6,3)),7).
move(6,((6,3),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(9,4)),7).
move(7,((9,4),(8,4)),40).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(9,3)),5).
move(9,((9,3),(9,4)),6).
move(9,((9,4),(9,5)),7).
move(9,((9,5),(8,5)),8).
move(9,((8,5),(7,5)),9).
move(9,((7,5),(7,4)),10).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(3,6)),5).
move(10,((3,6),(3,5)),6).
move(10,((3,5),(3,4)),7).
move(10,((3,4),(4,4)),8).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(10,4)),3).
move(11,((10,4),(11,4)),5).
move(11,((11,4),(10,4)),6).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.690s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 1223     (Domain: 175)
Conflicts    : 46       (Analyzed: 46)
Restarts     : 0       
Model-Level  : 608.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 46       (Deleted: 0)
  Binary     : 10       (Ratio:  21.74%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 46       (Average Length:   18.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 46       (Average: 13.37 Max:  76 Sum:    615)
  Executed   : 46       (Average: 13.37 Max:  76 Sum:    615 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353780   (Original: 327493)
  Choice     : 440     
  Heuristic  : 186     
Atoms        : 141761  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(6,3)),8).
move(1,((6,3),(6,2)),9).
move(1,((6,2),(7,2)),10).
move(1,((7,2),(8,2)),11).
move(1,((8,2),(8,3)),12).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(2,((4,4),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(4,((9,4),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(8,5)),2).
move(6,((8,5),(8,4)),3).
move(6,((8,4),(8,3)),4).
move(6,((8,3),(8,2)),5).
move(6,((8,2),(7,2)),6).
move(6,((7,2),(6,2)),7).
move(6,((6,2),(5,2)),8).
move(6,((5,2),(4,2)),9).
move(6,((4,2),(4,3)),10).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),3).
move(7,((7,4),(8,4)),4).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(7,4)),5).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(6,4)),4).
move(10,((6,4),(5,4)),5).
move(10,((5,4),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(10,5)),2).
move(11,((10,5),(10,4)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.718s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.719s

Choices      : 420      (Domain: 420)
Conflicts    : 2        (Analyzed: 2)
Restarts     : 0       
Model-Level  : 390.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 2        (Deleted: 0)
  Binary     : 1        (Ratio:  50.00%)
  Ternary    : 1        (Ratio:  50.00%)
  Conflict   : 2        (Average Length:    2.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 2        (Average: 15.00 Max:  26 Sum:     30)
  Executed   : 2        (Average: 15.00 Max:  26 Sum:     30 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378784   (Original: 352629)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141772  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),3).
move(1,((2,5),(2,4)),5).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(3,2)),9).
move(1,((3,2),(3,3)),10).
move(1,((3,3),(4,3)),11).
move(1,((4,3),(5,3)),12).
move(1,((5,3),(6,3)),13).
move(1,((6,3),(5,3)),14).
move(1,((5,3),(5,4)),15).
move(1,((5,4),(6,4)),16).
move(1,((6,4),(5,4)),17).
move(1,((5,4),(6,4)),18).
move(1,((6,4),(6,3)),19).
move(1,((6,3),(7,3)),20).
move(1,((7,3),(8,3)),21).
move(1,((8,3),(7,3)),23).
move(1,((7,3),(7,2)),27).
move(1,((7,2),(8,2)),33).
move(1,((8,2),(8,1)),35).
move(1,((8,1),(8,2)),36).
move(1,((8,2),(7,2)),37).
move(1,((7,2),(8,2)),39).
move(1,((8,2),(8,3)),40).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(9,5)),10).
move(2,((9,5),(10,5)),11).
move(2,((10,5),(9,5)),13).
move(2,((9,5),(8,5)),14).
move(2,((8,5),(7,5)),24).
move(2,((7,5),(6,5)),27).
move(2,((6,5),(6,4)),28).
move(2,((6,4),(5,4)),30).
move(2,((5,4),(4,4)),31).
move(2,((4,4),(5,4)),32).
move(2,((5,4),(5,5)),33).
move(2,((5,5),(5,4)),34).
move(2,((5,4),(6,4)),35).
move(2,((6,4),(6,3)),36).
move(2,((6,3),(5,3)),37).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,6)),2).
move(3,((3,6),(3,5)),3).
move(3,((3,5),(2,5)),5).
move(3,((2,5),(1,5)),6).
move(3,((1,5),(1,4)),7).
move(3,((1,4),(1,3)),8).
move(3,((1,3),(1,2)),9).
move(3,((1,2),(2,2)),10).
move(3,((2,2),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(3,2)),14).
move(3,((3,2),(3,3)),15).
move(3,((3,3),(3,2)),16).
move(3,((3,2),(3,3)),17).
move(3,((3,3),(3,2)),18).
move(3,((3,2),(3,3)),19).
move(3,((3,3),(3,2)),21).
move(3,((3,2),(3,3)),25).
move(3,((3,3),(3,2)),27).
move(3,((3,2),(3,3)),29).
move(3,((3,3),(3,2)),31).
move(3,((3,2),(3,3)),33).
move(3,((3,3),(3,2)),36).
move(3,((3,2),(3,3)),37).
move(3,((3,3),(3,2)),38).
move(3,((3,2),(3,3)),40).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(4,4)),4).
move(4,((4,4),(3,4)),5).
move(4,((3,4),(4,4)),6).
move(4,((4,4),(5,4)),7).
move(4,((5,4),(6,4)),8).
move(4,((6,4),(5,4)),9).
move(4,((5,4),(6,4)),10).
move(4,((6,4),(6,3)),11).
move(4,((6,3),(6,2)),12).
move(4,((6,2),(7,2)),13).
move(4,((7,2),(8,2)),14).
move(4,((8,2),(9,2)),15).
move(4,((9,2),(9,3)),16).
move(4,((9,3),(9,2)),17).
move(4,((9,2),(9,3)),18).
move(4,((9,3),(10,3)),19).
move(4,((10,3),(9,3)),21).
move(4,((9,3),(9,2)),22).
move(4,((9,2),(9,3)),23).
move(4,((9,3),(10,3)),25).
move(4,((10,3),(9,3)),26).
move(4,((9,3),(10,3)),27).
move(4,((10,3),(9,3)),28).
move(4,((9,3),(9,2)),29).
move(4,((9,2),(9,3)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(5,2)),10).
move(5,((5,2),(5,3)),11).
move(5,((5,3),(5,4)),12).
move(5,((5,4),(5,3)),13).
move(5,((5,3),(5,2)),14).
move(5,((5,2),(5,1)),16).
move(5,((5,1),(5,2)),24).
move(5,((5,2),(5,3)),29).
move(5,((5,3),(6,3)),32).
move(5,((6,3),(7,3)),33).
move(5,((7,3),(7,2)),35).
move(5,((7,2),(7,3)),36).
move(5,((7,3),(7,2)),39).
move(5,((7,2),(7,3)),40).
move(6,((9,6),(10,6)),4).
move(6,((10,6),(10,5)),5).
move(6,((10,5),(9,5)),6).
move(6,((9,5),(8,5)),7).
move(6,((8,5),(7,5)),8).
move(6,((7,5),(7,4)),9).
move(6,((7,4),(7,3)),11).
move(6,((7,3),(7,2)),12).
move(6,((7,2),(8,2)),13).
move(6,((8,2),(8,3)),14).
move(6,((8,3),(8,2)),15).
move(6,((8,2),(7,2)),16).
move(6,((7,2),(6,2)),19).
move(6,((6,2),(6,3)),22).
move(6,((6,3),(6,2)),23).
move(6,((6,2),(5,2)),30).
move(6,((5,2),(4,2)),33).
move(6,((4,2),(4,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),4).
move(7,((6,2),(7,2)),7).
move(7,((7,2),(8,2)),8).
move(7,((8,2),(9,2)),9).
move(7,((9,2),(10,2)),10).
move(7,((10,2),(10,3)),11).
move(7,((10,3),(10,4)),13).
move(7,((10,4),(9,4)),14).
move(7,((9,4),(8,4)),15).
move(7,((8,4),(8,3)),17).
move(7,((8,3),(8,4)),19).
move(7,((8,4),(8,3)),20).
move(7,((8,3),(8,4)),21).
move(7,((8,4),(7,4)),22).
move(7,((7,4),(8,4)),24).
move(7,((8,4),(8,3)),38).
move(7,((8,3),(8,4)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),5).
move(8,((6,4),(5,4)),6).
move(8,((5,4),(5,3)),7).
move(8,((5,3),(4,3)),8).
move(8,((4,3),(3,3)),9).
move(8,((3,3),(2,3)),10).
move(8,((2,3),(2,4)),11).
move(8,((2,4),(2,3)),12).
move(8,((2,3),(2,4)),14).
move(8,((2,4),(2,5)),16).
move(8,((2,5),(2,4)),17).
move(8,((2,4),(3,4)),19).
move(8,((3,4),(2,4)),20).
move(8,((2,4),(3,4)),21).
move(8,((3,4),(2,4)),23).
move(8,((2,4),(2,5)),25).
move(8,((2,5),(2,4)),27).
move(8,((2,4),(3,4)),29).
move(8,((3,4),(2,4)),30).
move(8,((2,4),(3,4)),31).
move(8,((3,4),(2,4)),33).
move(8,((2,4),(3,4)),34).
move(8,((3,4),(2,4)),35).
move(8,((2,4),(2,3)),36).
move(8,((2,3),(2,4)),38).
move(8,((2,4),(2,5)),39).
move(8,((2,5),(2,4)),40).
move(9,((10,6),(10,5)),2).
move(9,((10,5),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(10,4)),6).
move(9,((10,4),(10,3)),7).
move(9,((10,3),(10,2)),8).
move(9,((10,2),(10,3)),9).
move(9,((10,3),(9,3)),10).
move(9,((9,3),(8,3)),11).
move(9,((8,3),(7,3)),12).
move(9,((7,3),(7,4)),13).
move(9,((7,4),(7,3)),14).
move(9,((7,3),(6,3)),15).
move(9,((6,3),(5,3)),16).
move(9,((5,3),(4,3)),17).
move(9,((4,3),(4,2)),18).
move(9,((4,2),(3,2)),19).
move(9,((3,2),(3,1)),20).
move(9,((3,1),(2,1)),21).
move(9,((2,1),(2,2)),22).
move(9,((2,2),(2,3)),30).
move(9,((2,3),(3,3)),32).
move(9,((3,3),(4,3)),33).
move(9,((4,3),(5,3)),34).
move(9,((5,3),(5,4)),35).
move(9,((5,4),(5,5)),37).
move(9,((5,5),(6,5)),38).
move(9,((6,5),(7,5)),39).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(7,5)),4).
move(10,((7,5),(6,5)),5).
move(10,((6,5),(5,5)),6).
move(10,((5,5),(4,5)),7).
move(10,((4,5),(4,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(10,4)),3).
move(11,((10,4),(11,4)),6).
move(11,((11,4),(10,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.043s (Solving: 0.35s 1st Model: 0.35s Unsat: 0.00s)
CPU Time     : 2.047s

Choices      : 7358     (Domain: 2159)
Conflicts    : 202      (Analyzed: 202)
Restarts     : 1        (Average: 202.00 Last: 130)
Model-Level  : 484.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 202      (Deleted: 0)
  Binary     : 43       (Ratio:  21.29%)
  Ternary    : 9        (Ratio:   4.46%)
  Conflict   : 202      (Average Length:   31.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 202      (Average: 34.03 Max: 568 Sum:   6874)
  Executed   : 202      (Average: 34.03 Max: 568 Sum:   6874 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378784   (Original: 352629)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141772  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(8,6)),7).
move(1,((8,6),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(2,((4,4),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(2,((5,3),(5,2)),7).
move(2,((5,2),(5,3)),8).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(4,((9,4),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),6).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(8,5)),2).
move(6,((8,5),(8,4)),3).
move(6,((8,4),(8,3)),4).
move(6,((8,3),(7,3)),5).
move(6,((7,3),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(10,4)),6).
move(7,((10,4),(9,4)),8).
move(7,((9,4),(8,4)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(5,4)),4).
move(8,((5,4),(4,4)),5).
move(8,((4,4),(3,4)),6).
move(8,((3,4),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(9,5)),2).
move(9,((9,5),(9,4)),3).
move(9,((9,4),(8,4)),4).
move(9,((8,4),(8,3)),5).
move(9,((8,3),(8,4)),6).
move(9,((8,4),(7,4)),7).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(8,6)),2).
move(10,((8,6),(8,5)),4).
move(10,((8,5),(8,4)),5).
move(10,((8,4),(7,4)),6).
move(10,((7,4),(6,4)),7).
move(10,((6,4),(5,4)),8).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(11,5)),3).
move(11,((11,5),(11,6)),4).
move(11,((11,6),(11,5)),8).
move(11,((11,5),(11,4)),9).
move(11,((11,4),(10,4)),10).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.673s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.672s

Choices      : 510      (Domain: 35)
Conflicts    : 12       (Analyzed: 12)
Restarts     : 0       
Model-Level  : 453.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 12       (Deleted: 0)
  Binary     : 1        (Ratio:   8.33%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 12       (Average Length:   27.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 12       (Average:  4.75 Max:  15 Sum:     57)
  Executed   : 12       (Average:  4.75 Max:  15 Sum:     57 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354649   (Original: 328384)
  Choice     : 440     
  Heuristic  : 979      (Original: 1001)
Atoms        : 141837  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(7,4)),8).
move(1,((7,4),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(2,((3,3),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(2,((5,3),(6,3)),7).
move(2,((6,3),(5,3)),8).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(3,3)),5).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(8,5)),2).
move(6,((8,5),(7,5)),3).
move(6,((7,5),(6,5)),5).
move(6,((6,5),(5,5)),6).
move(6,((5,5),(5,4)),7).
move(6,((5,4),(4,4)),8).
move(6,((4,4),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(9,4)),7).
move(7,((9,4),(8,4)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(9,5)),2).
move(9,((9,5),(8,5)),3).
move(9,((8,5),(8,4)),10).
move(9,((8,4),(7,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(6,4)),5).
move(10,((6,4),(5,4)),6).
move(10,((5,4),(5,3)),7).
move(10,((5,3),(5,4)),8).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(10,4)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.663s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.672s

Choices      : 1967     (Domain: 1219)
Conflicts    : 20       (Analyzed: 20)
Restarts     : 0       
Model-Level  : 1768.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 20       (Deleted: 0)
  Binary     : 1        (Ratio:   5.00%)
  Ternary    : 1        (Ratio:   5.00%)
  Conflict   : 20       (Average Length:   26.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 20       (Average:  9.95 Max:  39 Sum:    199)
  Executed   : 20       (Average:  9.95 Max:  39 Sum:    199 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354890   (Original: 328606)
  Choice     : 440     
  Heuristic  : 1296     (Original: 1299)
Atoms        : 141761  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(3,4)),3).
move(2,((3,4),(4,4)),4).
move(2,((4,4),(4,5)),5).
move(2,((4,5),(4,4)),6).
move(2,((4,4),(5,4)),7).
move(2,((5,4),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),5).
move(3,((3,2),(3,3)),6).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(8,4)),5).
move(5,((8,4),(8,3)),6).
move(5,((8,3),(7,3)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),4).
move(6,((8,3),(7,3)),5).
move(6,((7,3),(6,3)),7).
move(6,((6,3),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),3).
move(7,((7,5),(8,5)),4).
move(7,((8,5),(9,5)),5).
move(7,((9,5),(9,4)),6).
move(7,((9,4),(8,4)),40).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(7,5)),5).
move(9,((7,5),(7,4)),6).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),6).
move(10,((4,5),(4,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(9,4)),4).
move(11,((9,4),(10,4)),5).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.740s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.734s

Choices      : 951      (Domain: 381)
Conflicts    : 43       (Analyzed: 43)
Restarts     : 0       
Model-Level  : 466.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 43       (Deleted: 0)
  Binary     : 10       (Ratio:  23.26%)
  Ternary    : 1        (Ratio:   2.33%)
  Conflict   : 43       (Average Length:   16.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 43       (Average: 11.28 Max:  70 Sum:    485)
  Executed   : 43       (Average: 11.28 Max:  70 Sum:    485 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378797   (Original: 352631)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141784  
Disjunctions : 0        (Original: 1)
Bodies       : 247623   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128049   (Atom=Atom: 470 Body=Body: 482 Other: 127097)
Tight        : Yes
Variables    : 246824   (Eliminated:    0 Frozen: 126446)
Constraints  : 678181   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(1,5)),3).
move(1,((1,5),(1,4)),4).
move(1,((1,4),(2,4)),5).
move(1,((2,4),(2,3)),6).
move(1,((2,3),(1,3)),7).
move(1,((1,3),(1,4)),9).
move(1,((1,4),(1,5)),10).
move(1,((1,5),(2,5)),11).
move(1,((2,5),(3,5)),12).
move(1,((3,5),(2,5)),13).
move(1,((2,5),(3,5)),17).
move(1,((3,5),(2,5)),23).
move(1,((2,5),(3,5)),24).
move(1,((3,5),(2,5)),25).
move(1,((2,5),(3,5)),26).
move(1,((3,5),(4,5)),32).
move(1,((4,5),(5,5)),33).
move(1,((5,5),(5,6)),34).
move(1,((5,6),(6,6)),35).
move(1,((6,6),(6,5)),36).
move(1,((6,5),(7,5)),37).
move(1,((7,5),(7,4)),38).
move(1,((7,4),(8,4)),39).
move(1,((8,4),(8,3)),40).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(2,4)),10).
move(2,((2,4),(2,3)),11).
move(2,((2,3),(3,3)),12).
move(2,((3,3),(2,3)),14).
move(2,((2,3),(2,4)),15).
move(2,((2,4),(2,5)),17).
move(2,((2,5),(2,4)),23).
move(2,((2,4),(2,5)),26).
move(2,((2,5),(2,4)),32).
move(2,((2,4),(2,3)),37).
move(2,((2,3),(3,3)),38).
move(2,((3,3),(4,3)),39).
move(2,((4,3),(5,3)),40).
move(3,((3,6),(3,5)),3).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,4)),7).
move(3,((3,4),(3,3)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,4)),6).
move(4,((4,4),(4,3)),9).
move(4,((4,3),(4,4)),10).
move(4,((4,4),(4,5)),11).
move(4,((4,5),(4,4)),13).
move(4,((4,4),(4,3)),15).
move(4,((4,3),(4,4)),16).
move(4,((4,4),(5,4)),18).
move(4,((5,4),(5,3)),19).
move(4,((5,3),(4,3)),20).
move(4,((4,3),(4,4)),21).
move(4,((4,4),(4,3)),24).
move(4,((4,3),(4,4)),25).
move(4,((4,4),(4,3)),27).
move(4,((4,3),(5,3)),28).
move(4,((5,3),(4,3)),29).
move(4,((4,3),(4,4)),30).
move(4,((4,4),(4,3)),33).
move(4,((4,3),(5,3)),34).
move(4,((5,3),(6,3)),35).
move(4,((6,3),(6,2)),36).
move(4,((6,2),(6,3)),37).
move(4,((6,3),(7,3)),38).
move(4,((7,3),(8,3)),39).
move(4,((8,3),(9,3)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,4)),6).
move(5,((5,4),(5,5)),8).
move(5,((5,5),(6,5)),9).
move(5,((6,5),(6,4)),10).
move(5,((6,4),(5,4)),11).
move(5,((5,4),(5,3)),13).
move(5,((5,3),(5,4)),15).
move(5,((5,4),(5,3)),17).
move(5,((5,3),(6,3)),18).
move(5,((6,3),(6,4)),19).
move(5,((6,4),(6,3)),20).
move(5,((6,3),(5,3)),24).
move(5,((5,3),(5,4)),25).
move(5,((5,4),(5,3)),30).
move(5,((5,3),(5,4)),33).
move(5,((5,4),(5,3)),38).
move(5,((5,3),(6,3)),39).
move(5,((6,3),(7,3)),40).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),4).
move(6,((9,4),(9,3)),5).
move(6,((9,3),(8,3)),7).
move(6,((8,3),(9,3)),8).
move(6,((9,3),(9,4)),9).
move(6,((9,4),(9,3)),10).
move(6,((9,3),(8,3)),11).
move(6,((8,3),(9,3)),12).
move(6,((9,3),(8,3)),16).
move(6,((8,3),(9,3)),18).
move(6,((9,3),(8,3)),25).
move(6,((8,3),(7,3)),26).
move(6,((7,3),(8,3)),27).
move(6,((8,3),(9,3)),28).
move(6,((9,3),(9,4)),31).
move(6,((9,4),(9,3)),33).
move(6,((9,3),(8,3)),34).
move(6,((8,3),(7,3)),35).
move(6,((7,3),(6,3)),36).
move(6,((6,3),(5,3)),37).
move(6,((5,3),(4,3)),38).
move(6,((4,3),(4,4)),39).
move(6,((4,4),(4,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(7,4)),5).
move(7,((7,4),(6,4)),6).
move(7,((6,4),(7,4)),7).
move(7,((7,4),(8,4)),8).
move(7,((8,4),(8,5)),9).
move(7,((8,5),(8,4)),10).
move(7,((8,4),(7,4)),11).
move(7,((7,4),(6,4)),13).
move(7,((6,4),(6,5)),18).
move(7,((6,5),(7,5)),20).
move(7,((7,5),(7,4)),21).
move(7,((7,4),(8,4)),22).
move(7,((8,4),(7,4)),23).
move(7,((7,4),(8,4)),24).
move(7,((8,4),(8,5)),28).
move(7,((8,5),(8,4)),29).
move(7,((8,4),(7,4)),30).
move(7,((7,4),(6,4)),31).
move(7,((6,4),(7,4)),39).
move(7,((7,4),(8,4)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,5)),5).
move(8,((7,5),(7,4)),6).
move(8,((7,4),(7,5)),7).
move(8,((7,5),(7,4)),9).
move(8,((7,4),(7,3)),10).
move(8,((7,3),(6,3)),11).
move(8,((6,3),(6,4)),12).
move(8,((6,4),(5,4)),13).
move(8,((5,4),(5,5)),15).
move(8,((5,5),(6,5)),16).
move(8,((6,5),(7,5)),17).
move(8,((7,5),(7,4)),20).
move(8,((7,4),(6,4)),21).
move(8,((6,4),(7,4)),22).
move(8,((7,4),(7,5)),23).
move(8,((7,5),(6,5)),32).
move(8,((6,5),(7,5)),33).
move(8,((7,5),(6,5)),34).
move(8,((6,5),(5,5)),35).
move(8,((5,5),(4,5)),36).
move(8,((4,5),(3,5)),37).
move(8,((3,5),(2,5)),38).
move(8,((2,5),(2,4)),39).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(10,4)),7).
move(9,((10,4),(9,4)),8).
move(9,((9,4),(9,5)),9).
move(9,((9,5),(9,4)),10).
move(9,((9,4),(8,4)),16).
move(9,((8,4),(9,4)),18).
move(9,((9,4),(8,4)),31).
move(9,((8,4),(9,4)),34).
move(9,((9,4),(9,5)),37).
move(9,((9,5),(8,5)),38).
move(9,((8,5),(7,5)),39).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,5)),8).
move(10,((8,5),(7,5)),9).
move(10,((7,5),(7,4)),10).
move(10,((7,4),(7,5)),11).
move(10,((7,5),(8,5)),12).
move(10,((8,5),(8,4)),13).
move(10,((8,4),(7,4)),16).
move(10,((7,4),(8,4)),18).
move(10,((8,4),(7,4)),19).
move(10,((7,4),(6,4)),20).
move(10,((6,4),(5,4)),21).
move(10,((5,4),(6,4)),22).
move(10,((6,4),(7,4)),24).
move(10,((7,4),(8,4)),28).
move(10,((8,4),(7,4)),29).
move(10,((7,4),(6,4)),30).
move(10,((6,4),(5,4)),31).
move(10,((5,4),(4,4)),33).
move(10,((4,4),(5,4)),38).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),4).
move(11,((10,5),(10,4)),6).
move(11,((10,4),(11,4)),7).
move(11,((11,4),(10,4)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.695s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 418      (Domain: 418)
Conflicts    : 12       (Analyzed: 12)
Restarts     : 0       
Model-Level  : 388.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 12       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 1        (Ratio:   8.33%)
  Conflict   : 12       (Average Length:   17.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 12       (Average:  2.50 Max:   4 Sum:     30)
  Executed   : 12       (Average:  2.50 Max:   4 Sum:     30 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378773   (Original: 352618)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141761  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(1,2)),9).
move(1,((1,2),(1,1)),10).
move(1,((1,1),(1,2)),11).
move(1,((1,2),(2,2)),12).
move(1,((2,2),(2,3)),13).
move(1,((2,3),(2,4)),14).
move(1,((2,4),(3,4)),34).
move(1,((3,4),(3,3)),35).
move(1,((3,3),(4,3)),36).
move(1,((4,3),(5,3)),37).
move(1,((5,3),(6,3)),38).
move(1,((6,3),(7,3)),39).
move(1,((7,3),(8,3)),40).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(3,2)),7).
move(2,((3,2),(3,1)),8).
move(2,((3,1),(2,1)),9).
move(2,((2,1),(2,2)),10).
move(2,((2,2),(2,3)),11).
move(2,((2,3),(2,4)),12).
move(2,((2,4),(3,4)),14).
move(2,((3,4),(3,5)),33).
move(2,((3,5),(4,5)),34).
move(2,((4,5),(5,5)),35).
move(2,((5,5),(5,4)),37).
move(2,((5,4),(5,3)),38).
move(2,((5,3),(5,2)),39).
move(2,((5,2),(5,3)),40).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),5).
move(3,((3,3),(3,2)),6).
move(3,((3,2),(2,2)),7).
move(3,((2,2),(2,1)),8).
move(3,((2,1),(1,1)),9).
move(3,((1,1),(2,1)),10).
move(3,((2,1),(2,2)),11).
move(3,((2,2),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(3,2)),34).
move(3,((3,2),(2,2)),35).
move(3,((2,2),(2,3)),36).
move(3,((2,3),(2,4)),37).
move(3,((2,4),(3,4)),38).
move(3,((3,4),(3,3)),39).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,2)),6).
move(4,((4,2),(4,1)),7).
move(4,((4,1),(4,2)),8).
move(4,((4,2),(4,3)),9).
move(4,((4,3),(4,4)),11).
move(4,((4,4),(5,4)),33).
move(4,((5,4),(5,3)),34).
move(4,((5,3),(5,4)),35).
move(4,((5,4),(6,4)),36).
move(4,((6,4),(6,3)),37).
move(4,((6,3),(7,3)),38).
move(4,((7,3),(8,3)),39).
move(4,((8,3),(9,3)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(5,2)),8).
move(5,((5,2),(5,3)),9).
move(5,((5,3),(5,4)),10).
move(5,((5,4),(5,5)),33).
move(5,((5,5),(6,5)),35).
move(5,((6,5),(7,5)),37).
move(5,((7,5),(7,4)),38).
move(5,((7,4),(7,3)),40).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,2)),7).
move(6,((9,2),(10,2)),8).
move(6,((10,2),(10,1)),9).
move(6,((10,1),(11,1)),10).
move(6,((11,1),(10,1)),11).
move(6,((10,1),(10,2)),12).
move(6,((10,2),(9,2)),13).
move(6,((9,2),(9,3)),14).
move(6,((9,3),(9,4)),15).
move(6,((9,4),(10,4)),33).
move(6,((10,4),(9,4)),34).
move(6,((9,4),(8,4)),35).
move(6,((8,4),(7,4)),36).
move(6,((7,4),(6,4)),37).
move(6,((6,4),(5,4)),38).
move(6,((5,4),(4,4)),39).
move(6,((4,4),(4,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(6,1)),7).
move(7,((6,1),(6,2)),8).
move(7,((6,2),(6,3)),9).
move(7,((6,3),(6,2)),10).
move(7,((6,2),(6,3)),11).
move(7,((6,3),(6,4)),12).
move(7,((6,4),(6,5)),33).
move(7,((6,5),(6,4)),35).
move(7,((6,4),(6,3)),36).
move(7,((6,3),(7,3)),37).
move(7,((7,3),(8,3)),38).
move(7,((8,3),(8,4)),39).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(7,4)),10).
move(8,((7,4),(6,4)),33).
move(8,((6,4),(5,4)),34).
move(8,((5,4),(4,4)),35).
move(8,((4,4),(5,4)),36).
move(8,((5,4),(4,4)),37).
move(8,((4,4),(3,4)),39).
move(8,((3,4),(2,4)),40).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(10,6)),3).
move(9,((10,6),(10,5)),4).
move(9,((10,5),(10,4)),6).
move(9,((10,4),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(9,((11,3),(11,2)),9).
move(9,((11,2),(10,2)),10).
move(9,((10,2),(10,3)),11).
move(9,((10,3),(10,4)),12).
move(9,((10,4),(10,5)),33).
move(9,((10,5),(9,5)),34).
move(9,((9,5),(8,5)),35).
move(9,((8,5),(7,5)),36).
move(9,((7,5),(8,5)),37).
move(9,((8,5),(7,5)),39).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,3)),5).
move(10,((8,3),(8,2)),6).
move(10,((8,2),(8,1)),7).
move(10,((8,1),(9,1)),8).
move(10,((9,1),(9,2)),9).
move(10,((9,2),(8,2)),10).
move(10,((8,2),(8,3)),11).
move(10,((8,3),(8,4)),12).
move(10,((8,4),(7,4)),33).
move(10,((7,4),(7,3)),34).
move(10,((7,3),(7,4)),35).
move(10,((7,4),(7,3)),36).
move(10,((7,3),(7,4)),37).
move(10,((7,4),(6,4)),38).
move(10,((6,4),(5,4)),39).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(10,2)),7).
move(11,((10,2),(11,2)),8).
move(11,((11,2),(11,1)),9).
move(11,((11,1),(11,2)),10).
move(11,((11,2),(10,2)),11).
move(11,((10,2),(10,3)),12).
move(11,((10,3),(10,4)),35).
move(11,((10,4),(9,4)),36).
move(11,((9,4),(9,3)),37).
move(11,((9,3),(10,3)),38).
move(11,((10,3),(10,4)),39).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.691s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 585      (Domain: 585)
Conflicts    : 31       (Analyzed: 31)
Restarts     : 0       
Model-Level  : 385.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 31       (Deleted: 0)
  Binary     : 2        (Ratio:   6.45%)
  Ternary    : 1        (Ratio:   3.23%)
  Conflict   : 31       (Average Length:   11.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 31       (Average:  6.45 Max:  26 Sum:    200)
  Executed   : 31       (Average:  6.45 Max:  26 Sum:    200 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378773   (Original: 352618)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141761  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

