%%%%%
%Standard
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(7,6)),6).
move(2,((7,6),(8,6)),7).
move(2,((8,6),(9,6)),8).
move(2,((9,6),(10,6)),9).
move(2,((10,6),(10,5)),10).
move(2,((10,5),(10,4)),11).
move(2,((10,4),(10,3)),12).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(3,3)),4).
move(3,((3,3),(3,4)),5).
move(3,((3,4),(4,4)),6).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(9,6)),6).
move(4,((9,6),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(8,6)),4).
move(5,((8,6),(9,6)),5).
move(5,((9,6),(9,5)),6).
move(5,((9,5),(9,4)),7).
move(5,((9,4),(9,3)),8).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(6,3)),5).
move(6,((6,3),(7,3)),6).
move(6,((7,3),(8,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,5)),3).
move(7,((6,5),(5,5)),4).
move(7,((5,5),(5,4)),5).
move(7,((5,4),(5,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(5,4)),4).
move(8,((5,4),(4,4)),5).
move(8,((4,4),(4,3)),6).
move(8,((4,3),(3,3)),7).
move(8,((3,3),(2,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.189s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.188s

Choices      : 576     
Conflicts    : 18       (Analyzed: 18)
Restarts     : 0       
Model-Level  : 316.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 18       (Deleted: 0)
  Binary     : 4        (Ratio:  22.22%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 18       (Average Length:   23.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 18       (Average: 14.44 Max: 131 Sum:    260)
  Executed   : 18       (Average: 14.44 Max: 131 Sum:    260 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261077   (Original: 241134)
  Choice     : 320     
Atoms        : 106367  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(7,6)),6).
move(2,((7,6),(8,6)),7).
move(2,((8,6),(9,6)),8).
move(2,((9,6),(10,6)),9).
move(2,((10,6),(10,5)),10).
move(2,((10,5),(10,4)),11).
move(2,((10,4),(10,3)),12).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(3,3)),4).
move(3,((3,3),(3,4)),5).
move(3,((3,4),(4,4)),6).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(9,6)),6).
move(4,((9,6),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(8,6)),4).
move(5,((8,6),(9,6)),5).
move(5,((9,6),(9,5)),6).
move(5,((9,5),(9,4)),7).
move(5,((9,4),(9,3)),8).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(6,3)),5).
move(6,((6,3),(7,3)),6).
move(6,((7,3),(8,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,5)),3).
move(7,((6,5),(5,5)),4).
move(7,((5,5),(5,4)),5).
move(7,((5,4),(5,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(5,4)),4).
move(8,((5,4),(4,4)),5).
move(8,((4,4),(4,3)),6).
move(8,((4,3),(3,3)),7).
move(8,((3,3),(2,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.198s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.203s

Choices      : 615      (Domain: 37)
Conflicts    : 18       (Analyzed: 18)
Restarts     : 0       
Model-Level  : 353.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 18       (Deleted: 0)
  Binary     : 4        (Ratio:  22.22%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 18       (Average Length:   23.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 18       (Average: 14.56 Max: 133 Sum:    262)
  Executed   : 18       (Average: 14.56 Max: 133 Sum:    262 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261206   (Original: 241263)
  Choice     : 320     
  Heuristic  : 38      
Atoms        : 106458  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDistance.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(7,6)),6).
move(2,((7,6),(8,6)),7).
move(2,((8,6),(9,6)),8).
move(2,((9,6),(10,6)),9).
move(2,((10,6),(10,5)),10).
move(2,((10,5),(10,4)),11).
move(2,((10,4),(10,3)),12).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(4,5)),3).
move(3,((4,5),(4,4)),4).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(8,5)),6).
move(4,((8,5),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(6,5)),3).
move(5,((6,5),(7,5)),4).
move(5,((7,5),(8,5)),5).
move(5,((8,5),(9,5)),6).
move(5,((9,5),(9,4)),7).
move(5,((9,4),(9,3)),8).
move(6,((5,6),(6,6)),1).
move(6,((6,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(7,4)),4).
move(6,((7,4),(7,3)),5).
move(6,((7,3),(8,3)),6).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(5,4)),3).
move(7,((5,4),(5,3)),4).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(3,4)),6).
move(8,((3,4),(3,3)),7).
move(8,((3,3),(2,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.231s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.234s

Choices      : 822      (Domain: 822)
Conflicts    : 4        (Analyzed: 4)
Restarts     : 0       
Model-Level  : 281.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 4        (Deleted: 0)
  Binary     : 3        (Ratio:  75.00%)
  Ternary    : 1        (Ratio:  25.00%)
  Conflict   : 4        (Average Length:    2.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 4        (Average: 135.25 Max: 269 Sum:    541)
  Executed   : 4        (Average: 135.25 Max: 269 Sum:    541 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279632   (Original: 259761)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106466  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((8,6),(8,5)),2).
move(1,((8,5),(9,5)),3).
move(1,((9,5),(9,4)),7).
move(1,((9,4),(8,4)),8).
move(1,((8,4),(7,4)),9).
move(1,((7,4),(7,5)),31).
move(1,((7,5),(7,4)),33).
move(1,((7,4),(7,5)),35).
move(1,((7,5),(7,4)),36).
move(1,((7,4),(7,5)),37).
move(1,((7,5),(8,5)),39).
move(1,((8,5),(8,4)),40).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(1,6)),3).
move(2,((1,6),(1,5)),4).
move(2,((1,5),(1,4)),5).
move(2,((1,4),(1,3)),6).
move(2,((1,3),(2,3)),7).
move(2,((2,3),(2,2)),8).
move(2,((2,2),(2,1)),9).
move(2,((2,1),(2,2)),10).
move(2,((2,2),(3,2)),11).
move(2,((3,2),(4,2)),12).
move(2,((4,2),(5,2)),13).
move(2,((5,2),(6,2)),14).
move(2,((6,2),(6,3)),15).
move(2,((6,3),(7,3)),16).
move(2,((7,3),(8,3)),17).
move(2,((8,3),(9,3)),18).
move(2,((9,3),(9,4)),19).
move(2,((9,4),(10,4)),20).
move(2,((10,4),(10,3)),21).
move(2,((10,3),(10,4)),22).
move(2,((10,4),(10,3)),23).
move(2,((10,3),(10,2)),25).
move(2,((10,2),(10,3)),28).
move(2,((10,3),(10,2)),30).
move(2,((10,2),(10,3)),31).
move(2,((10,3),(10,2)),34).
move(2,((10,2),(10,3)),38).
move(2,((10,3),(10,2)),39).
move(2,((10,2),(10,3)),40).
move(3,((2,6),(2,5)),2).
move(3,((2,5),(1,5)),6).
move(3,((1,5),(1,4)),7).
move(3,((1,4),(2,4)),8).
move(3,((2,4),(3,4)),9).
move(3,((3,4),(4,4)),10).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(7,5)),5).
move(4,((7,5),(8,5)),6).
move(4,((8,5),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(4,((9,3),(9,2)),10).
move(4,((9,2),(10,2)),11).
move(4,((10,2),(11,2)),12).
move(4,((11,2),(11,3)),13).
move(4,((11,3),(10,3)),14).
move(4,((10,3),(10,4)),17).
move(4,((10,4),(10,5)),18).
move(4,((10,5),(10,4)),19).
move(4,((10,4),(10,3)),20).
move(4,((10,3),(9,3)),21).
move(4,((9,3),(9,4)),30).
move(4,((9,4),(9,5)),31).
move(4,((9,5),(10,5)),32).
move(4,((10,5),(9,5)),39).
move(4,((9,5),(9,4)),40).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,6)),2).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(3,5)),4).
move(5,((3,5),(3,4)),5).
move(5,((3,4),(2,4)),6).
move(5,((2,4),(2,5)),7).
move(5,((2,5),(3,5)),8).
move(5,((3,5),(4,5)),9).
move(5,((4,5),(5,5)),10).
move(5,((5,5),(6,5)),11).
move(5,((6,5),(7,5)),12).
move(5,((7,5),(8,5)),14).
move(5,((8,5),(8,4)),16).
move(5,((8,4),(8,5)),17).
move(5,((8,5),(9,5)),18).
move(5,((9,5),(9,4)),27).
move(5,((9,4),(8,4)),28).
move(5,((8,4),(7,4)),32).
move(5,((7,4),(8,4)),33).
move(5,((8,4),(9,4)),36).
move(5,((9,4),(9,5)),37).
move(5,((9,5),(9,4)),39).
move(5,((9,4),(9,3)),40).
move(6,((5,6),(6,6)),2).
move(6,((6,6),(6,5)),3).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(7,4)),6).
move(6,((7,4),(8,4)),7).
move(6,((8,4),(8,3)),8).
move(6,((8,3),(8,2)),9).
move(6,((8,2),(8,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(5,4)),5).
move(7,((5,4),(5,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(6,5)),2).
move(8,((6,5),(6,4)),3).
move(8,((6,4),(5,4)),4).
move(8,((5,4),(4,4)),5).
move(8,((4,4),(3,4)),6).
move(8,((3,4),(2,4)),7).
move(8,((2,4),(2,3)),8).
move(8,((2,3),(2,4)),9).
move(8,((2,4),(2,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.398s (Solving: 0.20s 1st Model: 0.20s Unsat: 0.00s)
CPU Time     : 1.391s

Choices      : 7266     (Domain: 664)
Conflicts    : 116      (Analyzed: 116)
Restarts     : 1        (Average: 116.00 Last: 47)
Model-Level  : 708.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 116      (Deleted: 0)
  Binary     : 28       (Ratio:  24.14%)
  Ternary    : 14       (Ratio:  12.07%)
  Conflict   : 116      (Average Length:   34.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 116      (Average: 56.53 Max: 755 Sum:   6558)
  Executed   : 116      (Average: 56.53 Max: 755 Sum:   6558 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279632   (Original: 259761)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106466  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(1,((8,3),(8,2)),4).
move(1,((8,2),(8,3)),8).
move(1,((8,3),(8,4)),9).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(2,4)),3).
move(2,((2,4),(3,4)),4).
move(2,((3,4),(3,3)),5).
move(2,((3,3),(4,3)),6).
move(2,((4,3),(5,3)),7).
move(2,((5,3),(6,3)),8).
move(2,((6,3),(7,3)),9).
move(2,((7,3),(8,3)),10).
move(2,((8,3),(9,3)),11).
move(2,((9,3),(10,3)),12).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(4,5)),3).
move(3,((4,5),(4,4)),4).
move(3,((4,4),(5,4)),5).
move(3,((5,4),(4,4)),7).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(8,5)),6).
move(4,((8,5),(8,4)),7).
move(4,((8,4),(9,4)),8).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(8,6)),4).
move(5,((8,6),(8,5)),5).
move(5,((8,5),(8,4)),6).
move(5,((8,4),(8,3)),7).
move(5,((8,3),(9,3)),8).
move(5,((9,3),(9,2)),9).
move(5,((9,2),(9,3)),40).
move(6,((5,6),(6,6)),1).
move(6,((6,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(7,4)),4).
move(6,((7,4),(7,3)),5).
move(6,((7,3),(7,2)),6).
move(6,((7,2),(8,2)),8).
move(6,((8,2),(8,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(5,4)),3).
move(7,((5,4),(5,5)),4).
move(7,((5,5),(4,5)),5).
move(7,((4,5),(4,4)),6).
move(7,((4,4),(4,3)),7).
move(7,((4,3),(5,3)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(3,4)),6).
move(8,((3,4),(3,3)),7).
move(8,((3,3),(2,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.197s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.188s

Choices      : 377      (Domain: 34)
Conflicts    : 7        (Analyzed: 7)
Restarts     : 0       
Model-Level  : 332.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 7        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 7        (Average Length:   33.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 7        (Average:  6.43 Max:  30 Sum:     45)
  Executed   : 7        (Average:  6.43 Max:  30 Sum:     45 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 262209   (Original: 242282)
  Choice     : 320     
  Heuristic  : 981      (Original: 997)
Atoms        : 106518  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(7,4)),3).
move(1,((7,4),(8,4)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(7,6)),6).
move(2,((7,6),(8,6)),7).
move(2,((8,6),(9,6)),8).
move(2,((9,6),(10,6)),9).
move(2,((10,6),(10,5)),10).
move(2,((10,5),(10,4)),11).
move(2,((10,4),(10,3)),12).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(2,2)),4).
move(3,((2,2),(3,2)),7).
move(3,((3,2),(3,3)),8).
move(3,((3,3),(3,4)),9).
move(3,((3,4),(4,4)),10).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(4,5)),2).
move(4,((4,5),(5,5)),3).
move(4,((5,5),(6,5)),5).
move(4,((6,5),(7,5)),6).
move(4,((7,5),(8,5)),7).
move(4,((8,5),(9,5)),8).
move(4,((9,5),(9,4)),9).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(7,5)),5).
move(5,((7,5),(8,5)),6).
move(5,((8,5),(8,4)),7).
move(5,((8,4),(8,3)),8).
move(5,((8,3),(9,3)),40).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(5,2)),4).
move(6,((5,2),(6,2)),5).
move(6,((6,2),(7,2)),6).
move(6,((7,2),(8,2)),7).
move(6,((8,2),(8,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,4)),4).
move(7,((6,4),(5,4)),5).
move(7,((5,4),(4,4)),6).
move(7,((4,4),(4,3)),7).
move(7,((4,3),(5,3)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(5,4)),4).
move(8,((5,4),(4,4)),5).
move(8,((4,4),(3,4)),6).
move(8,((3,4),(2,4)),7).
move(8,((2,4),(2,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.198s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.203s

Choices      : 1362     (Domain: 773)
Conflicts    : 25       (Analyzed: 25)
Restarts     : 0       
Model-Level  : 1128.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 25       (Deleted: 0)
  Binary     : 3        (Ratio:  12.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 25       (Average Length:   18.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 25       (Average:  9.36 Max:  47 Sum:    234)
  Executed   : 25       (Average:  9.36 Max:  47 Sum:    234 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261983   (Original: 242046)
  Choice     : 320     
  Heuristic  : 815      (Original: 821)
Atoms        : 106458  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((8,6),(8,5)),2).
move(1,((8,5),(8,6)),5).
move(1,((8,6),(8,5)),6).
move(1,((8,5),(8,4)),7).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(7,6)),6).
move(2,((7,6),(8,6)),7).
move(2,((8,6),(9,6)),8).
move(2,((9,6),(10,6)),9).
move(2,((10,6),(10,5)),10).
move(2,((10,5),(10,4)),11).
move(2,((10,4),(10,3)),12).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(3,3)),4).
move(3,((3,3),(3,4)),5).
move(3,((3,4),(4,4)),6).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),6).
move(4,((8,6),(9,6)),7).
move(4,((9,6),(9,5)),8).
move(4,((9,5),(9,4)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(8,6)),4).
move(5,((8,6),(9,6)),5).
move(5,((9,6),(9,5)),6).
move(5,((9,5),(9,4)),7).
move(5,((9,4),(9,3)),8).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(6,3)),5).
move(6,((6,3),(7,3)),6).
move(6,((7,3),(8,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,5)),3).
move(7,((6,5),(5,5)),4).
move(7,((5,5),(5,4)),5).
move(7,((5,4),(5,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(5,4)),4).
move(8,((5,4),(4,4)),5).
move(8,((4,4),(4,3)),6).
move(8,((4,3),(3,3)),7).
move(8,((3,3),(2,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.234s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.234s

Choices      : 596      (Domain: 268)
Conflicts    : 23       (Analyzed: 23)
Restarts     : 0       
Model-Level  : 331.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 23       (Deleted: 0)
  Binary     : 3        (Ratio:  13.04%)
  Ternary    : 1        (Ratio:   4.35%)
  Conflict   : 23       (Average Length:   21.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 23       (Average: 11.52 Max: 135 Sum:    265)
  Executed   : 23       (Average: 11.52 Max: 135 Sum:    265 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279642   (Original: 259763)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106475  
Disjunctions : 0        (Original: 1)
Bodies       : 183368   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93247    (Atom=Atom: 342 Body=Body: 351 Other: 92554)
Tight        : Yes
Variables    : 182697   (Eliminated:    0 Frozen: 92083)
Constraints  : 500665   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((8,6),(8,5)),5).
move(1,((8,5),(8,4)),7).
move(1,((8,4),(8,5)),39).
move(1,((8,5),(8,4)),40).
move(2,((1,6),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(1,5)),6).
move(2,((1,5),(1,4)),7).
move(2,((1,4),(1,3)),8).
move(2,((1,3),(2,3)),9).
move(2,((2,3),(3,3)),14).
move(2,((3,3),(2,3)),15).
move(2,((2,3),(2,4)),16).
move(2,((2,4),(2,3)),17).
move(2,((2,3),(2,4)),19).
move(2,((2,4),(2,5)),20).
move(2,((2,5),(1,5)),21).
move(2,((1,5),(1,4)),22).
move(2,((1,4),(1,3)),23).
move(2,((1,3),(2,3)),24).
move(2,((2,3),(3,3)),26).
move(2,((3,3),(2,3)),27).
move(2,((2,3),(3,3)),32).
move(2,((3,3),(4,3)),33).
move(2,((4,3),(5,3)),34).
move(2,((5,3),(6,3)),35).
move(2,((6,3),(7,3)),36).
move(2,((7,3),(8,3)),37).
move(2,((8,3),(9,3)),38).
move(2,((9,3),(10,3)),39).
move(3,((2,6),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(2,4)),6).
move(3,((2,4),(3,4)),16).
move(3,((3,4),(2,4)),17).
move(3,((2,4),(3,4)),19).
move(3,((3,4),(2,4)),20).
move(3,((2,4),(2,5)),26).
move(3,((2,5),(2,4)),27).
move(3,((2,4),(3,4)),33).
move(3,((3,4),(2,4)),34).
move(3,((2,4),(3,4)),39).
move(3,((3,4),(4,4)),40).
move(4,((3,6),(3,5)),3).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(4,4)),5).
move(4,((4,4),(3,4)),7).
move(4,((3,4),(4,4)),16).
move(4,((4,4),(3,4)),17).
move(4,((3,4),(3,5)),18).
move(4,((3,5),(3,4)),20).
move(4,((3,4),(3,5)),23).
move(4,((3,5),(3,4)),25).
move(4,((3,4),(3,5)),30).
move(4,((3,5),(3,4)),31).
move(4,((3,4),(4,4)),33).
move(4,((4,4),(4,3)),34).
move(4,((4,3),(5,3)),35).
move(4,((5,3),(6,3)),36).
move(4,((6,3),(7,3)),37).
move(4,((7,3),(7,4)),38).
move(4,((7,4),(8,4)),39).
move(4,((8,4),(9,4)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(5,3)),6).
move(5,((5,3),(4,3)),7).
move(5,((4,3),(4,4)),8).
move(5,((4,4),(4,3)),9).
move(5,((4,3),(4,4)),10).
move(5,((4,4),(4,3)),12).
move(5,((4,3),(4,4)),13).
move(5,((4,4),(4,3)),16).
move(5,((4,3),(4,4)),17).
move(5,((4,4),(4,3)),23).
move(5,((4,3),(4,4)),24).
move(5,((4,4),(5,4)),26).
move(5,((5,4),(4,4)),27).
move(5,((4,4),(4,3)),29).
move(5,((4,3),(4,4)),30).
move(5,((4,4),(4,5)),32).
move(5,((4,5),(4,4)),34).
move(5,((4,4),(4,3)),35).
move(5,((4,3),(5,3)),36).
move(5,((5,3),(6,3)),37).
move(5,((6,3),(7,3)),38).
move(5,((7,3),(8,3)),39).
move(5,((8,3),(9,3)),40).
move(6,((5,6),(6,6)),3).
move(6,((6,6),(7,6)),4).
move(6,((7,6),(7,5)),5).
move(6,((7,5),(7,4)),6).
move(6,((7,4),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(6,((8,3),(7,3)),9).
move(6,((7,3),(6,3)),10).
move(6,((6,3),(6,4)),11).
move(6,((6,4),(5,4)),12).
move(6,((5,4),(6,4)),13).
move(6,((6,4),(7,4)),16).
move(6,((7,4),(6,4)),18).
move(6,((6,4),(6,3)),19).
move(6,((6,3),(5,3)),21).
move(6,((5,3),(5,4)),22).
move(6,((5,4),(5,5)),23).
move(6,((5,5),(5,4)),24).
move(6,((5,4),(5,5)),25).
move(6,((5,5),(5,4)),35).
move(6,((5,4),(5,3)),37).
move(6,((5,3),(6,3)),38).
move(6,((6,3),(7,3)),39).
move(6,((7,3),(8,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),5).
move(7,((6,4),(6,3)),6).
move(7,((6,3),(5,3)),7).
move(7,((5,3),(6,3)),9).
move(7,((6,3),(5,3)),10).
move(7,((5,3),(6,3)),11).
move(7,((6,3),(5,3)),12).
move(7,((5,3),(6,3)),14).
move(7,((6,3),(6,4)),16).
move(7,((6,4),(5,4)),18).
move(7,((5,4),(6,4)),19).
move(7,((6,4),(6,5)),20).
move(7,((6,5),(6,4)),21).
move(7,((6,4),(5,4)),23).
move(7,((5,4),(5,3)),24).
move(7,((5,3),(6,3)),25).
move(7,((6,3),(6,4)),26).
move(7,((6,4),(5,4)),27).
move(7,((5,4),(6,4)),28).
move(7,((6,4),(5,4)),29).
move(7,((5,4),(5,3)),30).
move(7,((5,3),(6,3)),31).
move(7,((6,3),(6,4)),33).
move(7,((6,4),(6,3)),34).
move(7,((6,3),(6,4)),35).
move(7,((6,4),(6,3)),39).
move(7,((6,3),(5,3)),40).
move(8,((7,6),(7,5)),4).
move(8,((7,5),(7,4)),5).
move(8,((7,4),(7,3)),6).
move(8,((7,3),(6,3)),7).
move(8,((6,3),(6,4)),8).
move(8,((6,4),(7,4)),9).
move(8,((7,4),(7,3)),12).
move(8,((7,3),(7,4)),13).
move(8,((7,4),(7,5)),14).
move(8,((7,5),(7,4)),19).
move(8,((7,4),(7,3)),20).
move(8,((7,3),(6,3)),21).
move(8,((6,3),(7,3)),22).
move(8,((7,3),(7,4)),23).
move(8,((7,4),(7,5)),26).
move(8,((7,5),(7,4)),27).
move(8,((7,4),(7,3)),29).
move(8,((7,3),(7,4)),30).
move(8,((7,4),(6,4)),32).
move(8,((6,4),(5,4)),33).
move(8,((5,4),(4,4)),35).
move(8,((4,4),(3,4)),36).
move(8,((3,4),(3,3)),37).
move(8,((3,3),(2,3)),38).
move(8,((2,3),(2,4)),39).
move(8,((2,4),(2,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.201s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1.203s

Choices      : 290      (Domain: 290)
Conflicts    : 7        (Analyzed: 7)
Restarts     : 0       
Model-Level  : 277.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 7        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 7        (Average Length:   24.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 7        (Average:  1.86 Max:   3 Sum:     13)
  Executed   : 7        (Average:  1.86 Max:   3 Sum:     13 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279624   (Original: 259753)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106458  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hStrange.lp
%%%%%
move(1,((8,6),(7,6)),2).
move(1,((7,6),(7,5)),5).
move(1,((7,5),(7,4)),6).
move(1,((7,4),(8,4)),7).
move(1,((8,4),(8,3)),8).
move(1,((8,3),(8,2)),9).
move(1,((8,2),(9,2)),10).
move(1,((9,2),(10,2)),11).
move(1,((10,2),(10,1)),12).
move(1,((10,1),(11,1)),13).
move(1,((11,1),(10,1)),14).
move(1,((10,1),(10,2)),15).
move(1,((10,2),(9,2)),16).
move(1,((9,2),(8,2)),17).
move(1,((8,2),(8,3)),18).
move(1,((8,3),(8,4)),19).
move(1,((8,4),(7,4)),32).
move(1,((7,4),(8,4)),33).
move(1,((8,4),(8,5)),35).
move(1,((8,5),(8,4)),36).
move(1,((8,4),(9,4)),37).
move(1,((9,4),(8,4)),39).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(2,2)),8).
move(2,((2,2),(1,2)),9).
move(2,((1,2),(1,1)),10).
move(2,((1,1),(1,2)),11).
move(2,((1,2),(2,2)),12).
move(2,((2,2),(2,3)),13).
move(2,((2,3),(2,4)),14).
move(2,((2,4),(3,4)),32).
move(2,((3,4),(3,3)),33).
move(2,((3,3),(4,3)),34).
move(2,((4,3),(5,3)),35).
move(2,((5,3),(6,3)),36).
move(2,((6,3),(7,3)),37).
move(2,((7,3),(8,3)),38).
move(2,((8,3),(9,3)),39).
move(2,((9,3),(10,3)),40).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(3,1)),8).
move(3,((3,1),(2,1)),9).
move(3,((2,1),(2,2)),10).
move(3,((2,2),(2,3)),11).
move(3,((2,3),(2,4)),12).
move(3,((2,4),(3,4)),14).
move(3,((3,4),(3,3)),20).
move(3,((3,3),(4,3)),21).
move(3,((4,3),(5,3)),22).
move(3,((5,3),(5,2)),23).
move(3,((5,2),(4,2)),24).
move(3,((4,2),(3,2)),25).
move(3,((3,2),(2,2)),26).
move(3,((2,2),(2,3)),27).
move(3,((2,3),(2,4)),32).
move(3,((2,4),(2,5)),33).
move(3,((2,5),(3,5)),34).
move(3,((3,5),(4,5)),35).
move(3,((4,5),(4,4)),36).
move(3,((4,4),(4,3)),37).
move(3,((4,3),(4,4)),38).
move(3,((4,4),(4,5)),39).
move(3,((4,5),(4,4)),40).
move(4,((3,6),(3,5)),2).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(3,3)),5).
move(4,((3,3),(3,2)),6).
move(4,((3,2),(2,2)),7).
move(4,((2,2),(1,2)),8).
move(4,((1,2),(1,1)),9).
move(4,((1,1),(2,1)),10).
move(4,((2,1),(2,2)),11).
move(4,((2,2),(3,2)),12).
move(4,((3,2),(3,3)),13).
move(4,((3,3),(3,2)),20).
move(4,((3,2),(3,3)),21).
move(4,((3,3),(3,4)),22).
move(4,((3,4),(3,3)),32).
move(4,((3,3),(4,3)),33).
move(4,((4,3),(5,3)),34).
move(4,((5,3),(6,3)),35).
move(4,((6,3),(7,3)),36).
move(4,((7,3),(8,3)),37).
move(4,((8,3),(9,3)),38).
move(4,((9,3),(9,4)),39).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(4,2)),6).
move(5,((4,2),(4,1)),7).
move(5,((4,1),(4,2)),8).
move(5,((4,2),(4,3)),9).
move(5,((4,3),(4,4)),10).
move(5,((4,4),(4,3)),31).
move(5,((4,3),(4,4)),33).
move(5,((4,4),(5,4)),35).
move(5,((5,4),(6,4)),36).
move(5,((6,4),(7,4)),37).
move(5,((7,4),(8,4)),38).
move(5,((8,4),(8,3)),39).
move(5,((8,3),(9,3)),40).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(7,2)),8).
move(6,((7,2),(7,1)),9).
move(6,((7,1),(8,1)),10).
move(6,((8,1),(9,1)),11).
move(6,((9,1),(9,2)),12).
move(6,((9,2),(8,2)),13).
move(6,((8,2),(7,2)),14).
move(6,((7,2),(6,2)),15).
move(6,((6,2),(5,2)),16).
move(6,((5,2),(5,3)),17).
move(6,((5,3),(5,4)),18).
move(6,((5,4),(4,4)),31).
move(6,((4,4),(5,4)),32).
move(6,((5,4),(5,3)),33).
move(6,((5,3),(5,2)),34).
move(6,((5,2),(5,1)),35).
move(6,((5,1),(6,1)),36).
move(6,((6,1),(6,2)),37).
move(6,((6,2),(6,3)),38).
move(6,((6,3),(7,3)),39).
move(6,((7,3),(8,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(7,5)),4).
move(7,((7,5),(8,5)),5).
move(7,((8,5),(9,5)),7).
move(7,((9,5),(9,4)),8).
move(7,((9,4),(9,3)),9).
move(7,((9,3),(10,3)),10).
move(7,((10,3),(11,3)),11).
move(7,((11,3),(11,2)),12).
move(7,((11,2),(10,2)),13).
move(7,((10,2),(9,2)),14).
move(7,((9,2),(8,2)),15).
move(7,((8,2),(7,2)),16).
move(7,((7,2),(6,2)),17).
move(7,((6,2),(6,3)),18).
move(7,((6,3),(6,4)),19).
move(7,((6,4),(5,4)),31).
move(7,((5,4),(6,4)),32).
move(7,((6,4),(7,4)),33).
move(7,((7,4),(7,3)),34).
move(7,((7,3),(8,3)),35).
move(7,((8,3),(8,2)),36).
move(7,((8,2),(7,2)),37).
move(7,((7,2),(6,2)),38).
move(7,((6,2),(6,3)),39).
move(7,((6,3),(5,3)),40).
move(8,((7,6),(7,5)),2).
move(8,((7,5),(7,4)),3).
move(8,((7,4),(6,4)),4).
move(8,((6,4),(7,4)),5).
move(8,((7,4),(7,3)),6).
move(8,((7,3),(7,4)),8).
move(8,((7,4),(7,5)),19).
move(8,((7,5),(7,4)),20).
move(8,((7,4),(7,5)),21).
move(8,((7,5),(7,4)),22).
move(8,((7,4),(7,3)),32).
move(8,((7,3),(6,3)),33).
move(8,((6,3),(6,2)),34).
move(8,((6,2),(5,2)),35).
move(8,((5,2),(4,2)),36).
move(8,((4,2),(3,2)),37).
move(8,((3,2),(2,2)),39).
move(8,((2,2),(2,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.211s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.219s

Choices      : 541      (Domain: 541)
Conflicts    : 39       (Analyzed: 39)
Restarts     : 0       
Model-Level  : 276.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 39       (Deleted: 0)
  Binary     : 3        (Ratio:   7.69%)
  Ternary    : 1        (Ratio:   2.56%)
  Conflict   : 39       (Average Length:   17.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 39       (Average:  6.79 Max:  39 Sum:    265)
  Executed   : 39       (Average:  6.79 Max:  39 Sum:    265 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279624   (Original: 259753)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106458  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

