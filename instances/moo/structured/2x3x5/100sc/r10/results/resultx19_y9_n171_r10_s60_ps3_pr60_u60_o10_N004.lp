%%%%%
%Standard
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(5,9)),4).
move(1,((5,9),(6,9)),5).
move(1,((6,9),(6,8)),6).
move(1,((6,8),(6,7)),7).
move(1,((6,7),(5,7)),8).
move(1,((5,7),(5,6)),9).
move(1,((5,6),(4,6)),10).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(5,9)),3).
move(2,((5,9),(5,8)),4).
move(2,((5,8),(5,7)),5).
move(2,((5,7),(5,6)),6).
move(2,((5,6),(5,5)),7).
move(2,((5,5),(6,5)),8).
move(2,((6,5),(6,4)),9).
move(2,((6,4),(5,4)),10).
move(2,((5,4),(5,3)),11).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(5,5)),5).
move(4,((5,5),(6,5)),6).
move(4,((6,5),(6,6)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(6,2)),8).
move(5,((6,2),(6,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(7,5)),6).
move(6,((7,5),(7,4)),7).
move(6,((7,4),(8,4)),8).
move(6,((8,4),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(6,4)),6).
move(7,((6,4),(5,4)),7).
move(7,((5,4),(4,4)),8).
move(7,((4,4),(4,3)),9).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(11,9)),3).
move(8,((11,9),(12,9)),4).
move(8,((12,9),(13,9)),5).
move(8,((13,9),(13,8)),6).
move(8,((13,8),(13,7)),7).
move(8,((13,7),(14,7)),8).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(8,7)),3).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(9,7)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.161s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 2.172s

Choices      : 704     
Conflicts    : 31       (Analyzed: 31)
Restarts     : 0       
Model-Level  : 257.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 31       (Deleted: 0)
  Binary     : 3        (Ratio:   9.68%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 31       (Average Length:   30.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 31       (Average: 14.42 Max:  85 Sum:    447)
  Executed   : 31       (Average: 14.42 Max:  85 Sum:    447 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 396175   (Original: 344034)
  Choice     : 200     
Atoms        : 175925   (Original: 161215 Auxiliary: 14710)
Bodies       : 251747   (Original: 214406)
  Count      : 1941     (Original: 2832)
Equivalences : 144983   (Atom=Atom: 228 Body=Body: 239 Other: 144516)
Tight        : Yes
Variables    : 250449   (Eliminated:    0 Frozen: 143293)
Constraints  : 627398   (Binary:  82.5% Ternary:  12.7% Other:   4.8%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(5,9)),4).
move(1,((5,9),(6,9)),5).
move(1,((6,9),(6,8)),6).
move(1,((6,8),(6,7)),7).
move(1,((6,7),(5,7)),8).
move(1,((5,7),(5,6)),9).
move(1,((5,6),(4,6)),10).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(5,9)),3).
move(2,((5,9),(5,8)),4).
move(2,((5,8),(5,7)),5).
move(2,((5,7),(5,6)),6).
move(2,((5,6),(5,5)),7).
move(2,((5,5),(6,5)),8).
move(2,((6,5),(6,4)),9).
move(2,((6,4),(5,4)),10).
move(2,((5,4),(5,3)),11).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(5,5)),5).
move(4,((5,5),(6,5)),6).
move(4,((6,5),(6,6)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(6,2)),8).
move(5,((6,2),(6,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(7,5)),6).
move(6,((7,5),(7,4)),7).
move(6,((7,4),(8,4)),8).
move(6,((8,4),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(6,4)),6).
move(7,((6,4),(5,4)),7).
move(7,((5,4),(4,4)),8).
move(7,((4,4),(4,3)),9).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(11,9)),3).
move(8,((11,9),(12,9)),4).
move(8,((12,9),(13,9)),5).
move(8,((13,9),(13,8)),6).
move(8,((13,8),(13,7)),7).
move(8,((13,7),(14,7)),8).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(8,7)),3).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(9,7)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.305s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 2.297s

Choices      : 708     
Conflicts    : 32       (Analyzed: 32)
Restarts     : 0       
Model-Level  : 260.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 32       (Deleted: 0)
  Binary     : 3        (Ratio:   9.38%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 32       (Average Length:   29.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 32       (Average: 14.00 Max:  85 Sum:    448)
  Executed   : 32       (Average: 14.00 Max:  85 Sum:    448 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 396276   (Original: 344135)
  Choice     : 200     
Atoms        : 176026   (Original: 161316 Auxiliary: 14710)
Bodies       : 251747   (Original: 214406)
  Count      : 1941     (Original: 2832)
Equivalences : 144983   (Atom=Atom: 228 Body=Body: 239 Other: 144516)
Tight        : Yes
Variables    : 250449   (Eliminated:    0 Frozen: 143293)
Constraints  : 627398   (Binary:  82.5% Ternary:  12.7% Other:   4.8%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(5,9)),4).
move(1,((5,9),(6,9)),5).
move(1,((6,9),(6,8)),6).
move(1,((6,8),(6,7)),7).
move(1,((6,7),(5,7)),8).
move(1,((5,7),(5,6)),9).
move(1,((5,6),(4,6)),10).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(5,9)),3).
move(2,((5,9),(5,8)),4).
move(2,((5,8),(5,7)),5).
move(2,((5,7),(5,6)),6).
move(2,((5,6),(5,5)),7).
move(2,((5,5),(6,5)),8).
move(2,((6,5),(6,4)),9).
move(2,((6,4),(5,4)),10).
move(2,((5,4),(5,3)),11).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(5,5)),5).
move(4,((5,5),(6,5)),6).
move(4,((6,5),(6,6)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(6,2)),8).
move(5,((6,2),(6,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(7,5)),6).
move(6,((7,5),(7,4)),7).
move(6,((7,4),(8,4)),8).
move(6,((8,4),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(6,4)),6).
move(7,((6,4),(5,4)),7).
move(7,((5,4),(4,4)),8).
move(7,((4,4),(4,3)),9).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(11,9)),3).
move(8,((11,9),(12,9)),4).
move(8,((12,9),(13,9)),5).
move(8,((13,9),(13,8)),6).
move(8,((13,8),(13,7)),7).
move(8,((13,7),(14,7)),8).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(8,7)),3).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(9,7)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.045s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 2.047s

Choices      : 708     
Conflicts    : 32       (Analyzed: 32)
Restarts     : 0       
Model-Level  : 260.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 32       (Deleted: 0)
  Binary     : 3        (Ratio:   9.38%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 32       (Average Length:   29.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 32       (Average: 14.00 Max:  85 Sum:    448)
  Executed   : 32       (Average: 14.00 Max:  85 Sum:    448 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 396286   (Original: 344145)
  Choice     : 200     
Atoms        : 176036   (Original: 161326 Auxiliary: 14710)
Bodies       : 251747   (Original: 214406)
  Count      : 1941     (Original: 2832)
Equivalences : 144983   (Atom=Atom: 228 Body=Body: 239 Other: 144516)
Tight        : Yes
Variables    : 250449   (Eliminated:    0 Frozen: 143293)
Constraints  : 627398   (Binary:  82.5% Ternary:  12.7% Other:   4.8%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(5,9)),4).
move(1,((5,9),(6,9)),5).
move(1,((6,9),(6,8)),6).
move(1,((6,8),(6,7)),7).
move(1,((6,7),(5,7)),8).
move(1,((5,7),(5,6)),9).
move(1,((5,6),(4,6)),10).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(5,9)),3).
move(2,((5,9),(5,8)),4).
move(2,((5,8),(5,7)),5).
move(2,((5,7),(5,6)),6).
move(2,((5,6),(5,5)),7).
move(2,((5,5),(6,5)),8).
move(2,((6,5),(6,4)),9).
move(2,((6,4),(5,4)),10).
move(2,((5,4),(5,3)),11).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(5,5)),5).
move(4,((5,5),(6,5)),6).
move(4,((6,5),(6,6)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(6,2)),8).
move(5,((6,2),(6,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(7,5)),6).
move(6,((7,5),(7,4)),7).
move(6,((7,4),(8,4)),8).
move(6,((8,4),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(6,4)),6).
move(7,((6,4),(5,4)),7).
move(7,((5,4),(4,4)),8).
move(7,((4,4),(4,3)),9).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(11,9)),3).
move(8,((11,9),(12,9)),4).
move(8,((12,9),(13,9)),5).
move(8,((13,9),(13,8)),6).
move(8,((13,8),(13,7)),7).
move(8,((13,7),(14,7)),8).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(8,7)),3).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(9,7)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.020s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 2.031s

Choices      : 708     
Conflicts    : 32       (Analyzed: 32)
Restarts     : 0       
Model-Level  : 260.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 32       (Deleted: 0)
  Binary     : 3        (Ratio:   9.38%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 32       (Average Length:   29.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 32       (Average: 14.00 Max:  85 Sum:    448)
  Executed   : 32       (Average: 14.00 Max:  85 Sum:    448 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 396286   (Original: 344145)
  Choice     : 200     
Atoms        : 176036   (Original: 161326 Auxiliary: 14710)
Bodies       : 251747   (Original: 214406)
  Count      : 1941     (Original: 2832)
Equivalences : 144983   (Atom=Atom: 228 Body=Body: 239 Other: 144516)
Tight        : Yes
Variables    : 250449   (Eliminated:    0 Frozen: 143293)
Constraints  : 627398   (Binary:  82.5% Ternary:  12.7% Other:   4.8%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(2,7)),3).
move(1,((2,7),(3,7)),4).
move(1,((3,7),(3,6)),5).
move(1,((3,6),(3,5)),6).
move(1,((3,5),(4,5)),7).
move(1,((4,5),(4,6)),8).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(3,8)),2).
move(2,((3,8),(4,8)),3).
move(2,((4,8),(4,7)),5).
move(2,((4,7),(4,6)),6).
move(2,((4,6),(5,6)),7).
move(2,((5,6),(5,5)),8).
move(2,((5,5),(5,4)),9).
move(2,((5,4),(5,3)),10).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(2,6)),4).
move(3,((2,6),(2,5)),5).
move(3,((2,5),(1,5)),6).
move(3,((1,5),(2,5)),8).
move(3,((2,5),(3,5)),9).
move(3,((3,5),(3,4)),10).
move(3,((3,4),(3,3)),11).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,5)),6).
move(4,((4,5),(4,6)),7).
move(4,((4,6),(5,6)),8).
move(4,((5,6),(6,6)),9).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),6).
move(5,((5,4),(5,3)),7).
move(5,((5,3),(6,3)),8).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(6,6)),4).
move(7,((6,6),(6,5)),5).
move(7,((6,5),(5,5)),6).
move(7,((5,5),(5,4)),7).
move(7,((5,4),(4,4)),8).
move(7,((4,4),(4,3)),9).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(11,9)),3).
move(8,((11,9),(12,9)),4).
move(8,((12,9),(13,9)),5).
move(8,((13,9),(13,8)),7).
move(8,((13,8),(14,8)),8).
move(8,((14,8),(14,7)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(8,7)),3).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(9,7)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.073s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 2.062s

Choices      : 781     
Conflicts    : 47       (Analyzed: 47)
Restarts     : 0       
Model-Level  : 249.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 47       (Deleted: 0)
  Binary     : 10       (Ratio:  21.28%)
  Ternary    : 3        (Ratio:   6.38%)
  Conflict   : 47       (Average Length:   27.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 47       (Average: 11.32 Max: 130 Sum:    532)
  Executed   : 47       (Average: 11.32 Max: 130 Sum:    532 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 397581   (Original: 345460)
  Choice     : 200     
  Heuristic  : 1231     (Original: 1251)
Atoms        : 176100   (Original: 161390 Auxiliary: 14710)
Bodies       : 251747   (Original: 214406)
  Count      : 1941     (Original: 2832)
Equivalences : 144983   (Atom=Atom: 228 Body=Body: 239 Other: 144516)
Tight        : Yes
Variables    : 250449   (Eliminated:    0 Frozen: 143293)
Constraints  : 627398   (Binary:  82.5% Ternary:  12.7% Other:   4.8%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(5,9)),4).
move(1,((5,9),(6,9)),5).
move(1,((6,9),(7,9)),6).
move(1,((7,9),(7,8)),7).
move(1,((7,8),(7,7)),8).
move(1,((7,7),(6,7)),9).
move(1,((6,7),(5,7)),10).
move(1,((5,7),(5,6)),11).
move(1,((5,6),(4,6)),12).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(3,6)),4).
move(2,((3,6),(4,6)),5).
move(2,((4,6),(5,6)),6).
move(2,((5,6),(5,5)),7).
move(2,((5,5),(6,5)),8).
move(2,((6,5),(6,4)),9).
move(2,((6,4),(5,4)),10).
move(2,((5,4),(5,3)),11).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(5,5)),5).
move(4,((5,5),(6,5)),6).
move(4,((6,5),(6,6)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(6,2)),8).
move(5,((6,2),(6,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(7,5)),5).
move(6,((7,5),(7,4)),6).
move(6,((7,4),(8,4)),7).
move(6,((8,4),(8,3)),8).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(6,4)),6).
move(7,((6,4),(5,4)),7).
move(7,((5,4),(4,4)),8).
move(7,((4,4),(4,3)),9).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(11,9)),3).
move(8,((11,9),(12,9)),4).
move(8,((12,9),(13,9)),5).
move(8,((13,9),(13,8)),6).
move(8,((13,8),(13,7)),7).
move(8,((13,7),(14,7)),8).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(8,7)),3).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(9,7)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.229s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 2.234s

Choices      : 751     
Conflicts    : 39       (Analyzed: 39)
Restarts     : 0       
Model-Level  : 228.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 39       (Deleted: 0)
  Binary     : 6        (Ratio:  15.38%)
  Ternary    : 1        (Ratio:   2.56%)
  Conflict   : 39       (Average Length:   27.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 39       (Average: 13.41 Max:  84 Sum:    523)
  Executed   : 39       (Average: 13.41 Max:  84 Sum:    523 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 396588   (Original: 344450)
  Choice     : 200     
  Heuristic  : 312      (Original: 315)
Atoms        : 176026   (Original: 161316 Auxiliary: 14710)
Bodies       : 251747   (Original: 214406)
  Count      : 1941     (Original: 2832)
Equivalences : 144983   (Atom=Atom: 228 Body=Body: 239 Other: 144516)
Tight        : Yes
Variables    : 250449   (Eliminated:    0 Frozen: 143293)
Constraints  : 627398   (Binary:  82.5% Ternary:  12.7% Other:   4.8%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(2,6)),4).
move(1,((2,6),(3,6)),5).
move(1,((3,6),(4,6)),7).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(4,8)),3).
move(2,((4,8),(5,8)),4).
move(2,((5,8),(5,7)),5).
move(2,((5,7),(5,6)),6).
move(2,((5,6),(5,5)),7).
move(2,((5,5),(5,4)),8).
move(2,((5,4),(5,3)),9).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(5,6)),4).
move(4,((5,6),(6,6)),5).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((7,9),(6,9)),1).
move(7,((6,9),(5,9)),2).
move(7,((5,9),(4,9)),3).
move(7,((4,9),(4,8)),4).
move(7,((4,8),(4,7)),5).
move(7,((4,7),(4,6)),6).
move(7,((4,6),(4,5)),7).
move(7,((4,5),(4,4)),8).
move(7,((4,4),(4,3)),9).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(11,9)),3).
move(8,((11,9),(12,9)),4).
move(8,((12,9),(13,9)),5).
move(8,((13,9),(14,9)),6).
move(8,((14,9),(14,8)),7).
move(8,((14,8),(14,7)),8).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(8,7)),3).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(9,7)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.139s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 2.141s

Choices      : 270      (Domain: 49)
Conflicts    : 24       (Analyzed: 24)
Restarts     : 0       
Model-Level  : 170.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 24       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 24       (Average Length:   35.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 24       (Average:  4.17 Max:  13 Sum:    100)
  Executed   : 24       (Average:  4.17 Max:  13 Sum:    100 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 414657   (Original: 362630)
  Choice     : 200     
  Heuristic  : 18361    (Original: 18475)
Atoms        : 176046   (Original: 161336 Auxiliary: 14710)
Bodies       : 251747   (Original: 214406)
  Count      : 1941     (Original: 2832)
Equivalences : 144983   (Atom=Atom: 228 Body=Body: 239 Other: 144516)
Tight        : Yes
Variables    : 250449   (Eliminated:    0 Frozen: 143293)
Constraints  : 627398   (Binary:  82.5% Ternary:  12.7% Other:   4.8%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(2,7)),4).
move(1,((2,7),(3,7)),5).
move(1,((3,7),(4,7)),6).
move(1,((4,7),(4,6)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(2,((3,3),(4,3)),8).
move(2,((4,3),(5,3)),9).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),8).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(5,8)),2).
move(4,((5,8),(5,7)),3).
move(4,((5,7),(5,6)),4).
move(4,((5,6),(6,6)),5).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),6).
move(5,((5,4),(6,4)),7).
move(5,((6,4),(6,3)),8).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(7,7)),3).
move(6,((7,7),(8,7)),4).
move(6,((8,7),(8,6)),5).
move(6,((8,6),(8,5)),6).
move(6,((8,5),(8,4)),7).
move(6,((8,4),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(6,6)),4).
move(7,((6,6),(6,5)),5).
move(7,((6,5),(5,5)),6).
move(7,((5,5),(5,4)),7).
move(7,((5,4),(4,4)),8).
move(7,((4,4),(4,3)),9).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(11,9)),4).
move(8,((11,9),(11,8)),5).
move(8,((11,8),(12,8)),6).
move(8,((12,8),(13,8)),7).
move(8,((13,8),(13,7)),8).
move(8,((13,7),(14,7)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(8,8)),2).
move(9,((8,8),(8,7)),5).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(9,7)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.093s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 2.094s

Choices      : 602     
Conflicts    : 40       (Analyzed: 40)
Restarts     : 0       
Model-Level  : 201.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 40       (Deleted: 0)
  Binary     : 9        (Ratio:  22.50%)
  Ternary    : 3        (Ratio:   7.50%)
  Conflict   : 40       (Average Length:   23.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 40       (Average: 10.03 Max:  65 Sum:    401)
  Executed   : 40       (Average: 10.03 Max:  65 Sum:    401 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 414637   (Original: 362610)
  Choice     : 200     
  Heuristic  : 18361    (Original: 18475)
Atoms        : 176026   (Original: 161316 Auxiliary: 14710)
Bodies       : 251747   (Original: 214406)
  Count      : 1941     (Original: 2832)
Equivalences : 144983   (Atom=Atom: 228 Body=Body: 239 Other: 144516)
Tight        : Yes
Variables    : 250449   (Eliminated:    0 Frozen: 143293)
Constraints  : 627398   (Binary:  82.5% Ternary:  12.7% Other:   4.8%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,9),(2,9)),2).
move(1,((2,9),(1,9)),4).
move(1,((1,9),(1,8)),5).
move(1,((1,8),(1,7)),7).
move(1,((1,7),(1,6)),8).
move(1,((1,6),(1,5)),9).
move(1,((1,5),(1,4)),10).
move(1,((1,4),(1,3)),11).
move(1,((1,3),(1,2)),12).
move(1,((1,2),(2,2)),13).
move(1,((2,2),(3,2)),15).
move(1,((3,2),(4,2)),16).
move(1,((4,2),(4,3)),17).
move(1,((4,3),(4,4)),18).
move(1,((4,4),(4,5)),19).
move(1,((4,5),(4,6)),20).
move(2,((2,9),(3,9)),2).
move(2,((3,9),(3,8)),4).
move(2,((3,8),(3,7)),5).
move(2,((3,7),(3,6)),6).
move(2,((3,6),(3,5)),7).
move(2,((3,5),(3,4)),8).
move(2,((3,4),(3,3)),9).
move(2,((3,3),(3,2)),10).
move(2,((3,2),(2,2)),11).
move(2,((2,2),(2,1)),12).
move(2,((2,1),(1,1)),13).
move(2,((1,1),(2,1)),14).
move(2,((2,1),(2,2)),15).
move(2,((2,2),(2,3)),16).
move(2,((2,3),(3,3)),18).
move(2,((3,3),(4,3)),19).
move(2,((4,3),(5,3)),20).
move(3,((3,9),(3,8)),2).
move(3,((3,8),(2,8)),3).
move(3,((2,8),(2,9)),4).
move(3,((2,9),(2,8)),5).
move(3,((2,8),(2,7)),6).
move(3,((2,7),(2,8)),8).
move(3,((2,8),(3,8)),9).
move(3,((3,8),(3,7)),10).
move(3,((3,7),(3,6)),11).
move(3,((3,6),(3,7)),12).
move(3,((3,7),(3,6)),17).
move(3,((3,6),(3,5)),18).
move(3,((3,5),(3,4)),19).
move(3,((3,4),(3,3)),20).
move(4,((4,9),(4,8)),2).
move(4,((4,8),(3,8)),3).
move(4,((3,8),(2,8)),4).
move(4,((2,8),(2,7)),5).
move(4,((2,7),(2,6)),6).
move(4,((2,6),(2,5)),8).
move(4,((2,5),(2,4)),9).
move(4,((2,4),(2,3)),10).
move(4,((2,3),(3,3)),11).
move(4,((3,3),(2,3)),12).
move(4,((2,3),(3,3)),13).
move(4,((3,3),(3,4)),14).
move(4,((3,4),(3,5)),15).
move(4,((3,5),(3,6)),16).
move(4,((3,6),(4,6)),17).
move(4,((4,6),(5,6)),18).
move(4,((5,6),(6,6)),19).
move(5,((5,9),(5,8)),2).
move(5,((5,8),(6,8)),3).
move(5,((6,8),(6,7)),4).
move(5,((6,7),(6,6)),5).
move(5,((6,6),(6,5)),6).
move(5,((6,5),(6,4)),7).
move(5,((6,4),(6,3)),8).
move(5,((6,3),(6,2)),9).
move(5,((6,2),(6,1)),10).
move(5,((6,1),(6,2)),11).
move(5,((6,2),(5,2)),12).
move(5,((5,2),(5,3)),13).
move(5,((5,3),(5,4)),14).
move(5,((5,4),(5,5)),15).
move(5,((5,5),(5,6)),16).
move(5,((5,6),(6,6)),17).
move(5,((6,6),(6,5)),18).
move(5,((6,5),(6,4)),19).
move(5,((6,4),(6,3)),20).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(7,8)),3).
move(6,((7,8),(7,7)),4).
move(6,((7,7),(7,6)),5).
move(6,((7,6),(7,5)),6).
move(6,((7,5),(7,4)),7).
move(6,((7,4),(7,3)),8).
move(6,((7,3),(7,2)),9).
move(6,((7,2),(8,2)),10).
move(6,((8,2),(9,2)),11).
move(6,((9,2),(9,1)),12).
move(6,((9,1),(10,1)),13).
move(6,((10,1),(11,1)),14).
move(6,((11,1),(11,2)),15).
move(6,((11,2),(11,3)),16).
move(6,((11,3),(10,3)),18).
move(6,((10,3),(9,3)),19).
move(6,((9,3),(8,3)),20).
move(7,((7,9),(6,9)),1).
move(7,((6,9),(5,9)),2).
move(7,((5,9),(5,8)),3).
move(7,((5,8),(5,7)),4).
move(7,((5,7),(5,6)),5).
move(7,((5,6),(5,5)),6).
move(7,((5,5),(5,4)),7).
move(7,((5,4),(5,3)),8).
move(7,((5,3),(5,2)),9).
move(7,((5,2),(4,2)),10).
move(7,((4,2),(3,2)),11).
move(7,((3,2),(3,3)),12).
move(7,((3,3),(3,4)),13).
move(7,((3,4),(2,4)),14).
move(7,((2,4),(2,3)),15).
move(7,((2,3),(2,4)),16).
move(7,((2,4),(3,4)),18).
move(7,((3,4),(4,4)),19).
move(7,((4,4),(4,3)),20).
move(8,((8,9),(8,8)),3).
move(8,((8,8),(8,7)),5).
move(8,((8,7),(8,6)),6).
move(8,((8,6),(9,6)),7).
move(8,((9,6),(10,6)),8).
move(8,((10,6),(10,5)),9).
move(8,((10,5),(10,4)),10).
move(8,((10,4),(11,4)),11).
move(8,((11,4),(11,3)),12).
move(8,((11,3),(12,3)),13).
move(8,((12,3),(13,3)),14).
move(8,((13,3),(14,3)),15).
move(8,((14,3),(14,4)),16).
move(8,((14,4),(14,5)),17).
move(8,((14,5),(14,6)),18).
move(8,((14,6),(14,7)),19).
move(9,((9,9),(9,8)),3).
move(9,((9,8),(9,7)),4).
move(9,((9,7),(9,6)),5).
move(9,((9,6),(9,5)),6).
move(9,((9,5),(8,5)),7).
move(9,((8,5),(8,4)),8).
move(9,((8,4),(8,3)),9).
move(9,((8,3),(9,3)),10).
move(9,((9,3),(10,3)),11).
move(9,((10,3),(10,2)),12).
move(9,((10,2),(10,3)),13).
move(9,((10,3),(10,4)),14).
move(9,((10,4),(10,5)),15).
move(9,((10,5),(10,6)),16).
move(9,((10,6),(10,7)),17).
move(9,((10,7),(9,7)),18).
move(9,((9,7),(8,7)),19).
move(10,((10,9),(9,9)),3).
move(10,((9,9),(9,8)),4).
move(10,((9,8),(10,8)),6).
move(10,((10,8),(11,8)),7).
move(10,((11,8),(11,7)),8).
move(10,((11,7),(12,7)),9).
move(10,((12,7),(13,7)),10).
move(10,((13,7),(13,6)),11).
move(10,((13,6),(13,5)),12).
move(10,((13,5),(13,4)),13).
move(10,((13,4),(13,5)),14).
move(10,((13,5),(13,6)),15).
move(10,((13,6),(13,7)),16).
move(10,((13,7),(12,7)),17).
move(10,((12,7),(11,7)),18).
move(10,((11,7),(10,7)),19).
move(10,((10,7),(9,7)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.191s (Solving: 0.13s 1st Model: 0.13s Unsat: 0.00s)
CPU Time     : 2.172s

Choices      : 890      (Domain: 890)
Conflicts    : 59       (Analyzed: 59)
Restarts     : 0       
Model-Level  : 138.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 59       (Deleted: 0)
  Binary     : 13       (Ratio:  22.03%)
  Ternary    : 6        (Ratio:  10.17%)
  Conflict   : 59       (Average Length:   19.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 59       (Average: 12.75 Max:  55 Sum:    752)
  Executed   : 59       (Average: 12.75 Max:  55 Sum:    752 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 414637   (Original: 362610)
  Choice     : 200     
  Heuristic  : 18361    (Original: 18475)
Atoms        : 176026   (Original: 161316 Auxiliary: 14710)
Bodies       : 251747   (Original: 214406)
  Count      : 1941     (Original: 2832)
Equivalences : 144983   (Atom=Atom: 228 Body=Body: 239 Other: 144516)
Tight        : Yes
Variables    : 250449   (Eliminated:    0 Frozen: 143293)
Constraints  : 627398   (Binary:  82.5% Ternary:  12.7% Other:   4.8%)

