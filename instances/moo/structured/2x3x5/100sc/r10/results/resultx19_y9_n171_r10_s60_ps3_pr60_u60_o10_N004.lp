%%%%%
%Standard
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(2,5)),6).
move(1,((2,5),(2,6)),7).
move(1,((2,6),(3,6)),8).
move(1,((3,6),(3,7)),9).
move(1,((3,7),(3,6)),10).
move(1,((3,6),(4,6)),11).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(5,9)),3).
move(2,((5,9),(5,8)),4).
move(2,((5,8),(5,7)),5).
move(2,((5,7),(5,6)),6).
move(2,((5,6),(5,5)),7).
move(2,((5,5),(6,5)),8).
move(2,((6,5),(6,4)),9).
move(2,((6,4),(5,4)),10).
move(2,((5,4),(5,3)),11).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,6)),5).
move(4,((4,6),(5,6)),7).
move(4,((5,6),(6,6)),8).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(6,2)),8).
move(5,((6,2),(6,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(7,4)),7).
move(6,((7,4),(8,4)),8).
move(6,((8,4),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(6,5)),5).
move(7,((6,5),(5,5)),6).
move(7,((5,5),(4,5)),7).
move(7,((4,5),(4,4)),8).
move(7,((4,4),(4,3)),9).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(11,9)),3).
move(8,((11,9),(12,9)),4).
move(8,((12,9),(13,9)),5).
move(8,((13,9),(13,8)),6).
move(8,((13,8),(13,7)),7).
move(8,((13,7),(14,7)),8).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(8,7)),3).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(9,7)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 5.046s (Solving: 0.10s 1st Model: 0.10s Unsat: 0.00s)
CPU Time     : 5.047s

Choices      : 1066    
Conflicts    : 40       (Analyzed: 40)
Restarts     : 0       
Model-Level  : 455.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 40       (Deleted: 0)
  Binary     : 5        (Ratio:  12.50%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 40       (Average Length:   27.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 40       (Average: 15.28 Max:  77 Sum:    611)
  Executed   : 40       (Average: 15.28 Max:  77 Sum:    611 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 826268   (Original: 769656)
  Choice     : 400     
Atoms        : 338345  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(2,5)),6).
move(1,((2,5),(2,6)),7).
move(1,((2,6),(3,6)),8).
move(1,((3,6),(3,7)),9).
move(1,((3,7),(3,6)),10).
move(1,((3,6),(4,6)),11).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(5,9)),3).
move(2,((5,9),(5,8)),4).
move(2,((5,8),(5,7)),5).
move(2,((5,7),(5,6)),6).
move(2,((5,6),(5,5)),7).
move(2,((5,5),(6,5)),8).
move(2,((6,5),(6,4)),9).
move(2,((6,4),(5,4)),10).
move(2,((5,4),(5,3)),11).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,6)),5).
move(4,((4,6),(5,6)),7).
move(4,((5,6),(6,6)),8).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(6,2)),8).
move(5,((6,2),(6,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(7,4)),7).
move(6,((7,4),(8,4)),8).
move(6,((8,4),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(6,5)),5).
move(7,((6,5),(5,5)),6).
move(7,((5,5),(4,5)),7).
move(7,((4,5),(4,4)),8).
move(7,((4,4),(4,3)),9).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(11,9)),3).
move(8,((11,9),(12,9)),4).
move(8,((12,9),(13,9)),5).
move(8,((13,9),(13,8)),6).
move(8,((13,8),(13,7)),7).
move(8,((13,7),(14,7)),8).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(8,7)),3).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(9,7)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 5.061s (Solving: 0.10s 1st Model: 0.10s Unsat: 0.00s)
CPU Time     : 5.062s

Choices      : 1068    
Conflicts    : 40       (Analyzed: 40)
Restarts     : 0       
Model-Level  : 454.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 40       (Deleted: 0)
  Binary     : 5        (Ratio:  12.50%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 40       (Average Length:   27.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 40       (Average: 15.35 Max:  77 Sum:    614)
  Executed   : 40       (Average: 15.35 Max:  77 Sum:    614 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 826369   (Original: 769757)
  Choice     : 400     
Atoms        : 338446  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(2,8)),2).
move(1,((2,8),(3,8)),3).
move(1,((3,8),(3,7)),4).
move(1,((3,7),(3,6)),5).
move(1,((3,6),(4,6)),6).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(4,8)),3).
move(2,((4,8),(4,7)),4).
move(2,((4,7),(4,6)),5).
move(2,((4,6),(4,5)),6).
move(2,((4,5),(4,4)),7).
move(2,((4,4),(4,3)),8).
move(2,((4,3),(5,3)),9).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(5,9)),1).
move(4,((5,9),(6,9)),2).
move(4,((6,9),(6,8)),3).
move(4,((6,8),(6,7)),4).
move(4,((6,7),(6,6)),5).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(6,7)),3).
move(5,((6,7),(6,6)),4).
move(5,((6,6),(6,5)),5).
move(5,((6,5),(6,4)),6).
move(5,((6,4),(6,3)),7).
move(6,((6,9),(7,9)),1).
move(6,((7,9),(7,8)),2).
move(6,((7,8),(7,7)),3).
move(6,((7,7),(7,6)),4).
move(6,((7,6),(8,6)),5).
move(6,((8,6),(8,5)),6).
move(6,((8,5),(8,4)),7).
move(6,((8,4),(8,3)),8).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(6,8)),2).
move(7,((6,8),(5,8)),3).
move(7,((5,8),(5,7)),4).
move(7,((5,7),(5,6)),5).
move(7,((5,6),(5,5)),6).
move(7,((5,5),(5,4)),7).
move(7,((5,4),(4,4)),8).
move(7,((4,4),(4,3)),9).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(11,9)),3).
move(8,((11,9),(12,9)),4).
move(8,((12,9),(12,8)),5).
move(8,((12,8),(12,7)),6).
move(8,((12,7),(13,7)),7).
move(8,((13,7),(14,7)),8).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(8,8)),2).
move(9,((8,8),(8,7)),3).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(9,8)),2).
move(10,((9,8),(9,7)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.592s (Solving: 0.07s 1st Model: 0.07s Unsat: 0.00s)
CPU Time     : 4.578s

Choices      : 390      (Domain: 390)
Conflicts    : 4        (Analyzed: 4)
Restarts     : 0       
Model-Level  : 367.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 4        (Deleted: 0)
  Binary     : 3        (Ratio:  75.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 4        (Average Length:    2.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 4        (Average:  5.75 Max:   8 Sum:     23)
  Executed   : 4        (Average:  5.75 Max:   8 Sum:     23 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878874   (Original: 822372)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338456  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(2,8)),2).
move(1,((2,8),(2,7)),3).
move(1,((2,7),(2,6)),4).
move(1,((2,6),(3,6)),5).
move(1,((3,6),(3,5)),6).
move(1,((3,5),(3,6)),7).
move(1,((3,6),(4,6)),8).
move(1,((4,6),(3,6)),9).
move(1,((3,6),(3,7)),11).
move(1,((3,7),(3,6)),12).
move(1,((3,6),(4,6)),13).
move(2,((2,9),(3,9)),2).
move(2,((3,9),(2,9)),4).
move(2,((2,9),(2,8)),5).
move(2,((2,8),(2,7)),6).
move(2,((2,7),(3,7)),7).
move(2,((3,7),(4,7)),8).
move(2,((4,7),(4,6)),9).
move(2,((4,6),(4,5)),10).
move(2,((4,5),(5,5)),11).
move(2,((5,5),(5,4)),12).
move(2,((5,4),(5,3)),13).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(3,9)),1).
move(4,((3,9),(3,8)),2).
move(4,((3,8),(3,7)),5).
move(4,((3,7),(4,7)),6).
move(4,((4,7),(5,7)),7).
move(4,((5,7),(5,6)),8).
move(4,((5,6),(6,6)),9).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(6,6)),4).
move(5,((6,6),(6,5)),5).
move(5,((6,5),(6,4)),6).
move(5,((6,4),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),4).
move(6,((6,7),(6,6)),5).
move(6,((6,6),(6,5)),6).
move(6,((6,5),(6,4)),7).
move(6,((6,4),(7,4)),8).
move(6,((7,4),(8,4)),9).
move(6,((8,4),(8,3)),10).
move(7,((7,9),(6,9)),1).
move(7,((6,9),(5,9)),2).
move(7,((5,9),(5,8)),3).
move(7,((5,8),(5,7)),4).
move(7,((5,7),(5,6)),5).
move(7,((5,6),(5,5)),6).
move(7,((5,5),(5,4)),7).
move(7,((5,4),(5,3)),8).
move(7,((5,3),(4,3)),9).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(9,8)),2).
move(8,((9,8),(10,8)),3).
move(8,((10,8),(11,8)),4).
move(8,((11,8),(12,8)),5).
move(8,((12,8),(13,8)),6).
move(8,((13,8),(14,8)),7).
move(8,((14,8),(14,7)),8).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(8,8)),2).
move(9,((8,8),(8,7)),5).
move(10,((10,9),(9,9)),1).
move(10,((9,9),(8,9)),2).
move(10,((8,9),(9,9)),3).
move(10,((9,9),(9,8)),4).
move(10,((9,8),(9,7)),5).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.196s (Solving: 0.15s 1st Model: 0.15s Unsat: 0.00s)
CPU Time     : 4.203s

Choices      : 1771     (Domain: 550)
Conflicts    : 104      (Analyzed: 104)
Restarts     : 0       
Model-Level  : 371.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 104      (Deleted: 0)
  Binary     : 38       (Ratio:  36.54%)
  Ternary    : 1        (Ratio:   0.96%)
  Conflict   : 104      (Average Length:   19.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 104      (Average: 13.46 Max:  71 Sum:   1400)
  Executed   : 104      (Average: 13.46 Max:  71 Sum:   1400 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878874   (Original: 822372)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338456  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(3,8)),3).
move(1,((3,8),(3,7)),4).
move(1,((3,7),(3,6)),5).
move(1,((3,6),(4,6)),6).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(4,8)),3).
move(2,((4,8),(4,7)),4).
move(2,((4,7),(4,6)),5).
move(2,((4,6),(4,5)),6).
move(2,((4,5),(4,4)),7).
move(2,((4,4),(4,3)),8).
move(2,((4,3),(4,2)),9).
move(2,((4,2),(5,2)),10).
move(2,((5,2),(5,3)),11).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(5,9)),1).
move(4,((5,9),(5,8)),2).
move(4,((5,8),(6,8)),3).
move(4,((6,8),(6,7)),4).
move(4,((6,7),(6,6)),5).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(6,8)),2).
move(5,((6,8),(6,7)),3).
move(5,((6,7),(6,6)),4).
move(5,((6,6),(6,5)),5).
move(5,((6,5),(6,4)),6).
move(5,((6,4),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(7,8)),2).
move(6,((7,8),(8,8)),3).
move(6,((8,8),(8,7)),4).
move(6,((8,7),(8,6)),5).
move(6,((8,6),(8,5)),6).
move(6,((8,5),(8,4)),7).
move(6,((8,4),(8,3)),8).
move(7,((7,9),(6,9)),1).
move(7,((6,9),(5,9)),2).
move(7,((5,9),(5,8)),3).
move(7,((5,8),(5,7)),4).
move(7,((5,7),(5,6)),5).
move(7,((5,6),(5,5)),6).
move(7,((5,5),(5,4)),7).
move(7,((5,4),(5,3)),8).
move(7,((5,3),(4,3)),9).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(11,9)),3).
move(8,((11,9),(12,9)),4).
move(8,((12,9),(13,9)),5).
move(8,((13,9),(14,9)),6).
move(8,((14,9),(14,8)),7).
move(8,((14,8),(14,7)),8).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(8,8)),2).
move(9,((8,8),(8,7)),3).
move(9,((8,7),(7,7)),4).
move(9,((7,7),(8,7)),5).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(9,8)),2).
move(10,((9,8),(9,7)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 5.273s (Solving: 0.07s 1st Model: 0.07s Unsat: 0.00s)
CPU Time     : 5.266s

Choices      : 400      (Domain: 47)
Conflicts    : 2        (Analyzed: 2)
Restarts     : 0       
Model-Level  : 388.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 2        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 2        (Average Length:   49.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 2        (Average:  6.00 Max:   7 Sum:     12)
  Executed   : 2        (Average:  6.00 Max:   7 Sum:     12 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 827674   (Original: 771082)
  Choice     : 400     
  Heuristic  : 1231     (Original: 1251)
Atoms        : 338520  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(2,4)),6).
move(1,((2,4),(3,4)),7).
move(1,((3,4),(3,5)),8).
move(1,((3,5),(4,5)),9).
move(1,((4,5),(4,6)),10).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(3,8)),2).
move(2,((3,8),(4,8)),3).
move(2,((4,8),(5,8)),4).
move(2,((5,8),(5,7)),5).
move(2,((5,7),(5,6)),6).
move(2,((5,6),(5,5)),7).
move(2,((5,5),(6,5)),8).
move(2,((6,5),(6,4)),9).
move(2,((6,4),(5,4)),10).
move(2,((5,4),(5,3)),11).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(5,5)),5).
move(4,((5,5),(6,5)),6).
move(4,((6,5),(6,6)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(5,((6,3),(7,3)),8).
move(5,((7,3),(6,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(7,5)),6).
move(6,((7,5),(7,4)),7).
move(6,((7,4),(8,4)),8).
move(6,((8,4),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(6,4)),6).
move(7,((6,4),(5,4)),7).
move(7,((5,4),(4,4)),8).
move(7,((4,4),(4,3)),9).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(11,9)),3).
move(8,((11,9),(12,9)),4).
move(8,((12,9),(13,9)),5).
move(8,((13,9),(13,8)),6).
move(8,((13,8),(13,7)),7).
move(8,((13,7),(14,7)),8).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(8,7)),40).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(9,8)),2).
move(10,((9,8),(9,7)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.924s (Solving: 0.09s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 4.891s

Choices      : 1473     (Domain: 633)
Conflicts    : 31       (Analyzed: 31)
Restarts     : 0       
Model-Level  : 1092.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 31       (Deleted: 0)
  Binary     : 4        (Ratio:  12.90%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 31       (Average Length:   28.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 31       (Average: 12.29 Max:  82 Sum:    381)
  Executed   : 31       (Average: 12.29 Max:  82 Sum:    381 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 827021   (Original: 770412)
  Choice     : 400     
  Heuristic  : 652      (Original: 655)
Atoms        : 338446  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(5,9)),4).
move(1,((5,9),(5,8)),6).
move(1,((5,8),(5,7)),7).
move(1,((5,7),(5,6)),8).
move(1,((5,6),(5,5)),9).
move(1,((5,5),(4,5)),10).
move(1,((4,5),(4,6)),12).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(5,9)),3).
move(2,((5,9),(5,8)),4).
move(2,((5,8),(5,7)),5).
move(2,((5,7),(6,7)),6).
move(2,((6,7),(6,6)),7).
move(2,((6,6),(6,5)),8).
move(2,((6,5),(6,4)),9).
move(2,((6,4),(5,4)),10).
move(2,((5,4),(5,3)),11).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(5,9)),1).
move(4,((5,9),(6,9)),2).
move(4,((6,9),(7,9)),3).
move(4,((7,9),(7,8)),4).
move(4,((7,8),(7,7)),5).
move(4,((7,7),(6,7)),7).
move(4,((6,7),(6,6)),9).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(6,2)),8).
move(5,((6,2),(6,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(7,4)),7).
move(6,((7,4),(8,4)),8).
move(6,((8,4),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(6,5)),5).
move(7,((6,5),(5,5)),6).
move(7,((5,5),(4,5)),7).
move(7,((4,5),(4,4)),8).
move(7,((4,4),(4,3)),9).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(11,9)),3).
move(8,((11,9),(12,9)),4).
move(8,((12,9),(13,9)),5).
move(8,((13,9),(13,8)),6).
move(8,((13,8),(13,7)),7).
move(8,((13,7),(14,7)),8).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,8)),5).
move(9,((9,8),(8,8)),6).
move(9,((8,8),(8,7)),7).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(9,6)),4).
move(10,((9,6),(9,7)),5).
move(10,((9,7),(9,8)),7).
move(10,((9,8),(9,7)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 5.386s (Solving: 0.11s 1st Model: 0.11s Unsat: 0.00s)
CPU Time     : 5.391s

Choices      : 1320     (Domain: 761)
Conflicts    : 57       (Analyzed: 57)
Restarts     : 0       
Model-Level  : 447.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 57       (Deleted: 0)
  Binary     : 9        (Ratio:  15.79%)
  Ternary    : 1        (Ratio:   1.75%)
  Conflict   : 57       (Average Length:   26.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 57       (Average: 15.32 Max:  83 Sum:    873)
  Executed   : 57       (Average: 15.32 Max:  83 Sum:    873 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878886   (Original: 822374)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338467  
Disjunctions : 0        (Original: 1)
Bodies       : 566810   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305314   (Atom=Atom: 428 Body=Body: 439 Other: 304447)
Tight        : Yes
Variables    : 567731   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531526  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,9),(2,9)),2).
move(1,((2,9),(2,8)),4).
move(1,((2,8),(2,7)),6).
move(1,((2,7),(2,6)),7).
move(1,((2,6),(1,6)),8).
move(1,((1,6),(2,6)),9).
move(1,((2,6),(3,6)),10).
move(1,((3,6),(3,7)),11).
move(1,((3,7),(3,8)),13).
move(1,((3,8),(2,8)),14).
move(1,((2,8),(3,8)),16).
move(1,((3,8),(4,8)),17).
move(1,((4,8),(4,7)),18).
move(1,((4,7),(3,7)),20).
move(1,((3,7),(3,8)),21).
move(1,((3,8),(2,8)),22).
move(1,((2,8),(2,7)),23).
move(1,((2,7),(2,6)),24).
move(1,((2,6),(2,7)),27).
move(1,((2,7),(3,7)),28).
move(1,((3,7),(3,8)),29).
move(1,((3,8),(2,8)),30).
move(1,((2,8),(3,8)),31).
move(1,((3,8),(3,7)),32).
move(1,((3,7),(4,7)),33).
move(1,((4,7),(4,6)),35).
move(1,((4,6),(3,6)),36).
move(1,((3,6),(4,6)),37).
move(1,((4,6),(3,6)),39).
move(1,((3,6),(4,6)),40).
move(2,((2,9),(2,8)),2).
move(2,((2,8),(2,7)),3).
move(2,((2,7),(3,7)),4).
move(2,((3,7),(2,7)),5).
move(2,((2,7),(2,6)),6).
move(2,((2,6),(2,5)),7).
move(2,((2,5),(2,4)),9).
move(2,((2,4),(2,3)),10).
move(2,((2,3),(2,4)),11).
move(2,((2,4),(2,5)),12).
move(2,((2,5),(2,6)),13).
move(2,((2,6),(2,7)),14).
move(2,((2,7),(2,6)),15).
move(2,((2,6),(2,7)),16).
move(2,((2,7),(3,7)),23).
move(2,((3,7),(2,7)),24).
move(2,((2,7),(2,8)),27).
move(2,((2,8),(2,7)),28).
move(2,((2,7),(2,6)),30).
move(2,((2,6),(2,5)),31).
move(2,((2,5),(3,5)),33).
move(2,((3,5),(4,5)),34).
move(2,((4,5),(5,5)),35).
move(2,((5,5),(5,4)),36).
move(2,((5,4),(5,3)),37).
move(2,((5,3),(5,4)),38).
move(2,((5,4),(5,3)),40).
move(3,((3,9),(3,8)),3).
move(3,((3,8),(3,7)),5).
move(3,((3,7),(3,6)),6).
move(3,((3,6),(3,5)),7).
move(3,((3,5),(3,4)),8).
move(3,((3,4),(3,3)),9).
move(3,((3,3),(3,4)),10).
move(3,((3,4),(3,5)),11).
move(3,((3,5),(3,6)),12).
move(3,((3,6),(3,7)),13).
move(3,((3,7),(3,8)),14).
move(3,((3,8),(3,7)),15).
move(3,((3,7),(3,6)),16).
move(3,((3,6),(3,7)),17).
move(3,((3,7),(3,8)),18).
move(3,((3,8),(3,7)),19).
move(3,((3,7),(3,6)),20).
move(3,((3,6),(3,7)),21).
move(3,((3,7),(3,8)),23).
move(3,((3,8),(3,7)),27).
move(3,((3,7),(3,6)),28).
move(3,((3,6),(3,7)),29).
move(3,((3,7),(3,8)),30).
move(3,((3,8),(3,7)),31).
move(3,((3,7),(3,6)),32).
move(3,((3,6),(3,7)),33).
move(3,((3,7),(3,8)),34).
move(3,((3,8),(3,7)),35).
move(3,((3,7),(3,6)),37).
move(3,((3,6),(3,5)),38).
move(3,((3,5),(3,4)),39).
move(3,((3,4),(3,3)),40).
move(4,((4,9),(4,8)),3).
move(4,((4,8),(4,7)),4).
move(4,((4,7),(4,6)),5).
move(4,((4,6),(4,7)),6).
move(4,((4,7),(5,7)),7).
move(4,((5,7),(6,7)),8).
move(4,((6,7),(6,6)),9).
move(4,((6,6),(6,7)),10).
move(4,((6,7),(6,6)),11).
move(4,((6,6),(6,7)),12).
move(4,((6,7),(6,8)),13).
move(4,((6,8),(5,8)),14).
move(4,((5,8),(4,8)),16).
move(4,((4,8),(4,7)),17).
move(4,((4,7),(4,6)),18).
move(4,((4,6),(5,6)),19).
move(4,((5,6),(5,7)),20).
move(4,((5,7),(5,8)),22).
move(4,((5,8),(4,8)),24).
move(4,((4,8),(5,8)),25).
move(4,((5,8),(4,8)),26).
move(4,((4,8),(5,8)),27).
move(4,((5,8),(6,8)),28).
move(4,((6,8),(6,7)),29).
move(4,((6,7),(6,8)),30).
move(4,((6,8),(5,8)),31).
move(4,((5,8),(5,7)),33).
move(4,((5,7),(5,6)),34).
move(4,((5,6),(6,6)),36).
move(4,((6,6),(6,7)),37).
move(4,((6,7),(6,8)),38).
move(4,((6,8),(6,7)),39).
move(4,((6,7),(6,6)),40).
move(5,((5,9),(5,8)),3).
move(5,((5,8),(5,7)),4).
move(5,((5,7),(5,6)),5).
move(5,((5,6),(5,5)),6).
move(5,((5,5),(5,4)),7).
move(5,((5,4),(5,3)),8).
move(5,((5,3),(5,4)),10).
move(5,((5,4),(5,5)),11).
move(5,((5,5),(5,6)),12).
move(5,((5,6),(6,6)),13).
move(5,((6,6),(6,5)),14).
move(5,((6,5),(5,5)),15).
move(5,((5,5),(5,6)),16).
move(5,((5,6),(6,6)),17).
move(5,((6,6),(5,6)),18).
move(5,((5,6),(5,5)),19).
move(5,((5,5),(5,6)),20).
move(5,((5,6),(5,5)),21).
move(5,((5,5),(5,4)),22).
move(5,((5,4),(5,3)),24).
move(5,((5,3),(5,4)),25).
move(5,((5,4),(5,3)),26).
move(5,((5,3),(5,4)),27).
move(5,((5,4),(5,3)),28).
move(5,((5,3),(6,3)),29).
move(5,((6,3),(6,4)),30).
move(5,((6,4),(6,3)),31).
move(5,((6,3),(5,3)),32).
move(5,((5,3),(6,3)),33).
move(5,((6,3),(6,4)),34).
move(5,((6,4),(6,3)),35).
move(5,((6,3),(6,4)),38).
move(5,((6,4),(6,3)),40).
move(6,((6,9),(6,8)),3).
move(6,((6,8),(6,7)),4).
move(6,((6,7),(6,6)),5).
move(6,((6,6),(6,5)),6).
move(6,((6,5),(6,4)),7).
move(6,((6,4),(6,3)),8).
move(6,((6,3),(6,4)),9).
move(6,((6,4),(6,5)),10).
move(6,((6,5),(7,5)),11).
move(6,((7,5),(7,4)),12).
move(6,((7,4),(7,5)),13).
move(6,((7,5),(8,5)),14).
move(6,((8,5),(8,6)),15).
move(6,((8,6),(8,5)),16).
move(6,((8,5),(8,6)),17).
move(6,((8,6),(8,5)),18).
move(6,((8,5),(8,4)),19).
move(6,((8,4),(8,3)),20).
move(6,((8,3),(7,3)),21).
move(6,((7,3),(8,3)),22).
move(6,((8,3),(7,3)),23).
move(6,((7,3),(8,3)),24).
move(6,((8,3),(8,4)),25).
move(6,((8,4),(8,3)),26).
move(6,((8,3),(8,4)),27).
move(6,((8,4),(8,3)),31).
move(6,((8,3),(8,4)),33).
move(6,((8,4),(8,3)),34).
move(6,((8,3),(8,4)),35).
move(6,((8,4),(8,3)),36).
move(6,((8,3),(8,4)),37).
move(6,((8,4),(8,3)),39).
move(7,((7,9),(7,8)),3).
move(7,((7,8),(7,7)),4).
move(7,((7,7),(7,6)),5).
move(7,((7,6),(7,5)),6).
move(7,((7,5),(7,4)),7).
move(7,((7,4),(7,3)),8).
move(7,((7,3),(7,4)),9).
move(7,((7,4),(7,5)),10).
move(7,((7,5),(7,4)),11).
move(7,((7,4),(7,3)),12).
move(7,((7,3),(7,4)),13).
move(7,((7,4),(7,5)),14).
move(7,((7,5),(7,6)),15).
move(7,((7,6),(7,7)),16).
move(7,((7,7),(7,6)),19).
move(7,((7,6),(7,7)),20).
move(7,((7,7),(7,6)),21).
move(7,((7,6),(7,7)),22).
move(7,((7,7),(7,6)),24).
move(7,((7,6),(7,5)),25).
move(7,((7,5),(7,6)),26).
move(7,((7,6),(7,7)),27).
move(7,((7,7),(6,7)),28).
move(7,((6,7),(6,6)),29).
move(7,((6,6),(7,6)),30).
move(7,((7,6),(6,6)),31).
move(7,((6,6),(5,6)),33).
move(7,((5,6),(5,5)),34).
move(7,((5,5),(5,4)),35).
move(7,((5,4),(5,3)),36).
move(7,((5,3),(4,3)),37).
move(7,((4,3),(4,4)),39).
move(7,((4,4),(4,3)),40).
move(8,((8,9),(8,8)),3).
move(8,((8,8),(7,8)),4).
move(8,((7,8),(8,8)),5).
move(8,((8,8),(9,8)),6).
move(8,((9,8),(9,7)),8).
move(8,((9,7),(9,8)),9).
move(8,((9,8),(10,8)),10).
move(8,((10,8),(11,8)),11).
move(8,((11,8),(12,8)),12).
move(8,((12,8),(13,8)),13).
move(8,((13,8),(12,8)),14).
move(8,((12,8),(11,8)),15).
move(8,((11,8),(11,7)),16).
move(8,((11,7),(11,8)),17).
move(8,((11,8),(12,8)),18).
move(8,((12,8),(13,8)),19).
move(8,((13,8),(14,8)),20).
move(8,((14,8),(14,7)),22).
move(8,((14,7),(13,7)),23).
move(8,((13,7),(14,7)),24).
move(8,((14,7),(14,8)),25).
move(8,((14,8),(14,7)),26).
move(8,((14,7),(14,8)),27).
move(8,((14,8),(13,8)),28).
move(8,((13,8),(14,8)),29).
move(8,((14,8),(13,8)),30).
move(8,((13,8),(13,7)),31).
move(8,((13,7),(12,7)),32).
move(8,((12,7),(13,7)),33).
move(8,((13,7),(14,7)),34).
move(8,((14,7),(14,8)),35).
move(8,((14,8),(14,7)),37).
move(8,((14,7),(14,8)),39).
move(8,((14,8),(14,7)),40).
move(9,((9,9),(8,9)),3).
move(9,((8,9),(8,8)),4).
move(9,((8,8),(8,7)),5).
move(9,((8,7),(8,8)),6).
move(9,((8,8),(8,7)),9).
move(9,((8,7),(9,7)),10).
move(9,((9,7),(9,8)),12).
move(9,((9,8),(8,8)),13).
move(9,((8,8),(9,8)),14).
move(9,((9,8),(8,8)),15).
move(9,((8,8),(9,8)),16).
move(9,((9,8),(9,7)),17).
move(9,((9,7),(8,7)),18).
move(9,((8,7),(9,7)),19).
move(9,((9,7),(8,7)),21).
move(9,((8,7),(8,8)),22).
move(9,((8,8),(8,7)),23).
move(9,((8,7),(8,8)),24).
move(9,((8,8),(9,8)),25).
move(9,((9,8),(8,8)),26).
move(9,((8,8),(9,8)),27).
move(9,((9,8),(8,8)),28).
move(9,((8,8),(8,7)),29).
move(9,((8,7),(9,7)),30).
move(9,((9,7),(8,7)),32).
move(9,((8,7),(8,8)),33).
move(9,((8,8),(8,7)),35).
move(9,((8,7),(9,7)),36).
move(9,((9,7),(9,8)),38).
move(9,((9,8),(8,8)),39).
move(9,((8,8),(8,7)),40).
move(10,((10,9),(9,9)),3).
move(10,((9,9),(9,8)),4).
move(10,((9,8),(9,7)),6).
move(10,((9,7),(10,7)),7).
move(10,((10,7),(9,7)),9).
move(10,((9,7),(9,8)),10).
move(10,((9,8),(10,8)),12).
move(10,((10,8),(9,8)),13).
move(10,((9,8),(9,7)),14).
move(10,((9,7),(9,8)),15).
move(10,((9,8),(10,8)),16).
move(10,((10,8),(9,8)),18).
move(10,((9,8),(10,8)),19).
move(10,((10,8),(10,7)),20).
move(10,((10,7),(9,7)),21).
move(10,((9,7),(10,7)),22).
move(10,((10,7),(10,8)),23).
move(10,((10,8),(10,7)),25).
move(10,((10,7),(9,7)),27).
move(10,((9,7),(10,7)),28).
move(10,((10,7),(10,8)),30).
move(10,((10,8),(10,7)),31).
move(10,((10,7),(9,7)),32).
move(10,((9,7),(9,8)),34).
move(10,((9,8),(9,7)),35).
move(10,((9,7),(10,7)),36).
move(10,((10,7),(9,7)),38).
move(10,((9,7),(10,7)),39).
move(10,((10,7),(9,7)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 5.086s (Solving: 0.23s 1st Model: 0.23s Unsat: 0.00s)
CPU Time     : 5.078s

Choices      : 2673     (Domain: 2673)
Conflicts    : 187      (Analyzed: 187)
Restarts     : 0       
Model-Level  : 355.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 187      (Deleted: 0)
  Binary     : 76       (Ratio:  40.64%)
  Ternary    : 16       (Ratio:   8.56%)
  Conflict   : 187      (Average Length:    5.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 187      (Average: 12.40 Max: 221 Sum:   2318)
  Executed   : 187      (Average: 12.40 Max: 221 Sum:   2318 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878864   (Original: 822362)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338446  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,9),(2,9)),2).
move(1,((2,9),(2,8)),4).
move(1,((2,8),(2,7)),6).
move(1,((2,7),(2,6)),7).
move(1,((2,6),(2,5)),8).
move(1,((2,5),(2,4)),9).
move(1,((2,4),(2,3)),10).
move(1,((2,3),(2,2)),11).
move(1,((2,2),(2,1)),12).
move(1,((2,1),(1,1)),13).
move(1,((1,1),(1,2)),14).
move(1,((1,2),(2,2)),15).
move(1,((2,2),(2,3)),16).
move(1,((2,3),(2,4)),17).
move(1,((2,4),(2,5)),18).
move(1,((2,5),(2,6)),19).
move(1,((2,6),(2,7)),20).
move(1,((2,7),(2,6)),34).
move(1,((2,6),(3,6)),35).
move(1,((3,6),(3,5)),36).
move(1,((3,5),(3,4)),37).
move(1,((3,4),(4,4)),38).
move(1,((4,4),(4,5)),39).
move(1,((4,5),(4,6)),40).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(4,8)),3).
move(2,((4,8),(4,7)),4).
move(2,((4,7),(4,6)),5).
move(2,((4,6),(3,6)),6).
move(2,((3,6),(3,7)),7).
move(2,((3,7),(2,7)),8).
move(2,((2,7),(3,7)),20).
move(2,((3,7),(4,7)),30).
move(2,((4,7),(3,7)),31).
move(2,((3,7),(3,6)),34).
move(2,((3,6),(4,6)),35).
move(2,((4,6),(5,6)),36).
move(2,((5,6),(5,5)),38).
move(2,((5,5),(5,4)),39).
move(2,((5,4),(5,3)),40).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(2,8)),2).
move(3,((2,8),(2,7)),3).
move(3,((2,7),(2,6)),4).
move(3,((2,6),(3,6)),5).
move(3,((3,6),(3,5)),6).
move(3,((3,5),(3,4)),8).
move(3,((3,4),(3,3)),9).
move(3,((3,3),(3,2)),10).
move(3,((3,2),(3,1)),11).
move(3,((3,1),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(3,4)),14).
move(3,((3,4),(3,5)),15).
move(3,((3,5),(3,6)),16).
move(3,((3,6),(3,7)),17).
move(3,((3,7),(3,6)),18).
move(3,((3,6),(3,7)),19).
move(3,((3,7),(3,6)),20).
move(3,((3,6),(3,7)),30).
move(3,((3,7),(3,6)),31).
move(3,((3,6),(2,6)),33).
move(3,((2,6),(2,5)),34).
move(3,((2,5),(2,4)),36).
move(3,((2,4),(2,3)),37).
move(3,((2,3),(2,2)),38).
move(3,((2,2),(3,2)),39).
move(3,((3,2),(3,3)),40).
move(4,((4,9),(4,8)),2).
move(4,((4,8),(3,8)),3).
move(4,((3,8),(3,7)),5).
move(4,((3,7),(2,7)),7).
move(4,((2,7),(2,6)),8).
move(4,((2,6),(3,6)),9).
move(4,((3,6),(4,6)),10).
move(4,((4,6),(4,7)),11).
move(4,((4,7),(5,7)),30).
move(4,((5,7),(4,7)),31).
move(4,((4,7),(5,7)),35).
move(4,((5,7),(6,7)),37).
move(4,((6,7),(6,6)),38).
move(4,((6,6),(7,6)),39).
move(4,((7,6),(6,6)),40).
move(5,((5,9),(5,8)),3).
move(5,((5,8),(5,7)),4).
move(5,((5,7),(5,6)),5).
move(5,((5,6),(5,5)),6).
move(5,((5,5),(5,4)),7).
move(5,((5,4),(5,3)),8).
move(5,((5,3),(5,2)),9).
move(5,((5,2),(5,1)),10).
move(5,((5,1),(5,2)),11).
move(5,((5,2),(5,3)),12).
move(5,((5,3),(5,4)),13).
move(5,((5,4),(5,5)),14).
move(5,((5,5),(5,6)),15).
move(5,((5,6),(5,7)),16).
move(5,((5,7),(6,7)),30).
move(5,((6,7),(7,7)),31).
move(5,((7,7),(8,7)),33).
move(5,((8,7),(8,6)),34).
move(5,((8,6),(8,5)),35).
move(5,((8,5),(8,4)),36).
move(5,((8,4),(8,3)),37).
move(5,((8,3),(7,3)),39).
move(5,((7,3),(6,3)),40).
move(6,((6,9),(6,8)),3).
move(6,((6,8),(6,7)),4).
move(6,((6,7),(6,6)),5).
move(6,((6,6),(6,5)),6).
move(6,((6,5),(6,4)),7).
move(6,((6,4),(6,3)),8).
move(6,((6,3),(6,2)),9).
move(6,((6,2),(6,1)),10).
move(6,((6,1),(6,2)),11).
move(6,((6,2),(6,3)),12).
move(6,((6,3),(6,4)),13).
move(6,((6,4),(6,5)),14).
move(6,((6,5),(6,6)),15).
move(6,((6,6),(6,7)),16).
move(6,((6,7),(7,7)),30).
move(6,((7,7),(7,6)),31).
move(6,((7,6),(8,6)),32).
move(6,((8,6),(8,5)),33).
move(6,((8,5),(8,4)),34).
move(6,((8,4),(8,3)),35).
move(6,((8,3),(8,2)),36).
move(6,((8,2),(9,2)),37).
move(6,((9,2),(9,3)),39).
move(6,((9,3),(8,3)),40).
move(7,((7,9),(8,9)),2).
move(7,((8,9),(9,9)),3).
move(7,((9,9),(10,9)),4).
move(7,((10,9),(11,9)),5).
move(7,((11,9),(12,9)),6).
move(7,((12,9),(12,8)),7).
move(7,((12,8),(12,7)),8).
move(7,((12,7),(13,7)),9).
move(7,((13,7),(14,7)),10).
move(7,((14,7),(15,7)),12).
move(7,((15,7),(16,7)),13).
move(7,((16,7),(16,6)),14).
move(7,((16,6),(17,6)),15).
move(7,((17,6),(17,5)),16).
move(7,((17,5),(17,4)),17).
move(7,((17,4),(17,3)),18).
move(7,((17,3),(16,3)),19).
move(7,((16,3),(15,3)),20).
move(7,((15,3),(14,3)),21).
move(7,((14,3),(13,3)),22).
move(7,((13,3),(12,3)),23).
move(7,((12,3),(11,3)),24).
move(7,((11,3),(10,3)),25).
move(7,((10,3),(9,3)),26).
move(7,((9,3),(8,3)),27).
move(7,((8,3),(7,3)),28).
move(7,((7,3),(7,4)),29).
move(7,((7,4),(7,5)),30).
move(7,((7,5),(7,4)),32).
move(7,((7,4),(6,4)),33).
move(7,((6,4),(5,4)),34).
move(7,((5,4),(5,3)),35).
move(7,((5,3),(5,4)),37).
move(7,((5,4),(4,4)),39).
move(7,((4,4),(4,3)),40).
move(8,((8,9),(8,8)),2).
move(8,((8,8),(8,7)),4).
move(8,((8,7),(9,7)),5).
move(8,((9,7),(10,7)),6).
move(8,((10,7),(11,7)),7).
move(8,((11,7),(12,7)),9).
move(8,((12,7),(13,7)),10).
move(8,((13,7),(13,6)),11).
move(8,((13,6),(14,6)),12).
move(8,((14,6),(14,5)),13).
move(8,((14,5),(15,5)),14).
move(8,((15,5),(16,5)),15).
move(8,((16,5),(16,4)),16).
move(8,((16,4),(16,3)),17).
move(8,((16,3),(15,3)),18).
move(8,((15,3),(14,3)),19).
move(8,((14,3),(13,3)),20).
move(8,((13,3),(12,3)),21).
move(8,((12,3),(11,3)),22).
move(8,((11,3),(10,3)),23).
move(8,((10,3),(9,3)),24).
move(8,((9,3),(8,3)),25).
move(8,((8,3),(8,4)),26).
move(8,((8,4),(8,5)),27).
move(8,((8,5),(8,6)),28).
move(8,((8,6),(8,7)),29).
move(8,((8,7),(9,7)),30).
move(8,((9,7),(9,6)),31).
move(8,((9,6),(10,6)),32).
move(8,((10,6),(11,6)),33).
move(8,((11,6),(12,6)),34).
move(8,((12,6),(13,6)),35).
move(8,((13,6),(13,5)),36).
move(8,((13,5),(14,5)),37).
move(8,((14,5),(14,6)),38).
move(8,((14,6),(14,7)),39).
move(9,((9,9),(9,8)),3).
move(9,((9,8),(8,8)),4).
move(9,((8,8),(9,8)),5).
move(9,((9,8),(10,8)),6).
move(9,((10,8),(10,7)),7).
move(9,((10,7),(10,6)),8).
move(9,((10,6),(11,6)),9).
move(9,((11,6),(12,6)),10).
move(9,((12,6),(12,5)),11).
move(9,((12,5),(13,5)),12).
move(9,((13,5),(13,4)),13).
move(9,((13,4),(13,3)),14).
move(9,((13,3),(13,2)),15).
move(9,((13,2),(14,2)),16).
move(9,((14,2),(15,2)),17).
move(9,((15,2),(16,2)),18).
move(9,((16,2),(17,2)),19).
move(9,((17,2),(18,2)),20).
move(9,((18,2),(18,1)),21).
move(9,((18,1),(19,1)),22).
move(9,((19,1),(18,1)),23).
move(9,((18,1),(18,2)),24).
move(9,((18,2),(17,2)),25).
move(9,((17,2),(16,2)),26).
move(9,((16,2),(15,2)),27).
move(9,((15,2),(14,2)),28).
move(9,((14,2),(13,2)),29).
move(9,((13,2),(12,2)),30).
move(9,((12,2),(11,2)),31).
move(9,((11,2),(10,2)),32).
move(9,((10,2),(10,3)),33).
move(9,((10,3),(10,4)),34).
move(9,((10,4),(10,5)),35).
move(9,((10,5),(10,6)),37).
move(9,((10,6),(9,6)),38).
move(9,((9,6),(8,6)),39).
move(9,((8,6),(8,7)),40).
move(10,((10,9),(10,8)),3).
move(10,((10,8),(9,8)),4).
move(10,((9,8),(10,8)),5).
move(10,((10,8),(11,8)),6).
move(10,((11,8),(12,8)),8).
move(10,((12,8),(13,8)),9).
move(10,((13,8),(14,8)),10).
move(10,((14,8),(15,8)),11).
move(10,((15,8),(16,8)),12).
move(10,((16,8),(17,8)),13).
move(10,((17,8),(18,8)),14).
move(10,((18,8),(18,7)),15).
move(10,((18,7),(18,6)),16).
move(10,((18,6),(18,5)),17).
move(10,((18,5),(18,4)),18).
move(10,((18,4),(18,3)),19).
move(10,((18,3),(19,3)),20).
move(10,((19,3),(19,2)),21).
move(10,((19,2),(18,2)),22).
move(10,((18,2),(17,2)),23).
move(10,((17,2),(16,2)),24).
move(10,((16,2),(15,2)),25).
move(10,((15,2),(14,2)),26).
move(10,((14,2),(13,2)),27).
move(10,((13,2),(12,2)),28).
move(10,((12,2),(11,2)),29).
move(10,((11,2),(10,2)),30).
move(10,((10,2),(10,3)),31).
move(10,((10,3),(10,4)),32).
move(10,((10,4),(10,5)),33).
move(10,((10,5),(10,6)),34).
move(10,((10,6),(10,7)),35).
move(10,((10,7),(10,8)),36).
move(10,((10,8),(9,8)),37).
move(10,((9,8),(8,8)),38).
move(10,((8,8),(9,8)),39).
move(10,((9,8),(9,7)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.820s (Solving: 0.31s 1st Model: 0.30s Unsat: 0.00s)
CPU Time     : 4.812s

Choices      : 1354     (Domain: 1354)
Conflicts    : 68       (Analyzed: 68)
Restarts     : 0       
Model-Level  : 337.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 68       (Deleted: 0)
  Binary     : 14       (Ratio:  20.59%)
  Ternary    : 6        (Ratio:   8.82%)
  Conflict   : 68       (Average Length:   12.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 68       (Average: 14.96 Max: 108 Sum:   1017)
  Executed   : 68       (Average: 14.96 Max: 108 Sum:   1017 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878864   (Original: 822362)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338446  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

