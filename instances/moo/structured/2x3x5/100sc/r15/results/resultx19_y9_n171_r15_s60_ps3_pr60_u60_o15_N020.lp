%%%%%
%Standard
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(4,3)),7).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(6,4)),6).
move(5,((6,4),(7,4)),7).
move(5,((7,4),(7,3)),8).
move(5,((7,3),(8,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(8,7)),2).
move(7,((8,7),(8,6)),3).
move(7,((8,6),(8,5)),4).
move(7,((8,5),(8,4)),5).
move(7,((8,4),(8,3)),6).
move(7,((8,3),(8,2)),7).
move(7,((8,2),(8,3)),8).
move(7,((8,3),(9,3)),9).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(7,7)),2).
move(8,((7,7),(7,6)),3).
move(8,((7,6),(7,5)),4).
move(8,((7,5),(7,4)),5).
move(8,((7,4),(7,3)),6).
move(8,((7,3),(8,3)),7).
move(8,((8,3),(9,3)),8).
move(8,((9,3),(10,3)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(10,5)),5).
move(9,((10,5),(11,5)),6).
move(9,((11,5),(11,4)),8).
move(9,((11,4),(11,3)),9).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(10,3)),6).
move(10,((10,3),(11,3)),8).
move(10,((11,3),(12,3)),9).
move(11,((11,9),(10,9)),1).
move(11,((10,9),(9,9)),2).
move(11,((9,9),(8,9)),3).
move(11,((8,9),(8,8)),4).
move(11,((8,8),(8,7)),5).
move(11,((8,7),(8,6)),6).
move(11,((8,6),(8,5)),7).
move(11,((8,5),(8,4)),8).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(12,6)),3).
move(12,((12,6),(12,5)),4).
move(12,((12,5),(12,4)),5).
move(12,((12,4),(12,3)),6).
move(12,((12,3),(13,3)),7).
move(12,((13,3),(14,3)),8).
move(12,((14,3),(15,3)),9).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(13,7)),2).
move(13,((13,7),(13,6)),3).
move(13,((13,6),(13,5)),4).
move(13,((13,5),(13,4)),5).
move(13,((13,4),(14,4)),6).
move(13,((14,4),(15,4)),7).
move(13,((15,4),(16,4)),9).
move(13,((16,4),(16,3)),10).
move(14,((14,9),(14,8)),1).
move(14,((14,8),(14,7)),2).
move(14,((14,7),(14,6)),3).
move(14,((14,6),(14,5)),4).
move(14,((14,5),(15,5)),5).
move(14,((15,5),(16,5)),6).
move(14,((16,5),(16,4)),7).
move(14,((16,4),(17,4)),8).
move(14,((17,4),(17,3)),10).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(15,7)),2).
move(15,((15,7),(15,6)),3).
move(15,((15,6),(15,5)),4).
move(15,((15,5),(15,4)),5).
move(15,((15,4),(15,3)),6).
move(15,((15,3),(16,3)),8).
move(15,((16,3),(17,3)),9).
move(15,((17,3),(18,3)),10).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.647s (Solving: 0.11s 1st Model: 0.11s Unsat: 0.00s)
CPU Time     : 2.625s

Choices      : 2912    
Conflicts    : 57       (Analyzed: 57)
Restarts     : 0       
Model-Level  : 402.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 57       (Deleted: 0)
  Binary     : 11       (Ratio:  19.30%)
  Ternary    : 2        (Ratio:   3.51%)
  Conflict   : 57       (Average Length:   32.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 57       (Average: 44.04 Max: 261 Sum:   2510)
  Executed   : 57       (Average: 44.04 Max: 261 Sum:   2510 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 575569   (Original: 514321)
  Choice     : 300     
Atoms        : 249746   (Original: 235036 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216132)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(4,3)),7).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(6,4)),6).
move(5,((6,4),(7,4)),7).
move(5,((7,4),(8,4)),8).
move(5,((8,4),(8,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,4)),9).
move(6,((6,4),(6,3)),10).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(8,7)),2).
move(7,((8,7),(8,6)),3).
move(7,((8,6),(8,5)),4).
move(7,((8,5),(8,4)),5).
move(7,((8,4),(8,3)),6).
move(7,((8,3),(9,3)),7).
move(7,((9,3),(10,3)),8).
move(7,((10,3),(9,3)),9).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(7,7)),2).
move(8,((7,7),(7,6)),3).
move(8,((7,6),(7,5)),4).
move(8,((7,5),(7,4)),5).
move(8,((7,4),(8,4)),6).
move(8,((8,4),(9,4)),7).
move(8,((9,4),(10,4)),8).
move(8,((10,4),(10,3)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(10,4)),6).
move(9,((10,4),(11,4)),8).
move(9,((11,4),(11,3)),9).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(10,3)),6).
move(10,((10,3),(11,3)),8).
move(10,((11,3),(12,3)),9).
move(11,((11,9),(10,9)),1).
move(11,((10,9),(9,9)),2).
move(11,((9,9),(8,9)),3).
move(11,((8,9),(8,8)),4).
move(11,((8,8),(8,7)),5).
move(11,((8,7),(8,6)),6).
move(11,((8,6),(8,5)),7).
move(11,((8,5),(8,4)),9).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(12,6)),3).
move(12,((12,6),(12,5)),4).
move(12,((12,5),(12,4)),5).
move(12,((12,4),(12,3)),6).
move(12,((12,3),(13,3)),7).
move(12,((13,3),(14,3)),8).
move(12,((14,3),(15,3)),9).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(13,7)),2).
move(13,((13,7),(13,6)),3).
move(13,((13,6),(13,5)),4).
move(13,((13,5),(13,4)),5).
move(13,((13,4),(13,3)),6).
move(13,((13,3),(14,3)),7).
move(13,((14,3),(15,3)),8).
move(13,((15,3),(16,3)),9).
move(14,((14,9),(14,8)),1).
move(14,((14,8),(14,7)),2).
move(14,((14,7),(14,6)),3).
move(14,((14,6),(14,5)),4).
move(14,((14,5),(15,5)),5).
move(14,((15,5),(16,5)),6).
move(14,((16,5),(16,4)),7).
move(14,((16,4),(17,4)),8).
move(14,((17,4),(17,3)),10).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(15,7)),2).
move(15,((15,7),(16,7)),3).
move(15,((16,7),(17,7)),4).
move(15,((17,7),(17,6)),5).
move(15,((17,6),(18,6)),6).
move(15,((18,6),(18,5)),7).
move(15,((18,5),(18,4)),10).
move(15,((18,4),(18,3)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.691s (Solving: 0.12s 1st Model: 0.12s Unsat: 0.00s)
CPU Time     : 2.688s

Choices      : 4119    
Conflicts    : 69       (Analyzed: 69)
Restarts     : 0       
Model-Level  : 445.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 69       (Deleted: 0)
  Binary     : 14       (Ratio:  20.29%)
  Ternary    : 3        (Ratio:   4.35%)
  Conflict   : 69       (Average Length:   31.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 69       (Average: 53.25 Max: 303 Sum:   3674)
  Executed   : 69       (Average: 53.25 Max: 303 Sum:   3674 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 575736   (Original: 514488)
  Choice     : 300     
Atoms        : 249913   (Original: 235203 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216132)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(4,3)),7).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(6,4)),6).
move(5,((6,4),(7,4)),7).
move(5,((7,4),(8,4)),8).
move(5,((8,4),(8,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,4)),9).
move(6,((6,4),(6,3)),10).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(8,7)),2).
move(7,((8,7),(8,6)),3).
move(7,((8,6),(8,5)),4).
move(7,((8,5),(8,4)),5).
move(7,((8,4),(8,3)),6).
move(7,((8,3),(9,3)),7).
move(7,((9,3),(10,3)),8).
move(7,((10,3),(9,3)),9).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(7,7)),2).
move(8,((7,7),(7,6)),3).
move(8,((7,6),(7,5)),4).
move(8,((7,5),(7,4)),5).
move(8,((7,4),(8,4)),6).
move(8,((8,4),(9,4)),7).
move(8,((9,4),(10,4)),8).
move(8,((10,4),(10,3)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(10,4)),6).
move(9,((10,4),(11,4)),8).
move(9,((11,4),(11,3)),9).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(10,3)),6).
move(10,((10,3),(11,3)),8).
move(10,((11,3),(12,3)),9).
move(11,((11,9),(10,9)),1).
move(11,((10,9),(9,9)),2).
move(11,((9,9),(8,9)),3).
move(11,((8,9),(8,8)),4).
move(11,((8,8),(8,7)),5).
move(11,((8,7),(8,6)),6).
move(11,((8,6),(8,5)),7).
move(11,((8,5),(8,4)),9).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(12,6)),3).
move(12,((12,6),(12,5)),4).
move(12,((12,5),(12,4)),5).
move(12,((12,4),(12,3)),6).
move(12,((12,3),(13,3)),7).
move(12,((13,3),(14,3)),8).
move(12,((14,3),(15,3)),9).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(13,7)),2).
move(13,((13,7),(13,6)),3).
move(13,((13,6),(13,5)),4).
move(13,((13,5),(13,4)),5).
move(13,((13,4),(13,3)),6).
move(13,((13,3),(14,3)),7).
move(13,((14,3),(15,3)),8).
move(13,((15,3),(16,3)),9).
move(14,((14,9),(14,8)),1).
move(14,((14,8),(14,7)),2).
move(14,((14,7),(14,6)),3).
move(14,((14,6),(14,5)),4).
move(14,((14,5),(15,5)),5).
move(14,((15,5),(16,5)),6).
move(14,((16,5),(16,4)),7).
move(14,((16,4),(17,4)),8).
move(14,((17,4),(17,3)),10).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(15,7)),2).
move(15,((15,7),(16,7)),3).
move(15,((16,7),(17,7)),4).
move(15,((17,7),(17,6)),5).
move(15,((17,6),(18,6)),6).
move(15,((18,6),(18,5)),7).
move(15,((18,5),(18,4)),10).
move(15,((18,4),(18,3)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.705s (Solving: 0.13s 1st Model: 0.13s Unsat: 0.00s)
CPU Time     : 2.688s

Choices      : 4119    
Conflicts    : 69       (Analyzed: 69)
Restarts     : 0       
Model-Level  : 445.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 69       (Deleted: 0)
  Binary     : 14       (Ratio:  20.29%)
  Ternary    : 3        (Ratio:   4.35%)
  Conflict   : 69       (Average Length:   31.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 69       (Average: 53.25 Max: 303 Sum:   3674)
  Executed   : 69       (Average: 53.25 Max: 303 Sum:   3674 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 575751   (Original: 514503)
  Choice     : 300     
Atoms        : 249928   (Original: 235218 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216132)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(4,3)),7).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(6,4)),6).
move(5,((6,4),(7,4)),7).
move(5,((7,4),(8,4)),8).
move(5,((8,4),(8,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,4)),9).
move(6,((6,4),(6,3)),10).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(8,7)),2).
move(7,((8,7),(8,6)),3).
move(7,((8,6),(8,5)),4).
move(7,((8,5),(8,4)),5).
move(7,((8,4),(8,3)),6).
move(7,((8,3),(9,3)),7).
move(7,((9,3),(10,3)),8).
move(7,((10,3),(9,3)),9).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(7,7)),2).
move(8,((7,7),(7,6)),3).
move(8,((7,6),(7,5)),4).
move(8,((7,5),(7,4)),5).
move(8,((7,4),(8,4)),6).
move(8,((8,4),(9,4)),7).
move(8,((9,4),(10,4)),8).
move(8,((10,4),(10,3)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(10,4)),6).
move(9,((10,4),(11,4)),8).
move(9,((11,4),(11,3)),9).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(10,3)),6).
move(10,((10,3),(11,3)),8).
move(10,((11,3),(12,3)),9).
move(11,((11,9),(10,9)),1).
move(11,((10,9),(9,9)),2).
move(11,((9,9),(8,9)),3).
move(11,((8,9),(8,8)),4).
move(11,((8,8),(8,7)),5).
move(11,((8,7),(8,6)),6).
move(11,((8,6),(8,5)),7).
move(11,((8,5),(8,4)),9).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(12,6)),3).
move(12,((12,6),(12,5)),4).
move(12,((12,5),(12,4)),5).
move(12,((12,4),(12,3)),6).
move(12,((12,3),(13,3)),7).
move(12,((13,3),(14,3)),8).
move(12,((14,3),(15,3)),9).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(13,7)),2).
move(13,((13,7),(13,6)),3).
move(13,((13,6),(13,5)),4).
move(13,((13,5),(13,4)),5).
move(13,((13,4),(13,3)),6).
move(13,((13,3),(14,3)),7).
move(13,((14,3),(15,3)),8).
move(13,((15,3),(16,3)),9).
move(14,((14,9),(14,8)),1).
move(14,((14,8),(14,7)),2).
move(14,((14,7),(14,6)),3).
move(14,((14,6),(14,5)),4).
move(14,((14,5),(15,5)),5).
move(14,((15,5),(16,5)),6).
move(14,((16,5),(16,4)),7).
move(14,((16,4),(17,4)),8).
move(14,((17,4),(17,3)),10).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(15,7)),2).
move(15,((15,7),(16,7)),3).
move(15,((16,7),(17,7)),4).
move(15,((17,7),(17,6)),5).
move(15,((17,6),(18,6)),6).
move(15,((18,6),(18,5)),7).
move(15,((18,5),(18,4)),10).
move(15,((18,4),(18,3)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.636s (Solving: 0.13s 1st Model: 0.13s Unsat: 0.00s)
CPU Time     : 2.641s

Choices      : 4119    
Conflicts    : 69       (Analyzed: 69)
Restarts     : 0       
Model-Level  : 445.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 69       (Deleted: 0)
  Binary     : 14       (Ratio:  20.29%)
  Ternary    : 3        (Ratio:   4.35%)
  Conflict   : 69       (Average Length:   31.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 69       (Average: 53.25 Max: 303 Sum:   3674)
  Executed   : 69       (Average: 53.25 Max: 303 Sum:   3674 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 575751   (Original: 514503)
  Choice     : 300     
Atoms        : 249928   (Original: 235218 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216132)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(2,3)),9).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(2,2)),7).
move(2,((2,2),(3,2)),8).
move(2,((3,2),(3,3)),9).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(4,2)),8).
move(3,((4,2),(4,3)),10).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(4,2)),7).
move(4,((4,2),(4,3)),8).
move(4,((4,3),(5,3)),10).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(6,6)),5).
move(5,((6,6),(6,5)),6).
move(5,((6,5),(7,5)),7).
move(5,((7,5),(7,4)),8).
move(5,((7,4),(7,3)),9).
move(5,((7,3),(8,3)),10).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(6,3)),8).
move(6,((6,3),(5,3)),9).
move(6,((5,3),(6,3)),10).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(8,7)),2).
move(7,((8,7),(8,6)),3).
move(7,((8,6),(8,5)),4).
move(7,((8,5),(9,5)),5).
move(7,((9,5),(9,4)),7).
move(7,((9,4),(9,3)),8).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(8,8)),2).
move(8,((8,8),(8,7)),3).
move(8,((8,7),(9,7)),4).
move(8,((9,7),(10,7)),5).
move(8,((10,7),(10,6)),7).
move(8,((10,6),(10,5)),8).
move(8,((10,5),(10,4)),9).
move(8,((10,4),(10,3)),10).
move(9,((9,9),(10,9)),1).
move(9,((10,9),(11,9)),2).
move(9,((11,9),(11,8)),3).
move(9,((11,8),(11,7)),5).
move(9,((11,7),(11,6)),6).
move(9,((11,6),(11,5)),7).
move(9,((11,5),(11,4)),8).
move(9,((11,4),(11,3)),9).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),5).
move(10,((10,5),(11,5)),6).
move(10,((11,5),(11,4)),7).
move(10,((11,4),(12,4)),8).
move(10,((12,4),(12,3)),9).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(10,8)),2).
move(11,((10,8),(9,8)),3).
move(11,((9,8),(8,8)),4).
move(11,((8,8),(8,7)),5).
move(11,((8,7),(8,6)),6).
move(11,((8,6),(8,5)),7).
move(11,((8,5),(8,4)),8).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(13,8)),2).
move(12,((13,8),(13,7)),3).
move(12,((13,7),(13,6)),4).
move(12,((13,6),(13,5)),5).
move(12,((13,5),(13,4)),6).
move(12,((13,4),(13,3)),7).
move(12,((13,3),(14,3)),8).
move(12,((14,3),(15,3)),9).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(14,8)),2).
move(13,((14,8),(14,7)),3).
move(13,((14,7),(14,6)),5).
move(13,((14,6),(15,6)),6).
move(13,((15,6),(15,5)),7).
move(13,((15,5),(15,4)),8).
move(13,((15,4),(16,4)),9).
move(13,((16,4),(16,3)),10).
move(14,((14,9),(14,8)),1).
move(14,((14,8),(14,7)),2).
move(14,((14,7),(14,6)),3).
move(14,((14,6),(14,5)),5).
move(14,((14,5),(14,4)),6).
move(14,((14,4),(14,3)),7).
move(14,((14,3),(15,3)),8).
move(14,((15,3),(16,3)),9).
move(14,((16,3),(17,3)),10).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(15,7)),2).
move(15,((15,7),(15,6)),3).
move(15,((15,6),(15,5)),5).
move(15,((15,5),(15,4)),6).
move(15,((15,4),(16,4)),8).
move(15,((16,4),(17,4)),9).
move(15,((17,4),(18,4)),10).
move(15,((18,4),(18,3)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.927s (Solving: 0.12s 1st Model: 0.12s Unsat: 0.00s)
CPU Time     : 2.922s

Choices      : 3173    
Conflicts    : 77       (Analyzed: 77)
Restarts     : 0       
Model-Level  : 389.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 77       (Deleted: 0)
  Binary     : 19       (Ratio:  24.68%)
  Ternary    : 2        (Ratio:   2.60%)
  Conflict   : 77       (Average Length:   34.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 77       (Average: 36.16 Max: 238 Sum:   2784)
  Executed   : 77       (Average: 36.16 Max: 238 Sum:   2784 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 578788   (Original: 517570)
  Choice     : 300     
  Heuristic  : 2918     (Original: 2948)
Atoms        : 250047   (Original: 235337 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216132)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(4,3)),7).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(4,((5,3),(5,4)),8).
move(4,((5,4),(5,3)),10).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(5,((6,3),(7,3)),9).
move(5,((7,3),(8,3)),10).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(5,2)),8).
move(6,((5,2),(5,3)),9).
move(6,((5,3),(6,3)),10).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(8,7)),2).
move(7,((8,7),(8,6)),3).
move(7,((8,6),(8,5)),4).
move(7,((8,5),(8,4)),5).
move(7,((8,4),(8,3)),6).
move(7,((8,3),(9,3)),7).
move(7,((9,3),(10,3)),8).
move(7,((10,3),(9,3)),9).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(7,7)),2).
move(8,((7,7),(7,6)),3).
move(8,((7,6),(7,5)),4).
move(8,((7,5),(7,4)),5).
move(8,((7,4),(8,4)),6).
move(8,((8,4),(9,4)),7).
move(8,((9,4),(10,4)),8).
move(8,((10,4),(10,3)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(10,5)),5).
move(9,((10,5),(11,5)),6).
move(9,((11,5),(11,4)),8).
move(9,((11,4),(11,3)),9).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(10,3)),6).
move(10,((10,3),(11,3)),8).
move(10,((11,3),(12,3)),9).
move(11,((11,9),(10,9)),1).
move(11,((10,9),(9,9)),2).
move(11,((9,9),(8,9)),3).
move(11,((8,9),(8,8)),4).
move(11,((8,8),(8,7)),5).
move(11,((8,7),(8,6)),6).
move(11,((8,6),(8,5)),8).
move(11,((8,5),(8,4)),9).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(12,6)),3).
move(12,((12,6),(12,5)),4).
move(12,((12,5),(12,4)),5).
move(12,((12,4),(12,3)),6).
move(12,((12,3),(13,3)),7).
move(12,((13,3),(14,3)),8).
move(12,((14,3),(15,3)),9).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(13,7)),2).
move(13,((13,7),(13,6)),3).
move(13,((13,6),(13,5)),4).
move(13,((13,5),(14,5)),5).
move(13,((14,5),(15,5)),7).
move(13,((15,5),(15,4)),8).
move(13,((15,4),(16,4)),9).
move(13,((16,4),(16,3)),10).
move(14,((14,9),(14,8)),1).
move(14,((14,8),(14,7)),2).
move(14,((14,7),(14,6)),3).
move(14,((14,6),(14,5)),4).
move(14,((14,5),(15,5)),5).
move(14,((15,5),(16,5)),6).
move(14,((16,5),(16,4)),7).
move(14,((16,4),(17,4)),8).
move(14,((17,4),(17,3)),10).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(15,7)),2).
move(15,((15,7),(16,7)),3).
move(15,((16,7),(17,7)),4).
move(15,((17,7),(17,6)),5).
move(15,((17,6),(18,6)),6).
move(15,((18,6),(18,5)),7).
move(15,((18,5),(18,4)),10).
move(15,((18,4),(18,3)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.582s (Solving: 0.12s 1st Model: 0.12s Unsat: 0.00s)
CPU Time     : 2.578s

Choices      : 3286    
Conflicts    : 72       (Analyzed: 72)
Restarts     : 0       
Model-Level  : 384.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 72       (Deleted: 0)
  Binary     : 15       (Ratio:  20.83%)
  Ternary    : 3        (Ratio:   4.17%)
  Conflict   : 72       (Average Length:   32.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 72       (Average: 40.31 Max: 239 Sum:   2902)
  Executed   : 72       (Average: 40.31 Max: 239 Sum:   2902 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 576063   (Original: 514816)
  Choice     : 300     
  Heuristic  : 327      (Original: 328)
Atoms        : 249913   (Original: 235203 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216132)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(4,3)),7).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(5,((6,3),(7,3)),8).
move(5,((7,3),(8,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),8).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(8,7)),2).
move(7,((8,7),(8,6)),3).
move(7,((8,6),(8,5)),4).
move(7,((8,5),(8,4)),5).
move(7,((8,4),(8,3)),6).
move(7,((8,3),(9,3)),7).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(7,7)),2).
move(8,((7,7),(7,6)),3).
move(8,((7,6),(7,5)),4).
move(8,((7,5),(7,4)),5).
move(8,((7,4),(8,4)),6).
move(8,((8,4),(9,4)),7).
move(8,((9,4),(10,4)),8).
move(8,((10,4),(10,3)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(10,3)),6).
move(10,((10,3),(11,3)),7).
move(10,((11,3),(12,3)),8).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),2).
move(11,((11,7),(11,6)),3).
move(11,((11,6),(11,5)),4).
move(11,((11,5),(10,5)),5).
move(11,((10,5),(9,5)),6).
move(11,((9,5),(8,5)),7).
move(11,((8,5),(8,4)),8).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(12,6)),3).
move(12,((12,6),(12,5)),4).
move(12,((12,5),(12,4)),5).
move(12,((12,4),(12,3)),6).
move(12,((12,3),(13,3)),7).
move(12,((13,3),(14,3)),8).
move(12,((14,3),(15,3)),9).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(13,7)),2).
move(13,((13,7),(13,6)),3).
move(13,((13,6),(13,5)),4).
move(13,((13,5),(13,4)),5).
move(13,((13,4),(13,3)),6).
move(13,((13,3),(14,3)),7).
move(13,((14,3),(15,3)),8).
move(13,((15,3),(16,3)),9).
move(14,((14,9),(14,8)),1).
move(14,((14,8),(14,7)),2).
move(14,((14,7),(14,6)),3).
move(14,((14,6),(14,5)),4).
move(14,((14,5),(15,5)),5).
move(14,((15,5),(15,4)),6).
move(14,((15,4),(15,3)),7).
move(14,((15,3),(16,3)),8).
move(14,((16,3),(17,3)),9).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(15,7)),2).
move(15,((15,7),(15,6)),3).
move(15,((15,6),(15,5)),4).
move(15,((15,5),(16,5)),5).
move(15,((16,5),(17,5)),6).
move(15,((17,5),(17,4)),7).
move(15,((17,4),(17,3)),8).
move(15,((17,3),(18,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.857s (Solving: 0.09s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 2.797s

Choices      : 700      (Domain: 236)
Conflicts    : 39       (Analyzed: 39)
Restarts     : 0       
Model-Level  : 234.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 39       (Deleted: 0)
  Binary     : 4        (Ratio:  10.26%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 39       (Average Length:   45.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 39       (Average: 11.95 Max:  50 Sum:    466)
  Executed   : 39       (Average: 11.95 Max:  50 Sum:    466 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 603996   (Original: 542984)
  Choice     : 300     
  Heuristic  : 28230    (Original: 28466)
Atoms        : 249943   (Original: 235233 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216132)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(4,3)),7).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(5,4)),6).
move(4,((5,4),(5,3)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(5,((6,3),(7,3)),8).
move(5,((7,3),(8,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),8).
move(7,((8,9),(9,9)),1).
move(7,((9,9),(9,8)),3).
move(7,((9,8),(9,7)),4).
move(7,((9,7),(9,6)),5).
move(7,((9,6),(9,5)),6).
move(7,((9,5),(9,4)),7).
move(7,((9,4),(9,3)),9).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(7,7)),2).
move(8,((7,7),(7,6)),3).
move(8,((7,6),(7,5)),4).
move(8,((7,5),(7,4)),5).
move(8,((7,4),(8,4)),6).
move(8,((8,4),(8,3)),7).
move(8,((8,3),(9,3)),8).
move(8,((9,3),(10,3)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),5).
move(9,((9,5),(9,4)),6).
move(9,((9,4),(10,4)),7).
move(9,((10,4),(10,3)),8).
move(9,((10,3),(11,3)),9).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),5).
move(10,((10,5),(11,5)),6).
move(10,((11,5),(11,4)),7).
move(10,((11,4),(12,4)),8).
move(10,((12,4),(12,3)),9).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),3).
move(11,((11,7),(11,6)),4).
move(11,((11,6),(10,6)),5).
move(11,((10,6),(9,6)),6).
move(11,((9,6),(9,5)),7).
move(11,((9,5),(8,5)),8).
move(11,((8,5),(8,4)),9).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(12,6)),3).
move(12,((12,6),(12,5)),4).
move(12,((12,5),(12,4)),5).
move(12,((12,4),(13,4)),6).
move(12,((13,4),(13,3)),7).
move(12,((13,3),(14,3)),8).
move(12,((14,3),(15,3)),9).
move(13,((13,9),(14,9)),2).
move(13,((14,9),(14,8)),3).
move(13,((14,8),(14,7)),4).
move(13,((14,7),(15,7)),5).
move(13,((15,7),(16,7)),6).
move(13,((16,7),(16,6)),7).
move(13,((16,6),(16,5)),8).
move(13,((16,5),(16,4)),9).
move(13,((16,4),(16,3)),10).
move(14,((14,9),(14,8)),1).
move(14,((14,8),(14,7)),2).
move(14,((14,7),(14,6)),4).
move(14,((14,6),(15,6)),5).
move(14,((15,6),(16,6)),6).
move(14,((16,6),(17,6)),7).
move(14,((17,6),(17,5)),8).
move(14,((17,5),(17,4)),9).
move(14,((17,4),(17,3)),10).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(16,8)),2).
move(15,((16,8),(16,7)),3).
move(15,((16,7),(16,6)),4).
move(15,((16,6),(16,5)),6).
move(15,((16,5),(17,5)),7).
move(15,((17,5),(17,4)),8).
move(15,((17,4),(17,3)),9).
move(15,((17,3),(18,3)),10).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.871s (Solving: 0.08s 1st Model: 0.08s Unsat: 0.00s)
CPU Time     : 2.875s

Choices      : 1712    
Conflicts    : 56       (Analyzed: 56)
Restarts     : 0       
Model-Level  : 926.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 56       (Deleted: 0)
  Binary     : 15       (Ratio:  26.79%)
  Ternary    : 1        (Ratio:   1.79%)
  Conflict   : 56       (Average Length:   31.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 56       (Average: 14.04 Max:  83 Sum:    786)
  Executed   : 56       (Average: 14.04 Max:  83 Sum:    786 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 603966   (Original: 542954)
  Choice     : 300     
  Heuristic  : 28230    (Original: 28466)
Atoms        : 249913   (Original: 235203 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216132)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(2,8)),2).
move(1,((2,8),(2,7)),3).
move(1,((2,7),(1,7)),4).
move(1,((1,7),(2,7)),5).
move(1,((2,7),(2,6)),6).
move(1,((2,6),(2,5)),7).
move(1,((2,5),(2,4)),9).
move(1,((2,4),(2,3)),10).
move(1,((2,3),(1,3)),11).
move(1,((1,3),(1,2)),12).
move(1,((1,2),(1,1)),13).
move(1,((1,1),(1,2)),14).
move(1,((1,2),(1,3)),15).
move(1,((1,3),(2,3)),16).
move(1,((2,3),(3,3)),17).
move(1,((3,3),(3,2)),18).
move(1,((3,2),(2,2)),19).
move(1,((2,2),(2,3)),20).
move(2,((2,9),(3,9)),3).
move(2,((3,9),(3,8)),4).
move(2,((3,8),(3,7)),5).
move(2,((3,7),(2,7)),6).
move(2,((2,7),(2,6)),7).
move(2,((2,6),(2,7)),9).
move(2,((2,7),(2,6)),10).
move(2,((2,6),(2,5)),11).
move(2,((2,5),(2,6)),12).
move(2,((2,6),(2,7)),13).
move(2,((2,7),(2,8)),14).
move(2,((2,8),(3,8)),15).
move(2,((3,8),(3,7)),16).
move(2,((3,7),(3,6)),17).
move(2,((3,6),(3,5)),18).
move(2,((3,5),(3,4)),19).
move(2,((3,4),(3,3)),20).
move(3,((3,9),(4,9)),2).
move(3,((4,9),(4,8)),3).
move(3,((4,8),(4,7)),4).
move(3,((4,7),(4,6)),5).
move(3,((4,6),(3,6)),6).
move(3,((3,6),(3,5)),7).
move(3,((3,5),(3,4)),8).
move(3,((3,4),(3,3)),9).
move(3,((3,3),(3,2)),10).
move(3,((3,2),(2,2)),11).
move(3,((2,2),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(3,4)),14).
move(3,((3,4),(2,4)),15).
move(3,((2,4),(3,4)),16).
move(3,((3,4),(4,4)),17).
move(3,((4,4),(5,4)),18).
move(3,((5,4),(4,4)),19).
move(3,((4,4),(4,3)),20).
move(4,((4,9),(5,9)),1).
move(4,((5,9),(6,9)),2).
move(4,((6,9),(6,8)),3).
move(4,((6,8),(6,7)),4).
move(4,((6,7),(6,6)),5).
move(4,((6,6),(6,5)),6).
move(4,((6,5),(6,4)),7).
move(4,((6,4),(6,3)),8).
move(4,((6,3),(6,2)),9).
move(4,((6,2),(5,2)),10).
move(4,((5,2),(6,2)),12).
move(4,((6,2),(6,3)),13).
move(4,((6,3),(6,4)),15).
move(4,((6,4),(6,5)),16).
move(4,((6,5),(6,4)),17).
move(4,((6,4),(5,4)),19).
move(4,((5,4),(5,3)),20).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,9)),2).
move(5,((5,9),(5,8)),3).
move(5,((5,8),(5,7)),4).
move(5,((5,7),(5,6)),5).
move(5,((5,6),(5,5)),6).
move(5,((5,5),(5,4)),7).
move(5,((5,4),(5,3)),8).
move(5,((5,3),(5,2)),9).
move(5,((5,2),(5,3)),10).
move(5,((5,3),(5,4)),11).
move(5,((5,4),(5,5)),12).
move(5,((5,5),(6,5)),15).
move(5,((6,5),(7,5)),16).
move(5,((7,5),(7,4)),18).
move(5,((7,4),(8,4)),19).
move(5,((8,4),(8,3)),20).
move(6,((6,9),(6,8)),2).
move(6,((6,8),(6,7)),3).
move(6,((6,7),(6,6)),4).
move(6,((6,6),(6,5)),5).
move(6,((6,5),(6,4)),6).
move(6,((6,4),(6,3)),7).
move(6,((6,3),(6,2)),8).
move(6,((6,2),(6,1)),9).
move(6,((6,1),(5,1)),11).
move(6,((5,1),(5,2)),12).
move(6,((5,2),(4,2)),13).
move(6,((4,2),(3,2)),14).
move(6,((3,2),(2,2)),15).
move(6,((2,2),(3,2)),16).
move(6,((3,2),(4,2)),17).
move(6,((4,2),(4,3)),18).
move(6,((4,3),(5,3)),19).
move(6,((5,3),(6,3)),20).
move(7,((8,9),(8,8)),3).
move(7,((8,8),(8,7)),4).
move(7,((8,7),(8,6)),5).
move(7,((8,6),(8,5)),6).
move(7,((8,5),(8,4)),7).
move(7,((8,4),(8,3)),8).
move(7,((8,3),(8,2)),9).
move(7,((8,2),(8,1)),10).
move(7,((8,1),(8,2)),11).
move(7,((8,2),(8,3)),12).
move(7,((8,3),(8,4)),13).
move(7,((8,4),(8,5)),14).
move(7,((8,5),(7,5)),15).
move(7,((7,5),(8,5)),16).
move(7,((8,5),(8,4)),17).
move(7,((8,4),(9,4)),18).
move(7,((9,4),(9,3)),19).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(8,8)),2).
move(8,((8,8),(9,8)),3).
move(8,((9,8),(9,7)),4).
move(8,((9,7),(9,6)),5).
move(8,((9,6),(9,5)),6).
move(8,((9,5),(9,4)),7).
move(8,((9,4),(9,3)),8).
move(8,((9,3),(9,2)),9).
move(8,((9,2),(9,1)),10).
move(8,((9,1),(10,1)),11).
move(8,((10,1),(10,2)),12).
move(8,((10,2),(10,3)),13).
move(8,((10,3),(10,4)),14).
move(8,((10,4),(10,5)),15).
move(8,((10,5),(9,5)),16).
move(8,((9,5),(10,5)),17).
move(8,((10,5),(10,4)),18).
move(8,((10,4),(10,3)),20).
move(9,((9,9),(10,9)),3).
move(9,((10,9),(10,8)),4).
move(9,((10,8),(10,7)),5).
move(9,((10,7),(11,7)),6).
move(9,((11,7),(11,6)),7).
move(9,((11,6),(12,6)),8).
move(9,((12,6),(13,6)),9).
move(9,((13,6),(14,6)),10).
move(9,((14,6),(14,5)),11).
move(9,((14,5),(14,4)),12).
move(9,((14,4),(14,3)),13).
move(9,((14,3),(14,2)),14).
move(9,((14,2),(15,2)),15).
move(9,((15,2),(14,2)),16).
move(9,((14,2),(13,2)),17).
move(9,((13,2),(12,2)),18).
move(9,((12,2),(11,2)),19).
move(9,((11,2),(11,3)),20).
move(10,((10,9),(10,8)),3).
move(10,((10,8),(10,7)),4).
move(10,((10,7),(10,6)),5).
move(10,((10,6),(10,5)),6).
move(10,((10,5),(10,4)),7).
move(10,((10,4),(10,3)),8).
move(10,((10,3),(10,2)),9).
move(10,((10,2),(10,1)),10).
move(10,((10,1),(11,1)),11).
move(10,((11,1),(12,1)),12).
move(10,((12,1),(13,1)),13).
move(10,((13,1),(14,1)),14).
move(10,((14,1),(15,1)),15).
move(10,((15,1),(15,2)),16).
move(10,((15,2),(14,2)),17).
move(10,((14,2),(14,3)),18).
move(10,((14,3),(13,3)),19).
move(10,((13,3),(12,3)),20).
move(11,((11,9),(11,8)),3).
move(11,((11,8),(11,7)),4).
move(11,((11,7),(11,6)),5).
move(11,((11,6),(11,5)),6).
move(11,((11,5),(11,4)),7).
move(11,((11,4),(11,3)),8).
move(11,((11,3),(11,2)),9).
move(11,((11,2),(10,2)),10).
move(11,((10,2),(9,2)),11).
move(11,((9,2),(8,2)),12).
move(11,((8,2),(7,2)),13).
move(11,((7,2),(8,2)),14).
move(11,((8,2),(7,2)),15).
move(11,((7,2),(8,2)),16).
move(11,((8,2),(8,3)),17).
move(11,((8,3),(8,4)),18).
move(11,((8,4),(8,5)),19).
move(11,((8,5),(8,4)),20).
move(12,((12,9),(13,9)),1).
move(12,((13,9),(14,9)),2).
move(12,((14,9),(15,9)),3).
move(12,((15,9),(15,8)),4).
move(12,((15,8),(16,8)),5).
move(12,((16,8),(17,8)),6).
move(12,((17,8),(18,8)),7).
move(12,((18,8),(17,8)),8).
move(12,((17,8),(17,7)),9).
move(12,((17,7),(17,6)),10).
move(12,((17,6),(17,5)),11).
move(12,((17,5),(17,4)),12).
move(12,((17,4),(17,3)),13).
move(12,((17,3),(17,2)),14).
move(12,((17,2),(16,2)),16).
move(12,((16,2),(15,2)),17).
move(12,((15,2),(15,3)),18).
move(12,((15,3),(14,3)),19).
move(12,((14,3),(15,3)),20).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(14,8)),3).
move(13,((14,8),(14,7)),4).
move(13,((14,7),(15,7)),5).
move(13,((15,7),(14,7)),6).
move(13,((14,7),(15,7)),7).
move(13,((15,7),(16,7)),8).
move(13,((16,7),(16,6)),9).
move(13,((16,6),(16,5)),10).
move(13,((16,5),(16,4)),11).
move(13,((16,4),(16,3)),12).
move(13,((16,3),(16,2)),13).
move(13,((16,2),(16,1)),14).
move(13,((16,1),(17,1)),15).
move(13,((17,1),(16,1)),16).
move(13,((16,1),(15,1)),17).
move(13,((15,1),(15,2)),18).
move(13,((15,2),(16,2)),19).
move(13,((16,2),(16,3)),20).
move(14,((14,9),(14,8)),2).
move(14,((14,8),(15,8)),3).
move(14,((15,8),(14,8)),4).
move(14,((14,8),(14,7)),5).
move(14,((14,7),(14,6)),6).
move(14,((14,6),(15,6)),7).
move(14,((15,6),(15,5)),8).
move(14,((15,5),(16,5)),9).
move(14,((16,5),(17,5)),10).
move(14,((17,5),(18,5)),11).
move(14,((18,5),(17,5)),12).
move(14,((17,5),(17,4)),14).
move(14,((17,4),(16,4)),15).
move(14,((16,4),(16,3)),16).
move(14,((16,3),(16,2)),18).
move(14,((16,2),(17,2)),19).
move(14,((17,2),(17,3)),20).
move(15,((15,9),(16,9)),3).
move(15,((16,9),(15,9)),4).
move(15,((15,9),(16,9)),5).
move(15,((16,9),(16,8)),6).
move(15,((16,8),(17,8)),7).
move(15,((17,8),(17,7)),8).
move(15,((17,7),(18,7)),9).
move(15,((18,7),(18,6)),11).
move(15,((18,6),(18,5)),12).
move(15,((18,5),(18,4)),13).
move(15,((18,4),(18,3)),14).
move(15,((18,3),(17,3)),15).
move(15,((17,3),(17,4)),16).
move(15,((17,4),(17,5)),17).
move(15,((17,5),(17,4)),18).
move(15,((17,4),(18,4)),19).
move(15,((18,4),(18,3)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 3.150s (Solving: 0.31s 1st Model: 0.31s Unsat: 0.00s)
CPU Time     : 3.141s

Choices      : 3020     (Domain: 3020)
Conflicts    : 142      (Analyzed: 142)
Restarts     : 1        (Average: 142.00 Last: 42)
Model-Level  : 191.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 142      (Deleted: 0)
  Binary     : 32       (Ratio:  22.54%)
  Ternary    : 19       (Ratio:  13.38%)
  Conflict   : 142      (Average Length:   20.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 142      (Average: 19.92 Max: 209 Sum:   2829)
  Executed   : 142      (Average: 19.92 Max: 209 Sum:   2829 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 603966   (Original: 542954)
  Choice     : 300     
  Heuristic  : 28230    (Original: 28466)
Atoms        : 249913   (Original: 235203 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216132)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

