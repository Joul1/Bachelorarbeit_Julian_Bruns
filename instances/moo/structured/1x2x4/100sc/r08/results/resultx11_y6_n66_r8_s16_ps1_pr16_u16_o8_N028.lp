%%%%%
%Standard
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(6,5)),7).
move(2,((6,5),(6,4)),8).
move(2,((6,4),(6,3)),9).
move(2,((6,3),(5,3)),10).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(3,3)),4).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(9,6)),6).
move(4,((9,6),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(7,5)),4).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(7,3)),7).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(5,4)),4).
move(6,((5,4),(4,4)),5).
move(6,((4,4),(4,3)),6).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(10,6)),4).
move(7,((10,6),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(6,3)),4).
move(8,((6,3),(5,3)),5).
move(8,((5,3),(5,4)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.193s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.188s

Choices      : 541     
Conflicts    : 22       (Analyzed: 22)
Restarts     : 0       
Model-Level  : 323.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 22       (Deleted: 0)
  Binary     : 4        (Ratio:  18.18%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 22       (Average Length:   19.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 22       (Average:  9.91 Max:  40 Sum:    218)
  Executed   : 22       (Average:  9.91 Max:  40 Sum:    218 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261077   (Original: 241134)
  Choice     : 320     
Atoms        : 106367  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(6,5)),6).
move(2,((6,5),(6,4)),7).
move(2,((6,4),(6,3)),9).
move(2,((6,3),(5,3)),10).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(3,3)),4).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(9,6)),6).
move(4,((9,6),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(7,5)),4).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(7,3)),7).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(5,4)),4).
move(6,((5,4),(4,4)),5).
move(6,((4,4),(4,3)),6).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(10,6)),4).
move(7,((10,6),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(6,3)),4).
move(8,((6,3),(5,3)),5).
move(8,((5,3),(5,4)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.216s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.219s

Choices      : 544     
Conflicts    : 23       (Analyzed: 23)
Restarts     : 0       
Model-Level  : 326.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 23       (Deleted: 0)
  Binary     : 4        (Ratio:  17.39%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 23       (Average Length:   18.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 23       (Average:  9.48 Max:  40 Sum:    218)
  Executed   : 23       (Average:  9.48 Max:  40 Sum:    218 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261150   (Original: 241207)
  Choice     : 320     
Atoms        : 106440  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDistance.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(2,4)),3).
move(2,((2,4),(2,3)),4).
move(2,((2,3),(2,2)),5).
move(2,((2,2),(3,2)),6).
move(2,((3,2),(4,2)),7).
move(2,((4,2),(5,2)),8).
move(2,((5,2),(5,3)),9).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),3).
move(3,((3,4),(3,3)),4).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(8,5)),6).
move(4,((8,5),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(6,5)),3).
move(5,((6,5),(6,4)),4).
move(5,((6,4),(6,3)),5).
move(5,((6,3),(7,3)),6).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(4,5)),2).
move(6,((4,5),(4,4)),3).
move(6,((4,4),(4,3)),4).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(7,4)),3).
move(7,((7,4),(8,4)),4).
move(7,((8,4),(9,4)),5).
move(7,((9,4),(10,4)),6).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(5,4)),4).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.203s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.203s

Choices      : 319      (Domain: 319)
Conflicts    : 4        (Analyzed: 4)
Restarts     : 0       
Model-Level  : 298.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 4        (Deleted: 0)
  Binary     : 3        (Ratio:  75.00%)
  Ternary    : 1        (Ratio:  25.00%)
  Conflict   : 4        (Average Length:    2.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 4        (Average:  5.25 Max:   8 Sum:     21)
  Executed   : 4        (Average:  5.25 Max:   8 Sum:     21 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279614   (Original: 259743)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106448  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(2,5)),2).
move(2,((2,5),(2,4)),3).
move(2,((2,4),(2,3)),4).
move(2,((2,3),(2,2)),5).
move(2,((2,2),(3,2)),6).
move(2,((3,2),(4,2)),7).
move(2,((4,2),(5,2)),8).
move(2,((5,2),(5,3)),9).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(5,5)),3).
move(4,((5,5),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(8,5)),6).
move(4,((8,5),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(6,5)),3).
move(5,((6,5),(6,4)),4).
move(5,((6,4),(7,4)),5).
move(5,((7,4),(7,3)),6).
move(5,((7,3),(7,2)),8).
move(5,((7,2),(7,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(4,5)),2).
move(6,((4,5),(4,4)),4).
move(6,((4,4),(4,3)),5).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(10,6)),4).
move(7,((10,6),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(7,((10,4),(9,4)),7).
move(7,((9,4),(10,4)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,6)),2).
move(8,((7,6),(6,6)),3).
move(8,((6,6),(5,6)),4).
move(8,((5,6),(5,5)),5).
move(8,((5,5),(5,4)),6).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.243s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.234s

Choices      : 663      (Domain: 155)
Conflicts    : 41       (Analyzed: 41)
Restarts     : 0       
Model-Level  : 299.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 41       (Deleted: 0)
  Binary     : 17       (Ratio:  41.46%)
  Ternary    : 2        (Ratio:   4.88%)
  Conflict   : 41       (Average Length:   12.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 41       (Average:  8.88 Max:  36 Sum:    364)
  Executed   : 41       (Average:  8.88 Max:  36 Sum:    364 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279614   (Original: 259743)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106448  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(1,((8,3),(7,3)),4).
move(1,((7,3),(8,3)),9).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(5,5)),5).
move(2,((5,5),(5,4)),6).
move(2,((5,4),(5,3)),7).
move(2,((5,3),(5,2)),8).
move(2,((5,2),(5,3)),9).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),3).
move(3,((3,4),(3,3)),4).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(8,5)),6).
move(4,((8,5),(8,4)),7).
move(4,((8,4),(8,3)),8).
move(4,((8,3),(9,3)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(6,5)),3).
move(5,((6,5),(6,4)),4).
move(5,((6,4),(6,3)),5).
move(5,((6,3),(7,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(4,5)),2).
move(6,((4,5),(4,4)),3).
move(6,((4,4),(4,3)),4).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(10,6)),4).
move(7,((10,6),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(4,4)),5).
move(8,((4,4),(5,4)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.201s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.203s

Choices      : 362      (Domain: 27)
Conflicts    : 6        (Analyzed: 6)
Restarts     : 0       
Model-Level  : 341.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 6        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 6        (Average Length:   35.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 6        (Average:  3.50 Max:  11 Sum:     21)
  Executed   : 6        (Average:  3.50 Max:  11 Sum:     21 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261769   (Original: 241842)
  Choice     : 320     
  Heuristic  : 568      (Original: 584)
Atoms        : 106491  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(1,3)),3).
move(2,((1,3),(1,2)),4).
move(2,((1,2),(1,1)),5).
move(2,((1,1),(2,1)),6).
move(2,((2,1),(3,1)),7).
move(2,((3,1),(4,1)),8).
move(2,((4,1),(5,1)),9).
move(2,((5,1),(5,2)),10).
move(2,((5,2),(5,3)),11).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(3,3)),4).
move(3,((3,3),(3,4)),6).
move(3,((3,4),(3,3)),7).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(4,4)),3).
move(4,((4,4),(5,4)),4).
move(4,((5,4),(6,4)),5).
move(4,((6,4),(7,4)),6).
move(4,((7,4),(8,4)),7).
move(4,((8,4),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(6,5)),4).
move(5,((6,5),(6,4)),6).
move(5,((6,4),(6,3)),7).
move(5,((6,3),(7,3)),8).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(4,3)),4).
move(6,((4,3),(4,2)),6).
move(6,((4,2),(4,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(10,5)),6).
move(7,((10,5),(10,4)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(6,3)),4).
move(8,((6,3),(5,3)),5).
move(8,((5,3),(4,3)),6).
move(8,((4,3),(4,4)),7).
move(8,((4,4),(5,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.206s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.203s

Choices      : 1061     (Domain: 519)
Conflicts    : 23       (Analyzed: 23)
Restarts     : 0       
Model-Level  : 852.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 23       (Deleted: 0)
  Binary     : 3        (Ratio:  13.04%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 23       (Average Length:   20.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 23       (Average:  9.09 Max:  58 Sum:    209)
  Executed   : 23       (Average:  9.09 Max:  58 Sum:    209 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261696   (Original: 241754)
  Choice     : 320     
  Heuristic  : 546      (Original: 547)
Atoms        : 106440  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(6,5)),6).
move(2,((6,5),(6,4)),7).
move(2,((6,4),(6,3)),9).
move(2,((6,3),(5,3)),10).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(3,3)),4).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(9,6)),6).
move(4,((9,6),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(7,5)),4).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(7,3)),7).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(5,4)),4).
move(6,((5,4),(4,4)),5).
move(6,((4,4),(4,3)),6).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(10,6)),4).
move(7,((10,6),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(5,4)),5).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.228s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.234s

Choices      : 530      (Domain: 170)
Conflicts    : 21       (Analyzed: 21)
Restarts     : 0       
Model-Level  : 325.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 21       (Deleted: 0)
  Binary     : 4        (Ratio:  19.05%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 21       (Average Length:   19.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 21       (Average:  9.76 Max:  39 Sum:    205)
  Executed   : 21       (Average:  9.76 Max:  39 Sum:    205 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279624   (Original: 259745)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106457  
Disjunctions : 0        (Original: 1)
Bodies       : 183368   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93247    (Atom=Atom: 342 Body=Body: 351 Other: 92554)
Tight        : Yes
Variables    : 182697   (Eliminated:    0 Frozen: 92083)
Constraints  : 500665   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((8,6),(8,5)),5).
move(1,((8,5),(8,4)),7).
move(1,((8,4),(8,3)),8).
move(1,((8,3),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(1,((8,3),(8,4)),11).
move(1,((8,4),(8,5)),12).
move(1,((8,5),(8,4)),14).
move(1,((8,4),(8,3)),15).
move(1,((8,3),(8,4)),16).
move(1,((8,4),(8,5)),27).
move(1,((8,5),(8,4)),28).
move(1,((8,4),(8,5)),29).
move(1,((8,5),(8,4)),31).
move(1,((8,4),(8,5)),32).
move(1,((8,5),(8,4)),33).
move(1,((8,4),(8,5)),35).
move(1,((8,5),(8,4)),37).
move(1,((8,4),(8,3)),40).
move(2,((1,6),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(1,5)),6).
move(2,((1,5),(1,4)),7).
move(2,((1,4),(1,3)),8).
move(2,((1,3),(2,3)),9).
move(2,((2,3),(3,3)),14).
move(2,((3,3),(2,3)),15).
move(2,((2,3),(3,3)),16).
move(2,((3,3),(2,3)),17).
move(2,((2,3),(3,3)),19).
move(2,((3,3),(3,4)),20).
move(2,((3,4),(3,5)),22).
move(2,((3,5),(2,5)),23).
move(2,((2,5),(2,4)),24).
move(2,((2,4),(2,3)),25).
move(2,((2,3),(2,4)),26).
move(2,((2,4),(2,3)),29).
move(2,((2,3),(2,4)),30).
move(2,((2,4),(2,5)),31).
move(2,((2,5),(3,5)),33).
move(2,((3,5),(3,4)),34).
move(2,((3,4),(3,3)),35).
move(2,((3,3),(3,4)),36).
move(2,((3,4),(4,4)),37).
move(2,((4,4),(5,4)),38).
move(2,((5,4),(5,3)),40).
move(3,((2,6),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(2,4)),6).
move(3,((2,4),(2,3)),7).
move(3,((2,3),(2,4)),9).
move(3,((2,4),(2,3)),16).
move(3,((2,3),(2,4)),17).
move(3,((2,4),(2,3)),19).
move(3,((2,3),(2,4)),20).
move(3,((2,4),(3,4)),24).
move(3,((3,4),(3,3)),26).
move(3,((3,3),(3,4)),27).
move(3,((3,4),(3,3)),28).
move(3,((3,3),(3,4)),29).
move(3,((3,4),(2,4)),32).
move(3,((2,4),(2,5)),33).
move(3,((2,5),(2,4)),34).
move(3,((2,4),(3,4)),35).
move(3,((3,4),(3,5)),36).
move(3,((3,5),(3,4)),37).
move(3,((3,4),(3,3)),38).
move(3,((3,3),(3,4)),39).
move(3,((3,4),(3,3)),40).
move(4,((3,6),(3,5)),3).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(3,3)),5).
move(4,((3,3),(3,4)),7).
move(4,((3,4),(3,3)),8).
move(4,((3,3),(3,4)),9).
move(4,((3,4),(3,3)),15).
move(4,((3,3),(3,4)),16).
move(4,((3,4),(3,5)),18).
move(4,((3,5),(3,4)),19).
move(4,((3,4),(3,5)),20).
move(4,((3,5),(4,5)),22).
move(4,((4,5),(3,5)),23).
move(4,((3,5),(3,4)),26).
move(4,((3,4),(3,5)),27).
move(4,((3,5),(3,4)),28).
move(4,((3,4),(4,4)),29).
move(4,((4,4),(4,3)),30).
move(4,((4,3),(3,3)),31).
move(4,((3,3),(3,4)),32).
move(4,((3,4),(3,3)),33).
move(4,((3,3),(4,3)),35).
move(4,((4,3),(5,3)),36).
move(4,((5,3),(6,3)),37).
move(4,((6,3),(7,3)),38).
move(4,((7,3),(8,3)),39).
move(4,((8,3),(9,3)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(4,4)),6).
move(5,((4,4),(4,3)),8).
move(5,((4,3),(4,4)),9).
move(5,((4,4),(4,5)),10).
move(5,((4,5),(4,4)),11).
move(5,((4,4),(4,5)),12).
move(5,((4,5),(4,4)),15).
move(5,((4,4),(4,5)),17).
move(5,((4,5),(4,4)),20).
move(5,((4,4),(5,4)),22).
move(5,((5,4),(6,4)),23).
move(5,((6,4),(5,4)),25).
move(5,((5,4),(5,3)),26).
move(5,((5,3),(4,3)),27).
move(5,((4,3),(4,4)),28).
move(5,((4,4),(5,4)),29).
move(5,((5,4),(5,3)),30).
move(5,((5,3),(4,3)),31).
move(5,((4,3),(5,3)),32).
move(5,((5,3),(4,3)),33).
move(5,((4,3),(4,4)),34).
move(5,((4,4),(4,3)),37).
move(5,((4,3),(5,3)),38).
move(5,((5,3),(6,3)),39).
move(5,((6,3),(7,3)),40).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(5,4)),4).
move(6,((5,4),(5,3)),5).
move(6,((5,3),(5,4)),7).
move(6,((5,4),(5,3)),9).
move(6,((5,3),(4,3)),10).
move(6,((4,3),(5,3)),11).
move(6,((5,3),(5,4)),12).
move(6,((5,4),(4,4)),13).
move(6,((4,4),(5,4)),14).
move(6,((5,4),(5,3)),15).
move(6,((5,3),(5,4)),16).
move(6,((5,4),(5,3)),18).
move(6,((5,3),(5,4)),19).
move(6,((5,4),(5,5)),20).
move(6,((5,5),(5,4)),21).
move(6,((5,4),(5,3)),22).
move(6,((5,3),(5,4)),24).
move(6,((5,4),(5,5)),25).
move(6,((5,5),(5,4)),26).
move(6,((5,4),(4,4)),27).
move(6,((4,4),(5,4)),28).
move(6,((5,4),(5,5)),29).
move(6,((5,5),(4,5)),30).
move(6,((4,5),(5,5)),32).
move(6,((5,5),(5,4)),34).
move(6,((5,4),(5,5)),35).
move(6,((5,5),(4,5)),36).
move(6,((4,5),(4,4)),39).
move(6,((4,4),(4,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,5)),6).
move(7,((6,5),(6,4)),7).
move(7,((6,4),(7,4)),8).
move(7,((7,4),(7,5)),11).
move(7,((7,5),(6,5)),12).
move(7,((6,5),(7,5)),14).
move(7,((7,5),(7,4)),15).
move(7,((7,4),(6,4)),16).
move(7,((6,4),(7,4)),18).
move(7,((7,4),(6,4)),19).
move(7,((6,4),(7,4)),22).
move(7,((7,4),(7,5)),24).
move(7,((7,5),(7,4)),25).
move(7,((7,4),(6,4)),26).
move(7,((6,4),(7,4)),27).
move(7,((7,4),(6,4)),28).
move(7,((6,4),(7,4)),29).
move(7,((7,4),(8,4)),30).
move(7,((8,4),(7,4)),31).
move(7,((7,4),(6,4)),34).
move(7,((6,4),(7,4)),35).
move(7,((7,4),(7,5)),36).
move(7,((7,5),(8,5)),37).
move(7,((8,5),(9,5)),38).
move(7,((9,5),(10,5)),39).
move(7,((10,5),(10,4)),40).
move(8,((7,6),(6,6)),3).
move(8,((6,6),(6,5)),4).
move(8,((6,5),(7,5)),5).
move(8,((7,5),(7,4)),6).
move(8,((7,4),(7,5)),7).
move(8,((7,5),(6,5)),8).
move(8,((6,5),(6,4)),9).
move(8,((6,4),(7,4)),11).
move(8,((7,4),(6,4)),13).
move(8,((6,4),(6,5)),14).
move(8,((6,5),(7,5)),15).
move(8,((7,5),(7,4)),16).
move(8,((7,4),(7,5)),17).
move(8,((7,5),(6,5)),21).
move(8,((6,5),(6,4)),22).
move(8,((6,4),(6,5)),23).
move(8,((6,5),(5,5)),24).
move(8,((5,5),(6,5)),25).
move(8,((6,5),(7,5)),26).
move(8,((7,5),(6,5)),28).
move(8,((6,5),(7,5)),30).
move(8,((7,5),(6,5)),31).
move(8,((6,5),(6,4)),32).
move(8,((6,4),(6,5)),33).
move(8,((6,5),(5,5)),34).
move(8,((5,5),(6,5)),35).
move(8,((6,5),(5,5)),36).
move(8,((5,5),(6,5)),37).
move(8,((6,5),(5,5)),38).
move(8,((5,5),(5,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.229s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.219s

Choices      : 632      (Domain: 632)
Conflicts    : 32       (Analyzed: 32)
Restarts     : 0       
Model-Level  : 289.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 32       (Deleted: 0)
  Binary     : 9        (Ratio:  28.12%)
  Ternary    : 6        (Ratio:  18.75%)
  Conflict   : 32       (Average Length:    6.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 32       (Average: 10.72 Max: 100 Sum:    343)
  Executed   : 32       (Average: 10.72 Max: 100 Sum:    343 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279606   (Original: 259735)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106440  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hStrange.lp
%%%%%
move(1,((8,6),(8,5)),4).
move(1,((8,5),(7,5)),5).
move(1,((7,5),(7,4)),6).
move(1,((7,4),(7,3)),7).
move(1,((7,3),(7,4)),8).
move(1,((7,4),(8,4)),9).
move(1,((8,4),(9,4)),10).
move(1,((9,4),(8,4)),12).
move(1,((8,4),(9,4)),16).
move(1,((9,4),(8,4)),17).
move(1,((8,4),(7,4)),18).
move(1,((7,4),(8,4)),19).
move(1,((8,4),(9,4)),21).
move(1,((9,4),(10,4)),22).
move(1,((10,4),(10,5)),23).
move(1,((10,5),(10,4)),24).
move(1,((10,4),(10,5)),25).
move(1,((10,5),(9,5)),26).
move(1,((9,5),(9,4)),27).
move(1,((9,4),(9,5)),29).
move(1,((9,5),(8,5)),30).
move(1,((8,5),(9,5)),33).
move(1,((9,5),(8,5)),34).
move(1,((8,5),(9,5)),35).
move(1,((9,5),(8,5)),36).
move(1,((8,5),(8,4)),37).
move(1,((8,4),(9,4)),38).
move(1,((9,4),(8,4)),39).
move(1,((8,4),(8,3)),40).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(2,5)),5).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(2,2)),8).
move(2,((2,2),(1,2)),9).
move(2,((1,2),(1,1)),10).
move(2,((1,1),(1,2)),11).
move(2,((1,2),(2,2)),12).
move(2,((2,2),(2,3)),13).
move(2,((2,3),(2,4)),14).
move(2,((2,4),(3,4)),16).
move(2,((3,4),(4,4)),17).
move(2,((4,4),(5,4)),18).
move(2,((5,4),(6,4)),19).
move(2,((6,4),(7,4)),20).
move(2,((7,4),(8,4)),21).
move(2,((8,4),(9,4)),22).
move(2,((9,4),(10,4)),23).
move(2,((10,4),(10,3)),24).
move(2,((10,3),(10,2)),25).
move(2,((10,2),(9,2)),26).
move(2,((9,2),(8,2)),27).
move(2,((8,2),(7,2)),28).
move(2,((7,2),(8,2)),29).
move(2,((8,2),(8,3)),30).
move(2,((8,3),(9,3)),31).
move(2,((9,3),(9,2)),32).
move(2,((9,2),(10,2)),33).
move(2,((10,2),(10,3)),35).
move(2,((10,3),(9,3)),36).
move(2,((9,3),(8,3)),37).
move(2,((8,3),(7,3)),38).
move(2,((7,3),(6,3)),39).
move(2,((6,3),(5,3)),40).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(3,1)),8).
move(3,((3,1),(3,2)),9).
move(3,((3,2),(2,2)),10).
move(3,((2,2),(2,3)),11).
move(3,((2,3),(2,4)),12).
move(3,((2,4),(3,4)),14).
move(3,((3,4),(3,3)),16).
move(3,((3,3),(2,3)),17).
move(3,((2,3),(3,3)),18).
move(3,((3,3),(4,3)),19).
move(3,((4,3),(5,3)),20).
move(3,((5,3),(6,3)),21).
move(3,((6,3),(7,3)),22).
move(3,((7,3),(8,3)),23).
move(3,((8,3),(8,2)),24).
move(3,((8,2),(7,2)),25).
move(3,((7,2),(6,2)),26).
move(3,((6,2),(5,2)),27).
move(3,((5,2),(5,3)),29).
move(3,((5,3),(5,4)),30).
move(3,((5,4),(6,4)),31).
move(3,((6,4),(6,3)),32).
move(3,((6,3),(5,3)),33).
move(3,((5,3),(5,4)),34).
move(3,((5,4),(5,3)),35).
move(3,((5,3),(5,2)),36).
move(3,((5,2),(4,2)),37).
move(3,((4,2),(3,2)),39).
move(3,((3,2),(3,3)),40).
move(4,((3,6),(3,5)),2).
move(4,((3,5),(2,5)),4).
move(4,((2,5),(2,4)),5).
move(4,((2,4),(2,3)),6).
move(4,((2,3),(2,2)),7).
move(4,((2,2),(2,1)),8).
move(4,((2,1),(3,1)),10).
move(4,((3,1),(3,2)),11).
move(4,((3,2),(3,3)),12).
move(4,((3,3),(3,4)),13).
move(4,((3,4),(3,3)),14).
move(4,((3,3),(4,3)),15).
move(4,((4,3),(4,4)),16).
move(4,((4,4),(4,5)),17).
move(4,((4,5),(5,5)),18).
move(4,((5,5),(6,5)),19).
move(4,((6,5),(7,5)),20).
move(4,((7,5),(8,5)),21).
move(4,((8,5),(9,5)),22).
move(4,((9,5),(9,4)),24).
move(4,((9,4),(10,4)),25).
move(4,((10,4),(10,3)),26).
move(4,((10,3),(10,2)),27).
move(4,((10,2),(9,2)),28).
move(4,((9,2),(8,2)),30).
move(4,((8,2),(8,3)),31).
move(4,((8,3),(9,3)),32).
move(4,((9,3),(9,2)),33).
move(4,((9,2),(10,2)),35).
move(4,((10,2),(10,3)),36).
move(4,((10,3),(9,3)),37).
move(4,((9,3),(9,2)),38).
move(4,((9,2),(9,3)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(4,2)),6).
move(5,((4,2),(4,1)),7).
move(5,((4,1),(4,2)),8).
move(5,((4,2),(4,3)),9).
move(5,((4,3),(4,4)),10).
move(5,((4,4),(5,4)),16).
move(5,((5,4),(6,4)),18).
move(5,((6,4),(7,4)),19).
move(5,((7,4),(7,3)),20).
move(5,((7,3),(7,4)),21).
move(5,((7,4),(8,4)),22).
move(5,((8,4),(9,4)),23).
move(5,((9,4),(9,3)),24).
move(5,((9,3),(10,3)),25).
move(5,((10,3),(9,3)),26).
move(5,((9,3),(10,3)),27).
move(5,((10,3),(10,2)),28).
move(5,((10,2),(10,3)),30).
move(5,((10,3),(10,2)),31).
move(5,((10,2),(10,3)),32).
move(5,((10,3),(10,4)),34).
move(5,((10,4),(9,4)),35).
move(5,((9,4),(8,4)),36).
move(5,((8,4),(7,4)),37).
move(5,((7,4),(8,4)),38).
move(5,((8,4),(7,4)),39).
move(5,((7,4),(7,3)),40).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(7,2)),8).
move(6,((7,2),(7,1)),9).
move(6,((7,1),(8,1)),10).
move(6,((8,1),(9,1)),11).
move(6,((9,1),(9,2)),12).
move(6,((9,2),(8,2)),13).
move(6,((8,2),(7,2)),14).
move(6,((7,2),(6,2)),15).
move(6,((6,2),(5,2)),16).
move(6,((5,2),(5,3)),17).
move(6,((5,3),(5,4)),19).
move(6,((5,4),(5,5)),20).
move(6,((5,5),(6,5)),21).
move(6,((6,5),(7,5)),22).
move(6,((7,5),(8,5)),23).
move(6,((8,5),(8,4)),24).
move(6,((8,4),(7,4)),25).
move(6,((7,4),(7,3)),26).
move(6,((7,3),(8,3)),27).
move(6,((8,3),(8,2)),28).
move(6,((8,2),(8,3)),29).
move(6,((8,3),(7,3)),30).
move(6,((7,3),(7,4)),31).
move(6,((7,4),(6,4)),32).
move(6,((6,4),(6,3)),33).
move(6,((6,3),(6,2)),35).
move(6,((6,2),(6,3)),36).
move(6,((6,3),(6,2)),37).
move(6,((6,2),(5,2)),38).
move(6,((5,2),(4,2)),39).
move(6,((4,2),(4,3)),40).
move(7,((6,6),(7,6)),2).
move(7,((7,6),(8,6)),4).
move(7,((8,6),(8,5)),5).
move(7,((8,5),(8,4)),7).
move(7,((8,4),(8,3)),8).
move(7,((8,3),(8,2)),9).
move(7,((8,2),(9,2)),10).
move(7,((9,2),(10,2)),11).
move(7,((10,2),(10,1)),12).
move(7,((10,1),(11,1)),13).
move(7,((11,1),(10,1)),14).
move(7,((10,1),(10,2)),15).
move(7,((10,2),(9,2)),16).
move(7,((9,2),(8,2)),17).
move(7,((8,2),(7,2)),18).
move(7,((7,2),(6,2)),20).
move(7,((6,2),(6,3)),22).
move(7,((6,3),(6,4)),23).
move(7,((6,4),(6,5)),24).
move(7,((6,5),(5,5)),25).
move(7,((5,5),(5,4)),26).
move(7,((5,4),(5,5)),27).
move(7,((5,5),(5,4)),28).
move(7,((5,4),(6,4)),29).
move(7,((6,4),(6,3)),30).
move(7,((6,3),(7,3)),31).
move(7,((7,3),(7,2)),32).
move(7,((7,2),(8,2)),34).
move(7,((8,2),(9,2)),36).
move(7,((9,2),(10,2)),37).
move(7,((10,2),(10,3)),38).
move(7,((10,3),(10,4)),39).
move(8,((7,6),(7,5)),2).
move(8,((7,5),(7,4)),5).
move(8,((7,4),(8,4)),6).
move(8,((8,4),(9,4)),7).
move(8,((9,4),(10,4)),9).
move(8,((10,4),(10,3)),10).
move(8,((10,3),(11,3)),11).
move(8,((11,3),(11,2)),12).
move(8,((11,2),(10,2)),13).
move(8,((10,2),(9,2)),14).
move(8,((9,2),(8,2)),15).
move(8,((8,2),(7,2)),16).
move(8,((7,2),(7,3)),17).
move(8,((7,3),(6,3)),18).
move(8,((6,3),(6,4)),20).
move(8,((6,4),(5,4)),21).
move(8,((5,4),(4,4)),22).
move(8,((4,4),(3,4)),23).
move(8,((3,4),(4,4)),24).
move(8,((4,4),(5,4)),25).
move(8,((5,4),(6,4)),26).
move(8,((6,4),(7,4)),27).
move(8,((7,4),(7,3)),28).
move(8,((7,3),(7,2)),29).
move(8,((7,2),(8,2)),31).
move(8,((8,2),(8,1)),34).
move(8,((8,1),(7,1)),35).
move(8,((7,1),(7,2)),36).
move(8,((7,2),(7,3)),37).
move(8,((7,3),(6,3)),38).
move(8,((6,3),(6,4)),39).
move(8,((6,4),(5,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.274s (Solving: 0.09s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 1.266s

Choices      : 1695     (Domain: 1695)
Conflicts    : 136      (Analyzed: 136)
Restarts     : 0       
Model-Level  : 244.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 136      (Deleted: 0)
  Binary     : 51       (Ratio:  37.50%)
  Ternary    : 15       (Ratio:  11.03%)
  Conflict   : 136      (Average Length:   10.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 136      (Average: 10.67 Max: 133 Sum:   1451)
  Executed   : 136      (Average: 10.67 Max: 133 Sum:   1451 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279606   (Original: 259735)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106440  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

