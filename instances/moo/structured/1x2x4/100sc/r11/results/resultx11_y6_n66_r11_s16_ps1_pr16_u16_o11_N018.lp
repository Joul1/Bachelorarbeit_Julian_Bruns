%%%%%
%Standard
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),4).
move(1,((1,2),(2,2)),5).
move(1,((2,2),(3,2)),6).
move(1,((3,2),(3,3)),7).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(5,5)),3).
move(3,((5,5),(5,4)),4).
move(3,((5,4),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(7,3)),7).
move(3,((7,3),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(8,6)),3).
move(5,((8,6),(9,6)),4).
move(5,((9,6),(9,5)),5).
move(5,((9,5),(9,4)),6).
move(5,((9,4),(8,4)),7).
move(5,((8,4),(8,3)),40).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(8,5)),2).
move(6,((8,5),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(4,5)),6).
move(6,((4,5),(4,4)),7).
move(6,((4,4),(5,4)),8).
move(6,((5,4),(5,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(4,4)),4).
move(7,((4,4),(4,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),4).
move(8,((5,5),(5,4)),5).
move(8,((5,4),(4,4)),6).
move(8,((4,4),(3,4)),7).
move(8,((3,4),(2,4)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(8,4)),5).
move(9,((8,4),(8,5)),6).
move(9,((8,5),(7,5)),8).
move(9,((7,5),(7,4)),9).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(7,4)),3).
move(10,((7,4),(7,5)),4).
move(10,((7,5),(7,6)),6).
move(10,((7,6),(8,6)),7).
move(10,((8,6),(8,5)),8).
move(10,((8,5),(8,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(11,3)),3).
move(11,((11,3),(11,2)),4).
move(11,((11,2),(11,1)),5).
move(11,((11,1),(10,1)),6).
move(11,((10,1),(9,1)),7).
move(11,((9,1),(8,1)),8).
move(11,((8,1),(7,1)),9).
move(11,((7,1),(7,2)),10).
move(11,((7,2),(7,3)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.755s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.766s

Choices      : 1163    
Conflicts    : 51       (Analyzed: 51)
Restarts     : 0       
Model-Level  : 465.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 51       (Deleted: 0)
  Binary     : 5        (Ratio:   9.80%)
  Ternary    : 1        (Ratio:   1.96%)
  Conflict   : 51       (Average Length:   18.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 51       (Average: 13.69 Max:  93 Sum:    698)
  Executed   : 51       (Average: 13.69 Max:  93 Sum:    698 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353468   (Original: 327181)
  Choice     : 440     
Atoms        : 141635  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),4).
move(1,((1,2),(1,1)),5).
move(1,((1,1),(2,1)),6).
move(1,((2,1),(2,2)),7).
move(1,((2,2),(2,3)),8).
move(1,((2,3),(2,4)),9).
move(1,((2,4),(3,4)),10).
move(1,((3,4),(3,3)),11).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(5,5)),4).
move(2,((5,5),(6,5)),5).
move(2,((6,5),(7,5)),6).
move(2,((7,5),(8,5)),7).
move(2,((8,5),(9,5)),8).
move(2,((9,5),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(4,5)),2).
move(3,((4,5),(5,5)),3).
move(3,((5,5),(6,5)),4).
move(3,((6,5),(7,5)),5).
move(3,((7,5),(8,5)),6).
move(3,((8,5),(8,4)),7).
move(3,((8,4),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(9,4)),7).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),7).
move(5,((7,3),(8,3)),40).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(5,6)),4).
move(6,((5,6),(4,6)),5).
move(6,((4,6),(5,6)),6).
move(6,((5,6),(5,5)),8).
move(6,((5,5),(5,4)),9).
move(6,((5,4),(5,3)),10).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),4).
move(7,((6,2),(5,2)),5).
move(7,((5,2),(4,2)),6).
move(7,((4,2),(3,2)),7).
move(7,((3,2),(4,2)),8).
move(7,((4,2),(4,3)),40).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(1,6)),6).
move(8,((1,6),(1,5)),7).
move(8,((1,5),(1,4)),8).
move(8,((1,4),(2,4)),40).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(9,3)),4).
move(9,((9,3),(8,3)),5).
move(9,((8,3),(8,2)),6).
move(9,((8,2),(7,2)),7).
move(9,((7,2),(6,2)),9).
move(9,((6,2),(6,3)),10).
move(9,((6,3),(6,4)),11).
move(9,((6,4),(7,4)),40).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(6,5)),3).
move(10,((6,5),(7,5)),4).
move(10,((7,5),(8,5)),5).
move(10,((8,5),(9,5)),6).
move(10,((9,5),(9,6)),7).
move(10,((9,6),(8,6)),8).
move(10,((8,6),(8,5)),9).
move(10,((8,5),(8,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(11,3)),3).
move(11,((11,3),(11,2)),4).
move(11,((11,2),(10,2)),5).
move(11,((10,2),(9,2)),6).
move(11,((9,2),(8,2)),7).
move(11,((8,2),(7,2)),11).
move(11,((7,2),(7,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.875s (Solving: 0.08s 1st Model: 0.08s Unsat: 0.00s)
CPU Time     : 1.875s

Choices      : 1632     (Domain: 170)
Conflicts    : 60       (Analyzed: 60)
Restarts     : 0       
Model-Level  : 614.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 60       (Deleted: 0)
  Binary     : 7        (Ratio:  11.67%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 60       (Average Length:   33.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 60       (Average: 16.97 Max: 120 Sum:   1018)
  Executed   : 60       (Average: 16.97 Max: 120 Sum:   1018 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353781   (Original: 327494)
  Choice     : 440     
  Heuristic  : 181     
Atoms        : 141767  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(3,4)),4).
move(1,((3,4),(3,3)),5).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(7,6)),4).
move(3,((7,6),(8,6)),5).
move(3,((8,6),(9,6)),6).
move(3,((9,6),(9,5)),7).
move(3,((9,5),(9,4)),8).
move(3,((9,4),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(4,((9,4),(10,4)),8).
move(4,((10,4),(9,4)),9).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(5,((7,3),(8,3)),6).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(4,4)),4).
move(7,((4,4),(4,3)),5).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(7,4)),5).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(10,5)),2).
move(11,((10,5),(9,5)),3).
move(11,((9,5),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(6,4)),7).
move(11,((6,4),(6,3)),8).
move(11,((6,3),(7,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.874s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.875s

Choices      : 400      (Domain: 400)
Conflicts    : 2        (Analyzed: 2)
Restarts     : 0       
Model-Level  : 387.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 2        (Deleted: 0)
  Binary     : 1        (Ratio:  50.00%)
  Ternary    : 1        (Ratio:  50.00%)
  Conflict   : 2        (Average Length:    2.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 2        (Average:  6.50 Max:   8 Sum:     13)
  Executed   : 2        (Average:  6.50 Max:   8 Sum:     13 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378790   (Original: 352635)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141778  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(2,5)),2).
move(1,((2,5),(2,4)),5).
move(1,((2,4),(2,3)),6).
move(1,((2,3),(3,3)),7).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(9,5)),10).
move(2,((9,5),(9,4)),11).
move(2,((9,4),(10,4)),40).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(6,5)),4).
move(3,((6,5),(7,5)),5).
move(3,((7,5),(7,4)),6).
move(3,((7,4),(7,3)),7).
move(3,((7,3),(8,3)),8).
move(3,((8,3),(8,4)),9).
move(3,((8,4),(8,3)),10).
move(3,((8,3),(9,3)),40).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(9,4)),7).
move(4,((9,4),(9,3)),9).
move(4,((9,3),(9,4)),40).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(4,5)),2).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(5,4)),5).
move(5,((5,4),(6,4)),6).
move(5,((6,4),(6,3)),7).
move(5,((6,3),(7,3)),8).
move(5,((7,3),(8,3)),40).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(8,5)),2).
move(6,((8,5),(7,5)),3).
move(6,((7,5),(7,4)),4).
move(6,((7,4),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(6,((5,3),(6,3)),8).
move(6,((6,3),(5,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(5,2)),7).
move(7,((5,2),(4,2)),8).
move(7,((4,2),(4,3)),40).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(3,4)),6).
move(8,((3,4),(2,4)),7).
move(8,((2,4),(3,4)),8).
move(8,((3,4),(2,4)),40).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(9,5)),2).
move(9,((9,5),(8,5)),6).
move(9,((8,5),(7,5)),7).
move(9,((7,5),(7,4)),8).
move(10,((8,6),(9,6)),1).
move(10,((9,6),(10,6)),2).
move(10,((10,6),(10,5)),3).
move(10,((10,5),(10,4)),4).
move(10,((10,4),(9,4)),5).
move(10,((9,4),(10,4)),6).
move(10,((10,4),(10,5)),7).
move(10,((10,5),(9,5)),8).
move(10,((9,5),(8,5)),9).
move(10,((8,5),(8,4)),40).
move(11,((11,6),(10,6)),3).
move(11,((10,6),(10,5)),4).
move(11,((10,5),(10,4)),5).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(10,2)),8).
move(11,((10,2),(9,2)),9).
move(11,((9,2),(8,2)),10).
move(11,((8,2),(7,2)),12).
move(11,((7,2),(7,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.914s (Solving: 0.19s 1st Model: 0.19s Unsat: 0.00s)
CPU Time     : 1.906s

Choices      : 1336     (Domain: 497)
Conflicts    : 100      (Analyzed: 100)
Restarts     : 0       
Model-Level  : 394.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 100      (Deleted: 0)
  Binary     : 32       (Ratio:  32.00%)
  Ternary    : 5        (Ratio:   5.00%)
  Conflict   : 100      (Average Length:   75.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 100      (Average:  9.42 Max:  66 Sum:    942)
  Executed   : 100      (Average:  9.42 Max:  66 Sum:    942 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378790   (Original: 352635)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141778  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(3,4)),4).
move(1,((3,4),(3,3)),5).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(7,6)),4).
move(3,((7,6),(8,6)),5).
move(3,((8,6),(9,6)),6).
move(3,((9,6),(9,5)),7).
move(3,((9,5),(9,4)),8).
move(3,((9,4),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(4,((9,4),(8,4)),8).
move(4,((8,4),(9,4)),40).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(5,((7,3),(7,2)),6).
move(5,((7,2),(8,2)),7).
move(5,((8,2),(8,3)),40).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(8,6)),3).
move(6,((8,6),(8,5)),4).
move(6,((8,5),(8,4)),5).
move(6,((8,4),(7,4)),6).
move(6,((7,4),(8,4)),7).
move(6,((8,4),(8,3)),8).
move(6,((8,3),(7,3)),9).
move(6,((7,3),(6,3)),10).
move(6,((6,3),(5,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(4,4)),4).
move(7,((4,4),(4,3)),5).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(5,4)),4).
move(8,((5,4),(4,4)),5).
move(8,((4,4),(3,4)),6).
move(8,((3,4),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(8,4)),4).
move(9,((8,4),(7,4)),5).
move(9,((7,4),(7,3)),6).
move(9,((7,3),(7,2)),7).
move(9,((7,2),(7,3)),10).
move(9,((7,3),(7,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(7,4)),3).
move(10,((7,4),(6,4)),4).
move(10,((6,4),(7,4)),7).
move(10,((7,4),(8,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(10,4)),3).
move(11,((10,4),(9,4)),4).
move(11,((9,4),(9,3)),5).
move(11,((9,3),(8,3)),6).
move(11,((8,3),(9,3)),7).
move(11,((9,3),(8,3)),9).
move(11,((8,3),(7,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.760s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.766s

Choices      : 495      (Domain: 46)
Conflicts    : 11       (Analyzed: 11)
Restarts     : 0       
Model-Level  : 433.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 11       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 11       (Average Length:   33.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 11       (Average:  5.64 Max:  27 Sum:     62)
  Executed   : 11       (Average:  5.64 Max:  27 Sum:     62 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354820   (Original: 328555)
  Choice     : 440     
  Heuristic  : 1139     (Original: 1161)
Atoms        : 141848  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(2,3)),4).
move(1,((2,3),(3,3)),5).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(3,5)),2).
move(2,((3,5),(4,5)),3).
move(2,((4,5),(5,5)),4).
move(2,((5,5),(6,5)),5).
move(2,((6,5),(7,5)),6).
move(2,((7,5),(8,5)),7).
move(2,((8,5),(9,5)),8).
move(2,((9,5),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(4,5)),2).
move(3,((4,5),(5,5)),3).
move(3,((5,5),(6,5)),4).
move(3,((6,5),(7,5)),5).
move(3,((7,5),(8,5)),6).
move(3,((8,5),(9,5)),7).
move(3,((9,5),(9,4)),8).
move(3,((9,4),(9,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(6,4)),4).
move(4,((6,4),(7,4)),6).
move(4,((7,4),(8,4)),7).
move(4,((8,4),(9,4)),40).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(8,5)),4).
move(5,((8,5),(8,4)),5).
move(5,((8,4),(8,3)),6).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),5).
move(6,((8,3),(7,3)),6).
move(6,((7,3),(6,3)),7).
move(6,((6,3),(5,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),4).
move(7,((5,3),(4,3)),5).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(5,4)),4).
move(8,((5,4),(4,4)),5).
move(8,((4,4),(3,4)),6).
move(8,((3,4),(2,4)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(10,2)),4).
move(9,((10,2),(9,2)),5).
move(9,((9,2),(8,2)),6).
move(9,((8,2),(7,2)),7).
move(9,((7,2),(7,3)),8).
move(9,((7,3),(7,4)),40).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(7,5)),2).
move(10,((7,5),(7,4)),3).
move(10,((7,4),(7,3)),4).
move(10,((7,3),(6,3)),5).
move(10,((6,3),(6,4)),6).
move(10,((6,4),(7,4)),7).
move(10,((7,4),(8,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(6,5)),6).
move(11,((6,5),(6,4)),7).
move(11,((6,4),(6,3)),8).
move(11,((6,3),(7,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.723s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.719s

Choices      : 1867     (Domain: 1253)
Conflicts    : 17       (Analyzed: 17)
Restarts     : 0       
Model-Level  : 1714.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 17       (Deleted: 0)
  Binary     : 2        (Ratio:  11.76%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 17       (Average Length:   22.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 17       (Average:  9.00 Max:  40 Sum:    153)
  Executed   : 17       (Average:  9.00 Max:  40 Sum:    153 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354927   (Original: 328644)
  Choice     : 440     
  Heuristic  : 1327     (Original: 1331)
Atoms        : 141767  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(2,3)),4).
move(1,((2,3),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(3,3)),8).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(7,6)),4).
move(3,((7,6),(8,6)),5).
move(3,((8,6),(8,5)),6).
move(3,((8,5),(8,4)),7).
move(3,((8,4),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(8,4)),6).
move(5,((8,4),(9,4)),7).
move(5,((9,4),(8,4)),8).
move(5,((8,4),(8,3)),40).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(4,5)),6).
move(6,((4,5),(4,4)),8).
move(6,((4,4),(5,4)),9).
move(6,((5,4),(5,3)),10).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),4).
move(7,((5,3),(4,3)),5).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(3,4)),7).
move(8,((3,4),(2,4)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(8,5)),7).
move(9,((8,5),(9,5)),8).
move(9,((9,5),(8,5)),9).
move(9,((8,5),(7,5)),11).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(6,4)),4).
move(10,((6,4),(7,4)),6).
move(10,((7,4),(6,4)),8).
move(10,((6,4),(7,4)),9).
move(10,((7,4),(8,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(8,5)),4).
move(11,((8,5),(8,4)),5).
move(11,((8,4),(8,3)),6).
move(11,((8,3),(7,3)),7).
move(11,((7,3),(7,4)),8).
move(11,((7,4),(7,3)),9).
move(11,((7,3),(8,3)),10).
move(11,((8,3),(7,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.739s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.750s

Choices      : 1128     (Domain: 605)
Conflicts    : 51       (Analyzed: 51)
Restarts     : 0       
Model-Level  : 533.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 51       (Deleted: 0)
  Binary     : 9        (Ratio:  17.65%)
  Ternary    : 1        (Ratio:   1.96%)
  Conflict   : 51       (Average Length:   27.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 51       (Average: 11.67 Max: 104 Sum:    595)
  Executed   : 51       (Average: 11.67 Max: 104 Sum:    595 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378803   (Original: 352637)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141790  
Disjunctions : 0        (Original: 1)
Bodies       : 247623   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128049   (Atom=Atom: 470 Body=Body: 482 Other: 127097)
Tight        : Yes
Variables    : 246824   (Eliminated:    0 Frozen: 126446)
Constraints  : 678181   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(1,3)),8).
move(1,((1,3),(2,3)),9).
move(1,((2,3),(2,4)),10).
move(1,((2,4),(3,4)),12).
move(1,((3,4),(2,4)),13).
move(1,((2,4),(3,4)),36).
move(1,((3,4),(3,3)),38).
move(1,((3,3),(2,3)),39).
move(1,((2,3),(3,3)),40).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(2,4)),3).
move(2,((2,4),(3,4)),4).
move(2,((3,4),(2,4)),5).
move(2,((2,4),(3,4)),6).
move(2,((3,4),(2,4)),7).
move(2,((2,4),(2,5)),10).
move(2,((2,5),(2,4)),12).
move(2,((2,4),(2,5)),13).
move(2,((2,5),(3,5)),30).
move(2,((3,5),(4,5)),31).
move(2,((4,5),(5,5)),32).
move(2,((5,5),(5,6)),33).
move(2,((5,6),(6,6)),34).
move(2,((6,6),(7,6)),35).
move(2,((7,6),(8,6)),36).
move(2,((8,6),(8,5)),37).
move(2,((8,5),(9,5)),38).
move(2,((9,5),(10,5)),39).
move(2,((10,5),(10,4)),40).
move(3,((3,6),(3,5)),3).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,4)),7).
move(3,((3,4),(3,3)),9).
move(3,((3,3),(3,4)),10).
move(3,((3,4),(3,3)),12).
move(3,((3,3),(4,3)),13).
move(3,((4,3),(4,4)),16).
move(3,((4,4),(3,4)),17).
move(3,((3,4),(3,3)),20).
move(3,((3,3),(4,3)),21).
move(3,((4,3),(3,3)),22).
move(3,((3,3),(4,3)),25).
move(3,((4,3),(3,3)),26).
move(3,((3,3),(3,4)),27).
move(3,((3,4),(3,3)),29).
move(3,((3,3),(4,3)),30).
move(3,((4,3),(4,4)),31).
move(3,((4,4),(4,3)),33).
move(3,((4,3),(4,2)),34).
move(3,((4,2),(5,2)),35).
move(3,((5,2),(6,2)),36).
move(3,((6,2),(7,2)),37).
move(3,((7,2),(8,2)),38).
move(3,((8,2),(8,3)),39).
move(3,((8,3),(9,3)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(5,4)),6).
move(4,((5,4),(5,5)),7).
move(4,((5,5),(6,5)),8).
move(4,((6,5),(5,5)),9).
move(4,((5,5),(4,5)),12).
move(4,((4,5),(4,4)),15).
move(4,((4,4),(5,4)),16).
move(4,((5,4),(6,4)),17).
move(4,((6,4),(7,4)),18).
move(4,((7,4),(7,5)),20).
move(4,((7,5),(7,4)),21).
move(4,((7,4),(6,4)),22).
move(4,((6,4),(5,4)),23).
move(4,((5,4),(6,4)),24).
move(4,((6,4),(5,4)),26).
move(4,((5,4),(6,4)),27).
move(4,((6,4),(7,4)),29).
move(4,((7,4),(7,5)),34).
move(4,((7,5),(7,4)),36).
move(4,((7,4),(7,3)),37).
move(4,((7,3),(8,3)),38).
move(4,((8,3),(8,4)),39).
move(4,((8,4),(9,4)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(6,3)),6).
move(5,((6,3),(6,4)),7).
move(5,((6,4),(7,4)),8).
move(5,((7,4),(7,3)),9).
move(5,((7,3),(6,3)),10).
move(5,((6,3),(6,4)),11).
move(5,((6,4),(5,4)),12).
move(5,((5,4),(5,5)),13).
move(5,((5,5),(5,4)),24).
move(5,((5,4),(5,3)),25).
move(5,((5,3),(6,3)),26).
move(5,((6,3),(5,3)),27).
move(5,((5,3),(6,3)),28).
move(5,((6,3),(5,3)),29).
move(5,((5,3),(6,3)),30).
move(5,((6,3),(5,3)),33).
move(5,((5,3),(5,4)),35).
move(5,((5,4),(6,4)),37).
move(5,((6,4),(6,3)),38).
move(5,((6,3),(7,3)),39).
move(5,((7,3),(8,3)),40).
move(6,((9,6),(9,5)),3).
move(6,((9,5),(9,4)),4).
move(6,((9,4),(9,3)),5).
move(6,((9,3),(8,3)),7).
move(6,((8,3),(9,3)),8).
move(6,((9,3),(9,4)),9).
move(6,((9,4),(9,3)),10).
move(6,((9,3),(9,4)),12).
move(6,((9,4),(9,3)),13).
move(6,((9,3),(9,4)),14).
move(6,((9,4),(9,5)),16).
move(6,((9,5),(8,5)),17).
move(6,((8,5),(9,5)),18).
move(6,((9,5),(9,4)),19).
move(6,((9,4),(9,3)),21).
move(6,((9,3),(9,4)),22).
move(6,((9,4),(9,3)),26).
move(6,((9,3),(9,4)),27).
move(6,((9,4),(9,3)),30).
move(6,((9,3),(9,4)),31).
move(6,((9,4),(9,3)),33).
move(6,((9,3),(8,3)),34).
move(6,((8,3),(7,3)),35).
move(6,((7,3),(6,3)),36).
move(6,((6,3),(5,3)),37).
move(6,((5,3),(5,4)),38).
move(6,((5,4),(5,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,4)),6).
move(7,((6,4),(5,4)),7).
move(7,((5,4),(5,3)),8).
move(7,((5,3),(6,3)),9).
move(7,((6,3),(5,3)),10).
move(7,((5,3),(6,3)),11).
move(7,((6,3),(5,3)),14).
move(7,((5,3),(6,3)),15).
move(7,((6,3),(5,3)),16).
move(7,((5,3),(6,3)),17).
move(7,((6,3),(5,3)),18).
move(7,((5,3),(6,3)),19).
move(7,((6,3),(6,4)),21).
move(7,((6,4),(6,5)),22).
move(7,((6,5),(5,5)),24).
move(7,((5,5),(5,4)),25).
move(7,((5,4),(5,3)),26).
move(7,((5,3),(5,4)),27).
move(7,((5,4),(5,3)),28).
move(7,((5,3),(5,4)),29).
move(7,((5,4),(6,4)),30).
move(7,((6,4),(6,5)),36).
move(7,((6,5),(5,5)),37).
move(7,((5,5),(4,5)),38).
move(7,((4,5),(4,4)),39).
move(7,((4,4),(4,3)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,5)),7).
move(8,((7,5),(6,5)),9).
move(8,((6,5),(6,4)),10).
move(8,((6,4),(7,4)),11).
move(8,((7,4),(6,4)),14).
move(8,((6,4),(7,4)),15).
move(8,((7,4),(7,5)),18).
move(8,((7,5),(6,5)),20).
move(8,((6,5),(7,5)),21).
move(8,((7,5),(7,4)),24).
move(8,((7,4),(7,5)),27).
move(8,((7,5),(6,5)),31).
move(8,((6,5),(5,5)),33).
move(8,((5,5),(4,5)),34).
move(8,((4,5),(3,5)),35).
move(8,((3,5),(2,5)),36).
move(8,((2,5),(2,4)),38).
move(9,((10,6),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(10,4)),6).
move(9,((10,4),(9,4)),8).
move(9,((9,4),(9,5)),9).
move(9,((9,5),(9,4)),10).
move(9,((9,4),(10,4)),12).
move(9,((10,4),(9,4)),13).
move(9,((9,4),(9,5)),14).
move(9,((9,5),(10,5)),15).
move(9,((10,5),(9,5)),17).
move(9,((9,5),(9,4)),18).
move(9,((9,4),(10,4)),19).
move(9,((10,4),(10,5)),22).
move(9,((10,5),(10,4)),27).
move(9,((10,4),(9,4)),30).
move(9,((9,4),(9,5)),31).
move(9,((9,5),(9,4)),34).
move(9,((9,4),(9,5)),35).
move(9,((9,5),(8,5)),36).
move(9,((8,5),(7,5)),37).
move(9,((7,5),(7,4)),38).
move(9,((7,4),(7,5)),39).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,5)),39).
move(10,((8,5),(8,4)),40).
move(11,((11,6),(10,6)),3).
move(11,((10,6),(10,5)),4).
move(11,((10,5),(11,5)),6).
move(11,((11,5),(11,4)),7).
move(11,((11,4),(11,3)),8).
move(11,((11,3),(10,3)),9).
move(11,((10,3),(10,4)),10).
move(11,((10,4),(10,3)),12).
move(11,((10,3),(10,4)),13).
move(11,((10,4),(10,5)),14).
move(11,((10,5),(10,4)),15).
move(11,((10,4),(10,3)),19).
move(11,((10,3),(10,4)),22).
move(11,((10,4),(10,3)),27).
move(11,((10,3),(10,4)),30).
move(11,((10,4),(10,5)),33).
move(11,((10,5),(9,5)),34).
move(11,((9,5),(8,5)),35).
move(11,((8,5),(7,5)),36).
move(11,((7,5),(7,4)),37).
move(11,((7,4),(7,3)),38).
move(11,((7,3),(7,4)),39).
move(11,((7,4),(7,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.797s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.781s

Choices      : 488      (Domain: 488)
Conflicts    : 28       (Analyzed: 28)
Restarts     : 0       
Model-Level  : 392.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 28       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 28       (Average Length:   16.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 28       (Average:  3.43 Max:   9 Sum:     96)
  Executed   : 28       (Average:  3.43 Max:   9 Sum:     96 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378779   (Original: 352624)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141767  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(1,2)),9).
move(1,((1,2),(1,1)),10).
move(1,((1,1),(1,2)),11).
move(1,((1,2),(2,2)),12).
move(1,((2,2),(2,3)),13).
move(1,((2,3),(2,4)),14).
move(1,((2,4),(3,4)),34).
move(1,((3,4),(3,5)),35).
move(1,((3,5),(3,4)),36).
move(1,((3,4),(2,4)),37).
move(1,((2,4),(2,3)),39).
move(1,((2,3),(3,3)),40).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(3,2)),7).
move(2,((3,2),(3,1)),8).
move(2,((3,1),(2,1)),9).
move(2,((2,1),(2,2)),10).
move(2,((2,2),(2,3)),11).
move(2,((2,3),(2,4)),12).
move(2,((2,4),(3,4)),14).
move(2,((3,4),(4,4)),34).
move(2,((4,4),(5,4)),35).
move(2,((5,4),(6,4)),36).
move(2,((6,4),(7,4)),37).
move(2,((7,4),(8,4)),38).
move(2,((8,4),(9,4)),39).
move(2,((9,4),(10,4)),40).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),5).
move(3,((3,3),(3,2)),6).
move(3,((3,2),(2,2)),7).
move(3,((2,2),(2,1)),8).
move(3,((2,1),(1,1)),9).
move(3,((1,1),(2,1)),10).
move(3,((2,1),(2,2)),11).
move(3,((2,2),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(4,3)),34).
move(3,((4,3),(5,3)),35).
move(3,((5,3),(6,3)),36).
move(3,((6,3),(7,3)),37).
move(3,((7,3),(8,3)),38).
move(3,((8,3),(9,3)),39).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,2)),6).
move(4,((4,2),(4,1)),7).
move(4,((4,1),(4,2)),8).
move(4,((4,2),(4,3)),9).
move(4,((4,3),(4,4)),11).
move(4,((4,4),(4,5)),33).
move(4,((4,5),(5,5)),34).
move(4,((5,5),(6,5)),35).
move(4,((6,5),(7,5)),36).
move(4,((7,5),(8,5)),37).
move(4,((8,5),(9,5)),39).
move(4,((9,5),(9,4)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(5,2)),8).
move(5,((5,2),(5,3)),9).
move(5,((5,3),(5,4)),10).
move(5,((5,4),(4,4)),33).
move(5,((4,4),(4,5)),34).
move(5,((4,5),(4,4)),35).
move(5,((4,4),(5,4)),36).
move(5,((5,4),(6,4)),37).
move(5,((6,4),(7,4)),38).
move(5,((7,4),(7,3)),39).
move(5,((7,3),(8,3)),40).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,2)),7).
move(6,((9,2),(10,2)),8).
move(6,((10,2),(10,1)),9).
move(6,((10,1),(11,1)),10).
move(6,((11,1),(10,1)),11).
move(6,((10,1),(10,2)),12).
move(6,((10,2),(9,2)),13).
move(6,((9,2),(9,3)),14).
move(6,((9,3),(9,4)),15).
move(6,((9,4),(8,4)),33).
move(6,((8,4),(7,4)),34).
move(6,((7,4),(6,4)),35).
move(6,((6,4),(6,5)),36).
move(6,((6,5),(5,5)),38).
move(6,((5,5),(5,4)),39).
move(6,((5,4),(5,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(6,1)),7).
move(7,((6,1),(6,2)),8).
move(7,((6,2),(6,3)),9).
move(7,((6,3),(6,2)),10).
move(7,((6,2),(6,3)),11).
move(7,((6,3),(6,4)),12).
move(7,((6,4),(6,3)),33).
move(7,((6,3),(6,2)),34).
move(7,((6,2),(5,2)),35).
move(7,((5,2),(5,3)),36).
move(7,((5,3),(6,3)),37).
move(7,((6,3),(5,3)),39).
move(7,((5,3),(4,3)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(7,4)),10).
move(8,((7,4),(6,4)),33).
move(8,((6,4),(5,4)),34).
move(8,((5,4),(5,5)),35).
move(8,((5,5),(4,5)),36).
move(8,((4,5),(3,5)),37).
move(8,((3,5),(2,5)),38).
move(8,((2,5),(2,4)),39).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(10,6)),3).
move(9,((10,6),(10,5)),4).
move(9,((10,5),(10,4)),6).
move(9,((10,4),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(9,((11,3),(11,2)),9).
move(9,((11,2),(10,2)),10).
move(9,((10,2),(10,3)),11).
move(9,((10,3),(10,4)),12).
move(9,((10,4),(9,4)),34).
move(9,((9,4),(8,4)),35).
move(9,((8,4),(7,4)),36).
move(9,((7,4),(7,5)),37).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,3)),5).
move(10,((8,3),(8,2)),6).
move(10,((8,2),(8,1)),7).
move(10,((8,1),(9,1)),8).
move(10,((9,1),(9,2)),9).
move(10,((9,2),(8,2)),10).
move(10,((8,2),(8,3)),11).
move(10,((8,3),(8,4)),12).
move(10,((8,4),(8,3)),33).
move(10,((8,3),(8,4)),34).
move(10,((8,4),(8,5)),35).
move(10,((8,5),(9,5)),36).
move(10,((9,5),(9,6)),37).
move(10,((9,6),(8,6)),38).
move(10,((8,6),(8,5)),39).
move(10,((8,5),(8,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(10,2)),7).
move(11,((10,2),(11,2)),8).
move(11,((11,2),(11,1)),9).
move(11,((11,1),(11,2)),10).
move(11,((11,2),(10,2)),11).
move(11,((10,2),(10,3)),12).
move(11,((10,3),(9,3)),33).
move(11,((9,3),(8,3)),34).
move(11,((8,3),(7,3)),35).
move(11,((7,3),(7,2)),36).
move(11,((7,2),(8,2)),37).
move(11,((8,2),(7,2)),39).
move(11,((7,2),(7,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.784s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.781s

Choices      : 461      (Domain: 461)
Conflicts    : 21       (Analyzed: 21)
Restarts     : 0       
Model-Level  : 380.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 21       (Deleted: 0)
  Binary     : 1        (Ratio:   4.76%)
  Ternary    : 1        (Ratio:   4.76%)
  Conflict   : 21       (Average Length:   28.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 21       (Average:  3.86 Max:  13 Sum:     81)
  Executed   : 21       (Average:  3.86 Max:  13 Sum:     81 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378779   (Original: 352624)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141767  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

