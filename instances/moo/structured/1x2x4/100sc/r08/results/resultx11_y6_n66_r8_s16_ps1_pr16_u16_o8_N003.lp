%%%%%
%Standard
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(4,6)),4).
move(1,((4,6),(3,6)),5).
move(1,((3,6),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(2,4)),8).
move(1,((2,4),(2,3)),9).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(1,3)),3).
move(2,((1,3),(2,3)),4).
move(2,((2,3),(3,3)),5).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(4,5)),3).
move(3,((4,5),(4,4)),5).
move(3,((4,4),(4,3)),6).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(3,3)),3).
move(4,((3,3),(4,3)),4).
move(4,((4,3),(5,3)),5).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(6,6)),4).
move(5,((6,6),(6,5)),6).
move(5,((6,5),(6,4)),7).
move(5,((6,4),(6,3)),8).
move(5,((6,3),(7,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(5,2)),4).
move(6,((5,2),(6,2)),5).
move(6,((6,2),(7,2)),6).
move(6,((7,2),(8,2)),7).
move(6,((8,2),(8,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(7,((10,4),(9,4)),7).
move(7,((9,4),(9,3)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,2)),4).
move(8,((7,2),(8,2)),5).
move(8,((8,2),(9,2)),6).
move(8,((9,2),(10,2)),7).
move(8,((10,2),(10,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.195s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.188s

Choices      : 771     
Conflicts    : 28       (Analyzed: 28)
Restarts     : 0       
Model-Level  : 428.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 28       (Deleted: 0)
  Binary     : 7        (Ratio:  25.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 28       (Average Length:   21.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 28       (Average: 12.25 Max:  75 Sum:    343)
  Executed   : 28       (Average: 12.25 Max:  75 Sum:    343 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261077   (Original: 241134)
  Choice     : 320     
Atoms        : 106367  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(1,((3,3),(2,3)),9).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(4,6)),5).
move(2,((4,6),(3,6)),6).
move(2,((3,6),(3,5)),7).
move(2,((3,5),(3,6)),8).
move(2,((3,6),(3,5)),9).
move(2,((3,5),(3,4)),10).
move(2,((3,4),(3,3)),11).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(2,4)),4).
move(3,((2,4),(3,4)),5).
move(3,((3,4),(4,4)),6).
move(3,((4,4),(4,3)),7).
move(3,((4,3),(4,2)),8).
move(3,((4,2),(4,3)),10).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(3,3)),3).
move(4,((3,3),(4,3)),5).
move(4,((4,3),(5,3)),7).
move(4,((5,3),(6,3)),8).
move(4,((6,3),(5,3)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(8,6)),4).
move(5,((8,6),(7,6)),5).
move(5,((7,6),(7,5)),6).
move(5,((7,5),(7,4)),7).
move(5,((7,4),(7,3)),8).
move(6,((5,6),(6,6)),1).
move(6,((6,6),(7,6)),2).
move(6,((7,6),(8,6)),3).
move(6,((8,6),(8,5)),4).
move(6,((8,5),(8,4)),5).
move(6,((8,4),(8,3)),7).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(9,5)),4).
move(7,((9,5),(9,4)),6).
move(7,((9,4),(9,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),5).
move(8,((8,3),(9,3)),6).
move(8,((9,3),(10,3)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.205s (Solving: 0.04s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.203s

Choices      : 1401     (Domain: 174)
Conflicts    : 42       (Analyzed: 42)
Restarts     : 0       
Model-Level  : 644.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 42       (Deleted: 0)
  Binary     : 8        (Ratio:  19.05%)
  Ternary    : 1        (Ratio:   2.38%)
  Conflict   : 42       (Average Length:   22.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 42       (Average: 18.02 Max: 137 Sum:    757)
  Executed   : 42       (Average: 18.02 Max: 137 Sum:    757 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261346   (Original: 241403)
  Choice     : 320     
  Heuristic  : 185     
Atoms        : 106451  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDistance.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(4,6)),4).
move(1,((4,6),(3,6)),5).
move(1,((3,6),(2,6)),6).
move(1,((2,6),(2,5)),7).
move(1,((2,5),(2,4)),8).
move(1,((2,4),(2,3)),9).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(3,5)),3).
move(2,((3,5),(3,4)),4).
move(2,((3,4),(3,3)),5).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(4,5)),3).
move(3,((4,5),(4,4)),4).
move(3,((4,4),(4,3)),5).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(5,5)),3).
move(4,((5,5),(5,4)),4).
move(4,((5,4),(5,3)),5).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(6,4)),4).
move(5,((6,4),(6,3)),5).
move(5,((6,3),(7,3)),6).
move(6,((5,6),(6,6)),1).
move(6,((6,6),(6,5)),2).
move(6,((6,5),(7,5)),3).
move(6,((7,5),(7,4)),4).
move(6,((7,4),(8,4)),5).
move(6,((8,4),(8,3)),6).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(7,4)),3).
move(7,((7,4),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),4).
move(8,((8,3),(9,3)),5).
move(8,((9,3),(10,3)),6).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.206s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.203s

Choices      : 315      (Domain: 315)
Conflicts    : 2        (Analyzed: 2)
Restarts     : 0       
Model-Level  : 299.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 2        (Deleted: 0)
  Binary     : 2        (Ratio: 100.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 2        (Average Length:    2.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 2        (Average:  8.00 Max:   8 Sum:     16)
  Executed   : 2        (Average:  8.00 Max:   8 Sum:     16 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279625   (Original: 259754)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106459  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((8,6),(7,6)),2).
move(1,((7,6),(6,6)),3).
move(1,((6,6),(6,5)),4).
move(1,((6,5),(7,5)),5).
move(1,((7,5),(7,4)),6).
move(1,((7,4),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(7,5)),9).
move(1,((7,5),(6,5)),10).
move(1,((6,5),(5,5)),11).
move(1,((5,5),(4,5)),14).
move(1,((4,5),(3,5)),16).
move(1,((3,5),(3,4)),17).
move(1,((3,4),(2,4)),19).
move(1,((2,4),(3,4)),21).
move(1,((3,4),(3,3)),22).
move(1,((3,3),(3,4)),23).
move(1,((3,4),(3,3)),24).
move(1,((3,3),(3,4)),27).
move(1,((3,4),(3,3)),28).
move(1,((3,3),(3,4)),29).
move(1,((3,4),(2,4)),30).
move(1,((2,4),(3,4)),33).
move(1,((3,4),(3,3)),34).
move(1,((3,3),(2,3)),36).
move(1,((2,3),(2,4)),37).
move(1,((2,4),(2,3)),40).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(2,4)),3).
move(2,((2,4),(2,3)),4).
move(2,((2,3),(2,2)),5).
move(2,((2,2),(2,1)),9).
move(2,((2,1),(3,1)),10).
move(2,((3,1),(3,2)),11).
move(2,((3,2),(4,2)),12).
move(2,((4,2),(5,2)),13).
move(2,((5,2),(6,2)),14).
move(2,((6,2),(7,2)),15).
move(2,((7,2),(7,3)),27).
move(2,((7,3),(8,3)),28).
move(2,((8,3),(8,2)),31).
move(2,((8,2),(8,3)),33).
move(2,((8,3),(7,3)),34).
move(2,((7,3),(6,3)),35).
move(2,((6,3),(5,3)),36).
move(2,((5,3),(4,3)),37).
move(2,((4,3),(3,3)),38).
move(3,((2,6),(2,5)),2).
move(3,((2,5),(3,5)),5).
move(3,((3,5),(4,5)),6).
move(3,((4,5),(4,4)),7).
move(3,((4,4),(4,3)),8).
move(3,((4,3),(4,4)),9).
move(3,((4,4),(3,4)),10).
move(3,((3,4),(3,3)),11).
move(3,((3,3),(3,2)),12).
move(3,((3,2),(4,2)),13).
move(3,((4,2),(4,3)),40).
move(4,((3,6),(3,5)),2).
move(4,((3,5),(3,4)),5).
move(4,((3,4),(2,4)),6).
move(4,((2,4),(2,3)),7).
move(4,((2,3),(1,3)),8).
move(4,((1,3),(2,3)),9).
move(4,((2,3),(3,3)),10).
move(4,((3,3),(4,3)),11).
move(4,((4,3),(5,3)),12).
move(4,((5,3),(4,3)),13).
move(4,((4,3),(5,3)),15).
move(4,((5,3),(4,3)),16).
move(4,((4,3),(5,3)),17).
move(4,((5,3),(4,3)),19).
move(4,((4,3),(5,3)),20).
move(4,((5,3),(4,3)),22).
move(4,((4,3),(5,3)),24).
move(4,((5,3),(5,4)),26).
move(4,((5,4),(5,3)),27).
move(4,((5,3),(4,3)),28).
move(4,((4,3),(5,3)),30).
move(4,((5,3),(4,3)),31).
move(4,((4,3),(3,3)),33).
move(4,((3,3),(4,3)),34).
move(4,((4,3),(5,3)),35).
move(4,((5,3),(5,4)),36).
move(4,((5,4),(5,3)),37).
move(4,((5,3),(5,4)),38).
move(4,((5,4),(5,3)),40).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(4,3)),3).
move(5,((4,3),(4,4)),6).
move(5,((4,4),(5,4)),7).
move(5,((5,4),(5,3)),8).
move(5,((5,3),(6,3)),9).
move(5,((6,3),(6,4)),11).
move(5,((6,4),(7,4)),12).
move(5,((7,4),(7,3)),13).
move(5,((7,3),(6,3)),14).
move(5,((6,3),(6,2)),15).
move(5,((6,2),(7,2)),33).
move(5,((7,2),(7,3)),40).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(6,4)),6).
move(6,((6,4),(7,4)),7).
move(6,((7,4),(8,4)),8).
move(6,((8,4),(9,4)),9).
move(6,((9,4),(9,3)),10).
move(6,((9,3),(10,3)),11).
move(6,((10,3),(10,2)),13).
move(6,((10,2),(10,3)),14).
move(6,((10,3),(10,2)),15).
move(6,((10,2),(10,3)),25).
move(6,((10,3),(10,4)),28).
move(6,((10,4),(10,5)),30).
move(6,((10,5),(9,5)),31).
move(6,((9,5),(9,4)),32).
move(6,((9,4),(8,4)),33).
move(6,((8,4),(9,4)),37).
move(6,((9,4),(9,3)),38).
move(6,((9,3),(8,3)),40).
move(7,((6,6),(6,5)),2).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),6).
move(7,((6,3),(7,3)),7).
move(7,((7,3),(8,3)),8).
move(7,((8,3),(9,3)),9).
move(7,((9,3),(9,2)),10).
move(7,((9,2),(10,2)),31).
move(7,((10,2),(9,2)),33).
move(7,((9,2),(9,3)),34).
move(7,((9,3),(9,4)),36).
move(7,((9,4),(9,5)),37).
move(7,((9,5),(9,4)),39).
move(7,((9,4),(9,3)),40).
move(8,((7,6),(7,5)),2).
move(8,((7,5),(7,4)),5).
move(8,((7,4),(8,4)),6).
move(8,((8,4),(9,4)),8).
move(8,((9,4),(10,4)),9).
move(8,((10,4),(10,3)),15).
move(8,((10,3),(10,4)),16).
move(8,((10,4),(10,3)),23).
move(8,((10,3),(9,3)),24).
move(8,((9,3),(9,4)),26).
move(8,((9,4),(10,4)),27).
move(8,((10,4),(9,4)),28).
move(8,((9,4),(9,3)),29).
move(8,((9,3),(10,3)),34).
move(8,((10,3),(10,4)),35).
move(8,((10,4),(10,3)),36).
move(8,((10,3),(9,3)),37).
move(8,((9,3),(10,3)),38).
move(8,((10,3),(10,4)),39).
move(8,((10,4),(10,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.407s (Solving: 0.22s 1st Model: 0.22s Unsat: 0.00s)
CPU Time     : 1.406s

Choices      : 4076     (Domain: 1594)
Conflicts    : 202      (Analyzed: 202)
Restarts     : 2        (Average: 101.00 Last: 56)
Model-Level  : 355.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 202      (Deleted: 0)
  Binary     : 43       (Ratio:  21.29%)
  Ternary    : 14       (Ratio:   6.93%)
  Conflict   : 202      (Average Length:   21.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 202      (Average: 18.34 Max: 310 Sum:   3705)
  Executed   : 202      (Average: 18.34 Max: 310 Sum:   3705 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279625   (Original: 259754)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106459  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(4,6)),4).
move(1,((4,6),(3,6)),5).
move(1,((3,6),(2,6)),6).
move(1,((2,6),(2,5)),7).
move(1,((2,5),(2,4)),8).
move(1,((2,4),(2,3)),9).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(3,5)),3).
move(2,((3,5),(3,4)),4).
move(2,((3,4),(3,3)),5).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(4,5)),3).
move(3,((4,5),(4,4)),4).
move(3,((4,4),(4,3)),5).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(5,5)),3).
move(4,((5,5),(5,4)),4).
move(4,((5,4),(5,3)),5).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(6,4)),4).
move(5,((6,4),(6,3)),5).
move(5,((6,3),(7,3)),6).
move(6,((5,6),(6,6)),1).
move(6,((6,6),(6,5)),2).
move(6,((6,5),(7,5)),3).
move(6,((7,5),(7,4)),4).
move(6,((7,4),(7,3)),5).
move(6,((7,3),(8,3)),6).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(8,4)),4).
move(7,((8,4),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(9,4)),4).
move(8,((9,4),(9,3)),5).
move(8,((9,3),(10,3)),6).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.192s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.203s

Choices      : 302      (Domain: 31)
Conflicts    : 0        (Analyzed: 0)
Restarts     : 0       
Model-Level  : 302.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 0        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 0        (Average:  0.00 Max:   0 Sum:      0)
  Executed   : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio: 100.00%)

Rules        : 261933   (Original: 242006)
  Choice     : 320     
  Heuristic  : 716      (Original: 732)
Atoms        : 106507  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(4,6)),4).
move(1,((4,6),(3,6)),5).
move(1,((3,6),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(2,4)),8).
move(1,((2,4),(2,3)),9).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(1,3)),3).
move(2,((1,3),(2,3)),5).
move(2,((2,3),(3,3)),6).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(3,3)),4).
move(3,((3,3),(4,3)),5).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(4,5)),2).
move(4,((4,5),(5,5)),3).
move(4,((5,5),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(7,4)),6).
move(4,((7,4),(6,4)),8).
move(4,((6,4),(6,3)),9).
move(4,((6,3),(5,3)),10).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(5,4)),3).
move(5,((5,4),(5,5)),4).
move(5,((5,5),(5,4)),6).
move(5,((5,4),(5,3)),7).
move(5,((5,3),(6,3)),8).
move(5,((6,3),(7,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(5,2)),4).
move(6,((5,2),(5,3)),5).
move(6,((5,3),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),4).
move(7,((6,2),(7,2)),5).
move(7,((7,2),(8,2)),6).
move(7,((8,2),(9,2)),7).
move(7,((9,2),(9,3)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(8,4)),4).
move(8,((8,4),(8,3)),6).
move(8,((8,3),(9,3)),7).
move(8,((9,3),(10,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.195s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.203s

Choices      : 1420     (Domain: 566)
Conflicts    : 35       (Analyzed: 35)
Restarts     : 0       
Model-Level  : 969.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 35       (Deleted: 0)
  Binary     : 9        (Ratio:  25.71%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 35       (Average Length:   22.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 35       (Average: 12.89 Max:  48 Sum:    451)
  Executed   : 35       (Average: 12.89 Max:  48 Sum:    451 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261752   (Original: 241809)
  Choice     : 320     
  Heuristic  : 591     
Atoms        : 106451  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(4,6)),4).
move(1,((4,6),(3,6)),5).
move(1,((3,6),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(2,4)),8).
move(1,((2,4),(2,3)),9).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(1,3)),3).
move(2,((1,3),(1,2)),4).
move(2,((1,2),(2,2)),5).
move(2,((2,2),(3,2)),6).
move(2,((3,2),(3,3)),7).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(4,5)),3).
move(3,((4,5),(4,4)),5).
move(3,((4,4),(4,3)),6).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(3,3)),3).
move(4,((3,3),(4,3)),4).
move(4,((4,3),(5,3)),5).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(6,6)),4).
move(5,((6,6),(6,5)),6).
move(5,((6,5),(6,4)),7).
move(5,((6,4),(6,3)),8).
move(5,((6,3),(7,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(5,2)),4).
move(6,((5,2),(6,2)),5).
move(6,((6,2),(7,2)),6).
move(6,((7,2),(8,2)),7).
move(6,((8,2),(8,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),4).
move(7,((6,2),(7,2)),5).
move(7,((7,2),(8,2)),6).
move(7,((8,2),(9,2)),7).
move(7,((9,2),(9,3)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),4).
move(8,((8,3),(9,3)),6).
move(8,((9,3),(10,3)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.225s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.234s

Choices      : 833      (Domain: 420)
Conflicts    : 30       (Analyzed: 30)
Restarts     : 0       
Model-Level  : 435.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 30       (Deleted: 0)
  Binary     : 8        (Ratio:  26.67%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 30       (Average Length:   21.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 30       (Average: 13.27 Max:  75 Sum:    398)
  Executed   : 30       (Average: 13.27 Max:  75 Sum:    398 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279635   (Original: 259756)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106468  
Disjunctions : 0        (Original: 1)
Bodies       : 183368   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93247    (Atom=Atom: 342 Body=Body: 351 Other: 92554)
Tight        : Yes
Variables    : 182697   (Eliminated:    0 Frozen: 92083)
Constraints  : 500665   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((8,6),(8,5)),3).
move(1,((8,5),(8,6)),4).
move(1,((8,6),(8,5)),5).
move(1,((8,5),(8,4)),6).
move(1,((8,4),(8,3)),7).
move(1,((8,3),(8,4)),8).
move(1,((8,4),(8,3)),9).
move(1,((8,3),(7,3)),10).
move(1,((7,3),(8,3)),11).
move(1,((8,3),(8,4)),12).
move(1,((8,4),(8,3)),15).
move(1,((8,3),(8,4)),16).
move(1,((8,4),(8,5)),18).
move(1,((8,5),(8,4)),19).
move(1,((8,4),(7,4)),21).
move(1,((7,4),(8,4)),22).
move(1,((8,4),(8,5)),24).
move(1,((8,5),(8,4)),25).
move(1,((8,4),(8,3)),26).
move(1,((8,3),(8,4)),27).
move(1,((8,4),(7,4)),32).
move(1,((7,4),(7,5)),33).
move(1,((7,5),(6,5)),34).
move(1,((6,5),(5,5)),35).
move(1,((5,5),(4,5)),36).
move(1,((4,5),(3,5)),37).
move(1,((3,5),(2,5)),38).
move(1,((2,5),(2,4)),39).
move(1,((2,4),(2,3)),40).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(1,3)),8).
move(2,((1,3),(2,3)),9).
move(2,((2,3),(2,4)),10).
move(2,((2,4),(2,5)),23).
move(2,((2,5),(2,4)),24).
move(2,((2,4),(3,4)),39).
move(2,((3,4),(3,3)),40).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(2,3)),8).
move(3,((2,3),(2,4)),9).
move(3,((2,4),(3,4)),10).
move(3,((3,4),(2,4)),23).
move(3,((2,4),(2,3)),24).
move(3,((2,3),(3,3)),39).
move(3,((3,3),(4,3)),40).
move(4,((3,6),(3,5)),2).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(3,3)),5).
move(4,((3,3),(4,3)),6).
move(4,((4,3),(4,4)),7).
move(4,((4,4),(3,4)),8).
move(4,((3,4),(3,3)),10).
move(4,((3,3),(3,4)),23).
move(4,((3,4),(4,4)),37).
move(4,((4,4),(4,3)),38).
move(4,((4,3),(5,3)),39).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(5,3)),6).
move(5,((5,3),(4,3)),8).
move(5,((4,3),(4,4)),9).
move(5,((4,4),(4,3)),10).
move(5,((4,3),(4,4)),11).
move(5,((4,4),(5,4)),20).
move(5,((5,4),(4,4)),21).
move(5,((4,4),(4,3)),32).
move(5,((4,3),(4,4)),33).
move(5,((4,4),(5,4)),37).
move(5,((5,4),(6,4)),38).
move(5,((6,4),(7,4)),39).
move(5,((7,4),(7,3)),40).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(6,((8,3),(7,3)),9).
move(6,((7,3),(6,3)),10).
move(6,((6,3),(5,3)),11).
move(6,((5,3),(5,4)),12).
move(6,((5,4),(5,3)),20).
move(6,((5,3),(5,4)),21).
move(6,((5,4),(5,3)),22).
move(6,((5,3),(5,4)),23).
move(6,((5,4),(5,3)),34).
move(6,((5,3),(5,4)),35).
move(6,((5,4),(6,4)),37).
move(6,((6,4),(7,4)),38).
move(6,((7,4),(8,4)),39).
move(6,((8,4),(8,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(7,5)),4).
move(7,((7,5),(7,4)),6).
move(7,((7,4),(7,5)),7).
move(7,((7,5),(7,4)),8).
move(7,((7,4),(6,4)),9).
move(7,((6,4),(7,4)),24).
move(7,((7,4),(6,4)),25).
move(7,((6,4),(7,4)),36).
move(7,((7,4),(8,4)),38).
move(7,((8,4),(9,4)),39).
move(7,((9,4),(9,3)),40).
move(8,((7,6),(8,6)),5).
move(8,((8,6),(8,5)),6).
move(8,((8,5),(8,4)),7).
move(8,((8,4),(9,4)),8).
move(8,((9,4),(9,3)),9).
move(8,((9,3),(10,3)),10).
move(8,((10,3),(9,3)),11).
move(8,((9,3),(8,3)),12).
move(8,((8,3),(7,3)),13).
move(8,((7,3),(8,3)),14).
move(8,((8,3),(7,3)),15).
move(8,((7,3),(7,4)),16).
move(8,((7,4),(7,3)),20).
move(8,((7,3),(8,3)),21).
move(8,((8,3),(7,3)),22).
move(8,((7,3),(7,4)),23).
move(8,((7,4),(7,3)),24).
move(8,((7,3),(7,4)),25).
move(8,((7,4),(8,4)),26).
move(8,((8,4),(7,4)),27).
move(8,((7,4),(7,3)),32).
move(8,((7,3),(7,4)),33).
move(8,((7,4),(8,4)),36).
move(8,((8,4),(9,4)),37).
move(8,((9,4),(10,4)),39).
move(8,((10,4),(10,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.199s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1.203s

Choices      : 354      (Domain: 354)
Conflicts    : 16       (Analyzed: 16)
Restarts     : 0       
Model-Level  : 292.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 16       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 1        (Ratio:   6.25%)
  Conflict   : 16       (Average Length:   13.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 16       (Average:  3.88 Max:  13 Sum:     62)
  Executed   : 16       (Average:  3.88 Max:  13 Sum:     62 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279617   (Original: 259746)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106451  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hStrange.lp
%%%%%
move(1,((8,6),(7,6)),2).
move(1,((7,6),(7,5)),5).
move(1,((7,5),(7,4)),6).
move(1,((7,4),(8,4)),7).
move(1,((8,4),(8,3)),8).
move(1,((8,3),(8,2)),9).
move(1,((8,2),(9,2)),10).
move(1,((9,2),(10,2)),11).
move(1,((10,2),(10,1)),12).
move(1,((10,1),(11,1)),13).
move(1,((11,1),(10,1)),14).
move(1,((10,1),(10,2)),15).
move(1,((10,2),(9,2)),16).
move(1,((9,2),(8,2)),17).
move(1,((8,2),(8,3)),18).
move(1,((8,3),(8,4)),19).
move(1,((8,4),(7,4)),34).
move(1,((7,4),(6,4)),35).
move(1,((6,4),(5,4)),36).
move(1,((5,4),(4,4)),37).
move(1,((4,4),(3,4)),38).
move(1,((3,4),(2,4)),39).
move(1,((2,4),(2,3)),40).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(2,2)),8).
move(2,((2,2),(1,2)),9).
move(2,((1,2),(1,1)),10).
move(2,((1,1),(1,2)),11).
move(2,((1,2),(2,2)),12).
move(2,((2,2),(2,3)),13).
move(2,((2,3),(2,4)),14).
move(2,((2,4),(3,4)),33).
move(2,((3,4),(2,4)),34).
move(2,((2,4),(2,5)),35).
move(2,((2,5),(2,4)),36).
move(2,((2,4),(2,3)),37).
move(2,((2,3),(2,2)),38).
move(2,((2,2),(3,2)),39).
move(2,((3,2),(3,3)),40).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(3,1)),8).
move(3,((3,1),(2,1)),9).
move(3,((2,1),(2,2)),10).
move(3,((2,2),(2,3)),11).
move(3,((2,3),(2,4)),12).
move(3,((2,4),(3,4)),14).
move(3,((3,4),(3,3)),20).
move(3,((3,3),(4,3)),21).
move(3,((4,3),(5,3)),22).
move(3,((5,3),(5,2)),23).
move(3,((5,2),(4,2)),24).
move(3,((4,2),(3,2)),25).
move(3,((3,2),(2,2)),26).
move(3,((2,2),(2,3)),27).
move(3,((2,3),(3,3)),33).
move(3,((3,3),(3,4)),34).
move(3,((3,4),(4,4)),35).
move(3,((4,4),(4,5)),36).
move(3,((4,5),(3,5)),37).
move(3,((3,5),(4,5)),38).
move(3,((4,5),(4,4)),39).
move(3,((4,4),(4,3)),40).
move(4,((3,6),(3,5)),2).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(3,3)),5).
move(4,((3,3),(3,2)),6).
move(4,((3,2),(2,2)),7).
move(4,((2,2),(1,2)),8).
move(4,((1,2),(1,1)),9).
move(4,((1,1),(2,1)),10).
move(4,((2,1),(2,2)),11).
move(4,((2,2),(3,2)),12).
move(4,((3,2),(3,3)),13).
move(4,((3,3),(3,2)),20).
move(4,((3,2),(3,3)),21).
move(4,((3,3),(3,4)),22).
move(4,((3,4),(4,4)),33).
move(4,((4,4),(5,4)),35).
move(4,((5,4),(5,3)),36).
move(4,((5,3),(5,4)),37).
move(4,((5,4),(5,5)),38).
move(4,((5,5),(5,4)),39).
move(4,((5,4),(5,3)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(4,2)),6).
move(5,((4,2),(4,1)),7).
move(5,((4,1),(4,2)),8).
move(5,((4,2),(4,3)),9).
move(5,((4,3),(4,4)),10).
move(5,((4,4),(5,4)),33).
move(5,((5,4),(5,3)),34).
move(5,((5,3),(6,3)),35).
move(5,((6,3),(7,3)),36).
move(5,((7,3),(7,4)),37).
move(5,((7,4),(8,4)),38).
move(5,((8,4),(7,4)),39).
move(5,((7,4),(7,3)),40).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(7,2)),8).
move(6,((7,2),(7,1)),9).
move(6,((7,1),(8,1)),10).
move(6,((8,1),(9,1)),11).
move(6,((9,1),(9,2)),12).
move(6,((9,2),(8,2)),13).
move(6,((8,2),(7,2)),14).
move(6,((7,2),(6,2)),15).
move(6,((6,2),(5,2)),16).
move(6,((5,2),(5,3)),17).
move(6,((5,3),(5,4)),18).
move(6,((5,4),(6,4)),33).
move(6,((6,4),(6,3)),34).
move(6,((6,3),(7,3)),35).
move(6,((7,3),(8,3)),36).
move(6,((8,3),(8,2)),37).
move(6,((8,2),(8,3)),39).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(7,5)),4).
move(7,((7,5),(8,5)),5).
move(7,((8,5),(9,5)),7).
move(7,((9,5),(9,4)),8).
move(7,((9,4),(9,3)),9).
move(7,((9,3),(10,3)),10).
move(7,((10,3),(11,3)),11).
move(7,((11,3),(11,2)),12).
move(7,((11,2),(10,2)),13).
move(7,((10,2),(9,2)),14).
move(7,((9,2),(8,2)),15).
move(7,((8,2),(7,2)),16).
move(7,((7,2),(6,2)),17).
move(7,((6,2),(6,3)),18).
move(7,((6,3),(6,4)),19).
move(7,((6,4),(7,4)),33).
move(7,((7,4),(7,5)),34).
move(7,((7,5),(8,5)),35).
move(7,((8,5),(9,5)),36).
move(7,((9,5),(9,4)),37).
move(7,((9,4),(9,3)),40).
move(8,((7,6),(7,5)),2).
move(8,((7,5),(7,4)),3).
move(8,((7,4),(6,4)),4).
move(8,((6,4),(7,4)),5).
move(8,((7,4),(7,3)),6).
move(8,((7,3),(7,4)),8).
move(8,((7,4),(7,5)),21).
move(8,((7,5),(7,4)),22).
move(8,((7,4),(7,5)),33).
move(8,((7,5),(8,5)),34).
move(8,((8,5),(9,5)),35).
move(8,((9,5),(10,5)),36).
move(8,((10,5),(9,5)),37).
move(8,((9,5),(10,5)),38).
move(8,((10,5),(10,4)),39).
move(8,((10,4),(10,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.208s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.219s

Choices      : 517      (Domain: 517)
Conflicts    : 32       (Analyzed: 32)
Restarts     : 0       
Model-Level  : 285.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 32       (Deleted: 0)
  Binary     : 4        (Ratio:  12.50%)
  Ternary    : 1        (Ratio:   3.12%)
  Conflict   : 32       (Average Length:   11.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 32       (Average:  7.25 Max:  21 Sum:    232)
  Executed   : 32       (Average:  7.25 Max:  21 Sum:    232 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279617   (Original: 259746)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106451  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

