%%%%%
%Standard
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),4).
move(1,((1,2),(2,2)),5).
move(1,((2,2),(3,2)),6).
move(1,((3,2),(3,3)),7).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),5).
move(2,((4,4),(4,3)),6).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(4,3)),4).
move(3,((4,3),(5,3)),5).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(7,3)),6).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(8,5)),4).
move(5,((8,5),(8,4)),5).
move(5,((8,4),(8,3)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(9,2)),4).
move(6,((9,2),(8,2)),5).
move(6,((8,2),(8,3)),6).
move(6,((8,3),(8,2)),7).
move(6,((8,2),(9,2)),8).
move(6,((9,2),(9,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(3,5)),8).
move(9,((3,5),(3,4)),9).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(5,4)),5).
move(10,((5,4),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(5,5)),8).
move(11,((5,5),(5,4)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.669s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.672s

Choices      : 927     
Conflicts    : 31       (Analyzed: 31)
Restarts     : 0       
Model-Level  : 544.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 31       (Deleted: 0)
  Binary     : 6        (Ratio:  19.35%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 31       (Average Length:   22.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 31       (Average: 12.35 Max:  51 Sum:    383)
  Executed   : 31       (Average: 12.35 Max:  51 Sum:    383 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353468   (Original: 327181)
  Choice     : 440     
Atoms        : 141635  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(2,3)),4).
move(1,((2,3),(2,4)),5).
move(1,((2,4),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(2,2)),4).
move(2,((2,2),(3,2)),5).
move(2,((3,2),(4,2)),6).
move(2,((4,2),(4,3)),7).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(4,2)),5).
move(3,((4,2),(4,3)),6).
move(3,((4,3),(5,3)),7).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(7,3)),6).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(8,5)),4).
move(5,((8,5),(8,4)),6).
move(5,((8,4),(8,3)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),4).
move(6,((8,3),(8,4)),5).
move(6,((8,4),(8,3)),6).
move(6,((8,3),(9,3)),7).
move(6,((9,3),(9,2)),8).
move(6,((9,2),(9,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(3,5)),8).
move(9,((3,5),(3,4)),9).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(5,4)),5).
move(10,((5,4),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(6,5)),6).
move(11,((6,5),(6,4)),7).
move(11,((6,4),(5,4)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.674s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.672s

Choices      : 1140     (Domain: 177)
Conflicts    : 38       (Analyzed: 38)
Restarts     : 0       
Model-Level  : 717.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 38       (Deleted: 0)
  Binary     : 8        (Ratio:  21.05%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 38       (Average Length:   23.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 38       (Average: 11.13 Max:  41 Sum:    423)
  Executed   : 38       (Average: 11.13 Max:  41 Sum:    423 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353782   (Original: 327495)
  Choice     : 440     
  Heuristic  : 188     
Atoms        : 141761  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(3,4)),4).
move(1,((3,4),(3,3)),5).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(2,((4,4),(4,3)),5).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(4,5)),2).
move(3,((4,5),(5,5)),3).
move(3,((5,5),(5,4)),4).
move(3,((5,4),(5,3)),5).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(6,4)),4).
move(4,((6,4),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(5,((7,3),(8,3)),6).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(7,((10,4),(10,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(3,5)),8).
move(9,((3,5),(3,4)),9).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(5,4)),5).
move(10,((5,4),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(5,5)),7).
move(11,((5,5),(5,4)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.678s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.672s

Choices      : 397      (Domain: 397)
Conflicts    : 0        (Analyzed: 0)
Restarts     : 0       
Model-Level  : 397.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 0        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 0        (Average:  0.00 Max:   0 Sum:      0)
  Executed   : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio: 100.00%)

Rules        : 378784   (Original: 352629)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141772  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),4).
move(1,((1,2),(2,2)),5).
move(1,((2,2),(1,2)),8).
move(1,((1,2),(2,2)),9).
move(1,((2,2),(3,2)),10).
move(1,((3,2),(3,3)),11).
move(1,((3,3),(3,2)),12).
move(1,((3,2),(3,3)),14).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(2,2)),8).
move(2,((2,2),(2,1)),9).
move(2,((2,1),(2,2)),10).
move(2,((2,2),(3,2)),11).
move(2,((3,2),(4,2)),12).
move(2,((4,2),(4,3)),40).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(2,4)),6).
move(3,((2,4),(3,4)),7).
move(3,((3,4),(3,3)),8).
move(3,((3,3),(3,2)),9).
move(3,((3,2),(4,2)),10).
move(3,((4,2),(4,3)),11).
move(3,((4,3),(5,3)),12).
move(3,((5,3),(5,2)),13).
move(3,((5,2),(5,3)),40).
move(4,((4,6),(4,5)),2).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(5,3)),6).
move(4,((5,3),(6,3)),7).
move(4,((6,3),(7,3)),8).
move(4,((7,3),(7,2)),9).
move(4,((7,2),(7,3)),40).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(6,4)),3).
move(5,((6,4),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(5,((7,3),(8,3)),6).
move(5,((8,3),(8,2)),7).
move(5,((8,2),(8,3)),8).
move(5,((8,3),(8,2)),9).
move(5,((8,2),(8,3)),40).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(8,5)),4).
move(6,((8,5),(8,4)),5).
move(6,((8,4),(9,4)),6).
move(6,((9,4),(9,3)),7).
move(6,((9,3),(9,4)),8).
move(6,((9,4),(9,3)),26).
move(6,((9,3),(10,3)),38).
move(6,((10,3),(9,3)),40).
move(7,((6,6),(5,6)),2).
move(7,((5,6),(5,5)),3).
move(7,((5,5),(5,4)),4).
move(7,((5,4),(5,3)),5).
move(7,((5,3),(5,2)),6).
move(7,((5,2),(6,2)),7).
move(7,((6,2),(6,3)),8).
move(7,((6,3),(7,3)),9).
move(7,((7,3),(8,3)),10).
move(7,((8,3),(9,3)),12).
move(7,((9,3),(9,2)),15).
move(7,((9,2),(10,2)),25).
move(7,((10,2),(10,3)),34).
move(7,((10,3),(10,4)),35).
move(7,((10,4),(10,3)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),5).
move(8,((6,4),(5,4)),6).
move(8,((5,4),(5,3)),7).
move(8,((5,3),(4,3)),8).
move(8,((4,3),(3,3)),9).
move(8,((3,3),(2,3)),10).
move(8,((2,3),(2,4)),40).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(4,5)),7).
move(9,((4,5),(4,4)),9).
move(9,((4,4),(3,4)),10).
move(9,((3,4),(2,4)),11).
move(9,((2,4),(3,4)),13).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(10,((4,4),(3,4)),9).
move(10,((3,4),(3,3)),10).
move(10,((3,3),(3,4)),11).
move(10,((3,4),(4,4)),13).
move(10,((4,4),(4,5)),14).
move(10,((4,5),(4,4)),16).
move(10,((4,4),(5,4)),19).
move(10,((5,4),(4,4)),21).
move(10,((4,4),(4,5)),22).
move(10,((4,5),(4,4)),23).
move(10,((4,4),(4,5)),24).
move(10,((4,5),(4,4)),25).
move(10,((4,4),(4,5)),28).
move(10,((4,5),(4,4)),29).
move(10,((4,4),(4,5)),32).
move(10,((4,5),(4,4)),33).
move(10,((4,4),(4,5)),34).
move(10,((4,5),(4,4)),35).
move(10,((4,4),(5,4)),37).
move(10,((5,4),(4,4)),38).
move(10,((4,4),(4,5)),39).
move(10,((4,5),(4,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(5,5)),7).
move(11,((5,5),(5,4)),8).
move(11,((5,4),(5,5)),10).
move(11,((5,5),(5,4)),11).
move(11,((5,4),(6,4)),19).
move(11,((6,4),(5,4)),21).
move(11,((5,4),(5,5)),24).
move(11,((5,5),(5,4)),25).
move(11,((5,4),(6,4)),31).
move(11,((6,4),(5,4)),32).
move(11,((5,4),(6,4)),37).
move(11,((6,4),(5,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.869s (Solving: 0.22s 1st Model: 0.22s Unsat: 0.00s)
CPU Time     : 1.875s

Choices      : 6936     (Domain: 1064)
Conflicts    : 106      (Analyzed: 106)
Restarts     : 1        (Average: 106.00 Last: 34)
Model-Level  : 1202.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 106      (Deleted: 0)
  Binary     : 32       (Ratio:  30.19%)
  Ternary    : 1        (Ratio:   0.94%)
  Conflict   : 106      (Average Length:   56.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 106      (Average: 54.09 Max: 1193 Sum:   5734)
  Executed   : 106      (Average: 54.09 Max: 1193 Sum:   5734 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378784   (Original: 352629)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141772  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(3,4)),4).
move(1,((3,4),(3,3)),5).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(2,((4,4),(4,3)),5).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(5,5)),3).
move(3,((5,5),(5,4)),4).
move(3,((5,4),(6,4)),5).
move(3,((6,4),(6,3)),6).
move(3,((6,3),(5,3)),7).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(6,5)),3).
move(4,((6,5),(6,4)),4).
move(4,((6,4),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(5,((7,3),(8,3)),6).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(10,4)),3).
move(6,((10,4),(10,5)),4).
move(6,((10,5),(9,5)),5).
move(6,((9,5),(9,4)),6).
move(6,((9,4),(9,3)),7).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(6,4)),3).
move(8,((6,4),(6,3)),4).
move(8,((6,3),(5,3)),5).
move(8,((5,3),(5,4)),6).
move(8,((5,4),(4,4)),7).
move(8,((4,4),(3,4)),8).
move(8,((3,4),(2,4)),40).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(9,5)),2).
move(9,((9,5),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(6,5)),5).
move(9,((6,5),(5,5)),6).
move(9,((5,5),(4,5)),7).
move(9,((4,5),(4,4)),8).
move(9,((4,4),(3,4)),40).
move(10,((8,6),(8,5)),2).
move(10,((8,5),(8,4)),3).
move(10,((8,4),(7,4)),5).
move(10,((7,4),(6,4)),6).
move(10,((6,4),(5,4)),7).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(9,5)),3).
move(11,((9,5),(9,4)),4).
move(11,((9,4),(8,4)),5).
move(11,((8,4),(7,4)),6).
move(11,((7,4),(6,4)),7).
move(11,((6,4),(6,5)),8).
move(11,((6,5),(5,5)),9).
move(11,((5,5),(5,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.666s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.672s

Choices      : 443      (Domain: 41)
Conflicts    : 6        (Analyzed: 6)
Restarts     : 0       
Model-Level  : 421.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 6        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 6        (Average Length:   41.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 6        (Average:  3.67 Max:   7 Sum:     22)
  Executed   : 6        (Average:  3.67 Max:   7 Sum:     22 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354646   (Original: 328381)
  Choice     : 440     
  Heuristic  : 974      (Original: 996)
Atoms        : 141839  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(4,5)),6).
move(1,((4,5),(4,4)),7).
move(1,((4,4),(3,4)),8).
move(1,((3,4),(3,3)),9).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(3,5)),2).
move(2,((3,5),(4,5)),3).
move(2,((4,5),(4,6)),4).
move(2,((4,6),(4,5)),5).
move(2,((4,5),(4,4)),6).
move(2,((4,4),(4,3)),7).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(4,3)),4).
move(3,((4,3),(5,3)),5).
move(3,((5,3),(5,4)),6).
move(3,((5,4),(5,3)),7).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),4).
move(4,((5,3),(6,3)),5).
move(4,((6,3),(7,3)),7).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(8,4)),5).
move(5,((8,4),(8,3)),6).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(9,2)),4).
move(6,((9,2),(9,1)),5).
move(6,((9,1),(9,2)),7).
move(6,((9,2),(9,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(9,5)),2).
move(9,((9,5),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(6,5)),5).
move(9,((6,5),(5,5)),6).
move(9,((5,5),(4,5)),7).
move(9,((4,5),(4,4)),8).
move(9,((4,4),(3,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(6,4)),4).
move(10,((6,4),(5,4)),7).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(5,5)),7).
move(11,((5,5),(5,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.679s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.672s

Choices      : 2014     (Domain: 1134)
Conflicts    : 28       (Analyzed: 28)
Restarts     : 0       
Model-Level  : 1632.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 28       (Deleted: 0)
  Binary     : 3        (Ratio:  10.71%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 28       (Average Length:   23.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 28       (Average: 13.64 Max:  64 Sum:    382)
  Executed   : 28       (Average: 13.64 Max:  64 Sum:    382 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354787   (Original: 328503)
  Choice     : 440     
  Heuristic  : 1193     (Original: 1196)
Atoms        : 141761  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(2,3)),5).
move(1,((2,3),(3,3)),6).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),5).
move(2,((4,4),(4,3)),6).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(4,3)),4).
move(3,((4,3),(5,3)),5).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(7,3)),6).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(8,5)),4).
move(5,((8,5),(8,4)),5).
move(5,((8,4),(8,3)),6).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,6)),3).
move(6,((9,6),(9,5)),7).
move(6,((9,5),(9,4)),8).
move(6,((9,4),(9,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(3,5)),8).
move(9,((3,5),(3,4)),9).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(5,4)),5).
move(10,((5,4),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(5,5)),8).
move(11,((5,5),(5,4)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.704s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.703s

Choices      : 838      (Domain: 333)
Conflicts    : 29       (Analyzed: 29)
Restarts     : 0       
Model-Level  : 538.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 29       (Deleted: 0)
  Binary     : 6        (Ratio:  20.69%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 29       (Average Length:   21.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 29       (Average: 10.34 Max:  47 Sum:    300)
  Executed   : 29       (Average: 10.34 Max:  47 Sum:    300 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378797   (Original: 352631)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141784  
Disjunctions : 0        (Original: 1)
Bodies       : 247623   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128049   (Atom=Atom: 470 Body=Body: 482 Other: 127097)
Tight        : Yes
Variables    : 246824   (Eliminated:    0 Frozen: 126446)
Constraints  : 678181   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(1,3)),8).
move(1,((1,3),(2,3)),9).
move(1,((2,3),(2,4)),11).
move(1,((2,4),(2,3)),12).
move(1,((2,3),(3,3)),13).
move(1,((3,3),(2,3)),14).
move(1,((2,3),(2,4)),15).
move(1,((2,4),(2,3)),17).
move(1,((2,3),(3,3)),18).
move(1,((3,3),(3,4)),19).
move(1,((3,4),(2,4)),20).
move(1,((2,4),(2,3)),21).
move(1,((2,3),(3,3)),22).
move(1,((3,3),(3,4)),23).
move(1,((3,4),(3,3)),24).
move(1,((3,3),(2,3)),26).
move(1,((2,3),(3,3)),27).
move(1,((3,3),(2,3)),29).
move(1,((2,3),(2,4)),30).
move(1,((2,4),(2,5)),31).
move(1,((2,5),(2,4)),32).
move(1,((2,4),(2,5)),33).
move(1,((2,5),(2,4)),34).
move(1,((2,4),(3,4)),35).
move(1,((3,4),(3,3)),36).
move(1,((3,3),(3,4)),37).
move(1,((3,4),(3,5)),38).
move(1,((3,5),(3,4)),39).
move(1,((3,4),(3,3)),40).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(2,4)),4).
move(2,((2,4),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(3,4)),8).
move(2,((3,4),(3,5)),9).
move(2,((3,5),(2,5)),10).
move(2,((2,5),(2,6)),11).
move(2,((2,6),(2,5)),12).
move(2,((2,5),(3,5)),13).
move(2,((3,5),(3,4)),14).
move(2,((3,4),(3,3)),15).
move(2,((3,3),(3,4)),16).
move(2,((3,4),(2,4)),17).
move(2,((2,4),(2,3)),18).
move(2,((2,3),(3,3)),19).
move(2,((3,3),(4,3)),20).
move(2,((4,3),(4,4)),22).
move(2,((4,4),(4,3)),23).
move(2,((4,3),(4,4)),24).
move(2,((4,4),(3,4)),25).
move(2,((3,4),(2,4)),26).
move(2,((2,4),(2,5)),27).
move(2,((2,5),(2,4)),28).
move(2,((2,4),(3,4)),29).
move(2,((3,4),(4,4)),30).
move(2,((4,4),(4,5)),31).
move(2,((4,5),(4,6)),32).
move(2,((4,6),(4,5)),34).
move(2,((4,5),(4,4)),35).
move(2,((4,4),(4,3)),36).
move(2,((4,3),(3,3)),37).
move(2,((3,3),(3,4)),38).
move(2,((3,4),(3,3)),39).
move(2,((3,3),(4,3)),40).
move(3,((3,6),(3,5)),3).
move(3,((3,5),(3,4)),6).
move(3,((3,4),(4,4)),7).
move(3,((4,4),(4,3)),8).
move(3,((4,3),(4,4)),9).
move(3,((4,4),(4,5)),10).
move(3,((4,5),(3,5)),12).
move(3,((3,5),(4,5)),13).
move(3,((4,5),(5,5)),15).
move(3,((5,5),(5,4)),16).
move(3,((5,4),(5,3)),17).
move(3,((5,3),(5,4)),18).
move(3,((5,4),(5,5)),19).
move(3,((5,5),(5,6)),20).
move(3,((5,6),(5,5)),21).
move(3,((5,5),(5,4)),22).
move(3,((5,4),(5,3)),23).
move(3,((5,3),(5,4)),24).
move(3,((5,4),(5,5)),25).
move(3,((5,5),(4,5)),26).
move(3,((4,5),(5,5)),27).
move(3,((5,5),(4,5)),28).
move(3,((4,5),(3,5)),29).
move(3,((3,5),(3,6)),30).
move(3,((3,6),(3,5)),31).
move(3,((3,5),(4,5)),32).
move(3,((4,5),(4,4)),33).
move(3,((4,4),(3,4)),34).
move(3,((3,4),(3,5)),35).
move(3,((3,5),(4,5)),36).
move(3,((4,5),(4,4)),38).
move(3,((4,4),(5,4)),39).
move(3,((5,4),(5,3)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(5,3)),7).
move(4,((5,3),(5,4)),8).
move(4,((5,4),(5,5)),9).
move(4,((5,5),(5,6)),10).
move(4,((5,6),(4,6)),11).
move(4,((4,6),(4,5)),12).
move(4,((4,5),(4,4)),13).
move(4,((4,4),(4,3)),15).
move(4,((4,3),(4,4)),16).
move(4,((4,4),(5,4)),17).
move(4,((5,4),(6,4)),18).
move(4,((6,4),(6,5)),20).
move(4,((6,5),(5,5)),22).
move(4,((5,5),(6,5)),23).
move(4,((6,5),(6,4)),25).
move(4,((6,4),(6,3)),26).
move(4,((6,3),(5,3)),27).
move(4,((5,3),(6,3)),29).
move(4,((6,3),(7,3)),30).
move(4,((7,3),(7,4)),31).
move(4,((7,4),(6,4)),32).
move(4,((6,4),(6,5)),33).
move(4,((6,5),(6,4)),35).
move(4,((6,4),(6,3)),36).
move(4,((6,3),(7,3)),37).
move(4,((7,3),(7,4)),38).
move(4,((7,4),(7,3)),39).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(6,3)),6).
move(5,((6,3),(7,3)),7).
move(5,((7,3),(7,4)),8).
move(5,((7,4),(7,3)),9).
move(5,((7,3),(8,3)),10).
move(5,((8,3),(8,4)),13).
move(5,((8,4),(8,3)),14).
move(5,((8,3),(7,3)),15).
move(5,((7,3),(6,3)),17).
move(5,((6,3),(7,3)),18).
move(5,((7,3),(8,3)),19).
move(5,((8,3),(8,4)),21).
move(5,((8,4),(7,4)),22).
move(5,((7,4),(7,5)),23).
move(5,((7,5),(6,5)),25).
move(5,((6,5),(6,4)),26).
move(5,((6,4),(5,4)),27).
move(5,((5,4),(5,5)),28).
move(5,((5,5),(6,5)),29).
move(5,((6,5),(6,4)),30).
move(5,((6,4),(5,4)),31).
move(5,((5,4),(5,5)),32).
move(5,((5,5),(5,6)),33).
move(5,((5,6),(5,5)),34).
move(5,((5,5),(6,5)),35).
move(5,((6,5),(6,4)),36).
move(5,((6,4),(6,3)),37).
move(5,((6,3),(7,3)),38).
move(5,((7,3),(8,3)),39).
move(6,((9,6),(9,5)),3).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,4)),7).
move(6,((9,4),(9,3)),8).
move(6,((9,3),(9,4)),10).
move(6,((9,4),(9,3)),11).
move(6,((9,3),(9,4)),12).
move(6,((9,4),(9,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,4)),6).
move(7,((6,4),(6,3)),7).
move(7,((6,3),(6,4)),8).
move(7,((6,4),(6,3)),10).
move(7,((6,3),(6,4)),13).
move(7,((6,4),(6,3)),14).
move(7,((6,3),(6,4)),15).
move(7,((6,4),(6,3)),18).
move(7,((6,3),(6,4)),20).
move(7,((6,4),(6,3)),23).
move(7,((6,3),(7,3)),26).
move(7,((7,3),(7,4)),27).
move(7,((7,4),(7,3)),28).
move(7,((7,3),(7,4)),29).
move(7,((7,4),(6,4)),31).
move(7,((6,4),(6,3)),32).
move(7,((6,3),(6,4)),33).
move(7,((6,4),(6,3)),34).
move(7,((6,3),(7,3)),35).
move(7,((7,3),(8,3)),37).
move(7,((8,3),(9,3)),38).
move(7,((9,3),(10,3)),39).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(6,4)),5).
move(8,((6,4),(5,4)),6).
move(8,((5,4),(6,4)),7).
move(8,((6,4),(6,5)),8).
move(8,((6,5),(6,4)),10).
move(8,((6,4),(7,4)),12).
move(8,((7,4),(7,5)),14).
move(8,((7,5),(7,4)),15).
move(8,((7,4),(7,5)),22).
move(8,((7,5),(8,5)),23).
move(8,((8,5),(8,4)),24).
move(8,((8,4),(7,4)),25).
move(8,((7,4),(6,4)),27).
move(8,((6,4),(7,4)),28).
move(8,((7,4),(6,4)),29).
move(8,((6,4),(6,3)),30).
move(8,((6,3),(5,3)),31).
move(8,((5,3),(5,4)),32).
move(8,((5,4),(5,5)),33).
move(8,((5,5),(5,4)),34).
move(8,((5,4),(4,4)),36).
move(8,((4,4),(4,3)),37).
move(8,((4,3),(3,3)),38).
move(8,((3,3),(2,3)),39).
move(8,((2,3),(2,4)),40).
move(9,((10,6),(10,5)),2).
move(9,((10,5),(10,4)),3).
move(9,((10,4),(9,4)),4).
move(9,((9,4),(10,4)),5).
move(9,((10,4),(9,4)),6).
move(9,((9,4),(10,4)),7).
move(9,((10,4),(10,5)),8).
move(9,((10,5),(9,5)),10).
move(9,((9,5),(9,4)),11).
move(9,((9,4),(10,4)),12).
move(9,((10,4),(10,3)),13).
move(9,((10,3),(10,4)),15).
move(9,((10,4),(11,4)),16).
move(9,((11,4),(11,5)),17).
move(9,((11,5),(10,5)),18).
move(9,((10,5),(9,5)),19).
move(9,((9,5),(10,5)),20).
move(9,((10,5),(9,5)),23).
move(9,((9,5),(10,5)),25).
move(9,((10,5),(9,5)),28).
move(9,((9,5),(10,5)),29).
move(9,((10,5),(9,5)),33).
move(9,((9,5),(8,5)),34).
move(9,((8,5),(7,5)),35).
move(9,((7,5),(6,5)),36).
move(9,((6,5),(5,5)),37).
move(9,((5,5),(4,5)),38).
move(9,((4,5),(3,5)),39).
move(9,((3,5),(3,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(7,5)),4).
move(10,((7,5),(6,5)),5).
move(10,((6,5),(7,5)),6).
move(10,((7,5),(7,4)),7).
move(10,((7,4),(8,4)),8).
move(10,((8,4),(7,4)),10).
move(10,((7,4),(7,5)),12).
move(10,((7,5),(6,5)),13).
move(10,((6,5),(6,4)),14).
move(10,((6,4),(6,5)),15).
move(10,((6,5),(7,5)),16).
move(10,((7,5),(6,5)),17).
move(10,((6,5),(7,5)),18).
move(10,((7,5),(8,5)),19).
move(10,((8,5),(7,5)),21).
move(10,((7,5),(6,5)),22).
move(10,((6,5),(6,4)),23).
move(10,((6,4),(5,4)),25).
move(10,((5,4),(5,5)),26).
move(10,((5,5),(6,5)),27).
move(10,((6,5),(6,4)),28).
move(10,((6,4),(5,4)),29).
move(10,((5,4),(4,4)),31).
move(10,((4,4),(5,4)),33).
move(10,((5,4),(6,4)),34).
move(10,((6,4),(7,4)),35).
move(10,((7,4),(7,5)),36).
move(10,((7,5),(6,5)),37).
move(10,((6,5),(5,5)),38).
move(10,((5,5),(4,5)),39).
move(10,((4,5),(4,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),4).
move(11,((10,5),(10,4)),6).
move(11,((10,4),(11,4)),7).
move(11,((11,4),(10,4)),8).
move(11,((10,4),(10,5)),12).
move(11,((10,5),(10,4)),13).
move(11,((10,4),(10,5)),15).
move(11,((10,5),(10,4)),16).
move(11,((10,4),(10,5)),19).
move(11,((10,5),(10,4)),20).
move(11,((10,4),(10,5)),23).
move(11,((10,5),(10,4)),25).
move(11,((10,4),(10,5)),28).
move(11,((10,5),(10,4)),29).
move(11,((10,4),(10,5)),33).
move(11,((10,5),(9,5)),35).
move(11,((9,5),(8,5)),36).
move(11,((8,5),(7,5)),37).
move(11,((7,5),(6,5)),38).
move(11,((6,5),(5,5)),39).
move(11,((5,5),(5,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.816s (Solving: 0.16s 1st Model: 0.16s Unsat: 0.00s)
CPU Time     : 1.828s

Choices      : 3459     (Domain: 3459)
Conflicts    : 197      (Analyzed: 197)
Restarts     : 1        (Average: 197.00 Last: 111)
Model-Level  : 362.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 197      (Deleted: 0)
  Binary     : 52       (Ratio:  26.40%)
  Ternary    : 27       (Ratio:  13.71%)
  Conflict   : 197      (Average Length:    5.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 197      (Average: 15.49 Max: 115 Sum:   3052)
  Executed   : 197      (Average: 15.49 Max: 115 Sum:   3052 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378773   (Original: 352618)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141761  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(1,2)),9).
move(1,((1,2),(1,1)),10).
move(1,((1,1),(1,2)),11).
move(1,((1,2),(2,2)),12).
move(1,((2,2),(2,3)),13).
move(1,((2,3),(2,4)),14).
move(1,((2,4),(2,3)),39).
move(1,((2,3),(3,3)),40).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(3,2)),7).
move(2,((3,2),(3,1)),8).
move(2,((3,1),(2,1)),9).
move(2,((2,1),(2,2)),10).
move(2,((2,2),(2,3)),11).
move(2,((2,3),(2,4)),12).
move(2,((2,4),(3,4)),14).
move(2,((3,4),(3,3)),39).
move(2,((3,3),(4,3)),40).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),5).
move(3,((3,3),(3,2)),6).
move(3,((3,2),(2,2)),7).
move(3,((2,2),(2,1)),8).
move(3,((2,1),(1,1)),9).
move(3,((1,1),(2,1)),10).
move(3,((2,1),(2,2)),11).
move(3,((2,2),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(4,3)),39).
move(3,((4,3),(5,3)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,2)),6).
move(4,((4,2),(4,1)),7).
move(4,((4,1),(4,2)),8).
move(4,((4,2),(4,3)),9).
move(4,((4,3),(4,4)),11).
move(4,((4,4),(4,3)),37).
move(4,((4,3),(5,3)),38).
move(4,((5,3),(6,3)),39).
move(4,((6,3),(7,3)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(5,2)),8).
move(5,((5,2),(5,3)),9).
move(5,((5,3),(5,4)),10).
move(5,((5,4),(5,3)),37).
move(5,((5,3),(6,3)),38).
move(5,((6,3),(7,3)),39).
move(5,((7,3),(8,3)),40).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,2)),7).
move(6,((9,2),(10,2)),8).
move(6,((10,2),(10,1)),9).
move(6,((10,1),(11,1)),10).
move(6,((11,1),(10,1)),11).
move(6,((10,1),(10,2)),12).
move(6,((10,2),(9,2)),13).
move(6,((9,2),(9,3)),14).
move(6,((9,3),(9,4)),15).
move(6,((9,4),(9,3)),34).
move(6,((9,3),(9,4)),35).
move(6,((9,4),(9,3)),36).
move(6,((9,3),(9,4)),37).
move(6,((9,4),(9,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(6,1)),7).
move(7,((6,1),(6,2)),8).
move(7,((6,2),(6,3)),9).
move(7,((6,3),(6,2)),10).
move(7,((6,2),(6,3)),11).
move(7,((6,3),(6,4)),12).
move(7,((6,4),(6,3)),36).
move(7,((6,3),(7,3)),37).
move(7,((7,3),(8,3)),38).
move(7,((8,3),(9,3)),39).
move(7,((9,3),(10,3)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(7,4)),10).
move(8,((7,4),(6,4)),36).
move(8,((6,4),(5,4)),37).
move(8,((5,4),(4,4)),38).
move(8,((4,4),(3,4)),39).
move(8,((3,4),(2,4)),40).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(10,6)),3).
move(9,((10,6),(10,5)),4).
move(9,((10,5),(10,4)),6).
move(9,((10,4),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(9,((11,3),(11,2)),9).
move(9,((11,2),(10,2)),10).
move(9,((10,2),(10,3)),11).
move(9,((10,3),(10,4)),12).
move(9,((10,4),(9,4)),34).
move(9,((9,4),(8,4)),35).
move(9,((8,4),(7,4)),36).
move(9,((7,4),(6,4)),37).
move(9,((6,4),(5,4)),38).
move(9,((5,4),(4,4)),39).
move(9,((4,4),(3,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,3)),5).
move(10,((8,3),(8,2)),6).
move(10,((8,2),(8,1)),7).
move(10,((8,1),(9,1)),8).
move(10,((9,1),(9,2)),9).
move(10,((9,2),(8,2)),10).
move(10,((8,2),(8,3)),11).
move(10,((8,3),(8,4)),12).
move(10,((8,4),(8,3)),35).
move(10,((8,3),(8,4)),36).
move(10,((8,4),(7,4)),37).
move(10,((7,4),(6,4)),38).
move(10,((6,4),(5,4)),39).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(10,2)),7).
move(11,((10,2),(11,2)),8).
move(11,((11,2),(11,1)),9).
move(11,((11,1),(11,2)),10).
move(11,((11,2),(10,2)),11).
move(11,((10,2),(10,3)),12).
move(11,((10,3),(10,4)),34).
move(11,((10,4),(9,4)),36).
move(11,((9,4),(8,4)),37).
move(11,((8,4),(7,4)),38).
move(11,((7,4),(6,4)),39).
move(11,((6,4),(5,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.692s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 392      (Domain: 392)
Conflicts    : 1        (Analyzed: 1)
Restarts     : 0       
Model-Level  : 381.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 1        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 1        (Average Length:    5.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 1        (Average: 11.00 Max:  11 Sum:     11)
  Executed   : 1        (Average: 11.00 Max:  11 Sum:     11 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378773   (Original: 352618)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141761  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

