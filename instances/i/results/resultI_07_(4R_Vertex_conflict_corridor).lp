%%%%%
%Standard
%%%%%
move(1,((1,1),(2,1)),1).
move(1,((2,1),(2,2)),2).
move(1,((2,2),(3,2)),3).
move(1,((3,2),(4,2)),4).
move(1,((4,2),(4,3)),5).
move(1,((4,3),(4,4)),6).
move(1,((4,4),(5,4)),7).
move(1,((5,4),(6,4)),8).
move(1,((6,4),(6,5)),9).
move(1,((6,5),(6,6)),10).
move(1,((6,6),(6,5)),11).
move(1,((6,5),(6,6)),12).
move(1,((6,6),(6,5)),13).
move(1,((6,5),(6,6)),14).
move(1,((6,6),(6,5)),15).
move(1,((6,5),(6,6)),16).
move(1,((6,6),(6,5)),17).
move(1,((6,5),(6,6)),18).
move(1,((6,6),(6,5)),19).
move(1,((6,5),(6,6)),20).
move(1,((6,6),(6,5)),21).
move(1,((6,5),(6,4)),22).
move(1,((6,4),(5,4)),23).
move(1,((5,4),(6,4)),24).
move(1,((6,4),(6,5)),25).
move(1,((6,5),(6,4)),26).
move(1,((6,4),(5,4)),27).
move(1,((5,4),(4,4)),28).
move(1,((4,4),(3,4)),29).
move(1,((3,4),(2,4)),30).
move(1,((2,4),(3,4)),32).
move(1,((3,4),(2,4)),33).
move(1,((2,4),(3,4)),34).
move(1,((3,4),(4,4)),36).
move(1,((4,4),(4,5)),37).
move(1,((4,5),(4,6)),38).
move(2,((7,1),(6,1)),1).
move(2,((6,1),(6,2)),2).
move(2,((6,2),(5,2)),3).
move(2,((5,2),(4,2)),5).
move(2,((4,2),(4,3)),6).
move(2,((4,3),(4,4)),7).
move(2,((4,4),(4,5)),8).
move(2,((4,5),(4,4)),10).
move(2,((4,4),(4,5)),11).
move(2,((4,5),(4,4)),12).
move(2,((4,4),(5,4)),13).
move(2,((5,4),(4,4)),15).
move(2,((4,4),(4,3)),16).
move(2,((4,3),(4,4)),18).
move(2,((4,4),(5,4)),19).
move(2,((5,4),(4,4)),21).
move(2,((4,4),(4,5)),22).
move(2,((4,5),(4,4)),23).
move(2,((4,4),(4,5)),24).
move(2,((4,5),(4,4)),25).
move(2,((4,4),(4,5)),26).
move(2,((4,5),(4,6)),27).
move(2,((4,6),(4,5)),28).
move(2,((4,5),(4,4)),29).
move(2,((4,4),(4,5)),30).
move(2,((4,5),(4,4)),31).
move(2,((4,4),(4,5)),32).
move(2,((4,5),(4,4)),33).
move(2,((4,4),(4,5)),34).
move(2,((4,5),(4,4)),35).
move(2,((4,4),(5,4)),36).
move(2,((5,4),(4,4)),37).
move(2,((4,4),(4,5)),38).
move(2,((4,5),(4,4)),39).
move(2,((4,4),(4,5)),40).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(3,4)),3).
move(3,((3,4),(4,4)),4).
move(3,((4,4),(3,4)),5).
move(3,((3,4),(2,4)),6).
move(3,((2,4),(3,4)),7).
move(3,((3,4),(4,4)),8).
move(3,((4,4),(4,3)),9).
move(3,((4,3),(4,2)),10).
move(3,((4,2),(4,1)),11).
move(3,((4,1),(4,2)),12).
move(3,((4,2),(4,1)),13).
move(3,((4,1),(4,2)),14).
move(3,((4,2),(4,1)),15).
move(3,((4,1),(4,2)),16).
move(3,((4,2),(4,1)),17).
move(3,((4,1),(4,2)),18).
move(3,((4,2),(4,1)),19).
move(3,((4,1),(4,2)),20).
move(3,((4,2),(4,1)),21).
move(3,((4,1),(4,2)),22).
move(3,((4,2),(4,1)),23).
move(3,((4,1),(4,2)),24).
move(3,((4,2),(4,1)),25).
move(3,((4,1),(4,2)),26).
move(3,((4,2),(4,1)),27).
move(3,((4,1),(4,2)),28).
move(3,((4,2),(4,1)),29).
move(3,((4,1),(4,2)),30).
move(3,((4,2),(4,1)),31).
move(3,((4,1),(4,2)),32).
move(3,((4,2),(4,1)),33).
move(3,((4,1),(4,2)),35).
move(3,((4,2),(3,2)),36).
move(3,((3,2),(4,2)),37).
move(3,((4,2),(4,1)),38).
move(3,((4,1),(4,2)),39).
move(3,((4,2),(4,1)),40).
move(4,((6,6),(6,5)),1).
move(4,((6,5),(6,4)),2).
move(4,((6,4),(5,4)),3).
move(4,((5,4),(4,4)),5).
move(4,((4,4),(4,5)),6).
move(4,((4,5),(4,6)),7).
move(4,((4,6),(4,5)),12).
move(4,((4,5),(4,4)),13).
move(4,((4,4),(4,3)),14).
move(4,((4,3),(4,2)),15).
move(4,((4,2),(5,2)),16).
move(4,((5,2),(4,2)),17).
move(4,((4,2),(5,2)),18).
move(4,((5,2),(6,2)),19).
move(4,((6,2),(5,2)),20).
move(4,((5,2),(4,2)),21).
move(4,((4,2),(5,2)),22).
move(4,((5,2),(4,2)),23).
move(4,((4,2),(3,2)),24).
move(4,((3,2),(2,2)),25).
move(4,((2,2),(3,2)),27).
move(4,((3,2),(2,2)),29).
move(4,((2,2),(3,2)),30).
move(4,((3,2),(2,2)),31).
move(4,((2,2),(3,2)),32).
move(4,((3,2),(4,2)),33).
move(4,((4,2),(5,2)),34).
move(4,((5,2),(6,2)),35).
move(4,((6,2),(5,2)),36).
move(4,((5,2),(6,2)),37).
move(4,((6,2),(5,2)),38).
move(4,((5,2),(4,2)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.149s (Solving: 0.01s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 0.156s

Choices      : 500     
Conflicts    : 50       (Analyzed: 50)
Restarts     : 0       
Model-Level  : 168.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 50       (Deleted: 0)
  Binary     : 5        (Ratio:  10.00%)
  Ternary    : 5        (Ratio:  10.00%)
  Conflict   : 50       (Average Length:   73.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 50       (Average:  6.64 Max: 120 Sum:    332)
  Executed   : 50       (Average:  6.64 Max: 120 Sum:    332 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 32865    (Original: 26258)
  Choice     : 160     
Atoms        : 13477   
Bodies       : 24609    (Original: 18002)
  Count      : 304      (Original: 1203)
Equivalences : 10367    (Atom=Atom: 163 Body=Body: 168 Other: 10036)
Tight        : Yes
Variables    : 20408    (Eliminated:    0 Frozen: 9732)
Constraints  : 57832    (Binary:  76.4% Ternary:  16.1% Other:   7.5%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,1),(2,1)),1).
move(1,((2,1),(2,2)),2).
move(1,((2,2),(3,2)),3).
move(1,((3,2),(4,2)),4).
move(1,((4,2),(4,3)),5).
move(1,((4,3),(4,4)),6).
move(1,((4,4),(4,5)),7).
move(1,((4,5),(4,4)),9).
move(1,((4,4),(3,4)),11).
move(1,((3,4),(2,4)),12).
move(1,((2,4),(2,5)),13).
move(1,((2,5),(2,6)),14).
move(1,((2,6),(2,5)),15).
move(1,((2,5),(2,4)),16).
move(1,((2,4),(3,4)),17).
move(1,((3,4),(2,4)),18).
move(1,((2,4),(3,4)),19).
move(1,((3,4),(2,4)),20).
move(1,((2,4),(3,4)),21).
move(1,((3,4),(2,4)),22).
move(1,((2,4),(2,5)),23).
move(1,((2,5),(2,6)),24).
move(1,((2,6),(2,5)),25).
move(1,((2,5),(2,6)),26).
move(1,((2,6),(2,5)),27).
move(1,((2,5),(2,4)),28).
move(1,((2,4),(3,4)),29).
move(1,((3,4),(4,4)),30).
move(1,((4,4),(4,5)),31).
move(1,((4,5),(4,6)),32).
move(1,((4,6),(4,5)),39).
move(1,((4,5),(4,6)),40).
move(2,((7,1),(6,1)),1).
move(2,((6,1),(6,2)),2).
move(2,((6,2),(5,2)),3).
move(2,((5,2),(4,2)),5).
move(2,((4,2),(3,2)),6).
move(2,((3,2),(4,2)),11).
move(2,((4,2),(4,3)),12).
move(2,((4,3),(4,4)),13).
move(2,((4,4),(4,5)),14).
move(2,((4,5),(4,4)),15).
move(2,((4,4),(4,5)),16).
move(2,((4,5),(4,4)),17).
move(2,((4,4),(4,5)),18).
move(2,((4,5),(4,4)),19).
move(2,((4,4),(4,5)),20).
move(2,((4,5),(4,4)),21).
move(2,((4,4),(4,5)),22).
move(2,((4,5),(4,4)),23).
move(2,((4,4),(4,5)),24).
move(2,((4,5),(4,4)),25).
move(2,((4,4),(4,5)),26).
move(2,((4,5),(4,4)),27).
move(2,((4,4),(4,5)),28).
move(2,((4,5),(4,4)),29).
move(2,((4,4),(5,4)),30).
move(2,((5,4),(4,4)),31).
move(2,((4,4),(4,5)),32).
move(2,((4,5),(4,4)),33).
move(2,((4,4),(4,5)),34).
move(2,((4,5),(4,4)),35).
move(2,((4,4),(4,5)),36).
move(2,((4,5),(4,4)),37).
move(2,((4,4),(4,5)),38).
move(2,((4,5),(4,4)),39).
move(2,((4,4),(4,5)),40).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(3,4)),3).
move(3,((3,4),(4,4)),4).
move(3,((4,4),(5,4)),5).
move(3,((5,4),(4,4)),7).
move(3,((4,4),(4,3)),8).
move(3,((4,3),(4,2)),10).
move(3,((4,2),(4,1)),11).
move(3,((4,1),(4,2)),12).
move(3,((4,2),(4,1)),13).
move(3,((4,1),(4,2)),14).
move(3,((4,2),(4,1)),15).
move(3,((4,1),(4,2)),16).
move(3,((4,2),(4,1)),17).
move(3,((4,1),(4,2)),18).
move(3,((4,2),(4,1)),19).
move(3,((4,1),(4,2)),20).
move(3,((4,2),(4,1)),21).
move(3,((4,1),(4,2)),22).
move(3,((4,2),(4,1)),23).
move(3,((4,1),(4,2)),24).
move(3,((4,2),(4,1)),25).
move(3,((4,1),(4,2)),26).
move(3,((4,2),(4,1)),27).
move(3,((4,1),(4,2)),28).
move(3,((4,2),(4,1)),29).
move(3,((4,1),(4,2)),30).
move(3,((4,2),(4,1)),31).
move(3,((4,1),(4,2)),32).
move(3,((4,2),(4,1)),33).
move(3,((4,1),(4,2)),34).
move(3,((4,2),(4,1)),35).
move(3,((4,1),(4,2)),36).
move(3,((4,2),(4,1)),37).
move(3,((4,1),(4,2)),38).
move(3,((4,2),(4,1)),39).
move(4,((6,6),(6,5)),2).
move(4,((6,5),(6,4)),3).
move(4,((6,4),(5,4)),7).
move(4,((5,4),(4,4)),22).
move(4,((4,4),(3,4)),23).
move(4,((3,4),(4,4)),24).
move(4,((4,4),(4,3)),25).
move(4,((4,3),(4,2)),27).
move(4,((4,2),(5,2)),28).
move(4,((5,2),(6,2)),29).
move(4,((6,2),(5,2)),30).
move(4,((5,2),(4,2)),31).
move(4,((4,2),(3,2)),32).
move(4,((3,2),(2,2)),33).
move(4,((2,2),(3,2)),39).
move(4,((3,2),(4,2)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.163s (Solving: 0.01s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 0.172s

Choices      : 668     
Conflicts    : 39       (Analyzed: 39)
Restarts     : 0       
Model-Level  : 171.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 39       (Deleted: 0)
  Binary     : 4        (Ratio:  10.26%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 39       (Average Length:  105.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 39       (Average: 12.74 Max: 160 Sum:    497)
  Executed   : 39       (Average: 12.74 Max: 160 Sum:    497 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 32948    (Original: 26341)
  Choice     : 160     
  Heuristic  : 36      
Atoms        : 13524   
Bodies       : 24609    (Original: 18002)
  Count      : 304      (Original: 1203)
Equivalences : 10367    (Atom=Atom: 163 Body=Body: 168 Other: 10036)
Tight        : Yes
Variables    : 20408    (Eliminated:    0 Frozen: 9732)
Constraints  : 57832    (Binary:  76.4% Ternary:  16.1% Other:   7.5%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,1),(2,1)),1).
move(1,((2,1),(2,2)),2).
move(1,((2,2),(3,2)),3).
move(1,((3,2),(4,2)),4).
move(1,((4,2),(4,3)),5).
move(1,((4,3),(4,4)),6).
move(1,((4,4),(4,5)),7).
move(1,((4,5),(4,4)),8).
move(1,((4,4),(3,4)),10).
move(1,((3,4),(2,4)),11).
move(1,((2,4),(2,5)),12).
move(1,((2,5),(2,6)),13).
move(1,((2,6),(2,5)),14).
move(1,((2,5),(2,6)),15).
move(1,((2,6),(2,5)),16).
move(1,((2,5),(2,6)),17).
move(1,((2,6),(2,5)),18).
move(1,((2,5),(2,6)),19).
move(1,((2,6),(2,5)),20).
move(1,((2,5),(2,6)),21).
move(1,((2,6),(2,5)),22).
move(1,((2,5),(2,4)),23).
move(1,((2,4),(3,4)),24).
move(1,((3,4),(2,4)),25).
move(1,((2,4),(3,4)),26).
move(1,((3,4),(2,4)),27).
move(1,((2,4),(3,4)),28).
move(1,((3,4),(2,4)),29).
move(1,((2,4),(3,4)),30).
move(1,((3,4),(2,4)),31).
move(1,((2,4),(3,4)),32).
move(1,((3,4),(2,4)),33).
move(1,((2,4),(3,4)),34).
move(1,((3,4),(2,4)),35).
move(1,((2,4),(3,4)),36).
move(1,((3,4),(4,4)),37).
move(1,((4,4),(4,5)),38).
move(1,((4,5),(4,6)),40).
move(2,((7,1),(6,1)),1).
move(2,((6,1),(6,2)),2).
move(2,((6,2),(5,2)),3).
move(2,((5,2),(4,2)),11).
move(2,((4,2),(4,3)),12).
move(2,((4,3),(4,4)),13).
move(2,((4,4),(5,4)),14).
move(2,((5,4),(4,4)),15).
move(2,((4,4),(4,5)),16).
move(2,((4,5),(4,4)),17).
move(2,((4,4),(4,5)),18).
move(2,((4,5),(4,4)),19).
move(2,((4,4),(4,5)),20).
move(2,((4,5),(4,4)),21).
move(2,((4,4),(4,5)),22).
move(2,((4,5),(4,4)),23).
move(2,((4,4),(4,5)),24).
move(2,((4,5),(4,4)),25).
move(2,((4,4),(4,5)),26).
move(2,((4,5),(4,4)),27).
move(2,((4,4),(4,5)),28).
move(2,((4,5),(4,4)),29).
move(2,((4,4),(4,5)),30).
move(2,((4,5),(4,4)),31).
move(2,((4,4),(4,5)),32).
move(2,((4,5),(4,4)),33).
move(2,((4,4),(4,5)),34).
move(2,((4,5),(4,4)),35).
move(2,((4,4),(5,4)),36).
move(2,((5,4),(4,4)),39).
move(2,((4,4),(4,5)),40).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(3,4)),3).
move(3,((3,4),(4,4)),4).
move(3,((4,4),(5,4)),5).
move(3,((5,4),(4,4)),7).
move(3,((4,4),(4,3)),8).
move(3,((4,3),(4,2)),10).
move(3,((4,2),(4,1)),11).
move(3,((4,1),(4,2)),12).
move(3,((4,2),(4,1)),13).
move(3,((4,1),(4,2)),14).
move(3,((4,2),(4,1)),15).
move(3,((4,1),(4,2)),16).
move(3,((4,2),(4,1)),17).
move(3,((4,1),(4,2)),18).
move(3,((4,2),(4,1)),19).
move(3,((4,1),(4,2)),20).
move(3,((4,2),(4,1)),21).
move(3,((4,1),(4,2)),22).
move(3,((4,2),(4,1)),23).
move(3,((4,1),(4,2)),24).
move(3,((4,2),(4,1)),25).
move(3,((4,1),(4,2)),26).
move(3,((4,2),(4,1)),27).
move(3,((4,1),(4,2)),28).
move(3,((4,2),(4,1)),29).
move(3,((4,1),(4,2)),30).
move(3,((4,2),(4,1)),31).
move(3,((4,1),(4,2)),32).
move(3,((4,2),(5,2)),33).
move(3,((5,2),(4,2)),34).
move(3,((4,2),(4,1)),35).
move(3,((4,1),(4,2)),36).
move(3,((4,2),(5,2)),37).
move(3,((5,2),(4,2)),39).
move(3,((4,2),(4,1)),40).
move(4,((6,6),(6,5)),2).
move(4,((6,5),(6,4)),3).
move(4,((6,4),(5,4)),17).
move(4,((5,4),(4,4)),22).
move(4,((4,4),(4,3)),23).
move(4,((4,3),(4,2)),33).
move(4,((4,2),(3,2)),34).
move(4,((3,2),(4,2)),35).
move(4,((4,2),(4,3)),36).
move(4,((4,3),(4,2)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.150s (Solving: 0.01s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 0.141s

Choices      : 608     
Conflicts    : 40       (Analyzed: 40)
Restarts     : 0       
Model-Level  : 174.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 40       (Deleted: 0)
  Binary     : 4        (Ratio:  10.00%)
  Ternary    : 2        (Ratio:   5.00%)
  Conflict   : 40       (Average Length:   84.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 40       (Average: 10.85 Max: 119 Sum:    434)
  Executed   : 40       (Average: 10.85 Max: 119 Sum:    434 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 32916    (Original: 26309)
  Choice     : 160     
Atoms        : 13528   
Bodies       : 24609    (Original: 18002)
  Count      : 304      (Original: 1203)
Equivalences : 10367    (Atom=Atom: 163 Body=Body: 168 Other: 10036)
Tight        : Yes
Variables    : 20408    (Eliminated:    0 Frozen: 9732)
Constraints  : 57832    (Binary:  76.4% Ternary:  16.1% Other:   7.5%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,1),(2,1)),1).
move(1,((2,1),(2,2)),2).
move(1,((2,2),(3,2)),3).
move(1,((3,2),(4,2)),4).
move(1,((4,2),(4,3)),5).
move(1,((4,3),(4,4)),6).
move(1,((4,4),(4,5)),7).
move(1,((4,5),(4,4)),8).
move(1,((4,4),(3,4)),10).
move(1,((3,4),(2,4)),11).
move(1,((2,4),(2,5)),12).
move(1,((2,5),(2,6)),13).
move(1,((2,6),(2,5)),14).
move(1,((2,5),(2,6)),15).
move(1,((2,6),(2,5)),16).
move(1,((2,5),(2,6)),17).
move(1,((2,6),(2,5)),18).
move(1,((2,5),(2,6)),19).
move(1,((2,6),(2,5)),20).
move(1,((2,5),(2,6)),21).
move(1,((2,6),(2,5)),22).
move(1,((2,5),(2,4)),23).
move(1,((2,4),(3,4)),24).
move(1,((3,4),(2,4)),25).
move(1,((2,4),(3,4)),26).
move(1,((3,4),(2,4)),27).
move(1,((2,4),(3,4)),28).
move(1,((3,4),(2,4)),29).
move(1,((2,4),(3,4)),30).
move(1,((3,4),(2,4)),31).
move(1,((2,4),(3,4)),32).
move(1,((3,4),(2,4)),33).
move(1,((2,4),(3,4)),34).
move(1,((3,4),(2,4)),35).
move(1,((2,4),(3,4)),36).
move(1,((3,4),(4,4)),37).
move(1,((4,4),(4,5)),38).
move(1,((4,5),(4,6)),40).
move(2,((7,1),(6,1)),1).
move(2,((6,1),(6,2)),2).
move(2,((6,2),(5,2)),3).
move(2,((5,2),(4,2)),11).
move(2,((4,2),(4,3)),12).
move(2,((4,3),(4,4)),13).
move(2,((4,4),(5,4)),14).
move(2,((5,4),(4,4)),15).
move(2,((4,4),(4,5)),16).
move(2,((4,5),(4,4)),17).
move(2,((4,4),(4,5)),18).
move(2,((4,5),(4,4)),19).
move(2,((4,4),(4,5)),20).
move(2,((4,5),(4,4)),21).
move(2,((4,4),(4,5)),22).
move(2,((4,5),(4,4)),23).
move(2,((4,4),(4,5)),24).
move(2,((4,5),(4,4)),25).
move(2,((4,4),(4,5)),26).
move(2,((4,5),(4,4)),27).
move(2,((4,4),(4,5)),28).
move(2,((4,5),(4,4)),29).
move(2,((4,4),(4,5)),30).
move(2,((4,5),(4,4)),31).
move(2,((4,4),(4,5)),32).
move(2,((4,5),(4,4)),33).
move(2,((4,4),(4,5)),34).
move(2,((4,5),(4,4)),35).
move(2,((4,4),(5,4)),36).
move(2,((5,4),(4,4)),39).
move(2,((4,4),(4,5)),40).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(3,4)),3).
move(3,((3,4),(4,4)),4).
move(3,((4,4),(5,4)),5).
move(3,((5,4),(4,4)),7).
move(3,((4,4),(4,3)),8).
move(3,((4,3),(4,2)),10).
move(3,((4,2),(4,1)),11).
move(3,((4,1),(4,2)),12).
move(3,((4,2),(4,1)),13).
move(3,((4,1),(4,2)),14).
move(3,((4,2),(4,1)),15).
move(3,((4,1),(4,2)),16).
move(3,((4,2),(4,1)),17).
move(3,((4,1),(4,2)),18).
move(3,((4,2),(4,1)),19).
move(3,((4,1),(4,2)),20).
move(3,((4,2),(4,1)),21).
move(3,((4,1),(4,2)),22).
move(3,((4,2),(4,1)),23).
move(3,((4,1),(4,2)),24).
move(3,((4,2),(4,1)),25).
move(3,((4,1),(4,2)),26).
move(3,((4,2),(4,1)),27).
move(3,((4,1),(4,2)),28).
move(3,((4,2),(4,1)),29).
move(3,((4,1),(4,2)),30).
move(3,((4,2),(4,1)),31).
move(3,((4,1),(4,2)),32).
move(3,((4,2),(5,2)),33).
move(3,((5,2),(4,2)),34).
move(3,((4,2),(4,1)),35).
move(3,((4,1),(4,2)),36).
move(3,((4,2),(5,2)),37).
move(3,((5,2),(4,2)),39).
move(3,((4,2),(4,1)),40).
move(4,((6,6),(6,5)),2).
move(4,((6,5),(6,4)),3).
move(4,((6,4),(5,4)),17).
move(4,((5,4),(4,4)),22).
move(4,((4,4),(4,3)),23).
move(4,((4,3),(4,2)),33).
move(4,((4,2),(3,2)),34).
move(4,((3,2),(4,2)),35).
move(4,((4,2),(4,3)),36).
move(4,((4,3),(4,2)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.139s (Solving: 0.01s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 0.141s

Choices      : 608     
Conflicts    : 40       (Analyzed: 40)
Restarts     : 0       
Model-Level  : 174.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 40       (Deleted: 0)
  Binary     : 4        (Ratio:  10.00%)
  Ternary    : 2        (Ratio:   5.00%)
  Conflict   : 40       (Average Length:   84.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 40       (Average: 10.85 Max: 119 Sum:    434)
  Executed   : 40       (Average: 10.85 Max: 119 Sum:    434 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 32916    (Original: 26309)
  Choice     : 160     
Atoms        : 13528   
Bodies       : 24609    (Original: 18002)
  Count      : 304      (Original: 1203)
Equivalences : 10367    (Atom=Atom: 163 Body=Body: 168 Other: 10036)
Tight        : Yes
Variables    : 20408    (Eliminated:    0 Frozen: 9732)
Constraints  : 57832    (Binary:  76.4% Ternary:  16.1% Other:   7.5%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,1),(2,1)),1).
move(1,((2,1),(2,2)),2).
move(1,((2,2),(3,2)),3).
move(1,((3,2),(4,2)),4).
move(1,((4,2),(4,3)),5).
move(1,((4,3),(4,4)),7).
move(1,((4,4),(3,4)),8).
move(1,((3,4),(2,4)),9).
move(1,((2,4),(3,4)),10).
move(1,((3,4),(4,4)),11).
move(1,((4,4),(4,5)),12).
move(1,((4,5),(4,6)),13).
move(1,((4,6),(4,5)),15).
move(1,((4,5),(4,4)),16).
move(1,((4,4),(4,5)),18).
move(1,((4,5),(4,6)),19).
move(1,((4,6),(4,5)),20).
move(1,((4,5),(4,6)),21).
move(1,((4,6),(4,5)),22).
move(1,((4,5),(4,6)),23).
move(1,((4,6),(4,5)),25).
move(1,((4,5),(4,6)),26).
move(1,((4,6),(4,5)),27).
move(1,((4,5),(4,4)),28).
move(1,((4,4),(4,5)),29).
move(1,((4,5),(4,6)),30).
move(2,((7,1),(6,1)),1).
move(2,((6,1),(6,2)),2).
move(2,((6,2),(5,2)),3).
move(2,((5,2),(4,2)),5).
move(2,((4,2),(3,2)),6).
move(2,((3,2),(2,2)),7).
move(2,((2,2),(2,1)),8).
move(2,((2,1),(1,1)),9).
move(2,((1,1),(2,1)),10).
move(2,((2,1),(1,1)),11).
move(2,((1,1),(2,1)),12).
move(2,((2,1),(1,1)),13).
move(2,((1,1),(2,1)),14).
move(2,((2,1),(1,1)),15).
move(2,((1,1),(2,1)),16).
move(2,((2,1),(1,1)),17).
move(2,((1,1),(2,1)),18).
move(2,((2,1),(1,1)),19).
move(2,((1,1),(2,1)),20).
move(2,((2,1),(1,1)),21).
move(2,((1,1),(2,1)),22).
move(2,((2,1),(1,1)),23).
move(2,((1,1),(2,1)),24).
move(2,((2,1),(2,2)),25).
move(2,((2,2),(3,2)),26).
move(2,((3,2),(4,2)),27).
move(2,((4,2),(4,3)),28).
move(2,((4,3),(4,4)),29).
move(2,((4,4),(4,5)),30).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(3,4)),3).
move(3,((3,4),(4,4)),4).
move(3,((4,4),(4,5)),5).
move(3,((4,5),(4,4)),8).
move(3,((4,4),(4,3)),9).
move(3,((4,3),(4,2)),10).
move(3,((4,2),(4,3)),11).
move(3,((4,3),(4,2)),12).
move(3,((4,2),(4,1)),13).
move(3,((4,1),(4,2)),14).
move(3,((4,2),(4,1)),15).
move(3,((4,1),(4,2)),16).
move(3,((4,2),(4,1)),17).
move(3,((4,1),(4,2)),18).
move(3,((4,2),(4,1)),19).
move(3,((4,1),(4,2)),20).
move(3,((4,2),(4,1)),21).
move(3,((4,1),(4,2)),22).
move(3,((4,2),(4,1)),23).
move(3,((4,1),(4,2)),24).
move(3,((4,2),(4,1)),25).
move(3,((4,1),(4,2)),26).
move(3,((4,2),(4,1)),27).
move(3,((4,1),(4,2)),28).
move(3,((4,2),(4,1)),29).
move(3,((4,1),(4,2)),30).
move(3,((4,2),(4,1)),31).
move(3,((4,1),(4,2)),32).
move(3,((4,2),(4,1)),33).
move(3,((4,1),(4,2)),34).
move(3,((4,2),(4,1)),35).
move(3,((4,1),(4,2)),37).
move(3,((4,2),(4,1)),38).
move(3,((4,1),(4,2)),39).
move(3,((4,2),(4,1)),40).
move(4,((6,6),(6,5)),1).
move(4,((6,5),(6,4)),2).
move(4,((6,4),(5,4)),3).
move(4,((5,4),(4,4)),31).
move(4,((4,4),(4,3)),37).
move(4,((4,3),(4,2)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.161s (Solving: 0.01s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 0.156s

Choices      : 534     
Conflicts    : 47       (Analyzed: 47)
Restarts     : 0       
Model-Level  : 197.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 47       (Deleted: 0)
  Binary     : 8        (Ratio:  17.02%)
  Ternary    : 8        (Ratio:  17.02%)
  Conflict   : 47       (Average Length:   83.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 47       (Average:  7.17 Max: 123 Sum:    337)
  Executed   : 47       (Average:  7.17 Max: 123 Sum:    337 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 33077    (Original: 26478)
  Choice     : 160     
  Heuristic  : 133      (Original: 141)
Atoms        : 13556   
Bodies       : 24609    (Original: 18002)
  Count      : 304      (Original: 1203)
Equivalences : 10367    (Atom=Atom: 163 Body=Body: 168 Other: 10036)
Tight        : Yes
Variables    : 20408    (Eliminated:    0 Frozen: 9732)
Constraints  : 57832    (Binary:  76.4% Ternary:  16.1% Other:   7.5%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,1),(2,1)),1).
move(1,((2,1),(2,2)),2).
move(1,((2,2),(3,2)),3).
move(1,((3,2),(4,2)),4).
move(1,((4,2),(4,3)),5).
move(1,((4,3),(4,4)),6).
move(1,((4,4),(4,5)),7).
move(1,((4,5),(4,4)),9).
move(1,((4,4),(5,4)),11).
move(1,((5,4),(6,4)),12).
move(1,((6,4),(5,4)),14).
move(1,((5,4),(6,4)),15).
move(1,((6,4),(6,5)),16).
move(1,((6,5),(6,4)),17).
move(1,((6,4),(5,4)),18).
move(1,((5,4),(6,4)),19).
move(1,((6,4),(6,5)),20).
move(1,((6,5),(6,4)),21).
move(1,((6,4),(5,4)),23).
move(1,((5,4),(4,4)),24).
move(1,((4,4),(3,4)),25).
move(1,((3,4),(2,4)),26).
move(1,((2,4),(3,4)),28).
move(1,((3,4),(2,4)),29).
move(1,((2,4),(3,4)),30).
move(1,((3,4),(2,4)),31).
move(1,((2,4),(2,5)),32).
move(1,((2,5),(2,6)),33).
move(1,((2,6),(2,5)),34).
move(1,((2,5),(2,4)),35).
move(1,((2,4),(3,4)),36).
move(1,((3,4),(4,4)),38).
move(1,((4,4),(4,5)),39).
move(1,((4,5),(4,6)),40).
move(2,((7,1),(6,1)),1).
move(2,((6,1),(6,2)),2).
move(2,((6,2),(5,2)),3).
move(2,((5,2),(4,2)),5).
move(2,((4,2),(3,2)),6).
move(2,((3,2),(4,2)),11).
move(2,((4,2),(4,3)),12).
move(2,((4,3),(4,4)),13).
move(2,((4,4),(4,5)),14).
move(2,((4,5),(4,4)),15).
move(2,((4,4),(4,5)),16).
move(2,((4,5),(4,4)),17).
move(2,((4,4),(4,5)),18).
move(2,((4,5),(4,4)),19).
move(2,((4,4),(4,5)),20).
move(2,((4,5),(4,4)),21).
move(2,((4,4),(5,4)),22).
move(2,((5,4),(4,4)),23).
move(2,((4,4),(4,5)),24).
move(2,((4,5),(4,4)),25).
move(2,((4,4),(4,5)),26).
move(2,((4,5),(4,4)),27).
move(2,((4,4),(4,5)),28).
move(2,((4,5),(4,4)),29).
move(2,((4,4),(4,5)),30).
move(2,((4,5),(4,4)),31).
move(2,((4,4),(4,5)),32).
move(2,((4,5),(4,4)),33).
move(2,((4,4),(4,5)),34).
move(2,((4,5),(4,4)),35).
move(2,((4,4),(4,5)),36).
move(2,((4,5),(4,4)),37).
move(2,((4,4),(5,4)),38).
move(2,((5,4),(4,4)),39).
move(2,((4,4),(4,5)),40).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(3,4)),3).
move(3,((3,4),(4,4)),4).
move(3,((4,4),(5,4)),6).
move(3,((5,4),(4,4)),7).
move(3,((4,4),(4,3)),8).
move(3,((4,3),(4,2)),10).
move(3,((4,2),(4,1)),11).
move(3,((4,1),(4,2)),12).
move(3,((4,2),(4,1)),13).
move(3,((4,1),(4,2)),14).
move(3,((4,2),(4,1)),15).
move(3,((4,1),(4,2)),16).
move(3,((4,2),(4,1)),17).
move(3,((4,1),(4,2)),18).
move(3,((4,2),(4,1)),19).
move(3,((4,1),(4,2)),20).
move(3,((4,2),(4,1)),21).
move(3,((4,1),(4,2)),22).
move(3,((4,2),(4,1)),23).
move(3,((4,1),(4,2)),24).
move(3,((4,2),(4,1)),25).
move(3,((4,1),(4,2)),26).
move(3,((4,2),(4,1)),27).
move(3,((4,1),(4,2)),28).
move(3,((4,2),(4,1)),29).
move(3,((4,1),(4,2)),30).
move(3,((4,2),(4,1)),31).
move(3,((4,1),(4,2)),32).
move(3,((4,2),(3,2)),33).
move(3,((3,2),(4,2)),34).
move(3,((4,2),(4,1)),35).
move(3,((4,1),(4,2)),36).
move(3,((4,2),(5,2)),37).
move(3,((5,2),(4,2)),39).
move(3,((4,2),(4,1)),40).
move(4,((6,6),(6,5)),2).
move(4,((6,5),(6,6)),16).
move(4,((6,6),(6,5)),23).
move(4,((6,5),(6,4)),24).
move(4,((6,4),(5,4)),25).
move(4,((5,4),(4,4)),26).
move(4,((4,4),(4,3)),27).
move(4,((4,3),(4,2)),31).
move(4,((4,2),(4,3)),32).
move(4,((4,3),(4,4)),36).
move(4,((4,4),(4,3)),37).
move(4,((4,3),(4,2)),38).
move(4,((4,2),(4,3)),39).
move(4,((4,3),(4,2)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.134s (Solving: 0.01s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 0.141s

Choices      : 669     
Conflicts    : 41       (Analyzed: 41)
Restarts     : 0       
Model-Level  : 178.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 41       (Deleted: 0)
  Binary     : 7        (Ratio:  17.07%)
  Ternary    : 2        (Ratio:   4.88%)
  Conflict   : 41       (Average Length:   83.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 41       (Average: 11.98 Max: 119 Sum:    491)
  Executed   : 41       (Average: 11.98 Max: 119 Sum:    491 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 33266    (Original: 26663)
  Choice     : 160     
  Heuristic  : 354      (Original: 358)
Atoms        : 13524   
Bodies       : 24609    (Original: 18002)
  Count      : 304      (Original: 1203)
Equivalences : 10367    (Atom=Atom: 163 Body=Body: 168 Other: 10036)
Tight        : Yes
Variables    : 20408    (Eliminated:    0 Frozen: 9732)
Constraints  : 57832    (Binary:  76.4% Ternary:  16.1% Other:   7.5%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,1),(2,1)),1).
move(1,((2,1),(2,2)),2).
move(1,((2,2),(3,2)),3).
move(1,((3,2),(4,2)),4).
move(1,((4,2),(4,3)),5).
move(1,((4,3),(4,4)),6).
move(1,((4,4),(4,5)),7).
move(1,((4,5),(4,6)),8).
move(2,((7,1),(6,1)),1).
move(2,((6,1),(6,2)),2).
move(2,((6,2),(5,2)),3).
move(2,((5,2),(4,2)),5).
move(2,((4,2),(4,3)),6).
move(2,((4,3),(4,4)),7).
move(2,((4,4),(4,5)),8).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(3,4)),3).
move(3,((3,4),(4,4)),8).
move(3,((4,4),(4,3)),9).
move(3,((4,3),(4,2)),10).
move(3,((4,2),(4,1)),40).
move(4,((6,6),(6,5)),1).
move(4,((6,5),(6,4)),2).
move(4,((6,4),(5,4)),3).
move(4,((5,4),(4,4)),9).
move(4,((4,4),(4,3)),10).
move(4,((4,3),(4,2)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.159s (Solving: 0.01s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 0.156s

Choices      : 207      (Domain: 15)
Conflicts    : 47       (Analyzed: 47)
Restarts     : 0       
Model-Level  : 135.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 47       (Deleted: 0)
  Binary     : 4        (Ratio:   8.51%)
  Ternary    : 1        (Ratio:   2.13%)
  Conflict   : 47       (Average Length:  198.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 47       (Average:  1.53 Max:   9 Sum:     72)
  Executed   : 47       (Average:  1.53 Max:   9 Sum:     72 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 35972    (Original: 29385)
  Choice     : 160     
  Heuristic  : 3052     (Original: 3072)
Atoms        : 13532   
Bodies       : 24609    (Original: 18002)
  Count      : 304      (Original: 1203)
Equivalences : 10367    (Atom=Atom: 163 Body=Body: 168 Other: 10036)
Tight        : Yes
Variables    : 20408    (Eliminated:    0 Frozen: 9732)
Constraints  : 57832    (Binary:  76.4% Ternary:  16.1% Other:   7.5%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,1),(2,1)),1).
move(1,((2,1),(2,2)),2).
move(1,((2,2),(3,2)),3).
move(1,((3,2),(4,2)),5).
move(1,((4,2),(4,3)),6).
move(1,((4,3),(4,4)),7).
move(1,((4,4),(4,5)),8).
move(1,((4,5),(4,6)),9).
move(1,((4,6),(4,5)),12).
move(1,((4,5),(4,6)),13).
move(1,((4,6),(4,5)),14).
move(1,((4,5),(4,6)),15).
move(1,((4,6),(4,5)),16).
move(1,((4,5),(4,6)),17).
move(1,((4,6),(4,5)),18).
move(1,((4,5),(4,6)),19).
move(1,((4,6),(4,5)),20).
move(1,((4,5),(4,6)),21).
move(1,((4,6),(4,5)),22).
move(1,((4,5),(4,6)),23).
move(1,((4,6),(4,5)),24).
move(1,((4,5),(4,6)),25).
move(1,((4,6),(4,5)),26).
move(1,((4,5),(4,6)),27).
move(1,((4,6),(4,5)),28).
move(1,((4,5),(4,6)),29).
move(1,((4,6),(4,5)),30).
move(1,((4,5),(4,6)),31).
move(1,((4,6),(4,5)),32).
move(1,((4,5),(4,6)),33).
move(1,((4,6),(4,5)),34).
move(1,((4,5),(4,6)),35).
move(1,((4,6),(4,5)),36).
move(1,((4,5),(4,6)),37).
move(1,((4,6),(4,5)),39).
move(1,((4,5),(4,6)),40).
move(2,((7,1),(6,1)),1).
move(2,((6,1),(6,2)),2).
move(2,((6,2),(5,2)),3).
move(2,((5,2),(4,2)),4).
move(2,((4,2),(4,3)),5).
move(2,((4,3),(4,4)),6).
move(2,((4,4),(3,4)),7).
move(2,((3,4),(4,4)),8).
move(2,((4,4),(4,3)),9).
move(2,((4,3),(4,4)),10).
move(2,((4,4),(4,5)),11).
move(2,((4,5),(4,4)),12).
move(2,((4,4),(4,5)),13).
move(2,((4,5),(4,4)),14).
move(2,((4,4),(4,5)),15).
move(2,((4,5),(4,4)),16).
move(2,((4,4),(4,5)),17).
move(2,((4,5),(4,4)),18).
move(2,((4,4),(4,5)),19).
move(2,((4,5),(4,4)),20).
move(2,((4,4),(4,5)),21).
move(2,((4,5),(4,4)),22).
move(2,((4,4),(4,5)),23).
move(2,((4,5),(4,4)),24).
move(2,((4,4),(4,5)),25).
move(2,((4,5),(4,4)),26).
move(2,((4,4),(4,5)),27).
move(2,((4,5),(4,4)),28).
move(2,((4,4),(4,5)),29).
move(2,((4,5),(4,4)),30).
move(2,((4,4),(4,5)),31).
move(2,((4,5),(4,4)),32).
move(2,((4,4),(4,5)),33).
move(2,((4,5),(4,4)),34).
move(2,((4,4),(4,5)),35).
move(2,((4,5),(4,4)),36).
move(2,((4,4),(4,5)),37).
move(2,((4,5),(4,4)),39).
move(2,((4,4),(4,5)),40).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(3,4)),10).
move(3,((3,4),(4,4)),11).
move(3,((4,4),(4,3)),12).
move(3,((4,3),(4,2)),13).
move(3,((4,2),(4,1)),14).
move(3,((4,1),(4,2)),15).
move(3,((4,2),(4,1)),16).
move(3,((4,1),(4,2)),17).
move(3,((4,2),(4,1)),18).
move(3,((4,1),(4,2)),19).
move(3,((4,2),(4,1)),20).
move(3,((4,1),(4,2)),21).
move(3,((4,2),(5,2)),22).
move(3,((5,2),(4,2)),23).
move(3,((4,2),(4,1)),24).
move(3,((4,1),(4,2)),25).
move(3,((4,2),(4,1)),26).
move(3,((4,1),(4,2)),27).
move(3,((4,2),(4,1)),28).
move(3,((4,1),(4,2)),30).
move(3,((4,2),(4,1)),31).
move(3,((4,1),(4,2)),32).
move(3,((4,2),(4,1)),33).
move(3,((4,1),(4,2)),34).
move(3,((4,2),(4,1)),35).
move(3,((4,1),(4,2)),36).
move(3,((4,2),(3,2)),37).
move(3,((3,2),(4,2)),39).
move(3,((4,2),(4,1)),40).
move(4,((6,6),(6,5)),1).
move(4,((6,5),(6,4)),2).
move(4,((6,4),(5,4)),3).
move(4,((5,4),(4,4)),13).
move(4,((4,4),(4,3)),14).
move(4,((4,3),(4,2)),16).
move(4,((4,2),(3,2)),17).
move(4,((3,2),(4,2)),20).
move(4,((4,2),(5,2)),21).
move(4,((5,2),(6,2)),22).
move(4,((6,2),(5,2)),23).
move(4,((5,2),(6,2)),26).
move(4,((6,2),(5,2)),27).
move(4,((5,2),(4,2)),29).
move(4,((4,2),(3,2)),30).
move(4,((3,2),(4,2)),31).
move(4,((4,2),(5,2)),32).
move(4,((5,2),(6,2)),36).
move(4,((6,2),(5,2)),37).
move(4,((5,2),(6,2)),38).
move(4,((6,2),(5,2)),39).
move(4,((5,2),(4,2)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.158s (Solving: 0.01s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 0.156s

Choices      : 329     
Conflicts    : 45       (Analyzed: 45)
Restarts     : 0       
Model-Level  : 98.0    
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 45       (Deleted: 0)
  Binary     : 8        (Ratio:  17.78%)
  Ternary    : 4        (Ratio:   8.89%)
  Conflict   : 45       (Average Length:   65.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 45       (Average:  5.13 Max: 118 Sum:    231)
  Executed   : 45       (Average:  5.13 Max: 118 Sum:    231 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 35964    (Original: 29377)
  Choice     : 160     
  Heuristic  : 3052     (Original: 3072)
Atoms        : 13524   
Bodies       : 24609    (Original: 18002)
  Count      : 304      (Original: 1203)
Equivalences : 10367    (Atom=Atom: 163 Body=Body: 168 Other: 10036)
Tight        : Yes
Variables    : 20408    (Eliminated:    0 Frozen: 9732)
Constraints  : 57832    (Binary:  76.4% Ternary:  16.1% Other:   7.5%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,1),(2,1)),2).
move(1,((2,1),(2,2)),4).
move(1,((2,2),(3,2)),5).
move(1,((3,2),(4,2)),6).
move(1,((4,2),(5,2)),7).
move(1,((5,2),(6,2)),8).
move(1,((6,2),(6,1)),9).
move(1,((6,1),(6,2)),11).
move(1,((6,2),(5,2)),12).
move(1,((5,2),(6,2)),13).
move(1,((6,2),(6,1)),14).
move(1,((6,1),(6,2)),20).
move(1,((6,2),(6,1)),21).
move(1,((6,1),(6,2)),22).
move(1,((6,2),(5,2)),23).
move(1,((5,2),(6,2)),24).
move(1,((6,2),(6,1)),25).
move(1,((6,1),(6,2)),27).
move(1,((6,2),(5,2)),28).
move(1,((5,2),(4,2)),30).
move(1,((4,2),(5,2)),34).
move(1,((5,2),(4,2)),35).
move(1,((4,2),(4,3)),36).
move(1,((4,3),(4,4)),37).
move(1,((4,4),(4,5)),39).
move(1,((4,5),(4,6)),40).
move(2,((7,1),(6,1)),2).
move(2,((6,1),(6,2)),3).
move(2,((6,2),(5,2)),4).
move(2,((5,2),(4,2)),5).
move(2,((4,2),(4,1)),6).
move(2,((4,1),(4,2)),9).
move(2,((4,2),(4,3)),10).
move(2,((4,3),(4,4)),11).
move(2,((4,4),(5,4)),12).
move(2,((5,4),(4,4)),13).
move(2,((4,4),(4,3)),14).
move(2,((4,3),(4,4)),15).
move(2,((4,4),(3,4)),16).
move(2,((3,4),(4,4)),17).
move(2,((4,4),(5,4)),21).
move(2,((5,4),(4,4)),22).
move(2,((4,4),(3,4)),24).
move(2,((3,4),(4,4)),25).
move(2,((4,4),(3,4)),29).
move(2,((3,4),(4,4)),30).
move(2,((4,4),(5,4)),37).
move(2,((5,4),(4,4)),39).
move(2,((4,4),(4,5)),40).
move(3,((2,6),(2,5)),2).
move(3,((2,5),(2,4)),4).
move(3,((2,4),(3,4)),5).
move(3,((3,4),(4,4)),6).
move(3,((4,4),(4,3)),7).
move(3,((4,3),(4,2)),8).
move(3,((4,2),(5,2)),9).
move(3,((5,2),(4,2)),10).
move(3,((4,2),(4,3)),11).
move(3,((4,3),(4,4)),12).
move(3,((4,4),(4,5)),13).
move(3,((4,5),(4,4)),14).
move(3,((4,4),(4,5)),15).
move(3,((4,5),(4,4)),16).
move(3,((4,4),(5,4)),17).
move(3,((5,4),(6,4)),19).
move(3,((6,4),(6,5)),20).
move(3,((6,5),(6,4)),22).
move(3,((6,4),(5,4)),23).
move(3,((5,4),(4,4)),24).
move(3,((4,4),(4,3)),25).
move(3,((4,3),(4,2)),26).
move(3,((4,2),(5,2)),27).
move(3,((5,2),(4,2)),28).
move(3,((4,2),(3,2)),30).
move(3,((3,2),(2,2)),32).
move(3,((2,2),(3,2)),33).
move(3,((3,2),(2,2)),34).
move(3,((2,2),(3,2)),36).
move(3,((3,2),(4,2)),37).
move(3,((4,2),(4,1)),38).
move(4,((6,6),(6,5)),2).
move(4,((6,5),(6,4)),3).
move(4,((6,4),(5,4)),4).
move(4,((5,4),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(4,2)),7).
move(4,((4,2),(5,2)),8).
move(4,((5,2),(6,2)),9).
move(4,((6,2),(5,2)),10).
move(4,((5,2),(4,2)),11).
move(4,((4,2),(4,3)),12).
move(4,((4,3),(4,2)),13).
move(4,((4,2),(3,2)),17).
move(4,((3,2),(4,2)),18).
move(4,((4,2),(4,3)),20).
move(4,((4,3),(4,4)),21).
move(4,((4,4),(4,3)),22).
move(4,((4,3),(4,2)),23).
move(4,((4,2),(3,2)),24).
move(4,((3,2),(4,2)),27).
move(4,((4,2),(4,3)),28).
move(4,((4,3),(4,4)),29).
move(4,((4,4),(4,3)),30).
move(4,((4,3),(4,2)),34).
move(4,((4,2),(3,2)),35).
move(4,((3,2),(4,2)),36).
move(4,((4,2),(4,3)),37).
move(4,((4,3),(4,2)),38).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.151s (Solving: 0.01s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 0.156s

Choices      : 576      (Domain: 576)
Conflicts    : 60       (Analyzed: 60)
Restarts     : 0       
Model-Level  : 110.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 60       (Deleted: 0)
  Binary     : 4        (Ratio:   6.67%)
  Ternary    : 6        (Ratio:  10.00%)
  Conflict   : 60       (Average Length:   15.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 60       (Average:  7.77 Max:  82 Sum:    466)
  Executed   : 60       (Average:  7.77 Max:  82 Sum:    466 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 35964    (Original: 29377)
  Choice     : 160     
  Heuristic  : 3052     (Original: 3072)
Atoms        : 13524   
Bodies       : 24609    (Original: 18002)
  Count      : 304      (Original: 1203)
Equivalences : 10367    (Atom=Atom: 163 Body=Body: 168 Other: 10036)
Tight        : Yes
Variables    : 20408    (Eliminated:    0 Frozen: 9732)
Constraints  : 57832    (Binary:  76.4% Ternary:  16.1% Other:   7.5%)

