%%%%%
%Standard
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(4,6)),4).
move(1,((4,6),(3,6)),5).
move(1,((3,6),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),3).
move(2,((3,5),(4,5)),4).
move(2,((4,5),(5,5)),5).
move(2,((5,5),(5,4)),6).
move(2,((5,4),(5,3)),7).
move(2,((5,3),(4,3)),8).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(2,2)),4).
move(3,((2,2),(2,1)),5).
move(3,((2,1),(3,1)),6).
move(3,((3,1),(4,1)),7).
move(3,((4,1),(5,1)),8).
move(3,((5,1),(5,2)),9).
move(3,((5,2),(5,3)),10).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(4,4)),3).
move(4,((4,4),(5,4)),4).
move(4,((5,4),(6,4)),6).
move(4,((6,4),(7,4)),7).
move(4,((7,4),(7,3)),8).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(7,5)),4).
move(5,((7,5),(8,5)),5).
move(5,((8,5),(8,4)),6).
move(5,((8,4),(8,3)),8).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(6,5)),2).
move(6,((6,5),(7,5)),3).
move(6,((7,5),(8,5)),4).
move(6,((8,5),(9,5)),5).
move(6,((9,5),(9,4)),6).
move(6,((9,4),(9,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(10,4)),6).
move(7,((10,4),(10,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(3,6)),6).
move(8,((3,6),(3,5)),7).
move(8,((3,5),(3,4)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.504s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.516s

Choices      : 989     
Conflicts    : 36       (Analyzed: 36)
Restarts     : 0       
Model-Level  : 368.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 36       (Deleted: 0)
  Binary     : 7        (Ratio:  19.44%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 36       (Average Length:   24.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 36       (Average: 17.25 Max: 110 Sum:    621)
  Executed   : 36       (Average: 17.25 Max: 110 Sum:    621 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261077   (Original: 241134)
  Choice     : 320     
Atoms        : 106367  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(4,6)),4).
move(1,((4,6),(3,6)),5).
move(1,((3,6),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(1,3)),3).
move(2,((1,3),(1,2)),4).
move(2,((1,2),(1,1)),5).
move(2,((1,1),(2,1)),6).
move(2,((2,1),(3,1)),7).
move(2,((3,1),(4,1)),8).
move(2,((4,1),(4,2)),9).
move(2,((4,2),(4,3)),10).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(2,2)),4).
move(3,((2,2),(2,1)),5).
move(3,((2,1),(3,1)),6).
move(3,((3,1),(4,1)),7).
move(3,((4,1),(5,1)),8).
move(3,((5,1),(5,2)),9).
move(3,((5,2),(5,3)),10).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(4,5)),2).
move(4,((4,5),(5,5)),3).
move(4,((5,5),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(7,4)),6).
move(4,((7,4),(7,3)),8).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(5,4)),3).
move(5,((5,4),(6,4)),4).
move(5,((6,4),(7,4)),5).
move(5,((7,4),(8,4)),6).
move(5,((8,4),(8,3)),8).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(6,4)),3).
move(6,((6,4),(7,4)),4).
move(6,((7,4),(8,4)),5).
move(6,((8,4),(9,4)),6).
move(6,((9,4),(9,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(10,4)),6).
move(7,((10,4),(10,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(3,6)),6).
move(8,((3,6),(3,5)),7).
move(8,((3,5),(3,4)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.345s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.344s

Choices      : 1261     (Domain: 178)
Conflicts    : 41       (Analyzed: 41)
Restarts     : 0       
Model-Level  : 552.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 41       (Deleted: 0)
  Binary     : 10       (Ratio:  24.39%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 41       (Average Length:   22.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 41       (Average: 17.29 Max: 118 Sum:    709)
  Executed   : 41       (Average: 17.29 Max: 118 Sum:    709 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261365   (Original: 241422)
  Choice     : 320     
  Heuristic  : 189     
Atoms        : 106466  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDistance.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(7,4)),3).
move(1,((7,4),(6,4)),4).
move(1,((6,4),(6,3)),5).
move(1,((6,3),(6,2)),6).
move(1,((6,2),(5,2)),7).
move(1,((5,2),(4,2)),8).
move(1,((4,2),(3,2)),9).
move(1,((3,2),(3,3)),10).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(3,5)),3).
move(2,((3,5),(3,4)),4).
move(2,((3,4),(3,3)),5).
move(2,((3,3),(4,3)),6).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(4,5)),3).
move(3,((4,5),(4,4)),4).
move(3,((4,4),(4,3)),5).
move(3,((4,3),(5,3)),6).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(4,5)),2).
move(4,((4,5),(5,5)),3).
move(4,((5,5),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(7,4)),6).
move(4,((7,4),(7,3)),7).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(7,5)),4).
move(5,((7,5),(8,5)),5).
move(5,((8,5),(8,4)),6).
move(5,((8,4),(8,3)),7).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(6,5)),2).
move(6,((6,5),(7,5)),3).
move(6,((7,5),(8,5)),4).
move(6,((8,5),(9,5)),5).
move(6,((9,5),(9,4)),6).
move(6,((9,4),(9,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(7,((10,4),(10,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(3,5)),5).
move(8,((3,5),(3,4)),6).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.310s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.312s

Choices      : 307      (Domain: 307)
Conflicts    : 3        (Analyzed: 3)
Restarts     : 0       
Model-Level  : 288.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 3        (Deleted: 0)
  Binary     : 3        (Ratio: 100.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 3        (Average Length:    2.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 3        (Average:  6.33 Max:   8 Sum:     19)
  Executed   : 3        (Average:  6.33 Max:   8 Sum:     19 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279640   (Original: 259769)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106474  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(5,5)),4).
move(1,((5,5),(5,4)),5).
move(1,((5,4),(4,4)),6).
move(1,((4,4),(4,3)),8).
move(1,((4,3),(3,3)),9).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(2,2)),8).
move(2,((2,2),(3,2)),9).
move(2,((3,2),(4,2)),10).
move(2,((4,2),(4,3)),11).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(4,5)),3).
move(3,((4,5),(4,4)),4).
move(3,((4,4),(4,3)),5).
move(3,((4,3),(5,3)),6).
move(3,((5,3),(4,3)),7).
move(3,((4,3),(5,3)),8).
move(3,((5,3),(5,4)),9).
move(3,((5,4),(5,3)),10).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(3,3)),5).
move(4,((3,3),(4,3)),6).
move(4,((4,3),(4,2)),7).
move(4,((4,2),(5,2)),8).
move(4,((5,2),(5,3)),9).
move(4,((5,3),(6,3)),10).
move(4,((6,3),(7,3)),40).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(5,5)),5).
move(5,((5,5),(5,4)),6).
move(5,((5,4),(5,3)),7).
move(5,((5,3),(6,3)),8).
move(5,((6,3),(7,3)),9).
move(5,((7,3),(8,3)),40).
move(6,((5,6),(4,6)),1).
move(6,((4,6),(4,5)),2).
move(6,((4,5),(5,5)),3).
move(6,((5,5),(5,4)),4).
move(6,((5,4),(6,4)),5).
move(6,((6,4),(7,4)),7).
move(6,((7,4),(8,4)),8).
move(6,((8,4),(8,3)),9).
move(6,((8,3),(9,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(7,4)),3).
move(7,((7,4),(8,4)),6).
move(7,((8,4),(9,4)),7).
move(7,((9,4),(9,3)),8).
move(7,((9,3),(10,3)),40).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(3,5)),5).
move(8,((3,5),(3,4)),6).
move(8,((3,4),(3,3)),8).
move(8,((3,3),(3,4)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.336s (Solving: 0.14s 1st Model: 0.13s Unsat: 0.00s)
CPU Time     : 1.328s

Choices      : 1033     (Domain: 434)
Conflicts    : 105      (Analyzed: 105)
Restarts     : 0       
Model-Level  : 288.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 105      (Deleted: 0)
  Binary     : 29       (Ratio:  27.62%)
  Ternary    : 8        (Ratio:   7.62%)
  Conflict   : 105      (Average Length:  106.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 105      (Average:  7.10 Max:  41 Sum:    745)
  Executed   : 105      (Average:  7.10 Max:  41 Sum:    745 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279640   (Original: 259769)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106474  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(7,6)),3).
move(1,((7,6),(6,6)),4).
move(1,((6,6),(6,5)),5).
move(1,((6,5),(6,4)),6).
move(1,((6,4),(6,3)),7).
move(1,((6,3),(5,3)),8).
move(1,((5,3),(4,3)),9).
move(1,((4,3),(3,3)),40).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),3).
move(2,((3,5),(3,4)),4).
move(2,((3,4),(3,3)),5).
move(2,((3,3),(4,3)),6).
move(2,((4,3),(5,3)),7).
move(2,((5,3),(5,2)),8).
move(2,((5,2),(5,3)),9).
move(2,((5,3),(4,3)),40).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(4,5)),3).
move(3,((4,5),(4,4)),4).
move(3,((4,4),(4,3)),5).
move(3,((4,3),(5,3)),6).
move(3,((5,3),(5,2)),7).
move(3,((5,2),(6,2)),8).
move(3,((6,2),(6,3)),9).
move(3,((6,3),(5,3)),40).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(6,5)),4).
move(4,((6,5),(6,4)),5).
move(4,((6,4),(6,3)),6).
move(4,((6,3),(7,3)),7).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(7,5)),4).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(7,3)),6).
move(5,((7,3),(8,3)),7).
move(6,((5,6),(6,6)),1).
move(6,((6,6),(6,5)),2).
move(6,((6,5),(7,5)),3).
move(6,((7,5),(8,5)),4).
move(6,((8,5),(9,5)),5).
move(6,((9,5),(9,4)),6).
move(6,((9,4),(9,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(5,4)),4).
move(8,((5,4),(4,4)),5).
move(8,((4,4),(3,4)),6).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.197s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.188s

Choices      : 354      (Domain: 28)
Conflicts    : 6        (Analyzed: 6)
Restarts     : 0       
Model-Level  : 342.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 6        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 6        (Average Length:   32.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 6        (Average:  2.00 Max:   5 Sum:     12)
  Executed   : 6        (Average:  2.00 Max:   5 Sum:     12 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 262146   (Original: 242219)
  Choice     : 320     
  Heuristic  : 908      (Original: 924)
Atoms        : 106528  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(5,5)),4).
move(1,((5,5),(5,4)),5).
move(1,((5,4),(5,3)),6).
move(1,((5,3),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(2,5)),2).
move(2,((2,5),(3,5)),3).
move(2,((3,5),(4,5)),4).
move(2,((4,5),(4,4)),6).
move(2,((4,4),(5,4)),7).
move(2,((5,4),(5,3)),8).
move(2,((5,3),(4,3)),9).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(3,3)),4).
move(3,((3,3),(4,3)),5).
move(3,((4,3),(4,4)),7).
move(3,((4,4),(5,4)),8).
move(3,((5,4),(5,3)),9).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(4,4)),3).
move(4,((4,4),(5,4)),6).
move(4,((5,4),(6,4)),7).
move(4,((6,4),(6,3)),8).
move(4,((6,3),(7,3)),9).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(7,5)),4).
move(5,((7,5),(8,5)),5).
move(5,((8,5),(8,4)),6).
move(5,((8,4),(8,3)),8).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(6,4)),4).
move(6,((6,4),(6,3)),5).
move(6,((6,3),(7,3)),6).
move(6,((7,3),(8,3)),7).
move(6,((8,3),(9,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(10,4)),6).
move(7,((10,4),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(6,5)),4).
move(8,((6,5),(5,5)),5).
move(8,((5,5),(4,5)),6).
move(8,((4,5),(4,4)),8).
move(8,((4,4),(3,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.196s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.203s

Choices      : 1628     (Domain: 877)
Conflicts    : 28       (Analyzed: 28)
Restarts     : 0       
Model-Level  : 1278.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 28       (Deleted: 0)
  Binary     : 4        (Ratio:  14.29%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 28       (Average Length:   29.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 28       (Average: 12.50 Max: 143 Sum:    350)
  Executed   : 28       (Average: 12.50 Max: 143 Sum:    350 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 262099   (Original: 242157)
  Choice     : 320     
  Heuristic  : 923      (Original: 924)
Atoms        : 106466  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(4,6)),4).
move(1,((4,6),(3,6)),5).
move(1,((3,6),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),3).
move(2,((3,5),(4,5)),4).
move(2,((4,5),(4,4)),5).
move(2,((4,4),(4,3)),7).
move(2,((4,3),(5,3)),9).
move(2,((5,3),(4,3)),10).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(2,2)),4).
move(3,((2,2),(2,1)),5).
move(3,((2,1),(3,1)),6).
move(3,((3,1),(4,1)),7).
move(3,((4,1),(5,1)),8).
move(3,((5,1),(5,2)),9).
move(3,((5,2),(5,3)),10).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(4,4)),3).
move(4,((4,4),(5,4)),4).
move(4,((5,4),(6,4)),5).
move(4,((6,4),(7,4)),6).
move(4,((7,4),(8,4)),7).
move(4,((8,4),(7,4)),8).
move(4,((7,4),(7,3)),9).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(7,5)),4).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(7,3)),6).
move(5,((7,3),(8,3)),8).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(6,5)),2).
move(6,((6,5),(7,5)),3).
move(6,((7,5),(8,5)),4).
move(6,((8,5),(8,4)),5).
move(6,((8,4),(9,4)),6).
move(6,((9,4),(9,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(10,4)),6).
move(7,((10,4),(10,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(3,6)),6).
move(8,((3,6),(3,5)),7).
move(8,((3,5),(3,4)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.239s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.250s

Choices      : 1190     (Domain: 760)
Conflicts    : 51       (Analyzed: 51)
Restarts     : 0       
Model-Level  : 356.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 51       (Deleted: 0)
  Binary     : 9        (Ratio:  17.65%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 51       (Average Length:   21.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 51       (Average: 16.35 Max: 111 Sum:    834)
  Executed   : 51       (Average: 16.35 Max: 111 Sum:    834 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279650   (Original: 259771)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106483  
Disjunctions : 0        (Original: 1)
Bodies       : 183368   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93247    (Atom=Atom: 342 Body=Body: 351 Other: 92554)
Tight        : Yes
Variables    : 182697   (Eliminated:    0 Frozen: 92083)
Constraints  : 500665   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((8,6),(7,6)),3).
move(1,((7,6),(8,6)),4).
move(1,((8,6),(8,5)),5).
move(1,((8,5),(8,4)),6).
move(1,((8,4),(8,3)),9).
move(1,((8,3),(7,3)),10).
move(1,((7,3),(6,3)),11).
move(1,((6,3),(6,4)),12).
move(1,((6,4),(6,5)),15).
move(1,((6,5),(6,4)),16).
move(1,((6,4),(6,5)),17).
move(1,((6,5),(7,5)),18).
move(1,((7,5),(8,5)),19).
move(1,((8,5),(8,4)),20).
move(1,((8,4),(8,3)),21).
move(1,((8,3),(8,4)),22).
move(1,((8,4),(8,5)),24).
move(1,((8,5),(8,4)),25).
move(1,((8,4),(8,3)),33).
move(1,((8,3),(8,2)),34).
move(1,((8,2),(7,2)),35).
move(1,((7,2),(6,2)),36).
move(1,((6,2),(5,2)),37).
move(1,((5,2),(4,2)),38).
move(1,((4,2),(3,2)),39).
move(1,((3,2),(3,3)),40).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(1,3)),8).
move(2,((1,3),(2,3)),9).
move(2,((2,3),(2,4)),10).
move(2,((2,4),(2,5)),36).
move(2,((2,5),(2,4)),37).
move(2,((2,4),(3,4)),38).
move(2,((3,4),(3,3)),39).
move(2,((3,3),(4,3)),40).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,4)),9).
move(3,((3,4),(3,3)),23).
move(3,((3,3),(2,3)),24).
move(3,((2,3),(2,4)),36).
move(3,((2,4),(2,3)),37).
move(3,((2,3),(3,3)),38).
move(3,((3,3),(4,3)),39).
move(3,((4,3),(5,3)),40).
move(4,((3,6),(3,5)),2).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(3,3)),5).
move(4,((3,3),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(4,((5,3),(4,3)),9).
move(4,((4,3),(3,3)),10).
move(4,((3,3),(4,3)),22).
move(4,((4,3),(4,4)),23).
move(4,((4,4),(3,4)),24).
move(4,((3,4),(4,4)),30).
move(4,((4,4),(3,4)),31).
move(4,((3,4),(4,4)),35).
move(4,((4,4),(4,3)),36).
move(4,((4,3),(5,3)),37).
move(4,((5,3),(6,3)),39).
move(4,((6,3),(7,3)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(4,4)),6).
move(5,((4,4),(4,3)),7).
move(5,((4,3),(4,4)),8).
move(5,((4,4),(5,4)),20).
move(5,((5,4),(5,3)),22).
move(5,((5,3),(4,3)),23).
move(5,((4,3),(4,4)),24).
move(5,((4,4),(4,3)),30).
move(5,((4,3),(4,4)),31).
move(5,((4,4),(4,3)),32).
move(5,((4,3),(4,4)),33).
move(5,((4,4),(4,3)),34).
move(5,((4,3),(5,3)),35).
move(5,((5,3),(6,3)),36).
move(5,((6,3),(7,3)),37).
move(5,((7,3),(8,3)),40).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(5,4)),4).
move(6,((5,4),(5,3)),5).
move(6,((5,3),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(6,((8,3),(9,3)),9).
move(6,((9,3),(8,3)),10).
move(6,((8,3),(7,3)),11).
move(6,((7,3),(6,3)),12).
move(6,((6,3),(5,3)),13).
move(6,((5,3),(5,4)),14).
move(6,((5,4),(5,3)),16).
move(6,((5,3),(5,4)),17).
move(6,((5,4),(5,3)),20).
move(6,((5,3),(6,3)),21).
move(6,((6,3),(6,4)),22).
move(6,((6,4),(5,4)),23).
move(6,((5,4),(5,3)),28).
move(6,((5,3),(5,4)),29).
move(6,((5,4),(6,4)),34).
move(6,((6,4),(6,5)),35).
move(6,((6,5),(7,5)),36).
move(6,((7,5),(8,5)),37).
move(6,((8,5),(8,4)),38).
move(6,((8,4),(9,4)),39).
move(6,((9,4),(9,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(7,5)),4).
move(7,((7,5),(8,5)),6).
move(7,((8,5),(9,5)),7).
move(7,((9,5),(10,5)),8).
move(7,((10,5),(10,4)),9).
move(7,((10,4),(10,3)),10).
move(7,((10,3),(9,3)),11).
move(7,((9,3),(8,3)),12).
move(7,((8,3),(7,3)),13).
move(7,((7,3),(6,3)),14).
move(7,((6,3),(6,4)),15).
move(7,((6,4),(6,3)),16).
move(7,((6,3),(6,4)),17).
move(7,((6,4),(6,5)),22).
move(7,((6,5),(6,4)),23).
move(7,((6,4),(6,3)),27).
move(7,((6,3),(6,4)),28).
move(7,((6,4),(6,5)),30).
move(7,((6,5),(6,4)),31).
move(7,((6,4),(6,3)),33).
move(7,((6,3),(7,3)),34).
move(7,((7,3),(8,3)),37).
move(7,((8,3),(9,3)),38).
move(7,((9,3),(10,3)),39).
move(8,((7,6),(6,6)),3).
move(8,((6,6),(6,5)),4).
move(8,((6,5),(6,4)),5).
move(8,((6,4),(7,4)),6).
move(8,((7,4),(6,4)),37).
move(8,((6,4),(5,4)),38).
move(8,((5,4),(4,4)),39).
move(8,((4,4),(3,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.229s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1.234s

Choices      : 382      (Domain: 382)
Conflicts    : 22       (Analyzed: 22)
Restarts     : 0       
Model-Level  : 283.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 22       (Deleted: 0)
  Binary     : 1        (Ratio:   4.55%)
  Ternary    : 1        (Ratio:   4.55%)
  Conflict   : 22       (Average Length:   13.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 22       (Average:  4.50 Max:  16 Sum:     99)
  Executed   : 22       (Average:  4.50 Max:  16 Sum:     99 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279632   (Original: 259761)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106466  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hStrange.lp
%%%%%
move(1,((8,6),(7,6)),2).
move(1,((7,6),(7,5)),5).
move(1,((7,5),(7,4)),6).
move(1,((7,4),(8,4)),7).
move(1,((8,4),(8,3)),8).
move(1,((8,3),(8,2)),9).
move(1,((8,2),(9,2)),10).
move(1,((9,2),(10,2)),11).
move(1,((10,2),(10,1)),12).
move(1,((10,1),(11,1)),13).
move(1,((11,1),(10,1)),14).
move(1,((10,1),(10,2)),15).
move(1,((10,2),(9,2)),16).
move(1,((9,2),(8,2)),17).
move(1,((8,2),(8,3)),18).
move(1,((8,3),(8,4)),19).
move(1,((8,4),(7,4)),35).
move(1,((7,4),(6,4)),36).
move(1,((6,4),(5,4)),37).
move(1,((5,4),(4,4)),38).
move(1,((4,4),(3,4)),39).
move(1,((3,4),(3,3)),40).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(2,2)),8).
move(2,((2,2),(1,2)),9).
move(2,((1,2),(1,1)),10).
move(2,((1,1),(1,2)),11).
move(2,((1,2),(2,2)),12).
move(2,((2,2),(2,3)),13).
move(2,((2,3),(2,4)),14).
move(2,((2,4),(3,4)),36).
move(2,((3,4),(2,4)),37).
move(2,((2,4),(2,3)),38).
move(2,((2,3),(3,3)),39).
move(2,((3,3),(4,3)),40).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(3,1)),8).
move(3,((3,1),(2,1)),9).
move(3,((2,1),(2,2)),10).
move(3,((2,2),(2,3)),11).
move(3,((2,3),(2,4)),12).
move(3,((2,4),(3,4)),14).
move(3,((3,4),(3,3)),20).
move(3,((3,3),(4,3)),21).
move(3,((4,3),(5,3)),22).
move(3,((5,3),(5,2)),23).
move(3,((5,2),(4,2)),24).
move(3,((4,2),(3,2)),25).
move(3,((3,2),(2,2)),26).
move(3,((2,2),(2,3)),27).
move(3,((2,3),(2,2)),34).
move(3,((2,2),(2,3)),35).
move(3,((2,3),(2,4)),36).
move(3,((2,4),(2,3)),37).
move(3,((2,3),(3,3)),38).
move(3,((3,3),(4,3)),39).
move(3,((4,3),(5,3)),40).
move(4,((3,6),(3,5)),2).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(3,3)),5).
move(4,((3,3),(3,2)),6).
move(4,((3,2),(2,2)),7).
move(4,((2,2),(1,2)),8).
move(4,((1,2),(1,1)),9).
move(4,((1,1),(2,1)),10).
move(4,((2,1),(2,2)),11).
move(4,((2,2),(3,2)),12).
move(4,((3,2),(3,3)),13).
move(4,((3,3),(3,2)),20).
move(4,((3,2),(3,3)),21).
move(4,((3,3),(3,4)),22).
move(4,((3,4),(3,5)),34).
move(4,((3,5),(3,4)),35).
move(4,((3,4),(3,3)),36).
move(4,((3,3),(4,3)),37).
move(4,((4,3),(5,3)),38).
move(4,((5,3),(6,3)),39).
move(4,((6,3),(7,3)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(4,2)),6).
move(5,((4,2),(4,1)),7).
move(5,((4,1),(4,2)),8).
move(5,((4,2),(4,3)),9).
move(5,((4,3),(4,4)),10).
move(5,((4,4),(4,3)),34).
move(5,((4,3),(5,3)),35).
move(5,((5,3),(6,3)),36).
move(5,((6,3),(6,4)),37).
move(5,((6,4),(7,4)),38).
move(5,((7,4),(8,4)),39).
move(5,((8,4),(8,3)),40).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(7,2)),8).
move(6,((7,2),(7,1)),9).
move(6,((7,1),(8,1)),10).
move(6,((8,1),(9,1)),11).
move(6,((9,1),(9,2)),12).
move(6,((9,2),(8,2)),13).
move(6,((8,2),(7,2)),14).
move(6,((7,2),(6,2)),15).
move(6,((6,2),(5,2)),16).
move(6,((5,2),(5,3)),17).
move(6,((5,3),(5,4)),18).
move(6,((5,4),(5,5)),34).
move(6,((5,5),(6,5)),35).
move(6,((6,5),(7,5)),36).
move(6,((7,5),(8,5)),37).
move(6,((8,5),(8,4)),38).
move(6,((8,4),(9,4)),39).
move(6,((9,4),(9,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(7,5)),4).
move(7,((7,5),(8,5)),5).
move(7,((8,5),(9,5)),7).
move(7,((9,5),(9,4)),8).
move(7,((9,4),(9,3)),9).
move(7,((9,3),(10,3)),10).
move(7,((10,3),(11,3)),11).
move(7,((11,3),(11,2)),12).
move(7,((11,2),(10,2)),13).
move(7,((10,2),(9,2)),14).
move(7,((9,2),(8,2)),15).
move(7,((8,2),(7,2)),16).
move(7,((7,2),(6,2)),17).
move(7,((6,2),(6,3)),18).
move(7,((6,3),(6,4)),19).
move(7,((6,4),(6,3)),35).
move(7,((6,3),(7,3)),36).
move(7,((7,3),(8,3)),37).
move(7,((8,3),(9,3)),38).
move(7,((9,3),(10,3)),39).
move(8,((7,6),(7,5)),2).
move(8,((7,5),(7,4)),3).
move(8,((7,4),(6,4)),4).
move(8,((6,4),(7,4)),5).
move(8,((7,4),(7,3)),6).
move(8,((7,3),(7,4)),8).
move(8,((7,4),(7,5)),21).
move(8,((7,5),(7,4)),22).
move(8,((7,4),(6,4)),35).
move(8,((6,4),(5,4)),36).
move(8,((5,4),(4,4)),37).
move(8,((4,4),(3,4)),38).
move(8,((3,4),(2,4)),39).
move(8,((2,4),(3,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.254s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1.250s

Choices      : 327      (Domain: 327)
Conflicts    : 12       (Analyzed: 12)
Restarts     : 0       
Model-Level  : 281.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 12       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 12       (Average Length:   21.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 12       (Average:  3.83 Max:   8 Sum:     46)
  Executed   : 12       (Average:  3.83 Max:   8 Sum:     46 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279632   (Original: 259761)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106466  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

