%%%%%
%Standard
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(7,4)),8).
move(1,((7,4),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(2,((3,3),(4,3)),5).
move(2,((4,3),(4,4)),6).
move(2,((4,4),(5,4)),7).
move(2,((5,4),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(3,3)),5).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),4).
move(4,((5,3),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(4,((7,3),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(5,((7,3),(7,2)),6).
move(5,((7,2),(7,3)),7).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(8,4)),6).
move(7,((8,4),(9,4)),7).
move(7,((9,4),(8,4)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(9,6)),4).
move(8,((9,6),(9,5)),5).
move(8,((9,5),(9,4)),6).
move(8,((9,4),(10,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(7,5)),4).
move(9,((7,5),(7,4)),6).
move(9,((7,4),(7,5)),7).
move(9,((7,5),(7,4)),9).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),6).
move(10,((4,5),(4,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(2,6)),9).
move(11,((2,6),(2,5)),10).
move(11,((2,5),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.662s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.672s

Choices      : 1040    
Conflicts    : 47       (Analyzed: 47)
Restarts     : 0       
Model-Level  : 446.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 47       (Deleted: 0)
  Binary     : 8        (Ratio:  17.02%)
  Ternary    : 2        (Ratio:   4.26%)
  Conflict   : 47       (Average Length:   18.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 47       (Average: 12.64 Max:  70 Sum:    594)
  Executed   : 47       (Average: 12.64 Max:  70 Sum:    594 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353468   (Original: 327181)
  Choice     : 440     
Atoms        : 141635  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,5)),4).
move(2,((2,5),(3,5)),5).
move(2,((3,5),(4,5)),6).
move(2,((4,5),(5,5)),7).
move(2,((5,5),(5,4)),8).
move(2,((5,4),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(2,5)),2).
move(3,((2,5),(1,5)),3).
move(3,((1,5),(2,5)),5).
move(3,((2,5),(3,5)),6).
move(3,((3,5),(3,4)),7).
move(3,((3,4),(3,3)),8).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),4).
move(4,((5,3),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(4,((7,3),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(6,5)),3).
move(5,((6,5),(7,5)),4).
move(5,((7,5),(7,4)),6).
move(5,((7,4),(7,3)),7).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),5).
move(7,((9,5),(9,4)),7).
move(7,((9,4),(8,4)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),4).
move(8,((8,3),(9,3)),5).
move(8,((9,3),(10,3)),6).
move(8,((10,3),(10,4)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(9,4)),6).
move(9,((9,4),(8,4)),7).
move(9,((8,4),(7,4)),9).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(7,4)),3).
move(10,((7,4),(6,4)),4).
move(10,((6,4),(5,4)),5).
move(10,((5,4),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(2,6)),9).
move(11,((2,6),(2,5)),10).
move(11,((2,5),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.672s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.672s

Choices      : 1257     (Domain: 173)
Conflicts    : 51       (Analyzed: 51)
Restarts     : 0       
Model-Level  : 589.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 51       (Deleted: 0)
  Binary     : 10       (Ratio:  19.61%)
  Ternary    : 1        (Ratio:   1.96%)
  Conflict   : 51       (Average Length:   18.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 51       (Average: 13.10 Max: 108 Sum:    668)
  Executed   : 51       (Average: 13.10 Max: 108 Sum:    668 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353788   (Original: 327501)
  Choice     : 440     
  Heuristic  : 184     
Atoms        : 141771  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(5,4)),6).
move(1,((5,4),(6,4)),7).
move(1,((6,4),(6,3)),8).
move(1,((6,3),(6,2)),9).
move(1,((6,2),(7,2)),10).
move(1,((7,2),(8,2)),11).
move(1,((8,2),(8,3)),12).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(2,((4,4),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(4,((9,4),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(8,4)),3).
move(6,((8,4),(8,3)),4).
move(6,((8,3),(8,2)),5).
move(6,((8,2),(7,2)),6).
move(6,((7,2),(6,2)),7).
move(6,((6,2),(5,2)),8).
move(6,((5,2),(4,2)),9).
move(6,((4,2),(4,3)),10).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),3).
move(7,((7,4),(8,4)),4).
move(8,((7,6),(8,6)),1).
move(8,((8,6),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(10,5)),4).
move(8,((10,5),(10,4)),5).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(7,4)),5).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(5,5)),7).
move(11,((5,5),(4,5)),8).
move(11,((4,5),(3,5)),9).
move(11,((3,5),(3,4)),10).
move(11,((3,4),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.694s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 391      (Domain: 391)
Conflicts    : 2        (Analyzed: 2)
Restarts     : 0       
Model-Level  : 379.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 2        (Deleted: 0)
  Binary     : 1        (Ratio:  50.00%)
  Ternary    : 1        (Ratio:  50.00%)
  Conflict   : 2        (Average Length:    2.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 2        (Average:  6.00 Max:   9 Sum:     12)
  Executed   : 2        (Average:  6.00 Max:   9 Sum:     12 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378794   (Original: 352639)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141782  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),5).
move(1,((5,6),(6,6)),6).
move(1,((6,6),(7,6)),7).
move(1,((7,6),(8,6)),8).
move(1,((8,6),(8,5)),9).
move(1,((8,5),(8,4)),10).
move(1,((8,4),(7,4)),11).
move(1,((7,4),(6,4)),12).
move(1,((6,4),(6,5)),13).
move(1,((6,5),(7,5)),14).
move(1,((7,5),(8,5)),15).
move(1,((8,5),(8,6)),16).
move(1,((8,6),(7,6)),17).
move(1,((7,6),(7,5)),18).
move(1,((7,5),(7,4)),19).
move(1,((7,4),(7,3)),20).
move(1,((7,3),(7,2)),21).
move(1,((7,2),(6,2)),25).
move(1,((6,2),(7,2)),26).
move(1,((7,2),(8,2)),28).
move(1,((8,2),(8,1)),30).
move(1,((8,1),(8,2)),32).
move(1,((8,2),(8,3)),33).
move(1,((8,3),(9,3)),34).
move(1,((9,3),(10,3)),35).
move(1,((10,3),(9,3)),36).
move(1,((9,3),(8,3)),38).
move(1,((8,3),(7,3)),39).
move(1,((7,3),(8,3)),40).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),8).
move(2,((3,3),(4,3)),9).
move(2,((4,3),(5,3)),10).
move(2,((5,3),(5,2)),11).
move(2,((5,2),(5,3)),12).
move(2,((5,3),(5,4)),13).
move(2,((5,4),(5,5)),14).
move(2,((5,5),(5,4)),22).
move(2,((5,4),(4,4)),24).
move(2,((4,4),(5,4)),27).
move(2,((5,4),(5,5)),29).
move(2,((5,5),(5,4)),32).
move(2,((5,4),(6,4)),33).
move(2,((6,4),(6,5)),34).
move(2,((6,5),(5,5)),35).
move(2,((5,5),(5,4)),36).
move(2,((5,4),(5,5)),37).
move(2,((5,5),(5,4)),38).
move(2,((5,4),(5,3)),39).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(4,4)),6).
move(3,((4,4),(5,4)),7).
move(3,((5,4),(6,4)),8).
move(3,((6,4),(6,3)),9).
move(3,((6,3),(7,3)),10).
move(3,((7,3),(7,2)),11).
move(3,((7,2),(8,2)),12).
move(3,((8,2),(8,3)),13).
move(3,((8,3),(7,3)),14).
move(3,((7,3),(7,4)),16).
move(3,((7,4),(6,4)),17).
move(3,((6,4),(6,3)),19).
move(3,((6,3),(5,3)),21).
move(3,((5,3),(4,3)),24).
move(3,((4,3),(4,2)),27).
move(3,((4,2),(5,2)),30).
move(3,((5,2),(6,2)),34).
move(3,((6,2),(5,2)),35).
move(3,((5,2),(5,3)),37).
move(3,((5,3),(4,3)),38).
move(3,((4,3),(3,3)),39).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(5,4)),3).
move(4,((5,4),(5,3)),6).
move(4,((5,3),(4,3)),7).
move(4,((4,3),(5,3)),8).
move(4,((5,3),(6,3)),10).
move(4,((6,3),(5,3)),11).
move(4,((5,3),(5,4)),12).
move(4,((5,4),(6,4)),13).
move(4,((6,4),(7,4)),14).
move(4,((7,4),(8,4)),15).
move(4,((8,4),(8,3)),17).
move(4,((8,3),(9,3)),19).
move(4,((9,3),(9,4)),20).
move(4,((9,4),(9,3)),21).
move(4,((9,3),(9,4)),22).
move(4,((9,4),(10,4)),25).
move(4,((10,4),(10,3)),26).
move(4,((10,3),(9,3)),27).
move(4,((9,3),(9,2)),28).
move(4,((9,2),(9,1)),29).
move(4,((9,1),(10,1)),30).
move(4,((10,1),(9,1)),32).
move(4,((9,1),(9,2)),33).
move(4,((9,2),(8,2)),38).
move(4,((8,2),(8,3)),39).
move(4,((8,3),(9,3)),40).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(5,6)),2).
move(5,((5,6),(6,6)),3).
move(5,((6,6),(6,5)),4).
move(5,((6,5),(6,4)),5).
move(5,((6,4),(6,3)),7).
move(5,((6,3),(7,3)),8).
move(5,((7,3),(7,2)),9).
move(5,((7,2),(8,2)),10).
move(5,((8,2),(8,3)),11).
move(5,((8,3),(7,3)),12).
move(5,((7,3),(6,3)),13).
move(5,((6,3),(6,4)),14).
move(5,((6,4),(6,5)),15).
move(5,((6,5),(7,5)),16).
move(5,((7,5),(7,4)),17).
move(5,((7,4),(8,4)),18).
move(5,((8,4),(9,4)),19).
move(5,((9,4),(9,5)),20).
move(5,((9,5),(9,6)),21).
move(5,((9,6),(9,5)),22).
move(5,((9,5),(10,5)),23).
move(5,((10,5),(11,5)),24).
move(5,((11,5),(11,6)),25).
move(5,((11,6),(11,5)),26).
move(5,((11,5),(10,5)),27).
move(5,((10,5),(10,4)),29).
move(5,((10,4),(10,5)),30).
move(5,((10,5),(10,4)),31).
move(5,((10,4),(9,4)),32).
move(5,((9,4),(8,4)),33).
move(5,((8,4),(8,3)),34).
move(5,((8,3),(8,2)),35).
move(5,((8,2),(8,3)),36).
move(5,((8,3),(7,3)),38).
move(5,((7,3),(7,2)),39).
move(5,((7,2),(7,3)),40).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(10,5)),3).
move(6,((10,5),(10,4)),5).
move(6,((10,4),(10,3)),6).
move(6,((10,3),(9,3)),7).
move(6,((9,3),(8,3)),8).
move(6,((8,3),(7,3)),9).
move(6,((7,3),(8,3)),10).
move(6,((8,3),(7,3)),11).
move(6,((7,3),(6,3)),12).
move(6,((6,3),(6,2)),13).
move(6,((6,2),(5,2)),22).
move(6,((5,2),(5,3)),24).
move(6,((5,3),(6,3)),25).
move(6,((6,3),(5,3)),26).
move(6,((5,3),(5,4)),34).
move(6,((5,4),(4,4)),36).
move(6,((4,4),(5,4)),37).
move(6,((5,4),(4,4)),38).
move(6,((4,4),(4,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),3).
move(7,((5,5),(6,5)),5).
move(7,((6,5),(7,5)),6).
move(7,((7,5),(8,5)),7).
move(7,((8,5),(8,4)),8).
move(7,((8,4),(9,4)),9).
move(7,((9,4),(10,4)),10).
move(7,((10,4),(9,4)),11).
move(7,((9,4),(9,3)),12).
move(7,((9,3),(10,3)),13).
move(7,((10,3),(10,4)),15).
move(7,((10,4),(10,5)),16).
move(7,((10,5),(11,5)),18).
move(7,((11,5),(10,5)),19).
move(7,((10,5),(9,5)),21).
move(7,((9,5),(8,5)),22).
move(7,((8,5),(7,5)),23).
move(7,((7,5),(8,5)),26).
move(7,((8,5),(8,4)),27).
move(7,((8,4),(7,4)),28).
move(7,((7,4),(7,5)),29).
move(7,((7,5),(8,5)),31).
move(7,((8,5),(8,4)),32).
move(7,((8,4),(8,5)),33).
move(7,((8,5),(9,5)),34).
move(7,((9,5),(8,5)),36).
move(7,((8,5),(7,5)),37).
move(7,((7,5),(8,5)),39).
move(7,((8,5),(8,4)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(8,5)),4).
move(8,((8,5),(9,5)),5).
move(8,((9,5),(10,5)),6).
move(8,((10,5),(10,4)),7).
move(8,((10,4),(10,3)),9).
move(8,((10,3),(10,2)),10).
move(8,((10,2),(11,2)),11).
move(8,((11,2),(11,3)),21).
move(8,((11,3),(10,3)),29).
move(8,((10,3),(10,4)),30).
move(8,((10,4),(10,3)),31).
move(8,((10,3),(9,3)),33).
move(8,((9,3),(10,3)),34).
move(8,((10,3),(10,2)),35).
move(8,((10,2),(10,3)),37).
move(8,((10,3),(9,3)),38).
move(8,((9,3),(10,3)),39).
move(8,((10,3),(10,4)),40).
move(9,((10,6),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(9,2)),7).
move(9,((9,2),(10,2)),8).
move(9,((10,2),(11,2)),9).
move(9,((11,2),(11,1)),10).
move(9,((11,1),(10,1)),11).
move(9,((10,1),(9,1)),12).
move(9,((9,1),(9,2)),13).
move(9,((9,2),(8,2)),14).
move(9,((8,2),(7,2)),15).
move(9,((7,2),(7,3)),16).
move(9,((7,3),(7,4)),18).
move(9,((7,4),(8,4)),19).
move(9,((8,4),(7,4)),20).
move(9,((7,4),(7,3)),22).
move(9,((7,3),(7,4)),23).
move(9,((7,4),(7,3)),24).
move(9,((7,3),(8,3)),25).
move(9,((8,3),(8,2)),26).
move(9,((8,2),(8,3)),28).
move(9,((8,3),(9,3)),29).
move(9,((9,3),(9,2)),30).
move(9,((9,2),(10,2)),32).
move(9,((10,2),(11,2)),34).
move(9,((11,2),(11,3)),35).
move(9,((11,3),(10,3)),36).
move(9,((10,3),(10,4)),37).
move(9,((10,4),(9,4)),38).
move(9,((9,4),(8,4)),39).
move(9,((8,4),(7,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,3)),3).
move(10,((8,3),(8,4)),4).
move(10,((8,4),(8,3)),5).
move(10,((8,3),(8,2)),6).
move(10,((8,2),(8,1)),7).
move(10,((8,1),(9,1)),8).
move(10,((9,1),(10,1)),9).
move(10,((10,1),(9,1)),10).
move(10,((9,1),(8,1)),11).
move(10,((8,1),(7,1)),12).
move(10,((7,1),(6,1)),13).
move(10,((6,1),(5,1)),14).
move(10,((5,1),(5,2)),15).
move(10,((5,2),(4,2)),17).
move(10,((4,2),(3,2)),19).
move(10,((3,2),(3,3)),20).
move(10,((3,3),(3,4)),22).
move(10,((3,4),(2,4)),23).
move(10,((2,4),(2,3)),25).
move(10,((2,3),(2,4)),27).
move(10,((2,4),(2,3)),30).
move(10,((2,3),(3,3)),32).
move(10,((3,3),(4,3)),33).
move(10,((4,3),(4,2)),34).
move(10,((4,2),(4,3)),35).
move(10,((4,3),(5,3)),36).
move(10,((5,3),(6,3)),37).
move(10,((6,3),(6,4)),38).
move(10,((6,4),(5,4)),39).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(10,4)),3).
move(11,((10,4),(10,3)),4).
move(11,((10,3),(10,2)),5).
move(11,((10,2),(11,2)),8).
move(11,((11,2),(11,3)),9).
move(11,((11,3),(10,3)),10).
move(11,((10,3),(10,4)),11).
move(11,((10,4),(11,4)),13).
move(11,((11,4),(10,4)),14).
move(11,((10,4),(10,5)),15).
move(11,((10,5),(9,5)),16).
move(11,((9,5),(8,5)),20).
move(11,((8,5),(7,5)),21).
move(11,((7,5),(6,5)),22).
move(11,((6,5),(6,4)),25).
move(11,((6,4),(6,3)),26).
move(11,((6,3),(7,3)),27).
move(11,((7,3),(6,3)),29).
move(11,((6,3),(6,4)),30).
move(11,((6,4),(6,5)),31).
move(11,((6,5),(5,5)),32).
move(11,((5,5),(4,5)),33).
move(11,((4,5),(4,6)),34).
move(11,((4,6),(3,6)),35).
move(11,((3,6),(3,5)),36).
move(11,((3,5),(4,5)),37).
move(11,((4,5),(3,5)),38).
move(11,((3,5),(2,5)),39).
move(11,((2,5),(2,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.316s (Solving: 0.64s 1st Model: 0.64s Unsat: 0.00s)
CPU Time     : 2.297s

Choices      : 15344    (Domain: 4370)
Conflicts    : 369      (Analyzed: 369)
Restarts     : 2        (Average: 184.50 Last: 140)
Model-Level  : 716.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 369      (Deleted: 0)
  Binary     : 63       (Ratio:  17.07%)
  Ternary    : 29       (Ratio:   7.86%)
  Conflict   : 369      (Average Length:   37.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 369      (Average: 39.63 Max: 790 Sum:  14624)
  Executed   : 369      (Average: 39.63 Max: 790 Sum:  14624 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378794   (Original: 352639)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141782  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(8,6)),7).
move(1,((8,6),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(2,((4,4),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(4,((9,4),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(5,((7,3),(7,2)),6).
move(5,((7,2),(7,3)),8).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(9,6)),2).
move(6,((9,6),(9,5)),4).
move(6,((9,5),(8,5)),5).
move(6,((8,5),(7,5)),6).
move(6,((7,5),(6,5)),7).
move(6,((6,5),(5,5)),8).
move(6,((5,5),(5,4)),10).
move(6,((5,4),(4,4)),11).
move(6,((4,4),(4,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(7,4)),8).
move(7,((7,4),(8,4)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(9,4)),4).
move(8,((9,4),(9,5)),5).
move(8,((9,5),(9,4)),6).
move(8,((9,4),(10,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(9,5)),2).
move(9,((9,5),(9,4)),3).
move(9,((9,4),(8,4)),4).
move(9,((8,4),(8,3)),5).
move(9,((8,3),(8,4)),7).
move(9,((8,4),(9,4)),8).
move(9,((9,4),(9,5)),9).
move(9,((9,5),(8,5)),10).
move(9,((8,5),(7,5)),11).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(8,6)),2).
move(10,((8,6),(8,5)),4).
move(10,((8,5),(8,4)),5).
move(10,((8,4),(7,4)),6).
move(10,((7,4),(6,4)),7).
move(10,((6,4),(5,4)),8).
move(10,((5,4),(4,4)),9).
move(10,((4,4),(4,5)),10).
move(10,((4,5),(4,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(10,4)),3).
move(11,((10,4),(9,4)),5).
move(11,((9,4),(8,4)),6).
move(11,((8,4),(7,4)),7).
move(11,((7,4),(6,4)),8).
move(11,((6,4),(5,4)),9).
move(11,((5,4),(4,4)),10).
move(11,((4,4),(3,4)),11).
move(11,((3,4),(2,4)),12).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.659s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.656s

Choices      : 470      (Domain: 64)
Conflicts    : 8        (Analyzed: 8)
Restarts     : 0       
Model-Level  : 408.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 8        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 8        (Average Length:   91.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 8        (Average:  7.75 Max:  17 Sum:     62)
  Executed   : 8        (Average:  7.75 Max:  17 Sum:     62 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354826   (Original: 328561)
  Choice     : 440     
  Heuristic  : 1140     (Original: 1162)
Atoms        : 141853  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(8,6)),7).
move(1,((8,6),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(2,2)),4).
move(2,((2,2),(2,1)),5).
move(2,((2,1),(3,1)),6).
move(2,((3,1),(4,1)),7).
move(2,((4,1),(5,1)),8).
move(2,((5,1),(5,2)),9).
move(2,((5,2),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(4,4)),3).
move(3,((4,4),(4,5)),6).
move(3,((4,5),(4,4)),7).
move(3,((4,4),(4,3)),8).
move(3,((4,3),(3,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),4).
move(4,((5,3),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(4,((7,3),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(5,2)),4).
move(5,((5,2),(6,2)),6).
move(5,((6,2),(7,2)),7).
move(5,((7,2),(7,3)),8).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(8,5)),2).
move(6,((8,5),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(5,4)),6).
move(6,((5,4),(4,4)),8).
move(6,((4,4),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(9,4)),7).
move(7,((9,4),(8,4)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,4)),4).
move(8,((7,4),(8,4)),5).
move(8,((8,4),(9,4)),6).
move(8,((9,4),(10,4)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(9,5)),2).
move(9,((9,5),(8,5)),9).
move(9,((8,5),(8,4)),10).
move(9,((8,4),(7,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(5,4)),5).
move(10,((5,4),(5,3)),6).
move(10,((5,3),(4,3)),7).
move(10,((4,3),(3,3)),8).
move(10,((3,3),(3,4)),9).
move(10,((3,4),(4,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(5,5)),7).
move(11,((5,5),(4,5)),8).
move(11,((4,5),(3,5)),9).
move(11,((3,5),(2,5)),10).
move(11,((2,5),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.678s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 2339     (Domain: 1354)
Conflicts    : 45       (Analyzed: 45)
Restarts     : 0       
Model-Level  : 1845.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 45       (Deleted: 0)
  Binary     : 7        (Ratio:  15.56%)
  Ternary    : 2        (Ratio:   4.44%)
  Conflict   : 45       (Average Length:   20.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 45       (Average: 10.98 Max:  69 Sum:    494)
  Executed   : 45       (Average: 10.98 Max:  69 Sum:    494 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 355027   (Original: 328747)
  Choice     : 440     
  Heuristic  : 1423     (Original: 1430)
Atoms        : 141771  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(7,4)),8).
move(1,((7,4),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(5,5)),4).
move(2,((5,5),(6,5)),5).
move(2,((6,5),(6,4)),6).
move(2,((6,4),(5,4)),7).
move(2,((5,4),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),4).
move(4,((5,3),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(4,((7,3),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(5,2)),4).
move(5,((5,2),(5,3)),5).
move(5,((5,3),(6,3)),6).
move(5,((6,3),(7,3)),7).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(8,6)),4).
move(7,((8,6),(9,6)),5).
move(7,((9,6),(9,5)),6).
move(7,((9,5),(9,4)),7).
move(7,((9,4),(8,4)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(10,5)),4).
move(8,((10,5),(11,5)),5).
move(8,((11,5),(11,4)),6).
move(8,((11,4),(10,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(7,5)),4).
move(9,((7,5),(7,6)),5).
move(9,((7,6),(7,5)),6).
move(9,((7,5),(8,5)),7).
move(9,((8,5),(7,5)),8).
move(9,((7,5),(7,4)),9).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),6).
move(10,((4,5),(4,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(2,6)),9).
move(11,((2,6),(2,5)),10).
move(11,((2,5),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.721s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.719s

Choices      : 1110     (Domain: 581)
Conflicts    : 57       (Analyzed: 57)
Restarts     : 0       
Model-Level  : 438.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 57       (Deleted: 0)
  Binary     : 11       (Ratio:  19.30%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 57       (Average Length:   16.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 57       (Average: 11.79 Max:  61 Sum:    672)
  Executed   : 57       (Average: 11.79 Max:  61 Sum:    672 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378807   (Original: 352641)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141794  
Disjunctions : 0        (Original: 1)
Bodies       : 247623   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128049   (Atom=Atom: 470 Body=Body: 482 Other: 127097)
Tight        : Yes
Variables    : 246824   (Eliminated:    0 Frozen: 126446)
Constraints  : 678181   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(1,5)),3).
move(1,((1,5),(1,4)),4).
move(1,((1,4),(2,4)),5).
move(1,((2,4),(2,3)),6).
move(1,((2,3),(1,3)),7).
move(1,((1,3),(2,3)),9).
move(1,((2,3),(3,3)),10).
move(1,((3,3),(4,3)),11).
move(1,((4,3),(4,4)),12).
move(1,((4,4),(5,4)),13).
move(1,((5,4),(5,5)),15).
move(1,((5,5),(5,6)),16).
move(1,((5,6),(5,5)),17).
move(1,((5,5),(4,5)),18).
move(1,((4,5),(4,4)),19).
move(1,((4,4),(4,5)),20).
move(1,((4,5),(3,5)),21).
move(1,((3,5),(2,5)),22).
move(1,((2,5),(2,4)),24).
move(1,((2,4),(2,5)),25).
move(1,((2,5),(2,4)),29).
move(1,((2,4),(2,3)),30).
move(1,((2,3),(2,2)),31).
move(1,((2,2),(3,2)),32).
move(1,((3,2),(4,2)),33).
move(1,((4,2),(5,2)),34).
move(1,((5,2),(5,3)),35).
move(1,((5,3),(6,3)),36).
move(1,((6,3),(6,2)),37).
move(1,((6,2),(6,3)),38).
move(1,((6,3),(7,3)),39).
move(1,((7,3),(8,3)),40).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(2,4)),8).
move(2,((2,4),(2,5)),9).
move(2,((2,5),(2,4)),10).
move(2,((2,4),(2,3)),11).
move(2,((2,3),(3,3)),12).
move(2,((3,3),(4,3)),13).
move(2,((4,3),(3,3)),14).
move(2,((3,3),(4,3)),15).
move(2,((4,3),(4,4)),16).
move(2,((4,4),(5,4)),17).
move(2,((5,4),(5,3)),18).
move(2,((5,3),(4,3)),19).
move(2,((4,3),(4,4)),20).
move(2,((4,4),(5,4)),21).
move(2,((5,4),(5,3)),22).
move(2,((5,3),(4,3)),23).
move(2,((4,3),(5,3)),25).
move(2,((5,3),(4,3)),28).
move(2,((4,3),(3,3)),30).
move(2,((3,3),(2,3)),31).
move(2,((2,3),(2,4)),32).
move(2,((2,4),(2,5)),33).
move(2,((2,5),(2,4)),34).
move(2,((2,4),(2,3)),35).
move(2,((2,3),(3,3)),36).
move(2,((3,3),(4,3)),37).
move(2,((4,3),(3,3)),38).
move(2,((3,3),(4,3)),39).
move(2,((4,3),(5,3)),40).
move(3,((3,6),(3,5)),3).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,4)),7).
move(3,((3,4),(3,3)),9).
move(3,((3,3),(3,4)),10).
move(3,((3,4),(3,3)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,4)),6).
move(4,((4,4),(5,4)),7).
move(4,((5,4),(5,3)),8).
move(4,((5,3),(4,3)),9).
move(4,((4,3),(4,4)),10).
move(4,((4,4),(4,5)),11).
move(4,((4,5),(4,4)),13).
move(4,((4,4),(4,5)),15).
move(4,((4,5),(4,4)),17).
move(4,((4,4),(5,4)),18).
move(4,((5,4),(5,3)),19).
move(4,((5,3),(4,3)),20).
move(4,((4,3),(4,4)),21).
move(4,((4,4),(4,5)),23).
move(4,((4,5),(5,5)),25).
move(4,((5,5),(6,5)),26).
move(4,((6,5),(6,4)),27).
move(4,((6,4),(6,3)),29).
move(4,((6,3),(5,3)),33).
move(4,((5,3),(4,3)),34).
move(4,((4,3),(5,3)),36).
move(4,((5,3),(6,3)),37).
move(4,((6,3),(7,3)),38).
move(4,((7,3),(8,3)),39).
move(4,((8,3),(9,3)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,4)),6).
move(5,((5,4),(6,4)),7).
move(5,((6,4),(7,4)),8).
move(5,((7,4),(7,3)),9).
move(5,((7,3),(6,3)),10).
move(5,((6,3),(5,3)),11).
move(5,((5,3),(5,4)),12).
move(5,((5,4),(5,3)),13).
move(5,((5,3),(5,4)),15).
move(5,((5,4),(5,3)),17).
move(5,((5,3),(6,3)),18).
move(5,((6,3),(6,4)),19).
move(5,((6,4),(7,4)),20).
move(5,((7,4),(7,3)),21).
move(5,((7,3),(6,3)),22).
move(5,((6,3),(5,3)),24).
move(5,((5,3),(5,4)),25).
move(5,((5,4),(5,3)),30).
move(5,((5,3),(5,4)),33).
move(5,((5,4),(5,3)),37).
move(5,((5,3),(6,3)),39).
move(5,((6,3),(7,3)),40).
move(6,((9,6),(9,5)),3).
move(6,((9,5),(9,4)),4).
move(6,((9,4),(9,3)),5).
move(6,((9,3),(8,3)),7).
move(6,((8,3),(8,4)),8).
move(6,((8,4),(8,3)),10).
move(6,((8,3),(8,4)),11).
move(6,((8,4),(9,4)),12).
move(6,((9,4),(9,3)),13).
move(6,((9,3),(9,4)),14).
move(6,((9,4),(8,4)),16).
move(6,((8,4),(9,4)),18).
move(6,((9,4),(9,3)),21).
move(6,((9,3),(9,4)),23).
move(6,((9,4),(9,3)),24).
move(6,((9,3),(8,3)),25).
move(6,((8,3),(7,3)),26).
move(6,((7,3),(8,3)),27).
move(6,((8,3),(9,3)),28).
move(6,((9,3),(9,4)),29).
move(6,((9,4),(9,3)),30).
move(6,((9,3),(9,4)),31).
move(6,((9,4),(9,5)),33).
move(6,((9,5),(8,5)),34).
move(6,((8,5),(7,5)),35).
move(6,((7,5),(6,5)),36).
move(6,((6,5),(5,5)),37).
move(6,((5,5),(4,5)),38).
move(6,((4,5),(4,4)),39).
move(6,((4,4),(4,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(7,4)),5).
move(7,((7,4),(7,5)),6).
move(7,((7,5),(6,5)),7).
move(7,((6,5),(6,4)),9).
move(7,((6,4),(6,5)),18).
move(7,((6,5),(7,5)),20).
move(7,((7,5),(7,4)),21).
move(7,((7,4),(8,4)),22).
move(7,((8,4),(7,4)),23).
move(7,((7,4),(8,4)),24).
move(7,((8,4),(7,4)),25).
move(7,((7,4),(8,4)),26).
move(7,((8,4),(7,4)),27).
move(7,((7,4),(8,4)),28).
move(7,((8,4),(7,4)),29).
move(7,((7,4),(6,4)),30).
move(7,((6,4),(7,4)),39).
move(7,((7,4),(8,4)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(8,4)),5).
move(8,((8,4),(9,4)),6).
move(8,((9,4),(8,4)),10).
move(8,((8,4),(7,4)),11).
move(8,((7,4),(8,4)),20).
move(8,((8,4),(9,4)),22).
move(8,((9,4),(8,4)),23).
move(8,((8,4),(9,4)),24).
move(8,((9,4),(8,4)),25).
move(8,((8,4),(9,4)),26).
move(8,((9,4),(8,4)),27).
move(8,((8,4),(9,4)),28).
move(8,((9,4),(8,4)),29).
move(8,((8,4),(7,4)),30).
move(8,((7,4),(8,4)),31).
move(8,((8,4),(7,4)),33).
move(8,((7,4),(8,4)),38).
move(8,((8,4),(9,4)),39).
move(8,((9,4),(10,4)),40).
move(9,((10,6),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(10,4)),6).
move(9,((10,4),(10,5)),7).
move(9,((10,5),(10,4)),9).
move(9,((10,4),(9,4)),16).
move(9,((9,4),(10,4)),18).
move(9,((10,4),(10,5)),36).
move(9,((10,5),(9,5)),37).
move(9,((9,5),(8,5)),38).
move(9,((8,5),(7,5)),39).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,5)),5).
move(10,((8,5),(8,4)),6).
move(10,((8,4),(7,4)),7).
move(10,((7,4),(7,5)),8).
move(10,((7,5),(8,5)),9).
move(10,((8,5),(7,5)),10).
move(10,((7,5),(8,5)),11).
move(10,((8,5),(8,4)),12).
move(10,((8,4),(8,5)),13).
move(10,((8,5),(7,5)),14).
move(10,((7,5),(6,5)),15).
move(10,((6,5),(5,5)),16).
move(10,((5,5),(4,5)),17).
move(10,((4,5),(4,4)),18).
move(10,((4,4),(5,4)),19).
move(10,((5,4),(6,4)),21).
move(10,((6,4),(5,4)),22).
move(10,((5,4),(4,4)),23).
move(10,((4,4),(4,5)),25).
move(10,((4,5),(5,5)),26).
move(10,((5,5),(6,5)),27).
move(10,((6,5),(7,5)),28).
move(10,((7,5),(8,5)),29).
move(10,((8,5),(8,4)),30).
move(10,((8,4),(8,5)),31).
move(10,((8,5),(7,5)),32).
move(10,((7,5),(8,5)),33).
move(10,((8,5),(8,4)),34).
move(10,((8,4),(8,5)),35).
move(10,((8,5),(7,5)),36).
move(10,((7,5),(6,5)),37).
move(10,((6,5),(5,5)),38).
move(10,((5,5),(4,5)),39).
move(10,((4,5),(4,4)),40).
move(11,((11,6),(10,6)),3).
move(11,((10,6),(10,5)),4).
move(11,((10,5),(11,5)),6).
move(11,((11,5),(11,4)),7).
move(11,((11,4),(10,4)),8).
move(11,((10,4),(11,4)),9).
move(11,((11,4),(11,5)),11).
move(11,((11,5),(10,5)),12).
move(11,((10,5),(10,4)),16).
move(11,((10,4),(10,5)),18).
move(11,((10,5),(9,5)),30).
move(11,((9,5),(9,6)),31).
move(11,((9,6),(8,6)),32).
move(11,((8,6),(7,6)),33).
move(11,((7,6),(7,5)),34).
move(11,((7,5),(6,5)),35).
move(11,((6,5),(5,5)),36).
move(11,((5,5),(4,5)),37).
move(11,((4,5),(3,5)),38).
move(11,((3,5),(2,5)),39).
move(11,((2,5),(2,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.702s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.703s

Choices      : 560      (Domain: 560)
Conflicts    : 33       (Analyzed: 33)
Restarts     : 0       
Model-Level  : 367.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 33       (Deleted: 0)
  Binary     : 3        (Ratio:   9.09%)
  Ternary    : 6        (Ratio:  18.18%)
  Conflict   : 33       (Average Length:   13.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 33       (Average:  5.85 Max:  55 Sum:    193)
  Executed   : 33       (Average:  5.85 Max:  55 Sum:    193 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378783   (Original: 352628)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141771  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(1,2)),9).
move(1,((1,2),(1,1)),10).
move(1,((1,1),(1,2)),11).
move(1,((1,2),(2,2)),12).
move(1,((2,2),(2,3)),13).
move(1,((2,3),(2,4)),14).
move(1,((2,4),(2,3)),34).
move(1,((2,3),(3,3)),35).
move(1,((3,3),(4,3)),36).
move(1,((4,3),(5,3)),37).
move(1,((5,3),(6,3)),38).
move(1,((6,3),(7,3)),39).
move(1,((7,3),(8,3)),40).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(3,2)),7).
move(2,((3,2),(3,1)),8).
move(2,((3,1),(2,1)),9).
move(2,((2,1),(2,2)),10).
move(2,((2,2),(2,3)),11).
move(2,((2,3),(2,4)),12).
move(2,((2,4),(3,4)),14).
move(2,((3,4),(3,3)),34).
move(2,((3,3),(3,2)),35).
move(2,((3,2),(4,2)),38).
move(2,((4,2),(5,2)),39).
move(2,((5,2),(5,3)),40).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),5).
move(3,((3,3),(3,2)),6).
move(3,((3,2),(2,2)),7).
move(3,((2,2),(2,1)),8).
move(3,((2,1),(1,1)),9).
move(3,((1,1),(2,1)),10).
move(3,((2,1),(2,2)),11).
move(3,((2,2),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(4,3)),33).
move(3,((4,3),(4,4)),34).
move(3,((4,4),(5,4)),35).
move(3,((5,4),(4,4)),37).
move(3,((4,4),(3,4)),38).
move(3,((3,4),(3,3)),39).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,2)),6).
move(4,((4,2),(4,1)),7).
move(4,((4,1),(4,2)),8).
move(4,((4,2),(4,3)),9).
move(4,((4,3),(4,4)),11).
move(4,((4,4),(5,4)),33).
move(4,((5,4),(5,3)),34).
move(4,((5,3),(6,3)),35).
move(4,((6,3),(5,3)),36).
move(4,((5,3),(6,3)),37).
move(4,((6,3),(7,3)),38).
move(4,((7,3),(8,3)),39).
move(4,((8,3),(9,3)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(5,2)),8).
move(5,((5,2),(5,3)),9).
move(5,((5,3),(5,4)),10).
move(5,((5,4),(5,3)),33).
move(5,((5,3),(5,2)),34).
move(5,((5,2),(5,3)),35).
move(5,((5,3),(5,2)),36).
move(5,((5,2),(6,2)),37).
move(5,((6,2),(7,2)),38).
move(5,((7,2),(7,3)),40).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,2)),7).
move(6,((9,2),(10,2)),8).
move(6,((10,2),(10,1)),9).
move(6,((10,1),(11,1)),10).
move(6,((11,1),(10,1)),11).
move(6,((10,1),(10,2)),12).
move(6,((10,2),(9,2)),13).
move(6,((9,2),(9,3)),14).
move(6,((9,3),(9,4)),15).
move(6,((9,4),(9,5)),33).
move(6,((9,5),(9,4)),34).
move(6,((9,4),(8,4)),35).
move(6,((8,4),(7,4)),36).
move(6,((7,4),(6,4)),37).
move(6,((6,4),(5,4)),38).
move(6,((5,4),(4,4)),39).
move(6,((4,4),(4,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(6,1)),7).
move(7,((6,1),(6,2)),8).
move(7,((6,2),(6,3)),9).
move(7,((6,3),(6,2)),10).
move(7,((6,2),(6,3)),11).
move(7,((6,3),(6,4)),12).
move(7,((6,4),(6,5)),33).
move(7,((6,5),(7,5)),35).
move(7,((7,5),(8,5)),36).
move(7,((8,5),(9,5)),37).
move(7,((9,5),(8,5)),39).
move(7,((8,5),(8,4)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(7,4)),10).
move(8,((7,4),(6,4)),33).
move(8,((6,4),(6,5)),35).
move(8,((6,5),(7,5)),36).
move(8,((7,5),(8,5)),37).
move(8,((8,5),(8,4)),38).
move(8,((8,4),(9,4)),39).
move(8,((9,4),(10,4)),40).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(10,6)),3).
move(9,((10,6),(10,5)),4).
move(9,((10,5),(10,4)),6).
move(9,((10,4),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(9,((11,3),(11,2)),9).
move(9,((11,2),(10,2)),10).
move(9,((10,2),(10,3)),11).
move(9,((10,3),(10,4)),12).
move(9,((10,4),(10,5)),33).
move(9,((10,5),(9,5)),34).
move(9,((9,5),(9,6)),35).
move(9,((9,6),(8,6)),36).
move(9,((8,6),(7,6)),37).
move(9,((7,6),(7,5)),38).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,3)),5).
move(10,((8,3),(8,2)),6).
move(10,((8,2),(8,1)),7).
move(10,((8,1),(9,1)),8).
move(10,((9,1),(9,2)),9).
move(10,((9,2),(8,2)),10).
move(10,((8,2),(8,3)),11).
move(10,((8,3),(8,4)),12).
move(10,((8,4),(7,4)),33).
move(10,((7,4),(7,5)),34).
move(10,((7,5),(8,5)),35).
move(10,((8,5),(8,4)),36).
move(10,((8,4),(7,4)),37).
move(10,((7,4),(6,4)),38).
move(10,((6,4),(5,4)),39).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(10,2)),7).
move(11,((10,2),(11,2)),8).
move(11,((11,2),(11,1)),9).
move(11,((11,1),(11,2)),10).
move(11,((11,2),(10,2)),11).
move(11,((10,2),(10,3)),12).
move(11,((10,3),(9,3)),32).
move(11,((9,3),(9,4)),33).
move(11,((9,4),(8,4)),34).
move(11,((8,4),(7,4)),35).
move(11,((7,4),(6,4)),36).
move(11,((6,4),(5,4)),37).
move(11,((5,4),(4,4)),38).
move(11,((4,4),(3,4)),39).
move(11,((3,4),(2,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.728s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.719s

Choices      : 457      (Domain: 457)
Conflicts    : 16       (Analyzed: 16)
Restarts     : 0       
Model-Level  : 375.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 16       (Deleted: 0)
  Binary     : 1        (Ratio:   6.25%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 16       (Average Length:   24.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 16       (Average:  5.12 Max:  13 Sum:     82)
  Executed   : 16       (Average:  5.12 Max:  13 Sum:     82 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378783   (Original: 352628)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141771  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

