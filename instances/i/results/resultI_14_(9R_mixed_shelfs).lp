%%%%%
%Standard
%%%%%
move(1,((1,1),(1,2)),1).
move(1,((1,2),(2,2)),2).
move(1,((2,2),(3,2)),3).
move(1,((3,2),(4,2)),4).
move(1,((4,2),(5,2)),5).
move(1,((5,2),(6,2)),6).
move(1,((6,2),(6,3)),7).
move(1,((6,3),(7,3)),8).
move(1,((7,3),(8,3)),9).
move(1,((8,3),(9,3)),40).
move(2,((2,1),(3,1)),1).
move(2,((3,1),(4,1)),2).
move(2,((4,1),(4,2)),3).
move(2,((4,2),(4,1)),4).
move(2,((4,1),(4,2)),5).
move(2,((4,2),(5,2)),6).
move(2,((5,2),(6,2)),7).
move(2,((6,2),(7,2)),40).
move(3,((3,1),(4,1)),1).
move(3,((4,1),(5,1)),2).
move(3,((5,1),(6,1)),3).
move(3,((6,1),(7,1)),4).
move(3,((7,1),(8,1)),5).
move(3,((8,1),(9,1)),6).
move(3,((9,1),(9,2)),40).
move(4,((1,2),(2,2)),1).
move(4,((2,2),(3,2)),2).
move(4,((3,2),(3,3)),3).
move(4,((3,3),(4,3)),4).
move(4,((4,3),(5,3)),5).
move(4,((5,3),(6,3)),6).
move(4,((6,3),(5,3)),7).
move(4,((5,3),(6,3)),8).
move(4,((6,3),(7,3)),40).
move(5,((2,2),(2,1)),1).
move(5,((2,1),(3,1)),2).
move(5,((3,1),(4,1)),3).
move(5,((4,1),(5,1)),4).
move(5,((5,1),(6,1)),5).
move(5,((6,1),(7,1)),6).
move(5,((7,1),(8,1)),40).
move(6,((3,2),(4,2)),1).
move(6,((4,2),(5,2)),2).
move(6,((5,2),(6,2)),3).
move(6,((6,2),(7,2)),4).
move(6,((7,2),(8,2)),40).
move(7,((1,3),(2,3)),1).
move(7,((2,3),(3,3)),2).
move(7,((3,3),(4,3)),3).
move(7,((4,3),(5,3)),4).
move(7,((5,3),(6,3)),5).
move(7,((6,3),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(7,((8,3),(8,2)),8).
move(7,((8,2),(8,3)),40).
move(8,((2,3),(3,3)),1).
move(8,((3,3),(4,3)),2).
move(8,((4,3),(5,3)),3).
move(8,((5,3),(6,3)),4).
move(8,((6,3),(7,3)),5).
move(8,((7,3),(8,3)),6).
move(8,((8,3),(8,2)),7).
move(8,((8,2),(8,1)),8).
move(8,((8,1),(9,1)),40).
move(9,((3,3),(4,3)),1).
move(9,((4,3),(5,3)),2).
move(9,((5,3),(5,2)),3).
move(9,((5,2),(5,1)),5).
move(9,((5,1),(6,1)),6).
move(9,((6,1),(7,1)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.677s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.656s

Choices      : 343     
Conflicts    : 12       (Analyzed: 12)
Restarts     : 0       
Model-Level  : 308.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 12       (Deleted: 0)
  Binary     : 1        (Ratio:   8.33%)
  Ternary    : 1        (Ratio:   8.33%)
  Conflict   : 12       (Average Length:   39.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 12       (Average:  2.92 Max:   9 Sum:     35)
  Executed   : 12       (Average:  2.92 Max:   9 Sum:     35 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 112792   (Original: 103825)
  Choice     : 360     
Atoms        : 46261   
Bodies       : 79873    (Original: 70906)
  Count      : 1683     (Original: 2097)
Equivalences : 40400    (Atom=Atom: 386 Body=Body: 396 Other: 39618)
Tight        : Yes
Variables    : 78957    (Eliminated:    0 Frozen: 39135)
Constraints  : 217152   (Binary:  77.4% Ternary:  16.2% Other:   6.5%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,1),(1,2)),1).
move(1,((1,2),(2,2)),2).
move(1,((2,2),(3,2)),3).
move(1,((3,2),(4,2)),4).
move(1,((4,2),(5,2)),5).
move(1,((5,2),(6,2)),6).
move(1,((6,2),(6,3)),7).
move(1,((6,3),(7,3)),8).
move(1,((7,3),(8,3)),9).
move(1,((8,3),(9,3)),40).
move(2,((2,1),(3,1)),1).
move(2,((3,1),(4,1)),2).
move(2,((4,1),(4,2)),3).
move(2,((4,2),(4,1)),4).
move(2,((4,1),(4,2)),5).
move(2,((4,2),(5,2)),6).
move(2,((5,2),(6,2)),7).
move(2,((6,2),(7,2)),40).
move(3,((3,1),(4,1)),1).
move(3,((4,1),(5,1)),2).
move(3,((5,1),(6,1)),3).
move(3,((6,1),(7,1)),4).
move(3,((7,1),(8,1)),5).
move(3,((8,1),(9,1)),6).
move(3,((9,1),(9,2)),40).
move(4,((1,2),(2,2)),1).
move(4,((2,2),(3,2)),2).
move(4,((3,2),(3,3)),3).
move(4,((3,3),(4,3)),4).
move(4,((4,3),(5,3)),5).
move(4,((5,3),(6,3)),6).
move(4,((6,3),(5,3)),7).
move(4,((5,3),(6,3)),8).
move(4,((6,3),(7,3)),40).
move(5,((2,2),(2,1)),1).
move(5,((2,1),(3,1)),2).
move(5,((3,1),(4,1)),3).
move(5,((4,1),(5,1)),4).
move(5,((5,1),(6,1)),5).
move(5,((6,1),(7,1)),6).
move(5,((7,1),(8,1)),40).
move(6,((3,2),(4,2)),1).
move(6,((4,2),(5,2)),2).
move(6,((5,2),(6,2)),3).
move(6,((6,2),(7,2)),4).
move(6,((7,2),(8,2)),40).
move(7,((1,3),(2,3)),1).
move(7,((2,3),(3,3)),2).
move(7,((3,3),(4,3)),3).
move(7,((4,3),(5,3)),4).
move(7,((5,3),(6,3)),5).
move(7,((6,3),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(7,((8,3),(8,2)),8).
move(7,((8,2),(8,3)),40).
move(8,((2,3),(3,3)),1).
move(8,((3,3),(4,3)),2).
move(8,((4,3),(5,3)),3).
move(8,((5,3),(6,3)),4).
move(8,((6,3),(7,3)),5).
move(8,((7,3),(8,3)),6).
move(8,((8,3),(8,2)),7).
move(8,((8,2),(8,1)),8).
move(8,((8,1),(9,1)),40).
move(9,((3,3),(4,3)),1).
move(9,((4,3),(5,3)),2).
move(9,((5,3),(5,2)),3).
move(9,((5,2),(5,1)),5).
move(9,((5,1),(6,1)),6).
move(9,((6,1),(7,1)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.595s (Solving: 0.01s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 0.578s

Choices      : 343     
Conflicts    : 12       (Analyzed: 12)
Restarts     : 0       
Model-Level  : 308.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 12       (Deleted: 0)
  Binary     : 1        (Ratio:   8.33%)
  Ternary    : 1        (Ratio:   8.33%)
  Conflict   : 12       (Average Length:   39.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 12       (Average:  2.92 Max:   9 Sum:     35)
  Executed   : 12       (Average:  2.92 Max:   9 Sum:     35 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 112914   (Original: 103947)
  Choice     : 360     
Atoms        : 46383   
Bodies       : 79873    (Original: 70906)
  Count      : 1683     (Original: 2097)
Equivalences : 40400    (Atom=Atom: 386 Body=Body: 396 Other: 39618)
Tight        : Yes
Variables    : 78957    (Eliminated:    0 Frozen: 39135)
Constraints  : 217152   (Binary:  77.4% Ternary:  16.2% Other:   6.5%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,1),(1,2)),1).
move(1,((1,2),(2,2)),2).
move(1,((2,2),(3,2)),3).
move(1,((3,2),(4,2)),4).
move(1,((4,2),(5,2)),5).
move(1,((5,2),(6,2)),6).
move(1,((6,2),(6,3)),7).
move(1,((6,3),(7,3)),8).
move(1,((7,3),(8,3)),9).
move(1,((8,3),(9,3)),40).
move(2,((2,1),(3,1)),1).
move(2,((3,1),(4,1)),2).
move(2,((4,1),(4,2)),3).
move(2,((4,2),(4,1)),4).
move(2,((4,1),(4,2)),5).
move(2,((4,2),(5,2)),6).
move(2,((5,2),(6,2)),7).
move(2,((6,2),(7,2)),40).
move(3,((3,1),(4,1)),1).
move(3,((4,1),(5,1)),2).
move(3,((5,1),(6,1)),3).
move(3,((6,1),(7,1)),4).
move(3,((7,1),(8,1)),5).
move(3,((8,1),(9,1)),6).
move(3,((9,1),(9,2)),40).
move(4,((1,2),(2,2)),1).
move(4,((2,2),(3,2)),2).
move(4,((3,2),(3,3)),3).
move(4,((3,3),(4,3)),4).
move(4,((4,3),(5,3)),5).
move(4,((5,3),(6,3)),6).
move(4,((6,3),(5,3)),7).
move(4,((5,3),(6,3)),8).
move(4,((6,3),(7,3)),40).
move(5,((2,2),(2,1)),1).
move(5,((2,1),(3,1)),2).
move(5,((3,1),(4,1)),3).
move(5,((4,1),(5,1)),4).
move(5,((5,1),(6,1)),5).
move(5,((6,1),(7,1)),6).
move(5,((7,1),(8,1)),40).
move(6,((3,2),(4,2)),1).
move(6,((4,2),(5,2)),2).
move(6,((5,2),(6,2)),3).
move(6,((6,2),(7,2)),4).
move(6,((7,2),(8,2)),40).
move(7,((1,3),(2,3)),1).
move(7,((2,3),(3,3)),2).
move(7,((3,3),(4,3)),3).
move(7,((4,3),(5,3)),4).
move(7,((5,3),(6,3)),5).
move(7,((6,3),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(7,((8,3),(8,2)),8).
move(7,((8,2),(8,3)),40).
move(8,((2,3),(3,3)),1).
move(8,((3,3),(4,3)),2).
move(8,((4,3),(5,3)),3).
move(8,((5,3),(6,3)),4).
move(8,((6,3),(7,3)),5).
move(8,((7,3),(8,3)),6).
move(8,((8,3),(8,2)),7).
move(8,((8,2),(8,1)),8).
move(8,((8,1),(9,1)),40).
move(9,((3,3),(4,3)),1).
move(9,((4,3),(5,3)),2).
move(9,((5,3),(5,2)),3).
move(9,((5,2),(5,1)),5).
move(9,((5,1),(6,1)),6).
move(9,((6,1),(7,1)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.582s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.578s

Choices      : 343     
Conflicts    : 12       (Analyzed: 12)
Restarts     : 0       
Model-Level  : 308.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 12       (Deleted: 0)
  Binary     : 1        (Ratio:   8.33%)
  Ternary    : 1        (Ratio:   8.33%)
  Conflict   : 12       (Average Length:   39.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 12       (Average:  2.92 Max:   9 Sum:     35)
  Executed   : 12       (Average:  2.92 Max:   9 Sum:     35 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 112923   (Original: 103956)
  Choice     : 360     
Atoms        : 46392   
Bodies       : 79873    (Original: 70906)
  Count      : 1683     (Original: 2097)
Equivalences : 40400    (Atom=Atom: 386 Body=Body: 396 Other: 39618)
Tight        : Yes
Variables    : 78957    (Eliminated:    0 Frozen: 39135)
Constraints  : 217152   (Binary:  77.4% Ternary:  16.2% Other:   6.5%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,1),(1,2)),1).
move(1,((1,2),(2,2)),2).
move(1,((2,2),(3,2)),3).
move(1,((3,2),(4,2)),4).
move(1,((4,2),(5,2)),5).
move(1,((5,2),(6,2)),6).
move(1,((6,2),(6,3)),7).
move(1,((6,3),(7,3)),8).
move(1,((7,3),(8,3)),9).
move(1,((8,3),(9,3)),40).
move(2,((2,1),(3,1)),1).
move(2,((3,1),(4,1)),2).
move(2,((4,1),(4,2)),3).
move(2,((4,2),(4,1)),4).
move(2,((4,1),(4,2)),5).
move(2,((4,2),(5,2)),6).
move(2,((5,2),(6,2)),7).
move(2,((6,2),(7,2)),40).
move(3,((3,1),(4,1)),1).
move(3,((4,1),(5,1)),2).
move(3,((5,1),(6,1)),3).
move(3,((6,1),(7,1)),4).
move(3,((7,1),(8,1)),5).
move(3,((8,1),(9,1)),6).
move(3,((9,1),(9,2)),40).
move(4,((1,2),(2,2)),1).
move(4,((2,2),(3,2)),2).
move(4,((3,2),(3,3)),3).
move(4,((3,3),(4,3)),4).
move(4,((4,3),(5,3)),5).
move(4,((5,3),(6,3)),6).
move(4,((6,3),(5,3)),7).
move(4,((5,3),(6,3)),8).
move(4,((6,3),(7,3)),40).
move(5,((2,2),(2,1)),1).
move(5,((2,1),(3,1)),2).
move(5,((3,1),(4,1)),3).
move(5,((4,1),(5,1)),4).
move(5,((5,1),(6,1)),5).
move(5,((6,1),(7,1)),6).
move(5,((7,1),(8,1)),40).
move(6,((3,2),(4,2)),1).
move(6,((4,2),(5,2)),2).
move(6,((5,2),(6,2)),3).
move(6,((6,2),(7,2)),4).
move(6,((7,2),(8,2)),40).
move(7,((1,3),(2,3)),1).
move(7,((2,3),(3,3)),2).
move(7,((3,3),(4,3)),3).
move(7,((4,3),(5,3)),4).
move(7,((5,3),(6,3)),5).
move(7,((6,3),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(7,((8,3),(8,2)),8).
move(7,((8,2),(8,3)),40).
move(8,((2,3),(3,3)),1).
move(8,((3,3),(4,3)),2).
move(8,((4,3),(5,3)),3).
move(8,((5,3),(6,3)),4).
move(8,((6,3),(7,3)),5).
move(8,((7,3),(8,3)),6).
move(8,((8,3),(8,2)),7).
move(8,((8,2),(8,1)),8).
move(8,((8,1),(9,1)),40).
move(9,((3,3),(4,3)),1).
move(9,((4,3),(5,3)),2).
move(9,((5,3),(5,2)),3).
move(9,((5,2),(5,1)),5).
move(9,((5,1),(6,1)),6).
move(9,((6,1),(7,1)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.684s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.641s

Choices      : 343     
Conflicts    : 12       (Analyzed: 12)
Restarts     : 0       
Model-Level  : 308.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 12       (Deleted: 0)
  Binary     : 1        (Ratio:   8.33%)
  Ternary    : 1        (Ratio:   8.33%)
  Conflict   : 12       (Average Length:   39.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 12       (Average:  2.92 Max:   9 Sum:     35)
  Executed   : 12       (Average:  2.92 Max:   9 Sum:     35 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 112923   (Original: 103956)
  Choice     : 360     
Atoms        : 46392   
Bodies       : 79873    (Original: 70906)
  Count      : 1683     (Original: 2097)
Equivalences : 40400    (Atom=Atom: 386 Body=Body: 396 Other: 39618)
Tight        : Yes
Variables    : 78957    (Eliminated:    0 Frozen: 39135)
Constraints  : 217152   (Binary:  77.4% Ternary:  16.2% Other:   6.5%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,1),(1,2)),1).
move(1,((1,2),(1,3)),2).
move(1,((1,3),(2,3)),3).
move(1,((2,3),(3,3)),4).
move(1,((3,3),(4,3)),5).
move(1,((4,3),(5,3)),6).
move(1,((5,3),(6,3)),7).
move(1,((6,3),(7,3)),8).
move(1,((7,3),(8,3)),9).
move(1,((8,3),(9,3)),40).
move(2,((2,1),(2,2)),2).
move(2,((2,2),(3,2)),3).
move(2,((3,2),(4,2)),4).
move(2,((4,2),(5,2)),5).
move(2,((5,2),(6,2)),6).
move(2,((6,2),(7,2)),40).
move(3,((3,1),(4,1)),1).
move(3,((4,1),(5,1)),2).
move(3,((5,1),(6,1)),3).
move(3,((6,1),(7,1)),4).
move(3,((7,1),(8,1)),5).
move(3,((8,1),(9,1)),6).
move(3,((9,1),(9,2)),40).
move(4,((1,2),(2,2)),1).
move(4,((2,2),(3,2)),2).
move(4,((3,2),(3,1)),3).
move(4,((3,1),(4,1)),4).
move(4,((4,1),(5,1)),5).
move(4,((5,1),(5,2)),6).
move(4,((5,2),(5,3)),7).
move(4,((5,3),(6,3)),8).
move(4,((6,3),(7,3)),40).
move(5,((2,2),(3,2)),1).
move(5,((3,2),(4,2)),2).
move(5,((4,2),(4,1)),3).
move(5,((4,1),(5,1)),4).
move(5,((5,1),(6,1)),5).
move(5,((6,1),(7,1)),6).
move(5,((7,1),(8,1)),40).
move(6,((3,2),(4,2)),1).
move(6,((4,2),(5,2)),2).
move(6,((5,2),(6,2)),3).
move(6,((6,2),(7,2)),4).
move(6,((7,2),(8,2)),40).
move(7,((1,3),(2,3)),1).
move(7,((2,3),(3,3)),2).
move(7,((3,3),(4,3)),3).
move(7,((4,3),(5,3)),4).
move(7,((5,3),(6,3)),5).
move(7,((6,3),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(7,((8,3),(8,2)),8).
move(7,((8,2),(8,3)),40).
move(8,((2,3),(3,3)),1).
move(8,((3,3),(4,3)),2).
move(8,((4,3),(5,3)),3).
move(8,((5,3),(6,3)),4).
move(8,((6,3),(7,3)),5).
move(8,((7,3),(8,3)),6).
move(8,((8,3),(8,2)),7).
move(8,((8,2),(8,1)),8).
move(8,((8,1),(9,1)),40).
move(9,((3,3),(4,3)),1).
move(9,((4,3),(5,3)),2).
move(9,((5,3),(5,2)),3).
move(9,((5,2),(6,2)),5).
move(9,((6,2),(6,1)),6).
move(9,((6,1),(7,1)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.600s (Solving: 0.01s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 0.594s

Choices      : 404     
Conflicts    : 19       (Analyzed: 19)
Restarts     : 0       
Model-Level  : 318.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 19       (Deleted: 0)
  Binary     : 6        (Ratio:  31.58%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 19       (Average Length:   28.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 19       (Average:  4.53 Max:  18 Sum:     86)
  Executed   : 19       (Average:  4.53 Max:  18 Sum:     86 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 113730   (Original: 104781)
  Choice     : 360     
  Heuristic  : 743      (Original: 761)
Atoms        : 46456   
Bodies       : 79873    (Original: 70906)
  Count      : 1683     (Original: 2097)
Equivalences : 40400    (Atom=Atom: 386 Body=Body: 396 Other: 39618)
Tight        : Yes
Variables    : 78957    (Eliminated:    0 Frozen: 39135)
Constraints  : 217152   (Binary:  77.4% Ternary:  16.2% Other:   6.5%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,1),(1,2)),1).
move(1,((1,2),(2,2)),2).
move(1,((2,2),(3,2)),3).
move(1,((3,2),(4,2)),4).
move(1,((4,2),(5,2)),5).
move(1,((5,2),(6,2)),6).
move(1,((6,2),(6,3)),7).
move(1,((6,3),(7,3)),8).
move(1,((7,3),(8,3)),9).
move(1,((8,3),(9,3)),40).
move(2,((2,1),(3,1)),1).
move(2,((3,1),(4,1)),2).
move(2,((4,1),(4,2)),3).
move(2,((4,2),(4,1)),4).
move(2,((4,1),(4,2)),5).
move(2,((4,2),(5,2)),6).
move(2,((5,2),(6,2)),7).
move(2,((6,2),(7,2)),40).
move(3,((3,1),(4,1)),1).
move(3,((4,1),(5,1)),2).
move(3,((5,1),(6,1)),3).
move(3,((6,1),(7,1)),4).
move(3,((7,1),(8,1)),5).
move(3,((8,1),(9,1)),6).
move(3,((9,1),(9,2)),40).
move(4,((1,2),(2,2)),1).
move(4,((2,2),(3,2)),2).
move(4,((3,2),(3,3)),3).
move(4,((3,3),(4,3)),4).
move(4,((4,3),(5,3)),5).
move(4,((5,3),(6,3)),6).
move(4,((6,3),(5,3)),7).
move(4,((5,3),(6,3)),8).
move(4,((6,3),(7,3)),40).
move(5,((2,2),(2,1)),1).
move(5,((2,1),(3,1)),2).
move(5,((3,1),(4,1)),3).
move(5,((4,1),(5,1)),4).
move(5,((5,1),(6,1)),5).
move(5,((6,1),(7,1)),6).
move(5,((7,1),(8,1)),40).
move(6,((3,2),(4,2)),1).
move(6,((4,2),(5,2)),2).
move(6,((5,2),(6,2)),3).
move(6,((6,2),(7,2)),4).
move(6,((7,2),(8,2)),40).
move(7,((1,3),(2,3)),1).
move(7,((2,3),(3,3)),2).
move(7,((3,3),(4,3)),3).
move(7,((4,3),(5,3)),4).
move(7,((5,3),(6,3)),5).
move(7,((6,3),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(7,((8,3),(8,2)),8).
move(7,((8,2),(8,3)),40).
move(8,((2,3),(3,3)),1).
move(8,((3,3),(4,3)),2).
move(8,((4,3),(5,3)),3).
move(8,((5,3),(6,3)),4).
move(8,((6,3),(7,3)),5).
move(8,((7,3),(8,3)),6).
move(8,((8,3),(8,2)),7).
move(8,((8,2),(8,1)),8).
move(8,((8,1),(9,1)),40).
move(9,((3,3),(4,3)),1).
move(9,((4,3),(5,3)),2).
move(9,((5,3),(5,2)),3).
move(9,((5,2),(5,1)),5).
move(9,((5,1),(6,1)),6).
move(9,((6,1),(7,1)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.596s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.578s

Choices      : 346     
Conflicts    : 13       (Analyzed: 13)
Restarts     : 0       
Model-Level  : 306.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 13       (Deleted: 0)
  Binary     : 1        (Ratio:   7.69%)
  Ternary    : 1        (Ratio:   7.69%)
  Conflict   : 13       (Average Length:   36.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 13       (Average:  3.08 Max:   9 Sum:     40)
  Executed   : 13       (Average:  3.08 Max:   9 Sum:     40 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 114376   (Original: 105424)
  Choice     : 360     
  Heuristic  : 1462     (Original: 1477)
Atoms        : 46383   
Bodies       : 79873    (Original: 70906)
  Count      : 1683     (Original: 2097)
Equivalences : 40400    (Atom=Atom: 386 Body=Body: 396 Other: 39618)
Tight        : Yes
Variables    : 78957    (Eliminated:    0 Frozen: 39135)
Constraints  : 217152   (Binary:  77.4% Ternary:  16.2% Other:   6.5%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,1),(1,2)),1).
move(1,((1,2),(1,3)),2).
move(1,((1,3),(2,3)),3).
move(1,((2,3),(3,3)),4).
move(1,((3,3),(4,3)),5).
move(1,((4,3),(5,3)),6).
move(1,((5,3),(6,3)),7).
move(1,((6,3),(7,3)),8).
move(1,((7,3),(8,3)),9).
move(1,((8,3),(9,3)),40).
move(2,((2,1),(3,1)),1).
move(2,((3,1),(4,1)),2).
move(2,((4,1),(5,1)),3).
move(2,((5,1),(5,2)),4).
move(2,((5,2),(6,2)),6).
move(2,((6,2),(7,2)),40).
move(3,((3,1),(4,1)),1).
move(3,((4,1),(5,1)),2).
move(3,((5,1),(6,1)),3).
move(3,((6,1),(7,1)),4).
move(3,((7,1),(8,1)),5).
move(3,((8,1),(9,1)),6).
move(3,((9,1),(9,2)),40).
move(4,((1,2),(2,2)),1).
move(4,((2,2),(3,2)),2).
move(4,((3,2),(4,2)),3).
move(4,((4,2),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(4,((5,3),(6,3)),8).
move(4,((6,3),(7,3)),40).
move(5,((2,2),(2,1)),1).
move(5,((2,1),(3,1)),2).
move(5,((3,1),(4,1)),3).
move(5,((4,1),(5,1)),4).
move(5,((5,1),(6,1)),5).
move(5,((6,1),(7,1)),6).
move(5,((7,1),(8,1)),40).
move(6,((3,2),(4,2)),1).
move(6,((4,2),(5,2)),2).
move(6,((5,2),(6,2)),3).
move(6,((6,2),(7,2)),4).
move(6,((7,2),(8,2)),40).
move(7,((1,3),(2,3)),1).
move(7,((2,3),(3,3)),2).
move(7,((3,3),(4,3)),3).
move(7,((4,3),(5,3)),4).
move(7,((5,3),(6,3)),5).
move(7,((6,3),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(7,((8,3),(8,2)),8).
move(7,((8,2),(8,3)),40).
move(8,((2,3),(3,3)),1).
move(8,((3,3),(4,3)),2).
move(8,((4,3),(5,3)),3).
move(8,((5,3),(6,3)),4).
move(8,((6,3),(7,3)),5).
move(8,((7,3),(8,3)),6).
move(8,((8,3),(8,2)),7).
move(8,((8,2),(8,1)),8).
move(8,((8,1),(9,1)),40).
move(9,((3,3),(4,3)),1).
move(9,((4,3),(5,3)),2).
move(9,((5,3),(6,3)),3).
move(9,((6,3),(6,2)),4).
move(9,((6,2),(6,1)),6).
move(9,((6,1),(7,1)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.591s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.578s

Choices      : 354      (Domain: 13)
Conflicts    : 10       (Analyzed: 10)
Restarts     : 0       
Model-Level  : 310.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 10       (Deleted: 0)
  Binary     : 1        (Ratio:  10.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 10       (Average Length:   46.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 10       (Average:  4.40 Max:   9 Sum:     44)
  Executed   : 10       (Average:  4.40 Max:   9 Sum:     44 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 121788   (Original: 112911)
  Choice     : 360     
  Heuristic  : 8856     (Original: 8946)
Atoms        : 46401   
Bodies       : 79873    (Original: 70906)
  Count      : 1683     (Original: 2097)
Equivalences : 40400    (Atom=Atom: 386 Body=Body: 396 Other: 39618)
Tight        : Yes
Variables    : 78957    (Eliminated:    0 Frozen: 39135)
Constraints  : 217152   (Binary:  77.4% Ternary:  16.2% Other:   6.5%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,1),(1,2)),1).
move(1,((1,2),(2,2)),2).
move(1,((2,2),(3,2)),3).
move(1,((3,2),(4,2)),4).
move(1,((4,2),(5,2)),5).
move(1,((5,2),(6,2)),6).
move(1,((6,2),(6,3)),7).
move(1,((6,3),(7,3)),8).
move(1,((7,3),(8,3)),9).
move(1,((8,3),(9,3)),40).
move(2,((2,1),(1,1)),1).
move(2,((1,1),(2,1)),2).
move(2,((2,1),(2,2)),3).
move(2,((2,2),(3,2)),4).
move(2,((3,2),(4,2)),5).
move(2,((4,2),(5,2)),6).
move(2,((5,2),(6,2)),7).
move(2,((6,2),(7,2)),40).
move(3,((3,1),(4,1)),1).
move(3,((4,1),(5,1)),2).
move(3,((5,1),(6,1)),3).
move(3,((6,1),(7,1)),4).
move(3,((7,1),(8,1)),5).
move(3,((8,1),(9,1)),6).
move(3,((9,1),(9,2)),40).
move(4,((1,2),(1,3)),1).
move(4,((1,3),(2,3)),2).
move(4,((2,3),(3,3)),3).
move(4,((3,3),(4,3)),4).
move(4,((4,3),(5,3)),5).
move(4,((5,3),(6,3)),6).
move(4,((6,3),(5,3)),7).
move(4,((5,3),(6,3)),8).
move(4,((6,3),(7,3)),40).
move(5,((2,2),(2,1)),1).
move(5,((2,1),(3,1)),2).
move(5,((3,1),(4,1)),3).
move(5,((4,1),(5,1)),4).
move(5,((5,1),(6,1)),5).
move(5,((6,1),(7,1)),6).
move(5,((7,1),(8,1)),40).
move(6,((3,2),(4,2)),1).
move(6,((4,2),(5,2)),2).
move(6,((5,2),(6,2)),3).
move(6,((6,2),(7,2)),4).
move(6,((7,2),(8,2)),40).
move(7,((1,3),(2,3)),1).
move(7,((2,3),(3,3)),2).
move(7,((3,3),(4,3)),3).
move(7,((4,3),(5,3)),4).
move(7,((5,3),(6,3)),5).
move(7,((6,3),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(7,((8,3),(8,2)),8).
move(7,((8,2),(8,3)),40).
move(8,((2,3),(3,3)),1).
move(8,((3,3),(4,3)),2).
move(8,((4,3),(5,3)),3).
move(8,((5,3),(6,3)),4).
move(8,((6,3),(7,3)),5).
move(8,((7,3),(8,3)),6).
move(8,((8,3),(8,2)),7).
move(8,((8,2),(8,1)),8).
move(8,((8,1),(9,1)),40).
move(9,((3,3),(3,2)),1).
move(9,((3,2),(3,1)),3).
move(9,((3,1),(4,1)),4).
move(9,((4,1),(5,1)),5).
move(9,((5,1),(6,1)),6).
move(9,((6,1),(7,1)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.577s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.578s

Choices      : 440     
Conflicts    : 21       (Analyzed: 21)
Restarts     : 0       
Model-Level  : 365.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 21       (Deleted: 0)
  Binary     : 5        (Ratio:  23.81%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 21       (Average Length:   26.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 21       (Average:  3.57 Max:  11 Sum:     75)
  Executed   : 21       (Average:  3.57 Max:  11 Sum:     75 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 121770   (Original: 112893)
  Choice     : 360     
  Heuristic  : 8856     (Original: 8946)
Atoms        : 46383   
Bodies       : 79873    (Original: 70906)
  Count      : 1683     (Original: 2097)
Equivalences : 40400    (Atom=Atom: 386 Body=Body: 396 Other: 39618)
Tight        : Yes
Variables    : 78957    (Eliminated:    0 Frozen: 39135)
Constraints  : 217152   (Binary:  77.4% Ternary:  16.2% Other:   6.5%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,1),(2,1)),1).
move(1,((2,1),(3,1)),2).
move(1,((3,1),(4,1)),3).
move(1,((4,1),(5,1)),4).
move(1,((5,1),(6,1)),5).
move(1,((6,1),(7,1)),6).
move(1,((7,1),(7,2)),7).
move(1,((7,2),(6,2)),8).
move(1,((6,2),(5,2)),9).
move(1,((5,2),(5,1)),10).
move(1,((5,1),(6,1)),11).
move(1,((6,1),(7,1)),12).
move(1,((7,1),(7,2)),13).
move(1,((7,2),(8,2)),14).
move(1,((8,2),(8,1)),15).
move(1,((8,1),(8,2)),16).
move(1,((8,2),(7,2)),17).
move(1,((7,2),(7,3)),18).
move(1,((7,3),(8,3)),19).
move(1,((8,3),(8,2)),20).
move(1,((8,2),(8,1)),21).
move(1,((8,1),(8,2)),22).
move(1,((8,2),(8,1)),23).
move(1,((8,1),(7,1)),24).
move(1,((7,1),(8,1)),25).
move(1,((8,1),(9,1)),26).
move(1,((9,1),(9,2)),27).
move(1,((9,2),(8,2)),28).
move(1,((8,2),(8,3)),29).
move(1,((8,3),(9,3)),30).
move(1,((9,3),(9,2)),31).
move(1,((9,2),(8,2)),32).
move(1,((8,2),(7,2)),33).
move(1,((7,2),(8,2)),34).
move(1,((8,2),(8,3)),37).
move(1,((8,3),(9,3)),38).
move(1,((9,3),(8,3)),39).
move(1,((8,3),(9,3)),40).
move(2,((2,1),(3,1)),1).
move(2,((3,1),(4,1)),2).
move(2,((4,1),(5,1)),3).
move(2,((5,1),(6,1)),4).
move(2,((6,1),(7,1)),5).
move(2,((7,1),(8,1)),6).
move(2,((8,1),(7,1)),7).
move(2,((7,1),(6,1)),8).
move(2,((6,1),(5,1)),9).
move(2,((5,1),(4,1)),10).
move(2,((4,1),(4,2)),11).
move(2,((4,2),(3,2)),12).
move(2,((3,2),(4,2)),13).
move(2,((4,2),(3,2)),14).
move(2,((3,2),(4,2)),19).
move(2,((4,2),(3,2)),20).
move(2,((3,2),(2,2)),22).
move(2,((2,2),(1,2)),24).
move(2,((1,2),(2,2)),25).
move(2,((2,2),(3,2)),28).
move(2,((3,2),(3,1)),29).
move(2,((3,1),(4,1)),30).
move(2,((4,1),(5,1)),31).
move(2,((5,1),(6,1)),32).
move(2,((6,1),(6,2)),33).
move(2,((6,2),(5,2)),34).
move(2,((5,2),(5,3)),35).
move(2,((5,3),(6,3)),36).
move(2,((6,3),(7,3)),37).
move(2,((7,3),(6,3)),38).
move(2,((6,3),(6,2)),39).
move(2,((6,2),(7,2)),40).
move(3,((3,1),(4,1)),1).
move(3,((4,1),(4,2)),2).
move(3,((4,2),(5,2)),3).
move(3,((5,2),(6,2)),4).
move(3,((6,2),(7,2)),5).
move(3,((7,2),(8,2)),6).
move(3,((8,2),(8,1)),7).
move(3,((8,1),(7,1)),8).
move(3,((7,1),(6,1)),9).
move(3,((6,1),(6,2)),10).
move(3,((6,2),(7,2)),11).
move(3,((7,2),(7,3)),12).
move(3,((7,3),(6,3)),13).
move(3,((6,3),(6,2)),15).
move(3,((6,2),(5,2)),16).
move(3,((5,2),(4,2)),17).
move(3,((4,2),(5,2)),19).
move(3,((5,2),(5,3)),20).
move(3,((5,3),(5,2)),21).
move(3,((5,2),(6,2)),23).
move(3,((6,2),(7,2)),25).
move(3,((7,2),(8,2)),27).
move(3,((8,2),(8,3)),28).
move(3,((8,3),(7,3)),29).
move(3,((7,3),(6,3)),31).
move(3,((6,3),(7,3)),32).
move(3,((7,3),(6,3)),33).
move(3,((6,3),(6,2)),34).
move(3,((6,2),(5,2)),35).
move(3,((5,2),(6,2)),36).
move(3,((6,2),(7,2)),37).
move(3,((7,2),(8,2)),38).
move(3,((8,2),(9,2)),40).
move(4,((1,2),(2,2)),1).
move(4,((2,2),(3,2)),2).
move(4,((3,2),(4,2)),3).
move(4,((4,2),(5,2)),4).
move(4,((5,2),(6,2)),5).
move(4,((6,2),(7,2)),6).
move(4,((7,2),(8,2)),7).
move(4,((8,2),(7,2)),8).
move(4,((7,2),(7,1)),10).
move(4,((7,1),(7,2)),12).
move(4,((7,2),(8,2)),13).
move(4,((8,2),(8,1)),14).
move(4,((8,1),(7,1)),15).
move(4,((7,1),(7,2)),16).
move(4,((7,2),(7,3)),17).
move(4,((7,3),(8,3)),18).
move(4,((8,3),(8,2)),19).
move(4,((8,2),(7,2)),20).
move(4,((7,2),(8,2)),21).
move(4,((8,2),(8,3)),22).
move(4,((8,3),(7,3)),23).
move(4,((7,3),(6,3)),24).
move(4,((6,3),(6,2)),25).
move(4,((6,2),(6,3)),26).
move(4,((6,3),(6,2)),27).
move(4,((6,2),(5,2)),28).
move(4,((5,2),(4,2)),29).
move(4,((4,2),(5,2)),30).
move(4,((5,2),(4,2)),31).
move(4,((4,2),(3,2)),32).
move(4,((3,2),(2,2)),34).
move(4,((2,2),(3,2)),35).
move(4,((3,2),(4,2)),36).
move(4,((4,2),(4,3)),37).
move(4,((4,3),(5,3)),38).
move(4,((5,3),(6,3)),39).
move(4,((6,3),(7,3)),40).
move(5,((2,2),(3,2)),1).
move(5,((3,2),(3,3)),2).
move(5,((3,3),(3,2)),3).
move(5,((3,2),(4,2)),4).
move(5,((4,2),(5,2)),5).
move(5,((5,2),(4,2)),6).
move(5,((4,2),(3,2)),7).
move(5,((3,2),(4,2)),8).
move(5,((4,2),(5,2)),10).
move(5,((5,2),(6,2)),11).
move(5,((6,2),(6,1)),12).
move(5,((6,1),(5,1)),13).
move(5,((5,1),(4,1)),14).
move(5,((4,1),(4,2)),15).
move(5,((4,2),(4,1)),16).
move(5,((4,1),(5,1)),17).
move(5,((5,1),(4,1)),18).
move(5,((4,1),(4,2)),20).
move(5,((4,2),(4,3)),21).
move(5,((4,3),(4,2)),22).
move(5,((4,2),(3,2)),23).
move(5,((3,2),(2,2)),24).
move(5,((2,2),(3,2)),25).
move(5,((3,2),(4,2)),26).
move(5,((4,2),(5,2)),27).
move(5,((5,2),(4,2)),28).
move(5,((4,2),(3,2)),29).
move(5,((3,2),(2,2)),31).
move(5,((2,2),(2,1)),32).
move(5,((2,1),(3,1)),33).
move(5,((3,1),(4,1)),34).
move(5,((4,1),(5,1)),35).
move(5,((5,1),(6,1)),36).
move(5,((6,1),(6,2)),37).
move(5,((6,2),(6,1)),38).
move(5,((6,1),(7,1)),39).
move(5,((7,1),(8,1)),40).
move(6,((3,2),(4,2)),1).
move(6,((4,2),(5,2)),2).
move(6,((5,2),(6,2)),3).
move(6,((6,2),(7,2)),4).
move(6,((7,2),(8,2)),5).
move(6,((8,2),(9,2)),6).
move(6,((9,2),(9,1)),7).
move(6,((9,1),(8,1)),8).
move(6,((8,1),(8,2)),9).
move(6,((8,2),(8,1)),11).
move(6,((8,1),(7,1)),13).
move(6,((7,1),(6,1)),14).
move(6,((6,1),(5,1)),15).
move(6,((5,1),(6,1)),16).
move(6,((6,1),(6,2)),17).
move(6,((6,2),(6,1)),19).
move(6,((6,1),(7,1)),20).
move(6,((7,1),(7,2)),21).
move(6,((7,2),(8,2)),23).
move(6,((8,2),(8,3)),25).
move(6,((8,3),(9,3)),27).
move(6,((9,3),(9,2)),28).
move(6,((9,2),(8,2)),29).
move(6,((8,2),(7,2)),30).
move(6,((7,2),(6,2)),31).
move(6,((6,2),(5,2)),32).
move(6,((5,2),(4,2)),33).
move(6,((4,2),(3,2)),34).
move(6,((3,2),(4,2)),35).
move(6,((4,2),(5,2)),36).
move(6,((5,2),(6,2)),38).
move(6,((6,2),(7,2)),39).
move(6,((7,2),(8,2)),40).
move(7,((1,3),(1,2)),1).
move(7,((1,2),(1,3)),2).
move(7,((1,3),(2,3)),3).
move(7,((2,3),(2,2)),4).
move(7,((2,2),(3,2)),6).
move(7,((3,2),(2,2)),7).
move(7,((2,2),(3,2)),8).
move(7,((3,2),(4,2)),10).
move(7,((4,2),(5,2)),11).
move(7,((5,2),(6,2)),13).
move(7,((6,2),(7,2)),14).
move(7,((7,2),(8,2)),15).
move(7,((8,2),(8,3)),16).
move(7,((8,3),(8,2)),17).
move(7,((8,2),(7,2)),18).
move(7,((7,2),(6,2)),20).
move(7,((6,2),(6,3)),21).
move(7,((6,3),(6,2)),22).
move(7,((6,2),(7,2)),23).
move(7,((7,2),(8,2)),25).
move(7,((8,2),(8,3)),27).
move(7,((8,3),(7,3)),28).
move(7,((7,3),(7,2)),29).
move(7,((7,2),(7,1)),30).
move(7,((7,1),(7,2)),31).
move(7,((7,2),(7,1)),32).
move(7,((7,1),(6,1)),35).
move(7,((6,1),(7,1)),36).
move(7,((7,1),(7,2)),38).
move(7,((7,2),(7,3)),39).
move(7,((7,3),(8,3)),40).
move(8,((2,3),(1,3)),1).
move(8,((1,3),(2,3)),2).
move(8,((2,3),(3,3)),3).
move(8,((3,3),(4,3)),4).
move(8,((4,3),(5,3)),5).
move(8,((5,3),(5,2)),6).
move(8,((5,2),(6,2)),7).
move(8,((6,2),(6,3)),8).
move(8,((6,3),(7,3)),9).
move(8,((7,3),(6,3)),12).
move(8,((6,3),(5,3)),13).
move(8,((5,3),(5,2)),14).
move(8,((5,2),(5,3)),15).
move(8,((5,3),(6,3)),16).
move(8,((6,3),(5,3)),17).
move(8,((5,3),(5,2)),18).
move(8,((5,2),(6,2)),19).
move(8,((6,2),(5,2)),20).
move(8,((5,2),(4,2)),21).
move(8,((4,2),(4,1)),22).
move(8,((4,1),(5,1)),23).
move(8,((5,1),(5,2)),24).
move(8,((5,2),(4,2)),25).
move(8,((4,2),(5,2)),26).
move(8,((5,2),(5,1)),27).
move(8,((5,1),(6,1)),28).
move(8,((6,1),(7,1)),29).
move(8,((7,1),(8,1)),30).
move(8,((8,1),(8,2)),31).
move(8,((8,2),(7,2)),32).
move(8,((7,2),(7,3)),33).
move(8,((7,3),(7,2)),34).
move(8,((7,2),(6,2)),35).
move(8,((6,2),(7,2)),36).
move(8,((7,2),(8,2)),37).
move(8,((8,2),(9,2)),38).
move(8,((9,2),(9,1)),40).
move(9,((3,3),(2,3)),1).
move(9,((2,3),(2,2)),2).
move(9,((2,2),(2,1)),3).
move(9,((2,1),(3,1)),4).
move(9,((3,1),(4,1)),5).
move(9,((4,1),(5,1)),6).
move(9,((5,1),(5,2)),7).
move(9,((5,2),(5,3)),8).
move(9,((5,3),(6,3)),9).
move(9,((6,3),(5,3)),10).
move(9,((5,3),(6,3)),11).
move(9,((6,3),(6,2)),12).
move(9,((6,2),(6,1)),13).
move(9,((6,1),(6,2)),14).
move(9,((6,2),(7,2)),15).
move(9,((7,2),(6,2)),16).
move(9,((6,2),(5,2)),17).
move(9,((5,2),(5,1)),18).
move(9,((5,1),(6,1)),20).
move(9,((6,1),(6,2)),21).
move(9,((6,2),(6,1)),22).
move(9,((6,1),(5,1)),24).
move(9,((5,1),(5,2)),25).
move(9,((5,2),(6,2)),26).
move(9,((6,2),(7,2)),27).
move(9,((7,2),(6,2)),28).
move(9,((6,2),(5,2)),29).
move(9,((5,2),(6,2)),30).
move(9,((6,2),(5,2)),31).
move(9,((5,2),(4,2)),32).
move(9,((4,2),(4,3)),33).
move(9,((4,3),(4,2)),34).
move(9,((4,2),(4,1)),35).
move(9,((4,1),(3,1)),36).
move(9,((3,1),(4,1)),37).
move(9,((4,1),(5,1)),38).
move(9,((5,1),(6,1)),39).
move(9,((6,1),(7,1)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.638s (Solving: 0.10s 1st Model: 0.10s Unsat: 0.00s)
CPU Time     : 0.641s

Choices      : 2950     (Domain: 2950)
Conflicts    : 200      (Analyzed: 200)
Restarts     : 1        (Average: 200.00 Last: 42)
Model-Level  : 221.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 200      (Deleted: 0)
  Binary     : 30       (Ratio:  15.00%)
  Ternary    : 25       (Ratio:  12.50%)
  Conflict   : 200      (Average Length:    9.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 200      (Average: 13.28 Max: 177 Sum:   2655)
  Executed   : 200      (Average: 13.28 Max: 177 Sum:   2655 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 121770   (Original: 112893)
  Choice     : 360     
  Heuristic  : 8856     (Original: 8946)
Atoms        : 46383   
Bodies       : 79873    (Original: 70906)
  Count      : 1683     (Original: 2097)
Equivalences : 40400    (Atom=Atom: 386 Body=Body: 396 Other: 39618)
Tight        : Yes
Variables    : 78957    (Eliminated:    0 Frozen: 39135)
Constraints  : 217152   (Binary:  77.4% Ternary:  16.2% Other:   6.5%)

