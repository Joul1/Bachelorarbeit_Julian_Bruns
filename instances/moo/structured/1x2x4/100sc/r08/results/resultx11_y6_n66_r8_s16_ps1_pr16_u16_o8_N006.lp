%%%%%
%Standard
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(4,6)),4).
move(1,((4,6),(3,6)),5).
move(1,((3,6),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(2,4)),8).
move(1,((2,4),(2,3)),9).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(1,3)),3).
move(2,((1,3),(2,3)),4).
move(2,((2,3),(3,3)),6).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(2,2)),4).
move(3,((2,2),(2,1)),5).
move(3,((2,1),(3,1)),6).
move(3,((3,1),(4,1)),7).
move(3,((4,1),(4,2)),9).
move(3,((4,2),(4,3)),10).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(3,3)),3).
move(4,((3,3),(3,2)),4).
move(4,((3,2),(3,1)),5).
move(4,((3,1),(4,1)),6).
move(4,((4,1),(4,2)),7).
move(4,((4,2),(4,3)),8).
move(4,((4,3),(5,3)),9).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(6,6)),4).
move(5,((6,6),(6,5)),6).
move(5,((6,5),(6,4)),7).
move(5,((6,4),(6,3)),8).
move(5,((6,3),(7,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(5,2)),4).
move(6,((5,2),(5,3)),5).
move(6,((5,3),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),4).
move(7,((6,2),(7,2)),5).
move(7,((7,2),(8,2)),6).
move(7,((8,2),(9,2)),7).
move(7,((9,2),(9,3)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(8,4)),4).
move(8,((8,4),(9,4)),6).
move(8,((9,4),(10,4)),7).
move(8,((10,4),(10,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.736s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.734s

Choices      : 723     
Conflicts    : 36       (Analyzed: 36)
Restarts     : 0       
Model-Level  : 264.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 36       (Deleted: 0)
  Binary     : 9        (Ratio:  25.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 36       (Average Length:   23.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 36       (Average: 12.75 Max:  50 Sum:    459)
  Executed   : 36       (Average: 12.75 Max:  50 Sum:    459 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 123157   (Original: 113614)
  Choice     : 160     
Atoms        : 51947   
Bodies       : 84220    (Original: 74677)
  Count      : 1172     (Original: 1569)
Equivalences : 45406    (Atom=Atom: 182 Body=Body: 191 Other: 45033)
Tight        : Yes
Variables    : 83041    (Eliminated:    0 Frozen: 44723)
Constraints  : 218125   (Binary:  79.6% Ternary:  14.5% Other:   5.9%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(5,4)),5).
move(1,((5,4),(4,4)),6).
move(1,((4,4),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(1,((3,3),(2,3)),9).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),3).
move(2,((3,5),(3,4)),8).
move(2,((3,4),(3,3)),11).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(5,5)),5).
move(3,((5,5),(5,4)),6).
move(3,((5,4),(5,3)),8).
move(3,((5,3),(4,3)),9).
move(3,((4,3),(4,2)),10).
move(3,((4,2),(4,3)),11).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(3,3)),3).
move(4,((3,3),(4,3)),4).
move(4,((4,3),(3,3)),6).
move(4,((3,3),(3,4)),7).
move(4,((3,4),(4,4)),8).
move(4,((4,4),(5,4)),9).
move(4,((5,4),(5,3)),10).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(6,5)),6).
move(5,((6,5),(6,4)),7).
move(5,((6,4),(6,3)),8).
move(5,((6,3),(7,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(5,2)),4).
move(6,((5,2),(6,2)),5).
move(6,((6,2),(7,2)),6).
move(6,((7,2),(8,2)),7).
move(6,((8,2),(8,3)),8).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(10,6)),4).
move(7,((10,6),(9,6)),5).
move(7,((9,6),(9,5)),6).
move(7,((9,5),(9,4)),7).
move(7,((9,4),(9,3)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(8,4)),3).
move(8,((8,4),(9,4)),6).
move(8,((9,4),(10,4)),7).
move(8,((10,4),(10,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.814s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.812s

Choices      : 813     
Conflicts    : 43       (Analyzed: 43)
Restarts     : 0       
Model-Level  : 262.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 43       (Deleted: 0)
  Binary     : 8        (Ratio:  18.60%)
  Ternary    : 1        (Ratio:   2.33%)
  Conflict   : 43       (Average Length:   23.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 43       (Average: 12.81 Max:  81 Sum:    551)
  Executed   : 43       (Average: 12.81 Max:  81 Sum:    551 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 123326   (Original: 113783)
  Choice     : 160     
  Heuristic  : 85      
Atoms        : 52031   
Bodies       : 84220    (Original: 74677)
  Count      : 1172     (Original: 1569)
Equivalences : 45406    (Atom=Atom: 182 Body=Body: 191 Other: 45033)
Tight        : Yes
Variables    : 83041    (Eliminated:    0 Frozen: 44723)
Constraints  : 218125   (Binary:  79.6% Ternary:  14.5% Other:   5.9%)

%%%%%
%hDistance.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(4,6)),4).
move(1,((4,6),(3,6)),5).
move(1,((3,6),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(2,4)),8).
move(1,((2,4),(2,3)),9).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(1,3)),3).
move(2,((1,3),(1,2)),4).
move(2,((1,2),(2,2)),5).
move(2,((2,2),(3,2)),7).
move(2,((3,2),(3,3)),8).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(2,2)),4).
move(3,((2,2),(2,1)),5).
move(3,((2,1),(3,1)),6).
move(3,((3,1),(4,1)),7).
move(3,((4,1),(4,2)),9).
move(3,((4,2),(4,3)),10).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(3,3)),3).
move(4,((3,3),(3,2)),4).
move(4,((3,2),(3,1)),5).
move(4,((3,1),(3,2)),6).
move(4,((3,2),(3,3)),7).
move(4,((3,3),(4,3)),8).
move(4,((4,3),(5,3)),9).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(6,6)),4).
move(5,((6,6),(6,5)),6).
move(5,((6,5),(6,4)),7).
move(5,((6,4),(6,3)),8).
move(5,((6,3),(7,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(5,2)),4).
move(6,((5,2),(5,3)),5).
move(6,((5,3),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),4).
move(7,((6,2),(7,2)),5).
move(7,((7,2),(8,2)),6).
move(7,((8,2),(9,2)),7).
move(7,((9,2),(9,3)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(8,4)),4).
move(8,((8,4),(9,4)),6).
move(8,((9,4),(10,4)),7).
move(8,((10,4),(10,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.725s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.719s

Choices      : 669     
Conflicts    : 33       (Analyzed: 33)
Restarts     : 0       
Model-Level  : 255.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 33       (Deleted: 0)
  Binary     : 9        (Ratio:  27.27%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 33       (Average Length:   25.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 33       (Average: 12.55 Max:  50 Sum:    414)
  Executed   : 33       (Average: 12.55 Max:  50 Sum:    414 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 123249   (Original: 113706)
  Choice     : 160     
Atoms        : 52039   
Bodies       : 84220    (Original: 74677)
  Count      : 1172     (Original: 1569)
Equivalences : 45406    (Atom=Atom: 182 Body=Body: 191 Other: 45033)
Tight        : Yes
Variables    : 83041    (Eliminated:    0 Frozen: 44723)
Constraints  : 218125   (Binary:  79.6% Ternary:  14.5% Other:   5.9%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(3,5)),6).
move(1,((3,5),(2,5)),7).
move(1,((2,5),(2,4)),8).
move(1,((2,4),(2,3)),9).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(5,6)),6).
move(2,((5,6),(4,6)),7).
move(2,((4,6),(4,5)),8).
move(2,((4,5),(4,4)),9).
move(2,((4,4),(3,4)),10).
move(2,((3,4),(3,3)),11).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(2,2)),4).
move(3,((2,2),(2,1)),5).
move(3,((2,1),(3,1)),6).
move(3,((3,1),(4,1)),7).
move(3,((4,1),(4,2)),9).
move(3,((4,2),(4,3)),10).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(3,3)),3).
move(4,((3,3),(4,3)),4).
move(4,((4,3),(5,3)),5).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),5).
move(5,((7,6),(8,6)),6).
move(5,((8,6),(7,6)),7).
move(5,((7,6),(7,5)),8).
move(5,((7,5),(7,4)),9).
move(5,((7,4),(7,3)),20).
move(6,((5,6),(6,6)),1).
move(6,((6,6),(7,6)),2).
move(6,((7,6),(8,6)),3).
move(6,((8,6),(9,6)),5).
move(6,((9,6),(9,5)),6).
move(6,((9,5),(8,5)),7).
move(6,((8,5),(8,4)),8).
move(6,((8,4),(8,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),4).
move(7,((6,2),(7,2)),5).
move(7,((7,2),(8,2)),6).
move(7,((8,2),(9,2)),7).
move(7,((9,2),(9,3)),8).
move(8,((7,6),(8,6)),1).
move(8,((8,6),(8,5)),2).
move(8,((8,5),(9,5)),5).
move(8,((9,5),(9,4)),6).
move(8,((9,4),(9,3)),7).
move(8,((9,3),(10,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.765s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 0.766s

Choices      : 892     
Conflicts    : 44       (Analyzed: 44)
Restarts     : 0       
Model-Level  : 356.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 44       (Deleted: 0)
  Binary     : 11       (Ratio:  25.00%)
  Ternary    : 1        (Ratio:   2.27%)
  Conflict   : 44       (Average Length:   33.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 44       (Average: 12.18 Max: 131 Sum:    536)
  Executed   : 44       (Average: 12.18 Max: 131 Sum:    536 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 124013   (Original: 114486)
  Choice     : 160     
  Heuristic  : 716      (Original: 732)
Atoms        : 52087   
Bodies       : 84220    (Original: 74677)
  Count      : 1172     (Original: 1569)
Equivalences : 45406    (Atom=Atom: 182 Body=Body: 191 Other: 45033)
Tight        : Yes
Variables    : 83041    (Eliminated:    0 Frozen: 44723)
Constraints  : 218125   (Binary:  79.6% Ternary:  14.5% Other:   5.9%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(4,6)),4).
move(1,((4,6),(3,6)),5).
move(1,((3,6),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(2,4)),8).
move(1,((2,4),(2,3)),9).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(1,3)),3).
move(2,((1,3),(2,3)),4).
move(2,((2,3),(2,4)),5).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(3,3)),8).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(4,6)),3).
move(3,((4,6),(4,5)),4).
move(3,((4,5),(4,6)),5).
move(3,((4,6),(3,6)),6).
move(3,((3,6),(4,6)),8).
move(3,((4,6),(4,5)),9).
move(3,((4,5),(4,4)),10).
move(3,((4,4),(4,3)),11).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(3,3)),3).
move(4,((3,3),(3,2)),4).
move(4,((3,2),(3,1)),5).
move(4,((3,1),(4,1)),6).
move(4,((4,1),(4,2)),7).
move(4,((4,2),(4,3)),8).
move(4,((4,3),(5,3)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(6,6)),4).
move(5,((6,6),(7,6)),5).
move(5,((7,6),(7,5)),7).
move(5,((7,5),(7,4)),8).
move(5,((7,4),(7,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(5,2)),4).
move(6,((5,2),(5,3)),5).
move(6,((5,3),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),4).
move(7,((6,2),(7,2)),5).
move(7,((7,2),(8,2)),6).
move(7,((8,2),(9,2)),7).
move(7,((9,2),(9,3)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),4).
move(8,((8,3),(8,4)),5).
move(8,((8,4),(8,3)),6).
move(8,((8,3),(9,3)),7).
move(8,((9,3),(10,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.791s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.797s

Choices      : 784     
Conflicts    : 41       (Analyzed: 41)
Restarts     : 0       
Model-Level  : 285.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 41       (Deleted: 0)
  Binary     : 9        (Ratio:  21.95%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 41       (Average Length:   24.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 41       (Average: 12.17 Max:  50 Sum:    499)
  Executed   : 41       (Average: 12.17 Max:  50 Sum:    499 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 123532   (Original: 113989)
  Choice     : 160     
  Heuristic  : 291     
Atoms        : 52031   
Bodies       : 84220    (Original: 74677)
  Count      : 1172     (Original: 1569)
Equivalences : 45406    (Atom=Atom: 182 Body=Body: 191 Other: 45033)
Tight        : Yes
Variables    : 83041    (Eliminated:    0 Frozen: 44723)
Constraints  : 218125   (Binary:  79.6% Ternary:  14.5% Other:   5.9%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(3,5)),6).
move(1,((3,5),(2,5)),7).
move(1,((2,5),(2,4)),8).
move(1,((2,4),(2,3)),9).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(2,4)),4).
move(2,((2,4),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(4,6)),3).
move(3,((4,6),(4,5)),4).
move(3,((4,5),(4,4)),5).
move(3,((4,4),(4,3)),6).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(4,4)),4).
move(4,((4,4),(5,4)),5).
move(4,((5,4),(5,3)),6).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(5,5)),2).
move(5,((5,5),(5,4)),3).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(6,3)),6).
move(5,((6,3),(7,3)),7).
move(6,((5,6),(6,6)),1).
move(6,((6,6),(7,6)),3).
move(6,((7,6),(7,5)),4).
move(6,((7,5),(8,5)),5).
move(6,((8,5),(8,4)),6).
move(6,((8,4),(8,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),5).
move(7,((7,3),(8,3)),6).
move(7,((8,3),(9,3)),7).
move(8,((7,6),(8,6)),1).
move(8,((8,6),(9,6)),3).
move(8,((9,6),(9,5)),4).
move(8,((9,5),(9,4)),5).
move(8,((9,4),(9,3)),6).
move(8,((9,3),(10,3)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.848s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 0.797s

Choices      : 624     
Conflicts    : 40       (Analyzed: 40)
Restarts     : 0       
Model-Level  : 204.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 40       (Deleted: 0)
  Binary     : 11       (Ratio:  27.50%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 40       (Average Length:   18.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 40       (Average: 10.50 Max:  68 Sum:    420)
  Executed   : 40       (Average: 10.50 Max:  68 Sum:    420 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 131137   (Original: 121666)
  Choice     : 160     
  Heuristic  : 7896     (Original: 7968)
Atoms        : 52031   
Bodies       : 84220    (Original: 74677)
  Count      : 1172     (Original: 1569)
Equivalences : 45406    (Atom=Atom: 182 Body=Body: 191 Other: 45033)
Tight        : Yes
Variables    : 83041    (Eliminated:    0 Frozen: 44723)
Constraints  : 218125   (Binary:  79.6% Ternary:  14.5% Other:   5.9%)

%%%%%
%hStrange.lp
%%%%%
move(1,((8,6),(7,6)),2).
move(1,((7,6),(7,5)),3).
move(1,((7,5),(7,6)),4).
move(1,((7,6),(7,5)),5).
move(1,((7,5),(7,4)),6).
move(1,((7,4),(8,4)),7).
move(1,((8,4),(8,3)),8).
move(1,((8,3),(8,2)),9).
move(1,((8,2),(9,2)),10).
move(1,((9,2),(10,2)),11).
move(1,((10,2),(9,2)),12).
move(1,((9,2),(8,2)),13).
move(1,((8,2),(7,2)),14).
move(1,((7,2),(6,2)),15).
move(1,((6,2),(6,3)),16).
move(1,((6,3),(5,3)),17).
move(1,((5,3),(4,3)),18).
move(1,((4,3),(3,3)),19).
move(1,((3,3),(2,3)),20).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(2,2)),8).
move(2,((2,2),(1,2)),9).
move(2,((1,2),(1,1)),10).
move(2,((1,1),(1,2)),11).
move(2,((1,2),(2,2)),12).
move(2,((2,2),(2,3)),13).
move(2,((2,3),(2,4)),14).
move(2,((2,4),(3,4)),17).
move(2,((3,4),(3,3)),18).
move(2,((3,3),(3,2)),19).
move(2,((3,2),(3,3)),20).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(3,1)),8).
move(3,((3,1),(3,2)),9).
move(3,((3,2),(2,2)),10).
move(3,((2,2),(2,3)),11).
move(3,((2,3),(2,4)),12).
move(3,((2,4),(3,4)),13).
move(3,((3,4),(3,3)),14).
move(3,((3,3),(2,3)),15).
move(3,((2,3),(3,3)),16).
move(3,((3,3),(4,3)),17).
move(3,((4,3),(4,2)),18).
move(3,((4,2),(4,3)),19).
move(4,((3,6),(3,5)),2).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(2,4)),5).
move(4,((2,4),(2,3)),6).
move(4,((2,3),(2,2)),7).
move(4,((2,2),(2,1)),8).
move(4,((2,1),(3,1)),10).
move(4,((3,1),(3,2)),11).
move(4,((3,2),(3,3)),12).
move(4,((3,3),(4,3)),14).
move(4,((4,3),(4,4)),15).
move(4,((4,4),(5,4)),16).
move(4,((5,4),(6,4)),17).
move(4,((6,4),(6,3)),19).
move(4,((6,3),(5,3)),20).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(4,2)),6).
move(5,((4,2),(4,1)),7).
move(5,((4,1),(4,2)),8).
move(5,((4,2),(4,3)),9).
move(5,((4,3),(5,3)),10).
move(5,((5,3),(6,3)),11).
move(5,((6,3),(7,3)),12).
move(5,((7,3),(8,3)),13).
move(5,((8,3),(9,3)),14).
move(5,((9,3),(9,2)),15).
move(5,((9,2),(9,3)),16).
move(5,((9,3),(8,3)),17).
move(5,((8,3),(7,3)),18).
move(5,((7,3),(7,4)),19).
move(5,((7,4),(7,3)),20).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(7,2)),8).
move(6,((7,2),(7,1)),9).
move(6,((7,1),(8,1)),10).
move(6,((8,1),(9,1)),11).
move(6,((9,1),(10,1)),12).
move(6,((10,1),(10,2)),13).
move(6,((10,2),(10,3)),14).
move(6,((10,3),(10,4)),15).
move(6,((10,4),(10,5)),16).
move(6,((10,5),(9,5)),17).
move(6,((9,5),(9,4)),18).
move(6,((9,4),(8,4)),19).
move(6,((8,4),(8,3)),20).
move(7,((6,6),(7,6)),3).
move(7,((7,6),(8,6)),4).
move(7,((8,6),(8,5)),5).
move(7,((8,5),(9,5)),7).
move(7,((9,5),(9,4)),8).
move(7,((9,4),(9,3)),9).
move(7,((9,3),(10,3)),10).
move(7,((10,3),(11,3)),11).
move(7,((11,3),(11,2)),12).
move(7,((11,2),(11,1)),13).
move(7,((11,1),(10,1)),14).
move(7,((10,1),(10,2)),15).
move(7,((10,2),(10,3)),16).
move(7,((10,3),(9,3)),17).
move(7,((9,3),(9,2)),18).
move(7,((9,2),(9,3)),20).
move(8,((7,6),(7,5)),2).
move(8,((7,5),(6,5)),3).
move(8,((6,5),(7,5)),4).
move(8,((7,5),(7,4)),5).
move(8,((7,4),(7,3)),6).
move(8,((7,3),(7,4)),8).
move(8,((7,4),(6,4)),9).
move(8,((6,4),(7,4)),10).
move(8,((7,4),(7,5)),12).
move(8,((7,5),(8,5)),14).
move(8,((8,5),(9,5)),15).
move(8,((9,5),(9,4)),16).
move(8,((9,4),(8,4)),17).
move(8,((8,4),(8,3)),18).
move(8,((8,3),(9,3)),19).
move(8,((9,3),(10,3)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.832s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.828s

Choices      : 249      (Domain: 249)
Conflicts    : 27       (Analyzed: 27)
Restarts     : 0       
Model-Level  : 123.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 27       (Deleted: 0)
  Binary     : 3        (Ratio:  11.11%)
  Ternary    : 2        (Ratio:   7.41%)
  Conflict   : 27       (Average Length:   12.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 27       (Average:  4.67 Max:  27 Sum:    126)
  Executed   : 27       (Average:  4.67 Max:  27 Sum:    126 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 131137   (Original: 121666)
  Choice     : 160     
  Heuristic  : 7896     (Original: 7968)
Atoms        : 52031   
Bodies       : 84220    (Original: 74677)
  Count      : 1172     (Original: 1569)
Equivalences : 45406    (Atom=Atom: 182 Body=Body: 191 Other: 45033)
Tight        : Yes
Variables    : 83041    (Eliminated:    0 Frozen: 44723)
Constraints  : 218125   (Binary:  79.6% Ternary:  14.5% Other:   5.9%)

