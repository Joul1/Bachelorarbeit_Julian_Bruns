%%%%%
%Standard
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),4).
move(1,((4,6),(5,6)),5).
move(1,((5,6),(5,5)),6).
move(1,((5,5),(6,5)),7).
move(1,((6,5),(6,4)),8).
move(1,((6,4),(7,4)),9).
move(1,((7,4),(7,3)),10).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(5,5)),5).
move(2,((5,5),(5,4)),6).
move(2,((5,4),(5,3)),7).
move(2,((5,3),(5,2)),8).
move(2,((5,2),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),5).
move(5,((6,3),(7,3)),40).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(5,4)),7).
move(6,((5,4),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(8,4)),3).
move(8,((8,4),(8,5)),4).
move(8,((8,5),(8,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(7,5)),4).
move(9,((7,5),(7,4)),6).
move(9,((7,4),(7,5)),9).
move(9,((7,5),(7,4)),10).
move(9,((7,4),(7,3)),11).
move(9,((7,3),(7,4)),40).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(5,4)),5).
move(10,((5,4),(4,4)),6).
move(10,((4,4),(5,4)),8).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(4,5)),8).
move(11,((4,5),(4,4)),9).
move(11,((4,4),(3,4)),11).
move(11,((3,4),(2,4)),12).
move(11,((2,4),(2,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.675s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 1.672s

Choices      : 868     
Conflicts    : 45       (Analyzed: 45)
Restarts     : 0       
Model-Level  : 453.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 45       (Deleted: 0)
  Binary     : 9        (Ratio:  20.00%)
  Ternary    : 3        (Ratio:   6.67%)
  Conflict   : 45       (Average Length:   25.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 45       (Average:  9.22 Max:  82 Sum:    415)
  Executed   : 45       (Average:  9.22 Max:  82 Sum:    415 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353468   (Original: 327181)
  Choice     : 440     
Atoms        : 141635  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(2,3)),4).
move(1,((2,3),(3,3)),5).
move(1,((3,3),(4,3)),7).
move(1,((4,3),(5,3)),8).
move(1,((5,3),(6,3)),9).
move(1,((6,3),(7,3)),10).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),3).
move(2,((3,5),(4,5)),4).
move(2,((4,5),(5,5)),5).
move(2,((5,5),(5,4)),6).
move(2,((5,4),(6,4)),7).
move(2,((6,4),(5,4)),8).
move(2,((5,4),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),7).
move(3,((3,3),(4,3)),8).
move(3,((4,3),(3,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(5,2)),4).
move(5,((5,2),(5,1)),5).
move(5,((5,1),(6,1)),6).
move(5,((6,1),(6,2)),7).
move(5,((6,2),(7,2)),8).
move(5,((7,2),(7,3)),40).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(8,5)),2).
move(6,((8,5),(7,5)),3).
move(6,((7,5),(6,5)),5).
move(6,((6,5),(5,5)),6).
move(6,((5,5),(5,4)),7).
move(6,((5,4),(5,5)),8).
move(6,((5,5),(4,5)),9).
move(6,((4,5),(4,4)),10).
move(6,((4,4),(4,3)),40).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(10,6)),4).
move(7,((10,6),(11,6)),5).
move(7,((11,6),(10,6)),6).
move(7,((10,6),(10,5)),7).
move(7,((10,5),(10,4)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(6,6)),3).
move(8,((6,6),(6,5)),4).
move(8,((6,5),(6,4)),5).
move(8,((6,4),(7,4)),6).
move(8,((7,4),(8,4)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(9,4)),3).
move(9,((9,4),(8,4)),5).
move(9,((8,4),(8,5)),6).
move(9,((8,5),(8,6)),9).
move(9,((8,6),(7,6)),10).
move(9,((7,6),(7,5)),11).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(5,4)),5).
move(10,((5,4),(4,4)),6).
move(10,((4,4),(3,4)),7).
move(10,((3,4),(3,3)),8).
move(10,((3,3),(3,4)),9).
move(10,((3,4),(4,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(5,5)),7).
move(11,((5,5),(4,5)),8).
move(11,((4,5),(3,5)),9).
move(11,((3,5),(2,5)),10).
move(11,((2,5),(2,4)),12).
move(11,((2,4),(2,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.704s (Solving: 0.07s 1st Model: 0.07s Unsat: 0.00s)
CPU Time     : 1.703s

Choices      : 1538     (Domain: 210)
Conflicts    : 54       (Analyzed: 54)
Restarts     : 0       
Model-Level  : 686.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 54       (Deleted: 0)
  Binary     : 7        (Ratio:  12.96%)
  Ternary    : 2        (Ratio:   3.70%)
  Conflict   : 54       (Average Length:   52.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 54       (Average: 15.78 Max: 128 Sum:    852)
  Executed   : 54       (Average: 15.78 Max: 128 Sum:    852 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353830   (Original: 327543)
  Choice     : 440     
  Heuristic  : 222     
Atoms        : 141775  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(5,4)),6).
move(1,((5,4),(6,4)),7).
move(1,((6,4),(6,3)),8).
move(1,((6,3),(6,2)),9).
move(1,((6,2),(7,2)),10).
move(1,((7,2),(8,2)),11).
move(1,((8,2),(8,3)),12).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(2,((4,4),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(4,((9,4),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),4).
move(6,((8,3),(8,2)),5).
move(6,((8,2),(7,2)),6).
move(6,((7,2),(6,2)),7).
move(6,((6,2),(5,2)),8).
move(6,((5,2),(4,2)),9).
move(6,((4,2),(4,3)),10).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(10,4)),6).
move(8,((7,6),(8,6)),1).
move(8,((8,6),(8,5)),2).
move(8,((8,5),(8,4)),3).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(9,5)),2).
move(9,((9,5),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(7,4)),5).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(10,5)),2).
move(11,((10,5),(9,5)),3).
move(11,((9,5),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(5,5)),7).
move(11,((5,5),(4,5)),8).
move(11,((4,5),(3,5)),9).
move(11,((3,5),(3,4)),10).
move(11,((3,4),(2,4)),11).
move(11,((2,4),(2,3)),12).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.692s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 398      (Domain: 398)
Conflicts    : 2        (Analyzed: 2)
Restarts     : 0       
Model-Level  : 380.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 2        (Deleted: 0)
  Binary     : 2        (Ratio: 100.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 2        (Average Length:    2.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 2        (Average:  9.00 Max:  12 Sum:     18)
  Executed   : 2        (Average:  9.00 Max:  12 Sum:     18 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378798   (Original: 352643)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141786  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(8,6)),7).
move(1,((8,6),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),11).
move(1,((8,3),(8,4)),12).
move(1,((8,4),(7,4)),13).
move(1,((7,4),(7,3)),14).
move(1,((7,3),(7,2)),15).
move(1,((7,2),(8,2)),21).
move(1,((8,2),(9,2)),31).
move(1,((9,2),(8,2)),39).
move(1,((8,2),(8,3)),40).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(3,5)),2).
move(2,((3,5),(3,4)),3).
move(2,((3,4),(3,3)),4).
move(2,((3,3),(4,3)),8).
move(2,((4,3),(4,4)),9).
move(2,((4,4),(5,4)),10).
move(2,((5,4),(5,3)),12).
move(2,((5,3),(5,2)),13).
move(2,((5,2),(5,3)),18).
move(2,((5,3),(5,4)),19).
move(2,((5,4),(5,3)),40).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(4,5)),3).
move(3,((4,5),(3,5)),4).
move(3,((3,5),(2,5)),5).
move(3,((2,5),(2,4)),6).
move(3,((2,4),(3,4)),8).
move(3,((3,4),(3,3)),9).
move(3,((3,3),(3,4)),10).
move(3,((3,4),(3,5)),11).
move(3,((3,5),(3,4)),12).
move(3,((3,4),(3,3)),13).
move(3,((3,3),(2,3)),14).
move(3,((2,3),(2,4)),16).
move(3,((2,4),(3,4)),17).
move(3,((3,4),(3,3)),21).
move(3,((3,3),(3,4)),22).
move(3,((3,4),(3,3)),23).
move(3,((3,3),(2,3)),24).
move(3,((2,3),(3,3)),25).
move(3,((3,3),(3,4)),26).
move(3,((3,4),(2,4)),31).
move(3,((2,4),(2,3)),32).
move(3,((2,3),(2,4)),33).
move(3,((2,4),(3,4)),34).
move(3,((3,4),(3,3)),40).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(5,4)),3).
move(4,((5,4),(4,4)),4).
move(4,((4,4),(3,4)),5).
move(4,((3,4),(4,4)),6).
move(4,((4,4),(4,3)),7).
move(4,((4,3),(5,3)),8).
move(4,((5,3),(6,3)),10).
move(4,((6,3),(7,3)),11).
move(4,((7,3),(7,4)),12).
move(4,((7,4),(7,5)),13).
move(4,((7,5),(6,5)),19).
move(4,((6,5),(7,5)),20).
move(4,((7,5),(8,5)),21).
move(4,((8,5),(9,5)),22).
move(4,((9,5),(10,5)),23).
move(4,((10,5),(9,5)),24).
move(4,((9,5),(8,5)),25).
move(4,((8,5),(7,5)),26).
move(4,((7,5),(7,4)),27).
move(4,((7,4),(7,3)),28).
move(4,((7,3),(7,2)),29).
move(4,((7,2),(6,2)),30).
move(4,((6,2),(6,1)),31).
move(4,((6,1),(5,1)),32).
move(4,((5,1),(6,1)),34).
move(4,((6,1),(6,2)),35).
move(4,((6,2),(7,2)),37).
move(4,((7,2),(8,2)),38).
move(4,((8,2),(8,3)),39).
move(4,((8,3),(9,3)),40).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(5,2)),4).
move(5,((5,2),(6,2)),7).
move(5,((6,2),(6,3)),8).
move(5,((6,3),(6,4)),10).
move(5,((6,4),(6,3)),11).
move(5,((6,3),(7,3)),40).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(9,4)),6).
move(6,((9,4),(9,5)),7).
move(6,((9,5),(8,5)),9).
move(6,((8,5),(7,5)),10).
move(6,((7,5),(6,5)),11).
move(6,((6,5),(5,5)),12).
move(6,((5,5),(6,5)),13).
move(6,((6,5),(5,5)),14).
move(6,((5,5),(4,5)),15).
move(6,((4,5),(3,5)),16).
move(6,((3,5),(2,5)),17).
move(6,((2,5),(2,4)),18).
move(6,((2,4),(2,3)),19).
move(6,((2,3),(3,3)),20).
move(6,((3,3),(3,2)),21).
move(6,((3,2),(3,3)),22).
move(6,((3,3),(4,3)),23).
move(6,((4,3),(5,3)),26).
move(6,((5,3),(4,3)),28).
move(6,((4,3),(4,4)),29).
move(6,((4,4),(4,3)),37).
move(6,((4,3),(3,3)),38).
move(6,((3,3),(4,3)),40).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(10,4)),6).
move(7,((10,4),(11,4)),7).
move(7,((11,4),(10,4)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(7,4)),10).
move(8,((7,4),(8,4)),11).
move(8,((8,4),(9,4)),12).
move(8,((9,4),(9,3)),14).
move(8,((9,3),(10,3)),15).
move(8,((10,3),(10,4)),16).
move(8,((10,4),(10,5)),36).
move(8,((10,5),(9,5)),37).
move(8,((9,5),(8,5)),39).
move(8,((8,5),(8,4)),40).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(9,3)),6).
move(9,((9,3),(10,3)),7).
move(9,((10,3),(10,2)),8).
move(9,((10,2),(9,2)),9).
move(9,((9,2),(8,2)),10).
move(9,((8,2),(7,2)),11).
move(9,((7,2),(7,3)),12).
move(9,((7,3),(8,3)),13).
move(9,((8,3),(8,4)),14).
move(9,((8,4),(8,3)),15).
move(9,((8,3),(7,3)),16).
move(9,((7,3),(8,3)),28).
move(9,((8,3),(8,4)),29).
move(9,((8,4),(8,3)),30).
move(9,((8,3),(7,3)),31).
move(9,((7,3),(7,4)),40).
move(10,((8,6),(9,6)),2).
move(10,((9,6),(10,6)),3).
move(10,((10,6),(10,5)),5).
move(10,((10,5),(9,5)),6).
move(10,((9,5),(8,5)),7).
move(10,((8,5),(7,5)),8).
move(10,((7,5),(6,5)),10).
move(10,((6,5),(5,5)),11).
move(10,((5,5),(4,5)),12).
move(10,((4,5),(4,6)),15).
move(10,((4,6),(4,5)),17).
move(10,((4,5),(3,5)),23).
move(10,((3,5),(4,5)),26).
move(10,((4,5),(4,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(11,3)),3).
move(11,((11,3),(11,2)),4).
move(11,((11,2),(11,1)),5).
move(11,((11,1),(10,1)),12).
move(11,((10,1),(9,1)),13).
move(11,((9,1),(8,1)),14).
move(11,((8,1),(7,1)),15).
move(11,((7,1),(6,1)),16).
move(11,((6,1),(5,1)),19).
move(11,((5,1),(4,1)),28).
move(11,((4,1),(3,1)),29).
move(11,((3,1),(3,2)),31).
move(11,((3,2),(4,2)),32).
move(11,((4,2),(3,2)),33).
move(11,((3,2),(2,2)),34).
move(11,((2,2),(1,2)),35).
move(11,((1,2),(1,1)),36).
move(11,((1,1),(1,2)),37).
move(11,((1,2),(1,3)),38).
move(11,((1,3),(2,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.966s (Solving: 0.32s 1st Model: 0.32s Unsat: 0.00s)
CPU Time     : 1.969s

Choices      : 8814     (Domain: 1280)
Conflicts    : 156      (Analyzed: 156)
Restarts     : 0       
Model-Level  : 672.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 156      (Deleted: 0)
  Binary     : 31       (Ratio:  19.87%)
  Ternary    : 9        (Ratio:   5.77%)
  Conflict   : 156      (Average Length:   55.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 156      (Average: 52.19 Max: 963 Sum:   8142)
  Executed   : 156      (Average: 52.19 Max: 963 Sum:   8142 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378798   (Original: 352643)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141786  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(8,6)),7).
move(1,((8,6),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(2,((4,4),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(2,((5,3),(5,2)),7).
move(2,((5,2),(5,3)),8).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(4,2)),5).
move(3,((4,2),(4,3)),9).
move(3,((4,3),(3,3)),40).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(4,((9,4),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),6).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(8,5)),2).
move(6,((8,5),(8,4)),3).
move(6,((8,4),(8,3)),4).
move(6,((8,3),(7,3)),5).
move(6,((7,3),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(6,((4,3),(4,4)),9).
move(6,((4,4),(4,3)),40).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(10,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(7,4)),6).
move(8,((7,4),(8,4)),7).
move(8,((8,4),(9,4)),8).
move(8,((9,4),(8,4)),40).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(9,5)),2).
move(9,((9,5),(8,5)),3).
move(9,((8,5),(8,4)),4).
move(9,((8,4),(8,5)),5).
move(9,((8,5),(7,5)),6).
move(9,((7,5),(7,4)),7).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(10,((4,4),(5,4)),7).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(5,5)),7).
move(11,((5,5),(4,5)),8).
move(11,((4,5),(3,5)),9).
move(11,((3,5),(3,4)),10).
move(11,((3,4),(3,3)),11).
move(11,((3,3),(2,3)),12).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.689s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 489      (Domain: 39)
Conflicts    : 8        (Analyzed: 8)
Restarts     : 0       
Model-Level  : 448.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 8        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 8        (Average Length:   35.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 8        (Average:  5.12 Max:  19 Sum:     41)
  Executed   : 8        (Average:  5.12 Max:  19 Sum:     41 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354907   (Original: 328642)
  Choice     : 440     
  Heuristic  : 1216     (Original: 1238)
Atoms        : 141858  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(7,5)),7).
move(1,((7,5),(7,4)),8).
move(1,((7,4),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(2,((3,3),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(2,((5,3),(5,2)),7).
move(2,((5,2),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(3,3)),5).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(8,5)),2).
move(6,((8,5),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(5,4)),6).
move(6,((5,4),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),3).
move(7,((7,4),(8,4)),4).
move(7,((8,4),(9,4)),5).
move(7,((9,4),(10,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),4).
move(8,((8,3),(9,3)),5).
move(8,((9,3),(9,4)),6).
move(8,((9,4),(8,4)),40).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(10,4)),4).
move(9,((10,4),(10,5)),5).
move(9,((10,5),(9,5)),6).
move(9,((9,5),(8,5)),7).
move(9,((8,5),(8,4)),10).
move(9,((8,4),(7,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,5)),3).
move(10,((8,5),(7,5)),4).
move(10,((7,5),(6,5)),5).
move(10,((6,5),(6,4)),6).
move(10,((6,4),(5,4)),8).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(9,5)),3).
move(11,((9,5),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(5,5)),7).
move(11,((5,5),(4,5)),8).
move(11,((4,5),(3,5)),9).
move(11,((3,5),(3,4)),10).
move(11,((3,4),(2,4)),11).
move(11,((2,4),(2,3)),12).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.654s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.641s

Choices      : 2181     (Domain: 1425)
Conflicts    : 26       (Analyzed: 26)
Restarts     : 0       
Model-Level  : 1957.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 26       (Deleted: 0)
  Binary     : 2        (Ratio:   7.69%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 26       (Average Length:   21.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 26       (Average:  8.62 Max:  55 Sum:    224)
  Executed   : 26       (Average:  8.62 Max:  55 Sum:    224 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 355118   (Original: 328834)
  Choice     : 440     
  Heuristic  : 1510     (Original: 1513)
Atoms        : 141775  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(7,4)),8).
move(1,((7,4),(7,3)),9).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(2,((3,3),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(2,((5,3),(5,2)),7).
move(2,((5,2),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(3,3)),5).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(5,((7,3),(6,3)),6).
move(5,((6,3),(7,3)),40).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(8,4)),3).
move(6,((8,4),(7,4)),4).
move(6,((7,4),(6,4)),5).
move(6,((6,4),(5,4)),6).
move(6,((5,4),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(5,5)),3).
move(8,((5,5),(6,5)),4).
move(8,((6,5),(7,5)),5).
move(8,((7,5),(8,5)),6).
move(8,((8,5),(8,4)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(9,4)),4).
move(9,((9,4),(8,4)),5).
move(9,((8,4),(7,4)),6).
move(9,((7,4),(7,5)),7).
move(9,((7,5),(7,4)),9).
move(9,((7,4),(7,3)),11).
move(9,((7,3),(7,4)),40).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(5,4)),5).
move(10,((5,4),(4,4)),6).
move(10,((4,4),(5,4)),8).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(4,5)),8).
move(11,((4,5),(4,4)),9).
move(11,((4,4),(3,4)),11).
move(11,((3,4),(2,4)),12).
move(11,((2,4),(2,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.734s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 1.734s

Choices      : 941      (Domain: 417)
Conflicts    : 49       (Analyzed: 49)
Restarts     : 0       
Model-Level  : 495.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 49       (Deleted: 0)
  Binary     : 10       (Ratio:  20.41%)
  Ternary    : 1        (Ratio:   2.04%)
  Conflict   : 49       (Average Length:   24.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 49       (Average:  9.10 Max:  75 Sum:    446)
  Executed   : 49       (Average:  9.10 Max:  75 Sum:    446 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378811   (Original: 352645)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141798  
Disjunctions : 0        (Original: 1)
Bodies       : 247623   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128049   (Atom=Atom: 470 Body=Body: 482 Other: 127097)
Tight        : Yes
Variables    : 246824   (Eliminated:    0 Frozen: 126446)
Constraints  : 678181   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(1,5)),3).
move(1,((1,5),(1,4)),4).
move(1,((1,4),(2,4)),5).
move(1,((2,4),(2,3)),6).
move(1,((2,3),(1,3)),7).
move(1,((1,3),(2,3)),9).
move(1,((2,3),(2,4)),10).
move(1,((2,4),(2,5)),11).
move(1,((2,5),(3,5)),12).
move(1,((3,5),(2,5)),13).
move(1,((2,5),(2,4)),15).
move(1,((2,4),(2,3)),16).
move(1,((2,3),(3,3)),19).
move(1,((3,3),(2,3)),20).
move(1,((2,3),(2,4)),21).
move(1,((2,4),(2,3)),23).
move(1,((2,3),(2,4)),24).
move(1,((2,4),(2,5)),25).
move(1,((2,5),(2,4)),29).
move(1,((2,4),(2,3)),32).
move(1,((2,3),(2,2)),33).
move(1,((2,2),(3,2)),34).
move(1,((3,2),(4,2)),35).
move(1,((4,2),(5,2)),36).
move(1,((5,2),(6,2)),37).
move(1,((6,2),(7,2)),38).
move(1,((7,2),(8,2)),39).
move(1,((8,2),(8,3)),40).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(3,3)),8).
move(2,((3,3),(4,3)),11).
move(2,((4,3),(4,4)),12).
move(2,((4,4),(4,5)),13).
move(2,((4,5),(4,4)),14).
move(2,((4,4),(4,3)),17).
move(2,((4,3),(5,3)),18).
move(2,((5,3),(5,4)),19).
move(2,((5,4),(5,3)),20).
move(2,((5,3),(5,4)),21).
move(2,((5,4),(4,4)),22).
move(2,((4,4),(4,5)),23).
move(2,((4,5),(4,4)),24).
move(2,((4,4),(5,4)),25).
move(2,((5,4),(5,3)),26).
move(2,((5,3),(5,4)),27).
move(2,((5,4),(4,4)),28).
move(2,((4,4),(4,5)),29).
move(2,((4,5),(4,4)),30).
move(2,((4,4),(4,3)),31).
move(2,((4,3),(3,3)),32).
move(2,((3,3),(2,3)),33).
move(2,((2,3),(2,4)),35).
move(2,((2,4),(2,3)),36).
move(2,((2,3),(3,3)),37).
move(2,((3,3),(4,3)),39).
move(2,((4,3),(5,3)),40).
move(3,((3,6),(3,5)),3).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,4)),7).
move(3,((3,4),(3,3)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,4)),6).
move(4,((4,4),(4,3)),9).
move(4,((4,3),(4,4)),10).
move(4,((4,4),(4,5)),11).
move(4,((4,5),(4,6)),13).
move(4,((4,6),(4,5)),14).
move(4,((4,5),(5,5)),18).
move(4,((5,5),(5,6)),20).
move(4,((5,6),(4,6)),21).
move(4,((4,6),(4,5)),22).
move(4,((4,5),(4,6)),23).
move(4,((4,6),(5,6)),24).
move(4,((5,6),(5,5)),25).
move(4,((5,5),(5,4)),26).
move(4,((5,4),(6,4)),27).
move(4,((6,4),(5,4)),29).
move(4,((5,4),(5,3)),30).
move(4,((5,3),(4,3)),32).
move(4,((4,3),(5,3)),34).
move(4,((5,3),(6,3)),35).
move(4,((6,3),(6,2)),36).
move(4,((6,2),(7,2)),37).
move(4,((7,2),(7,3)),38).
move(4,((7,3),(8,3)),39).
move(4,((8,3),(9,3)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,4)),7).
move(5,((5,4),(6,4)),9).
move(5,((6,4),(6,5)),10).
move(5,((6,5),(6,4)),11).
move(5,((6,4),(5,4)),12).
move(5,((5,4),(5,5)),13).
move(5,((5,5),(6,5)),14).
move(5,((6,5),(7,5)),15).
move(5,((7,5),(6,5)),17).
move(5,((6,5),(7,5)),18).
move(5,((7,5),(6,5)),19).
move(5,((6,5),(6,4)),21).
move(5,((6,4),(6,3)),22).
move(5,((6,3),(6,4)),24).
move(5,((6,4),(6,5)),25).
move(5,((6,5),(5,5)),28).
move(5,((5,5),(6,5)),29).
move(5,((6,5),(5,5)),30).
move(5,((5,5),(5,4)),31).
move(5,((5,4),(5,3)),32).
move(5,((5,3),(6,3)),34).
move(5,((6,3),(7,3)),35).
move(5,((7,3),(6,3)),36).
move(5,((6,3),(7,3)),37).
move(5,((7,3),(6,3)),38).
move(5,((6,3),(7,3)),39).
move(6,((9,6),(9,5)),3).
move(6,((9,5),(9,4)),4).
move(6,((9,4),(9,3)),5).
move(6,((9,3),(8,3)),7).
move(6,((8,3),(9,3)),8).
move(6,((9,3),(9,4)),9).
move(6,((9,4),(8,4)),11).
move(6,((8,4),(9,4)),12).
move(6,((9,4),(9,3)),13).
move(6,((9,3),(9,4)),15).
move(6,((9,4),(8,4)),16).
move(6,((8,4),(8,3)),17).
move(6,((8,3),(9,3)),18).
move(6,((9,3),(9,4)),19).
move(6,((9,4),(8,4)),21).
move(6,((8,4),(9,4)),22).
move(6,((9,4),(9,3)),25).
move(6,((9,3),(9,4)),27).
move(6,((9,4),(9,3)),30).
move(6,((9,3),(9,4)),31).
move(6,((9,4),(9,5)),33).
move(6,((9,5),(8,5)),34).
move(6,((8,5),(7,5)),35).
move(6,((7,5),(6,5)),36).
move(6,((6,5),(6,4)),37).
move(6,((6,4),(5,4)),38).
move(6,((5,4),(4,4)),39).
move(6,((4,4),(4,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,5)),5).
move(7,((6,5),(7,5)),7).
move(7,((7,5),(6,5)),8).
move(7,((6,5),(5,5)),9).
move(7,((5,5),(5,4)),10).
move(7,((5,4),(5,3)),11).
move(7,((5,3),(6,3)),12).
move(7,((6,3),(6,4)),13).
move(7,((6,4),(6,3)),14).
move(7,((6,3),(6,4)),15).
move(7,((6,4),(6,5)),16).
move(7,((6,5),(6,6)),17).
move(7,((6,6),(6,5)),18).
move(7,((6,5),(6,4)),19).
move(7,((6,4),(5,4)),20).
move(7,((5,4),(5,5)),21).
move(7,((5,5),(5,4)),22).
move(7,((5,4),(6,4)),23).
move(7,((6,4),(6,5)),24).
move(7,((6,5),(7,5)),25).
move(7,((7,5),(7,6)),26).
move(7,((7,6),(7,5)),27).
move(7,((7,5),(6,5)),28).
move(7,((6,5),(6,4)),29).
move(7,((6,4),(6,5)),30).
move(7,((6,5),(7,5)),32).
move(7,((7,5),(8,5)),33).
move(7,((8,5),(8,4)),34).
move(7,((8,4),(8,5)),35).
move(7,((8,5),(9,5)),36).
move(7,((9,5),(8,5)),37).
move(7,((8,5),(9,5)),38).
move(7,((9,5),(10,5)),39).
move(7,((10,5),(10,4)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,5)),8).
move(8,((7,5),(7,4)),9).
move(8,((7,4),(7,5)),38).
move(8,((7,5),(8,5)),39).
move(8,((8,5),(8,4)),40).
move(9,((10,6),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(10,4)),6).
move(9,((10,4),(9,4)),7).
move(9,((9,4),(8,4)),8).
move(9,((8,4),(8,5)),9).
move(9,((8,5),(9,5)),10).
move(9,((9,5),(9,4)),11).
move(9,((9,4),(10,4)),12).
move(9,((10,4),(9,4)),14).
move(9,((9,4),(8,4)),15).
move(9,((8,4),(8,5)),16).
move(9,((8,5),(7,5)),17).
move(9,((7,5),(8,5)),18).
move(9,((8,5),(7,5)),19).
move(9,((7,5),(8,5)),21).
move(9,((8,5),(7,5)),22).
move(9,((7,5),(8,5)),25).
move(9,((8,5),(7,5)),26).
move(9,((7,5),(8,5)),27).
move(9,((8,5),(8,4)),28).
move(9,((8,4),(8,5)),29).
move(9,((8,5),(8,4)),30).
move(9,((8,4),(8,5)),31).
move(9,((8,5),(9,5)),32).
move(9,((9,5),(10,5)),33).
move(9,((10,5),(9,5)),35).
move(9,((9,5),(9,4)),36).
move(9,((9,4),(8,4)),37).
move(9,((8,4),(7,4)),38).
move(9,((7,4),(7,5)),39).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,5)),5).
move(10,((8,5),(8,4)),6).
move(10,((8,4),(7,4)),8).
move(10,((7,4),(7,3)),9).
move(10,((7,3),(6,3)),11).
move(10,((6,3),(6,4)),12).
move(10,((6,4),(6,5)),13).
move(10,((6,5),(6,4)),14).
move(10,((6,4),(5,4)),15).
move(10,((5,4),(4,4)),17).
move(10,((4,4),(4,5)),19).
move(10,((4,5),(5,5)),20).
move(10,((5,5),(6,5)),21).
move(10,((6,5),(5,5)),23).
move(10,((5,5),(4,5)),24).
move(10,((4,5),(5,5)),26).
move(10,((5,5),(5,4)),28).
move(10,((5,4),(4,4)),29).
move(10,((4,4),(5,4)),30).
move(10,((5,4),(4,4)),31).
move(10,((4,4),(5,4)),34).
move(10,((5,4),(5,5)),35).
move(10,((5,5),(6,5)),37).
move(10,((6,5),(5,5)),38).
move(10,((5,5),(4,5)),39).
move(10,((4,5),(4,4)),40).
move(11,((11,6),(10,6)),3).
move(11,((10,6),(10,5)),4).
move(11,((10,5),(11,5)),6).
move(11,((11,5),(11,4)),7).
move(11,((11,4),(11,3)),8).
move(11,((11,3),(10,3)),9).
move(11,((10,3),(10,4)),10).
move(11,((10,4),(10,3)),12).
move(11,((10,3),(10,4)),14).
move(11,((10,4),(10,5)),15).
move(11,((10,5),(10,4)),16).
move(11,((10,4),(10,5)),24).
move(11,((10,5),(10,4)),25).
move(11,((10,4),(10,5)),28).
move(11,((10,5),(9,5)),29).
move(11,((9,5),(8,5)),30).
move(11,((8,5),(7,5)),31).
move(11,((7,5),(7,6)),32).
move(11,((7,6),(6,6)),33).
move(11,((6,6),(5,6)),34).
move(11,((5,6),(4,6)),35).
move(11,((4,6),(4,5)),36).
move(11,((4,5),(3,5)),37).
move(11,((3,5),(2,5)),38).
move(11,((2,5),(2,4)),39).
move(11,((2,4),(2,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.796s (Solving: 0.09s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 1.797s

Choices      : 2007     (Domain: 2007)
Conflicts    : 145      (Analyzed: 145)
Restarts     : 0       
Model-Level  : 364.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 145      (Deleted: 0)
  Binary     : 30       (Ratio:  20.69%)
  Ternary    : 24       (Ratio:  16.55%)
  Conflict   : 145      (Average Length:    7.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 145      (Average: 11.33 Max:  96 Sum:   1643)
  Executed   : 145      (Average: 11.33 Max:  96 Sum:   1643 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378787   (Original: 352632)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141775  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(1,2)),9).
move(1,((1,2),(1,1)),10).
move(1,((1,1),(1,2)),11).
move(1,((1,2),(2,2)),12).
move(1,((2,2),(2,3)),13).
move(1,((2,3),(2,4)),14).
move(1,((2,4),(3,4)),34).
move(1,((3,4),(4,4)),35).
move(1,((4,4),(5,4)),36).
move(1,((5,4),(6,4)),37).
move(1,((6,4),(7,4)),38).
move(1,((7,4),(8,4)),39).
move(1,((8,4),(8,3)),40).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(3,2)),7).
move(2,((3,2),(3,1)),8).
move(2,((3,1),(2,1)),9).
move(2,((2,1),(2,2)),10).
move(2,((2,2),(2,3)),11).
move(2,((2,3),(2,4)),12).
move(2,((2,4),(3,4)),14).
move(2,((3,4),(3,3)),33).
move(2,((3,3),(2,3)),34).
move(2,((2,3),(2,2)),36).
move(2,((2,2),(3,2)),37).
move(2,((3,2),(4,2)),38).
move(2,((4,2),(5,2)),39).
move(2,((5,2),(5,3)),40).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),5).
move(3,((3,3),(3,2)),6).
move(3,((3,2),(2,2)),7).
move(3,((2,2),(2,1)),8).
move(3,((2,1),(1,1)),9).
move(3,((1,1),(2,1)),10).
move(3,((2,1),(2,2)),11).
move(3,((2,2),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(2,3)),33).
move(3,((2,3),(2,4)),34).
move(3,((2,4),(3,4)),35).
move(3,((3,4),(3,3)),36).
move(3,((3,3),(4,3)),37).
move(3,((4,3),(3,3)),38).
move(3,((3,3),(3,2)),39).
move(3,((3,2),(3,3)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,2)),6).
move(4,((4,2),(4,1)),7).
move(4,((4,1),(4,2)),8).
move(4,((4,2),(4,3)),9).
move(4,((4,3),(4,4)),11).
move(4,((4,4),(4,3)),33).
move(4,((4,3),(4,4)),34).
move(4,((4,4),(5,4)),35).
move(4,((5,4),(6,4)),36).
move(4,((6,4),(7,4)),37).
move(4,((7,4),(8,4)),38).
move(4,((8,4),(9,4)),39).
move(4,((9,4),(9,3)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(5,2)),8).
move(5,((5,2),(5,3)),9).
move(5,((5,3),(5,4)),10).
move(5,((5,4),(6,4)),33).
move(5,((6,4),(5,4)),34).
move(5,((5,4),(6,4)),35).
move(5,((6,4),(6,5)),36).
move(5,((6,5),(6,4)),38).
move(5,((6,4),(6,3)),39).
move(5,((6,3),(7,3)),40).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,2)),7).
move(6,((9,2),(10,2)),8).
move(6,((10,2),(10,1)),9).
move(6,((10,1),(11,1)),10).
move(6,((11,1),(10,1)),11).
move(6,((10,1),(10,2)),12).
move(6,((10,2),(9,2)),13).
move(6,((9,2),(9,3)),14).
move(6,((9,3),(9,4)),15).
move(6,((9,4),(8,4)),35).
move(6,((8,4),(7,4)),36).
move(6,((7,4),(7,3)),37).
move(6,((7,3),(6,3)),38).
move(6,((6,3),(5,3)),39).
move(6,((5,3),(4,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(6,1)),7).
move(7,((6,1),(6,2)),8).
move(7,((6,2),(6,3)),9).
move(7,((6,3),(6,2)),10).
move(7,((6,2),(6,3)),11).
move(7,((6,3),(6,4)),12).
move(7,((6,4),(6,3)),33).
move(7,((6,3),(6,2)),34).
move(7,((6,2),(7,2)),35).
move(7,((7,2),(8,2)),36).
move(7,((8,2),(9,2)),37).
move(7,((9,2),(10,2)),38).
move(7,((10,2),(10,3)),39).
move(7,((10,3),(10,4)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(7,4)),10).
move(8,((7,4),(7,3)),33).
move(8,((7,3),(6,3)),35).
move(8,((6,3),(6,2)),36).
move(8,((6,2),(7,2)),37).
move(8,((7,2),(7,3)),38).
move(8,((7,3),(7,4)),39).
move(8,((7,4),(8,4)),40).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(10,6)),3).
move(9,((10,6),(10,5)),4).
move(9,((10,5),(10,4)),6).
move(9,((10,4),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(9,((11,3),(11,2)),9).
move(9,((11,2),(10,2)),10).
move(9,((10,2),(10,3)),11).
move(9,((10,3),(10,4)),12).
move(9,((10,4),(10,3)),34).
move(9,((10,3),(9,3)),35).
move(9,((9,3),(9,4)),36).
move(9,((9,4),(9,5)),37).
move(9,((9,5),(8,5)),38).
move(9,((8,5),(7,5)),39).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,3)),5).
move(10,((8,3),(8,2)),6).
move(10,((8,2),(8,1)),7).
move(10,((8,1),(9,1)),8).
move(10,((9,1),(9,2)),9).
move(10,((9,2),(8,2)),10).
move(10,((8,2),(8,3)),11).
move(10,((8,3),(8,4)),12).
move(10,((8,4),(7,4)),33).
move(10,((7,4),(6,4)),34).
move(10,((6,4),(6,5)),35).
move(10,((6,5),(5,5)),36).
move(10,((5,5),(4,5)),37).
move(10,((4,5),(4,4)),38).
move(10,((4,4),(4,5)),39).
move(10,((4,5),(4,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(10,2)),7).
move(11,((10,2),(11,2)),8).
move(11,((11,2),(11,1)),9).
move(11,((11,1),(11,2)),10).
move(11,((11,2),(10,2)),11).
move(11,((10,2),(10,3)),12).
move(11,((10,3),(9,3)),33).
move(11,((9,3),(8,3)),34).
move(11,((8,3),(7,3)),35).
move(11,((7,3),(6,3)),36).
move(11,((6,3),(5,3)),37).
move(11,((5,3),(4,3)),38).
move(11,((4,3),(3,3)),39).
move(11,((3,3),(2,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.686s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 514      (Domain: 514)
Conflicts    : 23       (Analyzed: 23)
Restarts     : 0       
Model-Level  : 375.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 23       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 1        (Ratio:   4.35%)
  Conflict   : 23       (Average Length:   15.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 23       (Average:  6.04 Max:  17 Sum:    139)
  Executed   : 23       (Average:  6.04 Max:  17 Sum:    139 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378787   (Original: 352632)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141775  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

