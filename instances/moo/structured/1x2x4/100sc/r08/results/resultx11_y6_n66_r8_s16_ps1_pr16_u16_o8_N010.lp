%%%%%
%Standard
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(5,4)),5).
move(1,((5,4),(5,3)),6).
move(1,((5,3),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(1,3)),3).
move(2,((1,3),(2,3)),7).
move(2,((2,3),(2,4)),8).
move(2,((2,4),(3,4)),9).
move(2,((3,4),(4,4)),10).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(8,6)),7).
move(3,((8,6),(8,5)),9).
move(3,((8,5),(8,4)),10).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(9,6)),6).
move(4,((9,6),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(5,4)),3).
move(5,((5,4),(6,4)),4).
move(5,((6,4),(7,4)),5).
move(5,((7,4),(7,5)),6).
move(5,((7,5),(7,4)),7).
move(5,((7,4),(8,4)),8).
move(5,((8,4),(9,4)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(5,2)),4).
move(6,((5,2),(5,3)),5).
move(6,((5,3),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(10,4)),6).
move(7,((10,4),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,2)),4).
move(8,((7,2),(6,2)),5).
move(8,((6,2),(5,2)),7).
move(8,((5,2),(5,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.304s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.297s

Choices      : 1035    
Conflicts    : 43       (Analyzed: 43)
Restarts     : 0       
Model-Level  : 373.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 43       (Deleted: 0)
  Binary     : 9        (Ratio:  20.93%)
  Ternary    : 3        (Ratio:   6.98%)
  Conflict   : 43       (Average Length:   21.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 43       (Average: 15.40 Max:  91 Sum:    662)
  Executed   : 43       (Average: 15.40 Max:  91 Sum:    662 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261077   (Original: 241134)
  Choice     : 320     
Atoms        : 106367  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(4,6)),4).
move(1,((4,6),(4,5)),5).
move(1,((4,5),(4,4)),6).
move(1,((4,4),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(1,3)),3).
move(2,((1,3),(1,2)),4).
move(2,((1,2),(2,2)),5).
move(2,((2,2),(2,3)),7).
move(2,((2,3),(2,4)),8).
move(2,((2,4),(3,4)),10).
move(2,((3,4),(4,4)),12).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(4,5)),3).
move(3,((4,5),(5,5)),4).
move(3,((5,5),(6,5)),5).
move(3,((6,5),(7,5)),6).
move(3,((7,5),(7,4)),7).
move(3,((7,4),(7,5)),8).
move(3,((7,5),(7,4)),9).
move(3,((7,4),(8,4)),10).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(5,5)),3).
move(4,((5,5),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(8,5)),6).
move(4,((8,5),(8,4)),7).
move(4,((8,4),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(7,5)),4).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(7,3)),6).
move(5,((7,3),(8,3)),7).
move(5,((8,3),(8,4)),8).
move(5,((8,4),(9,4)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(5,2)),4).
move(6,((5,2),(6,2)),5).
move(6,((6,2),(7,2)),6).
move(6,((7,2),(8,2)),7).
move(6,((8,2),(8,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),5).
move(7,((7,3),(8,3)),6).
move(7,((8,3),(9,3)),7).
move(7,((9,3),(10,3)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(5,4)),5).
move(8,((5,4),(5,3)),6).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.266s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.266s

Choices      : 1636     (Domain: 180)
Conflicts    : 51       (Analyzed: 51)
Restarts     : 0       
Model-Level  : 505.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 51       (Deleted: 0)
  Binary     : 6        (Ratio:  11.76%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 51       (Average Length:   21.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 51       (Average: 22.18 Max: 125 Sum:   1131)
  Executed   : 51       (Average: 22.18 Max: 125 Sum:   1131 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261369   (Original: 241426)
  Choice     : 320     
  Heuristic  : 187     
Atoms        : 106472  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDistance.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(3,5)),3).
move(2,((3,5),(3,4)),4).
move(2,((3,4),(4,4)),5).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(4,5)),3).
move(3,((4,5),(4,4)),4).
move(3,((4,4),(5,4)),5).
move(3,((5,4),(6,4)),6).
move(3,((6,4),(7,4)),7).
move(3,((7,4),(8,4)),8).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(6,5)),4).
move(4,((6,5),(6,4)),5).
move(4,((6,4),(6,3)),6).
move(4,((6,3),(7,3)),7).
move(4,((7,3),(7,2)),8).
move(4,((7,2),(8,2)),9).
move(4,((8,2),(9,2)),10).
move(4,((9,2),(9,3)),11).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(7,5)),4).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(8,4)),6).
move(5,((8,4),(9,4)),7).
move(6,((5,6),(6,6)),1).
move(6,((6,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(8,5)),4).
move(6,((8,5),(8,4)),5).
move(6,((8,4),(8,3)),6).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),3).
move(7,((7,4),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(5,4)),4).
move(8,((5,4),(5,3)),5).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.211s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.203s

Choices      : 430      (Domain: 430)
Conflicts    : 5        (Analyzed: 5)
Restarts     : 0       
Model-Level  : 287.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 5        (Deleted: 0)
  Binary     : 5        (Ratio: 100.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 5        (Average Length:    2.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 5        (Average: 28.60 Max: 113 Sum:    143)
  Executed   : 5        (Average: 28.60 Max: 113 Sum:    143 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279646   (Original: 259775)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106480  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(3,5)),3).
move(2,((3,5),(3,4)),4).
move(2,((3,4),(4,4)),5).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(8,6)),6).
move(3,((8,6),(8,5)),7).
move(3,((8,5),(8,4)),10).
move(3,((8,4),(8,5)),11).
move(3,((8,5),(8,4)),40).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(9,6)),6).
move(4,((9,6),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(8,4)),9).
move(4,((8,4),(8,3)),10).
move(4,((8,3),(9,3)),40).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(7,5)),4).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(8,4)),6).
move(5,((8,4),(9,4)),7).
move(5,((9,4),(10,4)),8).
move(5,((10,4),(9,4)),9).
move(5,((9,4),(9,5)),10).
move(5,((9,5),(9,4)),40).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(6,4)),3).
move(6,((6,4),(7,4)),6).
move(6,((7,4),(7,3)),7).
move(6,((7,3),(7,2)),8).
move(6,((7,2),(8,2)),9).
move(6,((8,2),(8,3)),40).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(8,5)),3).
move(7,((8,5),(8,4)),7).
move(7,((8,4),(8,3)),8).
move(7,((8,3),(9,3)),9).
move(7,((9,3),(10,3)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(5,4)),4).
move(8,((5,4),(5,3)),5).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.244s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 1.234s

Choices      : 465      (Domain: 80)
Conflicts    : 37       (Analyzed: 37)
Restarts     : 0       
Model-Level  : 279.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 37       (Deleted: 0)
  Binary     : 14       (Ratio:  37.84%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 37       (Average Length:   67.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 37       (Average:  5.03 Max:  27 Sum:    186)
  Executed   : 37       (Average:  5.03 Max:  27 Sum:    186 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279646   (Original: 259775)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106480  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),3).
move(2,((3,5),(3,4)),4).
move(2,((3,4),(4,4)),5).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(8,6)),6).
move(3,((8,6),(8,5)),7).
move(3,((8,5),(8,4)),8).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(8,5)),6).
move(4,((8,5),(8,4)),7).
move(4,((8,4),(8,3)),8).
move(4,((8,3),(9,3)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(8,6)),4).
move(5,((8,6),(8,5)),5).
move(5,((8,5),(8,4)),6).
move(5,((8,4),(9,4)),7).
move(6,((5,6),(6,6)),1).
move(6,((6,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(8,5)),4).
move(6,((8,5),(8,4)),5).
move(6,((8,4),(8,3)),6).
move(6,((8,3),(8,2)),7).
move(6,((8,2),(8,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),3).
move(7,((7,4),(8,4)),4).
move(7,((8,4),(9,4)),5).
move(7,((9,4),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(5,4)),4).
move(8,((5,4),(5,3)),5).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.190s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.188s

Choices      : 301      (Domain: 32)
Conflicts    : 1        (Analyzed: 1)
Restarts     : 0       
Model-Level  : 300.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 1        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 1        (Average Length:   48.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 1        (Average:  1.00 Max:   1 Sum:      1)
  Executed   : 1        (Average:  1.00 Max:   1 Sum:      1 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 262220   (Original: 242293)
  Choice     : 320     
  Heuristic  : 975      (Original: 991)
Atoms        : 106535  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(7,4)),3).
move(1,((7,4),(6,4)),4).
move(1,((6,4),(6,3)),5).
move(1,((6,3),(5,3)),6).
move(1,((5,3),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(2,5)),2).
move(2,((2,5),(3,5)),3).
move(2,((3,5),(4,5)),4).
move(2,((4,5),(4,4)),5).
move(2,((4,4),(5,4)),7).
move(2,((5,4),(4,4)),8).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(3,5)),2).
move(3,((3,5),(4,5)),3).
move(3,((4,5),(5,5)),4).
move(3,((5,5),(6,5)),5).
move(3,((6,5),(7,5)),6).
move(3,((7,5),(8,5)),7).
move(3,((8,5),(8,6)),8).
move(3,((8,6),(8,5)),9).
move(3,((8,5),(8,4)),10).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(4,5)),2).
move(4,((4,5),(5,5)),3).
move(4,((5,5),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(8,5)),6).
move(4,((8,5),(8,4)),7).
move(4,((8,4),(8,3)),9).
move(4,((8,3),(9,3)),40).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(7,5)),4).
move(5,((7,5),(8,5)),5).
move(5,((8,5),(8,4)),6).
move(5,((8,4),(8,3)),7).
move(5,((8,3),(9,3)),8).
move(5,((9,3),(9,4)),40).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(5,2)),4).
move(6,((5,2),(6,2)),6).
move(6,((6,2),(7,2)),7).
move(6,((7,2),(8,2)),8).
move(6,((8,2),(8,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(10,4)),6).
move(7,((10,4),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(6,3)),7).
move(8,((6,3),(5,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.184s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.172s

Choices      : 1834     (Domain: 1036)
Conflicts    : 27       (Analyzed: 27)
Restarts     : 0       
Model-Level  : 1431.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 27       (Deleted: 0)
  Binary     : 7        (Ratio:  25.93%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 27       (Average Length:   25.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 27       (Average: 14.93 Max: 103 Sum:    403)
  Executed   : 27       (Average: 14.93 Max: 103 Sum:    403 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 262282   (Original: 242341)
  Choice     : 320     
  Heuristic  : 1100     (Original: 1102)
Atoms        : 106472  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(1,((8,3),(7,3)),4).
move(1,((7,3),(6,3)),5).
move(1,((6,3),(5,3)),6).
move(1,((5,3),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(4,5)),4).
move(2,((4,5),(4,4)),5).
move(2,((4,4),(5,4)),7).
move(2,((5,4),(4,4)),8).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(8,6)),6).
move(3,((8,6),(8,5)),7).
move(3,((8,5),(8,4)),9).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(9,6)),6).
move(4,((9,6),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(4,((9,4),(9,3)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(8,6)),4).
move(5,((8,6),(9,6)),5).
move(5,((9,6),(10,6)),6).
move(5,((10,6),(10,5)),7).
move(5,((10,5),(9,5)),8).
move(5,((9,5),(9,4)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(5,2)),4).
move(6,((5,2),(6,2)),5).
move(6,((6,2),(7,2)),6).
move(6,((7,2),(8,2)),7).
move(6,((8,2),(8,3)),8).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(10,4)),6).
move(7,((10,4),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(6,3)),7).
move(8,((6,3),(5,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.239s (Solving: 0.04s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.234s

Choices      : 866      (Domain: 503)
Conflicts    : 35       (Analyzed: 35)
Restarts     : 0       
Model-Level  : 426.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 35       (Deleted: 0)
  Binary     : 7        (Ratio:  20.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 35       (Average Length:   22.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 35       (Average: 12.57 Max: 105 Sum:    440)
  Executed   : 35       (Average: 12.57 Max: 105 Sum:    440 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279656   (Original: 259777)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106489  
Disjunctions : 0        (Original: 1)
Bodies       : 183368   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93247    (Atom=Atom: 342 Body=Body: 351 Other: 92554)
Tight        : Yes
Variables    : 182697   (Eliminated:    0 Frozen: 92083)
Constraints  : 500665   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((8,6),(8,5)),3).
move(1,((8,5),(8,4)),4).
move(1,((8,4),(7,4)),5).
move(1,((7,4),(8,4)),6).
move(1,((8,4),(8,3)),7).
move(1,((8,3),(7,3)),8).
move(1,((7,3),(8,3)),9).
move(1,((8,3),(7,3)),10).
move(1,((7,3),(8,3)),11).
move(1,((8,3),(7,3)),12).
move(1,((7,3),(6,3)),13).
move(1,((6,3),(6,4)),14).
move(1,((6,4),(5,4)),15).
move(1,((5,4),(6,4)),16).
move(1,((6,4),(6,3)),17).
move(1,((6,3),(7,3)),18).
move(1,((7,3),(8,3)),19).
move(1,((8,3),(8,4)),21).
move(1,((8,4),(7,4)),22).
move(1,((7,4),(7,5)),23).
move(1,((7,5),(8,5)),24).
move(1,((8,5),(8,4)),25).
move(1,((8,4),(8,5)),29).
move(1,((8,5),(8,4)),30).
move(1,((8,4),(8,3)),32).
move(1,((8,3),(7,3)),33).
move(1,((7,3),(6,3)),35).
move(1,((6,3),(5,3)),36).
move(1,((5,3),(4,3)),37).
move(1,((4,3),(3,3)),38).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(1,4)),7).
move(2,((1,4),(2,4)),8).
move(2,((2,4),(2,5)),25).
move(2,((2,5),(2,4)),26).
move(2,((2,4),(2,5)),27).
move(2,((2,5),(3,5)),28).
move(2,((3,5),(3,4)),30).
move(2,((3,4),(4,4)),31).
move(2,((4,4),(4,5)),32).
move(2,((4,5),(3,5)),33).
move(2,((3,5),(2,5)),36).
move(2,((2,5),(3,5)),38).
move(2,((3,5),(3,4)),39).
move(2,((3,4),(4,4)),40).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(2,4)),7).
move(3,((2,4),(3,4)),8).
move(3,((3,4),(4,4)),16).
move(3,((4,4),(5,4)),17).
move(3,((5,4),(5,5)),18).
move(3,((5,5),(6,5)),19).
move(3,((6,5),(7,5)),20).
move(3,((7,5),(8,5)),21).
move(3,((8,5),(8,4)),22).
move(3,((8,4),(8,5)),23).
move(3,((8,5),(8,4)),24).
move(3,((8,4),(7,4)),25).
move(3,((7,4),(6,4)),27).
move(3,((6,4),(7,4)),28).
move(3,((7,4),(7,5)),29).
move(3,((7,5),(6,5)),30).
move(3,((6,5),(6,4)),31).
move(3,((6,4),(5,4)),32).
move(3,((5,4),(4,4)),34).
move(3,((4,4),(3,4)),35).
move(3,((3,4),(4,4)),36).
move(3,((4,4),(5,4)),37).
move(3,((5,4),(6,4)),38).
move(3,((6,4),(7,4)),39).
move(3,((7,4),(8,4)),40).
move(4,((3,6),(3,5)),2).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(3,3)),5).
move(4,((3,3),(3,4)),7).
move(4,((3,4),(3,3)),8).
move(4,((3,3),(4,3)),11).
move(4,((4,3),(3,3)),12).
move(4,((3,3),(3,4)),16).
move(4,((3,4),(3,5)),18).
move(4,((3,5),(3,4)),19).
move(4,((3,4),(3,3)),21).
move(4,((3,3),(3,4)),22).
move(4,((3,4),(4,4)),24).
move(4,((4,4),(3,4)),25).
move(4,((3,4),(3,3)),27).
move(4,((3,3),(3,4)),28).
move(4,((3,4),(3,3)),30).
move(4,((3,3),(3,4)),31).
move(4,((3,4),(4,4)),32).
move(4,((4,4),(4,3)),33).
move(4,((4,3),(5,3)),34).
move(4,((5,3),(5,2)),35).
move(4,((5,2),(6,2)),36).
move(4,((6,2),(6,3)),37).
move(4,((6,3),(7,3)),38).
move(4,((7,3),(8,3)),39).
move(4,((8,3),(9,3)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,5)),5).
move(5,((4,5),(5,5)),6).
move(5,((5,5),(6,5)),7).
move(5,((6,5),(6,4)),8).
move(5,((6,4),(6,5)),9).
move(5,((6,5),(5,5)),10).
move(5,((5,5),(5,4)),11).
move(5,((5,4),(5,5)),12).
move(5,((5,5),(4,5)),14).
move(5,((4,5),(4,4)),15).
move(5,((4,4),(4,5)),16).
move(5,((4,5),(4,4)),20).
move(5,((4,4),(4,5)),21).
move(5,((4,5),(5,5)),22).
move(5,((5,5),(6,5)),23).
move(5,((6,5),(5,5)),24).
move(5,((5,5),(4,5)),25).
move(5,((4,5),(4,4)),27).
move(5,((4,4),(5,4)),28).
move(5,((5,4),(4,4)),29).
move(5,((4,4),(4,5)),30).
move(5,((4,5),(5,5)),32).
move(5,((5,5),(4,5)),33).
move(5,((4,5),(5,5)),34).
move(5,((5,5),(6,5)),35).
move(5,((6,5),(6,4)),36).
move(5,((6,4),(7,4)),37).
move(5,((7,4),(8,4)),38).
move(5,((8,4),(9,4)),39).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(5,4)),4).
move(6,((5,4),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,4)),7).
move(6,((6,4),(5,4)),8).
move(6,((5,4),(6,4)),9).
move(6,((6,4),(5,4)),12).
move(6,((5,4),(6,4)),13).
move(6,((6,4),(5,4)),14).
move(6,((5,4),(5,3)),15).
move(6,((5,3),(6,3)),16).
move(6,((6,3),(5,3)),17).
move(6,((5,3),(5,4)),19).
move(6,((5,4),(5,5)),20).
move(6,((5,5),(5,4)),21).
move(6,((5,4),(6,4)),22).
move(6,((6,4),(7,4)),23).
move(6,((7,4),(6,4)),24).
move(6,((6,4),(5,4)),26).
move(6,((5,4),(5,5)),27).
move(6,((5,5),(5,4)),29).
move(6,((5,4),(6,4)),30).
move(6,((6,4),(5,4)),31).
move(6,((5,4),(5,3)),32).
move(6,((5,3),(6,3)),33).
move(6,((6,3),(6,4)),34).
move(6,((6,4),(5,4)),35).
move(6,((5,4),(6,4)),37).
move(6,((6,4),(7,4)),38).
move(6,((7,4),(7,3)),39).
move(6,((7,3),(8,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(7,5)),4).
move(7,((7,5),(8,5)),5).
move(7,((8,5),(8,4)),7).
move(7,((8,4),(8,3)),8).
move(7,((8,3),(9,3)),9).
move(7,((9,3),(10,3)),10).
move(7,((10,3),(9,3)),11).
move(7,((9,3),(8,3)),12).
move(7,((8,3),(7,3)),13).
move(7,((7,3),(6,3)),14).
move(7,((6,3),(6,4)),15).
move(7,((6,4),(6,5)),16).
move(7,((6,5),(6,4)),17).
move(7,((6,4),(6,3)),22).
move(7,((6,3),(6,4)),23).
move(7,((6,4),(6,5)),24).
move(7,((6,5),(6,4)),26).
move(7,((6,4),(6,3)),27).
move(7,((6,3),(6,4)),28).
move(7,((6,4),(7,4)),29).
move(7,((7,4),(7,3)),30).
move(7,((7,3),(6,3)),31).
move(7,((6,3),(6,4)),32).
move(7,((6,4),(7,4)),33).
move(7,((7,4),(6,4)),35).
move(7,((6,4),(6,3)),36).
move(7,((6,3),(7,3)),37).
move(7,((7,3),(8,3)),38).
move(7,((8,3),(9,3)),39).
move(7,((9,3),(10,3)),40).
move(8,((7,6),(6,6)),3).
move(8,((6,6),(6,5)),4).
move(8,((6,5),(7,5)),5).
move(8,((7,5),(7,4)),6).
move(8,((7,4),(7,3)),7).
move(8,((7,3),(7,4)),8).
move(8,((7,4),(7,3)),22).
move(8,((7,3),(6,3)),23).
move(8,((6,3),(5,3)),25).
move(8,((5,3),(6,3)),26).
move(8,((6,3),(5,3)),27).
move(8,((5,3),(6,3)),28).
move(8,((6,3),(6,4)),29).
move(8,((6,4),(7,4)),30).
move(8,((7,4),(7,5)),31).
move(8,((7,5),(7,6)),35).
move(8,((7,6),(7,5)),36).
move(8,((7,5),(6,5)),37).
move(8,((6,5),(5,5)),38).
move(8,((5,5),(5,4)),39).
move(8,((5,4),(5,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.229s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.234s

Choices      : 516      (Domain: 516)
Conflicts    : 35       (Analyzed: 35)
Restarts     : 0       
Model-Level  : 270.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 35       (Deleted: 0)
  Binary     : 12       (Ratio:  34.29%)
  Ternary    : 1        (Ratio:   2.86%)
  Conflict   : 35       (Average Length:    9.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 35       (Average:  7.03 Max:  44 Sum:    246)
  Executed   : 35       (Average:  7.03 Max:  44 Sum:    246 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279638   (Original: 259767)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106472  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hStrange.lp
%%%%%
move(1,((8,6),(7,6)),2).
move(1,((7,6),(7,5)),5).
move(1,((7,5),(7,4)),6).
move(1,((7,4),(8,4)),7).
move(1,((8,4),(8,3)),8).
move(1,((8,3),(8,2)),9).
move(1,((8,2),(9,2)),10).
move(1,((9,2),(10,2)),11).
move(1,((10,2),(10,1)),12).
move(1,((10,1),(11,1)),13).
move(1,((11,1),(10,1)),14).
move(1,((10,1),(10,2)),15).
move(1,((10,2),(9,2)),16).
move(1,((9,2),(8,2)),17).
move(1,((8,2),(8,3)),18).
move(1,((8,3),(8,4)),19).
move(1,((8,4),(7,4)),20).
move(1,((7,4),(8,4)),21).
move(1,((8,4),(7,4)),35).
move(1,((7,4),(7,3)),36).
move(1,((7,3),(6,3)),37).
move(1,((6,3),(5,3)),38).
move(1,((5,3),(4,3)),39).
move(1,((4,3),(3,3)),40).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(2,2)),8).
move(2,((2,2),(1,2)),9).
move(2,((1,2),(1,1)),10).
move(2,((1,1),(1,2)),11).
move(2,((1,2),(2,2)),12).
move(2,((2,2),(2,3)),13).
move(2,((2,3),(2,4)),14).
move(2,((2,4),(3,4)),36).
move(2,((3,4),(4,4)),37).
move(2,((4,4),(4,3)),38).
move(2,((4,3),(4,4)),39).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(3,1)),8).
move(3,((3,1),(2,1)),9).
move(3,((2,1),(2,2)),10).
move(3,((2,2),(2,3)),11).
move(3,((2,3),(2,4)),12).
move(3,((2,4),(3,4)),14).
move(3,((3,4),(3,3)),20).
move(3,((3,3),(4,3)),21).
move(3,((4,3),(5,3)),22).
move(3,((5,3),(5,2)),23).
move(3,((5,2),(4,2)),24).
move(3,((4,2),(3,2)),25).
move(3,((3,2),(2,2)),26).
move(3,((2,2),(2,3)),27).
move(3,((2,3),(3,3)),34).
move(3,((3,3),(3,4)),35).
move(3,((3,4),(4,4)),36).
move(3,((4,4),(5,4)),37).
move(3,((5,4),(6,4)),38).
move(3,((6,4),(7,4)),39).
move(3,((7,4),(8,4)),40).
move(4,((3,6),(3,5)),2).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(3,3)),5).
move(4,((3,3),(3,2)),6).
move(4,((3,2),(2,2)),7).
move(4,((2,2),(1,2)),8).
move(4,((1,2),(1,1)),9).
move(4,((1,1),(2,1)),10).
move(4,((2,1),(2,2)),11).
move(4,((2,2),(3,2)),12).
move(4,((3,2),(3,3)),13).
move(4,((3,3),(3,2)),20).
move(4,((3,2),(3,3)),21).
move(4,((3,3),(3,4)),22).
move(4,((3,4),(4,4)),34).
move(4,((4,4),(5,4)),35).
move(4,((5,4),(6,4)),36).
move(4,((6,4),(7,4)),37).
move(4,((7,4),(8,4)),38).
move(4,((8,4),(9,4)),39).
move(4,((9,4),(9,3)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(4,2)),6).
move(5,((4,2),(4,1)),7).
move(5,((4,1),(4,2)),8).
move(5,((4,2),(4,3)),9).
move(5,((4,3),(4,4)),10).
move(5,((4,4),(4,5)),34).
move(5,((4,5),(5,5)),35).
move(5,((5,5),(6,5)),36).
move(5,((6,5),(7,5)),37).
move(5,((7,5),(8,5)),38).
move(5,((8,5),(9,5)),39).
move(5,((9,5),(9,4)),40).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(7,2)),8).
move(6,((7,2),(7,1)),9).
move(6,((7,1),(8,1)),10).
move(6,((8,1),(9,1)),11).
move(6,((9,1),(9,2)),12).
move(6,((9,2),(8,2)),13).
move(6,((8,2),(7,2)),14).
move(6,((7,2),(6,2)),15).
move(6,((6,2),(5,2)),16).
move(6,((5,2),(5,3)),17).
move(6,((5,3),(5,4)),18).
move(6,((5,4),(5,3)),35).
move(6,((5,3),(5,4)),36).
move(6,((5,4),(6,4)),37).
move(6,((6,4),(6,3)),38).
move(6,((6,3),(7,3)),39).
move(6,((7,3),(8,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(7,5)),4).
move(7,((7,5),(8,5)),5).
move(7,((8,5),(9,5)),7).
move(7,((9,5),(9,4)),8).
move(7,((9,4),(9,3)),9).
move(7,((9,3),(10,3)),10).
move(7,((10,3),(11,3)),11).
move(7,((11,3),(11,2)),12).
move(7,((11,2),(10,2)),13).
move(7,((10,2),(9,2)),14).
move(7,((9,2),(8,2)),15).
move(7,((8,2),(7,2)),16).
move(7,((7,2),(6,2)),17).
move(7,((6,2),(6,3)),18).
move(7,((6,3),(6,4)),19).
move(7,((6,4),(7,4)),36).
move(7,((7,4),(8,4)),37).
move(7,((8,4),(9,4)),38).
move(7,((9,4),(10,4)),39).
move(7,((10,4),(10,3)),40).
move(8,((7,6),(7,5)),2).
move(8,((7,5),(7,4)),3).
move(8,((7,4),(6,4)),4).
move(8,((6,4),(7,4)),5).
move(8,((7,4),(7,3)),6).
move(8,((7,3),(7,4)),8).
move(8,((7,4),(7,5)),19).
move(8,((7,5),(7,4)),22).
move(8,((7,4),(7,3)),34).
move(8,((7,3),(6,3)),36).
move(8,((6,3),(5,3)),37).
move(8,((5,3),(5,4)),38).
move(8,((5,4),(5,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.206s (Solving: 0.03s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1.203s

Choices      : 350      (Domain: 350)
Conflicts    : 14       (Analyzed: 14)
Restarts     : 0       
Model-Level  : 282.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 14       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 14       (Average Length:   19.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 14       (Average:  4.86 Max:  11 Sum:     68)
  Executed   : 14       (Average:  4.86 Max:  11 Sum:     68 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279638   (Original: 259767)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106472  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

