clingo version 5.5.2
Reading from ...nt/beegfs/home/jubruns/encoding/mif.lp ...
Solving...
Answer: 1
move(1,(1,6),(1,5),1) move(1,(1,5),(1,4),2) move(1,(1,4),(1,3),3) move(1,(1,3),(1,2),4) move(1,(1,2),(1,1),5) move(1,(1,1),(2,1),6) move(1,(2,1),(3,1),7) move(1,(3,1),(4,1),8) move(1,(4,1),(5,1),9) move(1,(5,1),(5,2),10) move(1,(5,2),(5,1),11) move(1,(5,1),(4,1),12) move(1,(4,1),(5,1),13) move(1,(5,1),(5,2),14) move(1,(5,2),(5,3),15) move(1,(5,3),(5,2),17) move(1,(5,2),(5,1),19) move(1,(5,1),(4,1),20) move(1,(4,1),(3,1),21) move(1,(3,1),(2,1),22) move(1,(2,1),(1,1),23) move(1,(1,1),(1,2),24) move(1,(1,2),(1,3),25) move(1,(1,3),(1,4),26) move(1,(1,4),(1,5),27) move(1,(1,5),(1,6),28) move(1,(1,6),(1,7),29) move(1,(1,7),(2,7),30) move(1,(2,7),(3,7),31) move(1,(3,7),(4,7),32) move(2,(1,4),(1,3),1) move(2,(1,3),(1,2),2) move(2,(1,2),(1,1),3) move(2,(1,1),(2,1),4) move(2,(2,1),(3,1),5) move(2,(3,1),(4,1),7) move(2,(4,1),(5,1),8) move(2,(5,1),(5,2),9) move(2,(5,2),(5,3),10) move(2,(5,3),(5,4),14) move(2,(5,4),(5,5),15) move(2,(5,5),(4,5),16) move(2,(4,5),(3,5),17) move(2,(3,5),(4,5),18) move(2,(4,5),(5,5),19) move(2,(5,5),(5,4),20) move(2,(5,4),(5,3),21) move(2,(5,3),(5,2),22) move(2,(5,2),(5,3),23) move(2,(5,3),(5,4),24) move(2,(5,4),(5,5),25) move(2,(5,5),(5,4),27) move(2,(5,4),(5,3),28) move(2,(5,3),(5,2),29) move(2,(5,2),(5,1),30) move(2,(5,1),(6,1),31) move(3,(6,7),(5,7),1) move(3,(5,7),(4,7),2) move(3,(4,7),(3,7),3) move(3,(3,7),(2,7),4) move(3,(2,7),(1,7),5) move(3,(1,7),(1,6),6) move(3,(1,6),(1,5),7) move(3,(1,5),(1,4),8) move(3,(1,4),(1,3),9) move(3,(1,3),(1,2),10) move(3,(1,2),(1,1),11) move(3,(1,1),(2,1),12) move(3,(2,1),(3,1),13) move(3,(3,1),(4,1),14) move(3,(4,1),(5,1),15) move(3,(5,1),(6,1),16) move(3,(6,1),(5,1),18) move(3,(5,1),(6,1),19) move(3,(6,1),(5,1),20) move(3,(5,1),(6,1),21) move(3,(6,1),(5,1),23) move(3,(5,1),(6,1),24) move(3,(6,1),(5,1),26) move(3,(5,1),(6,1),27) move(3,(6,1),(5,1),29) move(3,(5,1),(6,1),30) move(3,(6,1),(7,1),31) move(4,(7,2),(7,1),2) move(4,(7,1),(6,1),3) move(4,(6,1),(7,1),4) move(4,(7,1),(7,2),7) move(4,(7,2),(7,1),9) move(4,(7,1),(6,1),10) move(4,(6,1),(5,1),12) move(4,(5,1),(5,2),13) move(4,(5,2),(5,3),14) move(4,(5,3),(5,4),15) move(4,(5,4),(5,5),16) move(4,(5,5),(4,5),17) move(4,(4,5),(5,5),18) move(4,(5,5),(5,4),19) move(4,(5,4),(5,3),20) move(4,(5,3),(5,2),21) move(4,(5,2),(5,1),22) move(4,(5,1),(4,1),23) move(4,(4,1),(5,1),24) move(4,(5,1),(4,1),25) move(4,(4,1),(3,1),27) move(4,(3,1),(2,1),28) move(4,(2,1),(1,1),29) move(4,(1,1),(1,2),30) move(4,(1,2),(1,3),31) move(4,(1,3),(1,4),32) move(5,(5,4),(5,5),2) move(5,(5,5),(6,5),3) move(5,(6,5),(7,5),4) move(5,(7,5),(6,5),18) move(5,(6,5),(5,5),20) move(5,(5,5),(5,4),21) move(5,(5,4),(5,3),22) move(5,(5,3),(5,4),23) move(5,(5,4),(5,5),24) move(5,(5,5),(4,5),25) move(5,(4,5),(3,5),26) move(5,(3,5),(3,4),28) move(5,(3,4),(3,3),29) move(5,(3,3),(3,4),32) move(6,(3,4),(3,5),1) move(6,(3,5),(4,5),2) move(6,(4,5),(5,5),3) move(6,(5,5),(5,4),4) move(6,(5,4),(5,3),5) move(6,(5,3),(5,2),6) move(6,(5,2),(5,1),7) move(6,(5,1),(6,1),8) move(6,(6,1),(5,1),10) move(6,(5,1),(4,1),11) move(6,(4,1),(3,1),12) move(6,(3,1),(4,1),13) move(6,(4,1),(5,1),14) move(6,(5,1),(5,2),15) move(6,(5,2),(5,1),16) move(6,(5,1),(4,1),17) move(6,(4,1),(3,1),18) move(6,(3,1),(2,1),19) move(6,(2,1),(1,1),20) move(6,(1,1),(1,2),21) move(6,(1,2),(1,3),22) move(6,(1,3),(1,4),23) move(6,(1,4),(1,5),24) move(6,(1,5),(1,6),25) move(6,(1,6),(1,7),26) move(6,(1,7),(2,7),27) move(6,(2,7),(3,7),28) move(6,(3,7),(4,7),29) move(6,(4,7),(5,7),30) move(6,(5,7),(6,7),31) move(6,(6,7),(7,7),32)
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.245s (Solving: 0.07s 1st Model: 0.07s Unsat: 0.00s)
CPU Time     : 0.219s

Choices      : 2814     (Domain: 1582)
Conflicts    : 983      (Analyzed: 983)
Restarts     : 6        (Average: 163.83 Last: 320)
Model-Level  : 259.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 983      (Deleted: 0)
  Binary     : 66       (Ratio:   6.71%)
  Ternary    : 54       (Ratio:   5.49%)
  Conflict   : 983      (Average Length:   37.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 983      (Average:  2.50 Max: 162 Sum:   2460)
  Executed   : 983      (Average:  2.50 Max: 162 Sum:   2460 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 87438    (Original: 44870)
  Choice     : 192     
  Heuristic  : 4394     (Original: 4442)
Atoms        : 35021    (Original: 20263 Auxiliary: 14758)
Bodies       : 54702    (Original: 27080)
  Count      : 132      (Original: 1369)
Equivalences : 16741    (Atom=Atom: 203 Body=Body: 210 Other: 16328)
Tight        : Yes
Variables    : 45378    (Eliminated:    0 Frozen: 7920)
Constraints  : 131686   (Binary:  80.4% Ternary:  15.2% Other:   4.5%)

