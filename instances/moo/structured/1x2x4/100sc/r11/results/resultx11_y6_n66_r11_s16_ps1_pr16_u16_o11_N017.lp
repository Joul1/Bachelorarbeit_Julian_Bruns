%%%%%
%Standard
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(2,3)),6).
move(1,((2,3),(2,2)),7).
move(1,((2,2),(3,2)),8).
move(1,((3,2),(3,3)),9).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(4,4)),3).
move(3,((4,4),(5,4)),4).
move(3,((5,4),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(7,3)),7).
move(3,((7,3),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(8,6)),3).
move(5,((8,6),(8,5)),4).
move(5,((8,5),(8,4)),5).
move(5,((8,4),(8,3)),40).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(8,5)),2).
move(6,((8,5),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),5).
move(7,((5,3),(4,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,2)),4).
move(8,((7,2),(6,2)),5).
move(8,((6,2),(6,3)),6).
move(8,((6,3),(7,3)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(6,5)),5).
move(9,((6,5),(6,4)),6).
move(9,((6,4),(7,4)),8).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,3)),3).
move(10,((8,3),(7,3)),4).
move(10,((7,3),(7,4)),5).
move(10,((7,4),(7,5)),6).
move(10,((7,5),(8,5)),7).
move(10,((8,5),(8,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(9,5)),4).
move(11,((9,5),(9,4)),5).
move(11,((9,4),(9,3)),6).
move(11,((9,3),(8,3)),7).
move(11,((8,3),(9,3)),8).
move(11,((9,3),(10,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.671s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.672s

Choices      : 833     
Conflicts    : 39       (Analyzed: 39)
Restarts     : 0       
Model-Level  : 485.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 39       (Deleted: 0)
  Binary     : 8        (Ratio:  20.51%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 39       (Average Length:   17.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 39       (Average:  8.92 Max:  43 Sum:    348)
  Executed   : 39       (Average:  8.92 Max:  43 Sum:    348 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353468   (Original: 327181)
  Choice     : 440     
Atoms        : 141635  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),5).
move(1,((1,2),(2,2)),7).
move(1,((2,2),(3,2)),8).
move(1,((3,2),(3,3)),9).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(4,4)),3).
move(3,((4,4),(5,4)),4).
move(3,((5,4),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(7,3)),7).
move(3,((7,3),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(8,6)),3).
move(5,((8,6),(8,5)),4).
move(5,((8,5),(8,4)),5).
move(5,((8,4),(8,3)),40).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(8,5)),2).
move(6,((8,5),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),5).
move(7,((5,3),(4,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,2)),4).
move(8,((7,2),(6,2)),5).
move(8,((6,2),(6,3)),6).
move(8,((6,3),(7,3)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(6,5)),5).
move(9,((6,5),(5,5)),6).
move(9,((5,5),(5,4)),7).
move(9,((5,4),(6,4)),8).
move(9,((6,4),(7,4)),9).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,3)),3).
move(10,((8,3),(7,3)),4).
move(10,((7,3),(7,4)),5).
move(10,((7,4),(7,5)),6).
move(10,((7,5),(8,5)),7).
move(10,((8,5),(8,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(9,5)),4).
move(11,((9,5),(9,4)),5).
move(11,((9,4),(9,3)),6).
move(11,((9,3),(10,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.729s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.719s

Choices      : 912      (Domain: 99)
Conflicts    : 37       (Analyzed: 37)
Restarts     : 0       
Model-Level  : 575.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 37       (Deleted: 0)
  Binary     : 8        (Ratio:  21.62%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 37       (Average Length:   18.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 37       (Average:  9.11 Max:  56 Sum:    337)
  Executed   : 37       (Average:  9.11 Max:  56 Sum:    337 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353692   (Original: 327405)
  Choice     : 440     
  Heuristic  : 106     
Atoms        : 141753  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(3,4)),4).
move(1,((3,4),(3,3)),5).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(5,5)),3).
move(3,((5,5),(5,4)),4).
move(3,((5,4),(5,3)),5).
move(3,((5,3),(5,2)),6).
move(3,((5,2),(6,2)),7).
move(3,((6,2),(7,2)),8).
move(3,((7,2),(8,2)),9).
move(3,((8,2),(9,2)),10).
move(3,((9,2),(9,3)),11).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(6,5)),2).
move(5,((6,5),(6,4)),3).
move(5,((6,4),(6,3)),4).
move(5,((6,3),(6,2)),5).
move(5,((6,2),(7,2)),6).
move(5,((7,2),(8,2)),7).
move(5,((8,2),(8,3)),8).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(7,4)),4).
move(6,((7,4),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(4,4)),4).
move(7,((4,4),(4,3)),5).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(7,4)),5).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(10,5)),2).
move(11,((10,5),(10,4)),3).
move(11,((10,4),(10,3)),4).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.706s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.703s

Choices      : 415      (Domain: 415)
Conflicts    : 3        (Analyzed: 3)
Restarts     : 0       
Model-Level  : 396.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 3        (Deleted: 0)
  Binary     : 3        (Ratio: 100.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 3        (Average Length:    2.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 3        (Average:  6.33 Max:   8 Sum:     19)
  Executed   : 3        (Average:  6.33 Max:   8 Sum:     19 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378776   (Original: 352621)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141764  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(3,4)),4).
move(1,((3,4),(3,3)),5).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(7,6)),4).
move(3,((7,6),(7,5)),5).
move(3,((7,5),(7,4)),6).
move(3,((7,4),(8,4)),7).
move(3,((8,4),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(6,5)),2).
move(5,((6,5),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(5,((7,3),(8,3)),40).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(6,((5,3),(5,4)),8).
move(6,((5,4),(5,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(4,4)),4).
move(7,((4,4),(4,3)),5).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,2)),4).
move(8,((7,2),(7,3)),40).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),6).
move(9,((7,5),(7,4)),7).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(9,5)),2).
move(10,((9,5),(9,4)),3).
move(10,((9,4),(9,3)),4).
move(10,((9,3),(9,2)),5).
move(10,((9,2),(8,2)),8).
move(10,((8,2),(8,3)),9).
move(10,((8,3),(8,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),4).
move(11,((10,5),(10,4)),5).
move(11,((10,4),(10,3)),6).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.709s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.719s

Choices      : 729      (Domain: 127)
Conflicts    : 50       (Analyzed: 50)
Restarts     : 0       
Model-Level  : 393.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 50       (Deleted: 0)
  Binary     : 19       (Ratio:  38.00%)
  Ternary    : 4        (Ratio:   8.00%)
  Conflict   : 50       (Average Length:   12.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 50       (Average:  6.72 Max:  29 Sum:    336)
  Executed   : 50       (Average:  6.72 Max:  29 Sum:    336 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378776   (Original: 352621)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141764  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(3,4)),4).
move(1,((3,4),(3,3)),5).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(7,6)),4).
move(3,((7,6),(8,6)),5).
move(3,((8,6),(9,6)),6).
move(3,((9,6),(9,5)),7).
move(3,((9,5),(9,4)),8).
move(3,((9,4),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(4,((9,4),(8,4)),8).
move(4,((8,4),(9,4)),40).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(5,((7,3),(7,2)),6).
move(5,((7,2),(8,2)),7).
move(5,((8,2),(8,3)),40).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(8,6)),3).
move(6,((8,6),(8,5)),4).
move(6,((8,5),(8,4)),5).
move(6,((8,4),(8,3)),6).
move(6,((8,3),(7,3)),8).
move(6,((7,3),(6,3)),9).
move(6,((6,3),(5,3)),10).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(4,4)),4).
move(7,((4,4),(4,3)),5).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(7,4)),5).
move(8,((7,4),(7,3)),6).
move(8,((7,3),(7,2)),8).
move(8,((7,2),(7,3)),40).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(8,4)),4).
move(9,((8,4),(8,3)),5).
move(9,((8,3),(9,3)),6).
move(9,((9,3),(8,3)),9).
move(9,((8,3),(7,3)),10).
move(9,((7,3),(7,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(9,5)),2).
move(10,((9,5),(8,5)),5).
move(10,((8,5),(7,5)),6).
move(10,((7,5),(7,4)),7).
move(10,((7,4),(8,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(10,4)),3).
move(11,((10,4),(10,3)),4).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.714s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.703s

Choices      : 531      (Domain: 45)
Conflicts    : 10       (Analyzed: 10)
Restarts     : 0       
Model-Level  : 451.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 10       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 1        (Ratio:  10.00%)
  Conflict   : 10       (Average Length:   33.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 10       (Average:  8.00 Max:  44 Sum:     80)
  Executed   : 10       (Average:  8.00 Max:  44 Sum:     80 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354615   (Original: 328350)
  Choice     : 440     
  Heuristic  : 955      (Original: 977)
Atoms        : 141827  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),4).
move(1,((1,2),(2,2)),7).
move(1,((2,2),(3,2)),8).
move(1,((3,2),(3,3)),9).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(3,5)),2).
move(2,((3,5),(4,5)),3).
move(2,((4,5),(5,5)),4).
move(2,((5,5),(6,5)),5).
move(2,((6,5),(7,5)),6).
move(2,((7,5),(8,5)),7).
move(2,((8,5),(9,5)),8).
move(2,((9,5),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(4,5)),2).
move(3,((4,5),(5,5)),3).
move(3,((5,5),(6,5)),4).
move(3,((6,5),(7,5)),5).
move(3,((7,5),(8,5)),6).
move(3,((8,5),(9,5)),7).
move(3,((9,5),(9,4)),8).
move(3,((9,4),(9,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(9,4)),40).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(8,5)),4).
move(5,((8,5),(8,4)),5).
move(5,((8,4),(8,3)),6).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),4).
move(6,((8,3),(7,3)),5).
move(6,((7,3),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),4).
move(7,((6,3),(5,3)),5).
move(7,((5,3),(4,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,4)),4).
move(8,((7,4),(7,3)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(9,3)),4).
move(9,((9,3),(8,3)),5).
move(9,((8,3),(7,3)),6).
move(9,((7,3),(6,3)),7).
move(9,((6,3),(6,4)),9).
move(9,((6,4),(7,4)),40).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(7,5)),2).
move(10,((7,5),(7,4)),3).
move(10,((7,4),(6,4)),4).
move(10,((6,4),(7,4)),7).
move(10,((7,4),(8,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(11,3)),3).
move(11,((11,3),(10,3)),4).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.712s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.703s

Choices      : 1724     (Domain: 1076)
Conflicts    : 21       (Analyzed: 21)
Restarts     : 0       
Model-Level  : 1534.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 21       (Deleted: 0)
  Binary     : 1        (Ratio:   4.76%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 21       (Average Length:   20.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 21       (Average:  9.05 Max:  42 Sum:    190)
  Executed   : 21       (Average:  9.05 Max:  42 Sum:    190 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354726   (Original: 328442)
  Choice     : 440     
  Heuristic  : 1140     (Original: 1143)
Atoms        : 141753  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),4).
move(1,((1,2),(1,1)),5).
move(1,((1,1),(2,1)),6).
move(1,((2,1),(2,2)),7).
move(1,((2,2),(3,2)),8).
move(1,((3,2),(3,3)),9).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(4,4)),3).
move(3,((4,4),(5,4)),4).
move(3,((5,4),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(7,3)),7).
move(3,((7,3),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(8,6)),3).
move(5,((8,6),(8,5)),4).
move(5,((8,5),(8,4)),5).
move(5,((8,4),(8,3)),40).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(8,5)),2).
move(6,((8,5),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),5).
move(7,((5,3),(4,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,2)),4).
move(8,((7,2),(6,2)),5).
move(8,((6,2),(6,3)),6).
move(8,((6,3),(7,3)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(6,5)),5).
move(9,((6,5),(5,5)),6).
move(9,((5,5),(6,5)),7).
move(9,((6,5),(7,5)),8).
move(9,((7,5),(7,4)),9).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,3)),3).
move(10,((8,3),(7,3)),4).
move(10,((7,3),(7,4)),5).
move(10,((7,4),(7,5)),6).
move(10,((7,5),(8,5)),7).
move(10,((8,5),(8,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(11,6)),5).
move(11,((11,6),(10,6)),6).
move(11,((10,6),(10,5)),7).
move(11,((10,5),(10,4)),8).
move(11,((10,4),(10,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.732s (Solving: 0.05s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.734s

Choices      : 911      (Domain: 363)
Conflicts    : 40       (Analyzed: 40)
Restarts     : 0       
Model-Level  : 501.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 40       (Deleted: 0)
  Binary     : 7        (Ratio:  17.50%)
  Ternary    : 1        (Ratio:   2.50%)
  Conflict   : 40       (Average Length:   19.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 40       (Average: 10.25 Max:  55 Sum:    410)
  Executed   : 40       (Average: 10.25 Max:  55 Sum:    410 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378789   (Original: 352623)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141776  
Disjunctions : 0        (Original: 1)
Bodies       : 247623   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128049   (Atom=Atom: 470 Body=Body: 482 Other: 127097)
Tight        : Yes
Variables    : 246824   (Eliminated:    0 Frozen: 126446)
Constraints  : 678181   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,4)),8).
move(1,((2,4),(2,5)),9).
move(1,((2,5),(3,5)),10).
move(1,((3,5),(3,6)),11).
move(1,((3,6),(3,5)),12).
move(1,((3,5),(2,5)),14).
move(1,((2,5),(2,4)),15).
move(1,((2,4),(2,3)),16).
move(1,((2,3),(3,3)),17).
move(1,((3,3),(3,4)),18).
move(1,((3,4),(3,3)),19).
move(1,((3,3),(2,3)),20).
move(1,((2,3),(2,4)),22).
move(1,((2,4),(2,5)),23).
move(1,((2,5),(3,5)),24).
move(1,((3,5),(3,4)),25).
move(1,((3,4),(3,5)),26).
move(1,((3,5),(2,5)),28).
move(1,((2,5),(1,5)),30).
move(1,((1,5),(2,5)),31).
move(1,((2,5),(2,4)),32).
move(1,((2,4),(3,4)),33).
move(1,((3,4),(3,5)),34).
move(1,((3,5),(3,4)),37).
move(1,((3,4),(2,4)),38).
move(1,((2,4),(3,4)),39).
move(1,((3,4),(3,3)),40).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(2,4)),3).
move(2,((2,4),(3,4)),4).
move(2,((3,4),(2,4)),5).
move(2,((2,4),(3,4)),6).
move(2,((3,4),(2,4)),7).
move(2,((2,4),(3,4)),8).
move(2,((3,4),(2,4)),9).
move(2,((2,4),(3,4)),15).
move(2,((3,4),(2,4)),16).
move(2,((2,4),(2,5)),17).
move(2,((2,5),(2,4)),19).
move(2,((2,4),(3,4)),21).
move(2,((3,4),(4,4)),22).
move(2,((4,4),(3,4)),23).
move(2,((3,4),(2,4)),24).
move(2,((2,4),(3,4)),26).
move(2,((3,4),(4,4)),27).
move(2,((4,4),(4,3)),28).
move(2,((4,3),(4,4)),29).
move(2,((4,4),(5,4)),31).
move(2,((5,4),(5,3)),34).
move(2,((5,3),(6,3)),35).
move(2,((6,3),(7,3)),36).
move(2,((7,3),(8,3)),37).
move(2,((8,3),(9,3)),38).
move(2,((9,3),(9,4)),39).
move(2,((9,4),(10,4)),40).
move(3,((3,6),(3,5)),3).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,4)),7).
move(3,((3,4),(3,3)),8).
move(3,((3,3),(3,4)),10).
move(3,((3,4),(3,5)),11).
move(3,((3,5),(3,4)),12).
move(3,((3,4),(3,5)),14).
move(3,((3,5),(3,4)),17).
move(3,((3,4),(4,4)),18).
move(3,((4,4),(3,4)),19).
move(3,((3,4),(3,3)),20).
move(3,((3,3),(4,3)),21).
move(3,((4,3),(3,3)),22).
move(3,((3,3),(4,3)),25).
move(3,((4,3),(3,3)),26).
move(3,((3,3),(3,4)),27).
move(3,((3,4),(3,3)),29).
move(3,((3,3),(4,3)),30).
move(3,((4,3),(4,4)),31).
move(3,((4,4),(4,3)),34).
move(3,((4,3),(5,3)),35).
move(3,((5,3),(6,3)),36).
move(3,((6,3),(7,3)),37).
move(3,((7,3),(8,3)),38).
move(3,((8,3),(9,3)),39).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,5)),5).
move(4,((4,5),(5,5)),6).
move(4,((5,5),(4,5)),8).
move(4,((4,5),(4,4)),9).
move(4,((4,4),(5,4)),10).
move(4,((5,4),(4,4)),11).
move(4,((4,4),(4,5)),12).
move(4,((4,5),(4,4)),13).
move(4,((4,4),(5,4)),14).
move(4,((5,4),(6,4)),15).
move(4,((6,4),(6,5)),16).
move(4,((6,5),(6,6)),18).
move(4,((6,6),(7,6)),20).
move(4,((7,6),(8,6)),21).
move(4,((8,6),(8,5)),22).
move(4,((8,5),(9,5)),23).
move(4,((9,5),(9,4)),25).
move(4,((9,4),(9,5)),26).
move(4,((9,5),(9,4)),27).
move(4,((9,4),(9,5)),28).
move(4,((9,5),(9,4)),29).
move(4,((9,4),(9,5)),30).
move(4,((9,5),(9,4)),31).
move(4,((9,4),(9,5)),32).
move(4,((9,5),(8,5)),34).
move(4,((8,5),(8,6)),35).
move(4,((8,6),(7,6)),36).
move(4,((7,6),(7,5)),37).
move(4,((7,5),(8,5)),38).
move(4,((8,5),(9,5)),39).
move(4,((9,5),(9,4)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,4)),6).
move(5,((5,4),(5,3)),7).
move(5,((5,3),(6,3)),8).
move(5,((6,3),(6,4)),11).
move(5,((6,4),(5,4)),12).
move(5,((5,4),(5,5)),13).
move(5,((5,5),(6,5)),22).
move(5,((6,5),(6,4)),24).
move(5,((6,4),(5,4)),25).
move(5,((5,4),(6,4)),30).
move(5,((6,4),(5,4)),35).
move(5,((5,4),(6,4)),37).
move(5,((6,4),(6,3)),38).
move(5,((6,3),(7,3)),39).
move(5,((7,3),(8,3)),40).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),4).
move(6,((9,4),(9,3)),5).
move(6,((9,3),(9,4)),8).
move(6,((9,4),(9,3)),10).
move(6,((9,3),(9,4)),12).
move(6,((9,4),(9,3)),13).
move(6,((9,3),(8,3)),14).
move(6,((8,3),(7,3)),15).
move(6,((7,3),(7,4)),16).
move(6,((7,4),(6,4)),17).
move(6,((6,4),(6,5)),18).
move(6,((6,5),(7,5)),19).
move(6,((7,5),(6,5)),20).
move(6,((6,5),(6,4)),21).
move(6,((6,4),(6,3)),24).
move(6,((6,3),(6,4)),25).
move(6,((6,4),(6,5)),26).
move(6,((6,5),(6,4)),27).
move(6,((6,4),(6,3)),28).
move(6,((6,3),(7,3)),29).
move(6,((7,3),(8,3)),30).
move(6,((8,3),(9,3)),31).
move(6,((9,3),(9,4)),32).
move(6,((9,4),(9,5)),34).
move(6,((9,5),(8,5)),35).
move(6,((8,5),(7,5)),36).
move(6,((7,5),(6,5)),37).
move(6,((6,5),(5,5)),38).
move(6,((5,5),(5,4)),39).
move(6,((5,4),(5,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,4)),6).
move(7,((6,4),(5,4)),7).
move(7,((5,4),(6,4)),8).
move(7,((6,4),(5,4)),11).
move(7,((5,4),(5,3)),12).
move(7,((5,3),(6,3)),13).
move(7,((6,3),(5,3)),14).
move(7,((5,3),(4,3)),15).
move(7,((4,3),(5,3)),16).
move(7,((5,3),(4,3)),17).
move(7,((4,3),(5,3)),18).
move(7,((5,3),(6,3)),20).
move(7,((6,3),(5,3)),21).
move(7,((5,3),(5,4)),22).
move(7,((5,4),(5,5)),23).
move(7,((5,5),(6,5)),25).
move(7,((6,5),(5,5)),26).
move(7,((5,5),(4,5)),27).
move(7,((4,5),(4,4)),28).
move(7,((4,4),(4,5)),29).
move(7,((4,5),(5,5)),30).
move(7,((5,5),(4,5)),31).
move(7,((4,5),(5,5)),32).
move(7,((5,5),(4,5)),33).
move(7,((4,5),(5,5)),34).
move(7,((5,5),(6,5)),36).
move(7,((6,5),(5,5)),37).
move(7,((5,5),(4,5)),38).
move(7,((4,5),(4,4)),39).
move(7,((4,4),(4,3)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,4)),7).
move(8,((7,4),(7,5)),9).
move(8,((7,5),(7,4)),12).
move(8,((7,4),(7,3)),14).
move(8,((7,3),(7,4)),15).
move(8,((7,4),(7,5)),16).
move(8,((7,5),(7,4)),17).
move(8,((7,4),(7,5)),18).
move(8,((7,5),(7,4)),19).
move(8,((7,4),(7,5)),20).
move(8,((7,5),(7,4)),21).
move(8,((7,4),(7,5)),24).
move(8,((7,5),(7,4)),25).
move(8,((7,4),(7,3)),26).
move(8,((7,3),(7,4)),27).
move(8,((7,4),(7,3)),28).
move(8,((7,3),(7,4)),29).
move(8,((7,4),(7,5)),30).
move(8,((7,5),(7,4)),33).
move(8,((7,4),(7,3)),38).
move(8,((7,3),(7,4)),39).
move(8,((7,4),(7,3)),40).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,5)),6).
move(9,((9,5),(9,4)),7).
move(9,((9,4),(10,4)),8).
move(9,((10,4),(9,4)),10).
move(9,((9,4),(9,5)),11).
move(9,((9,5),(8,5)),12).
move(9,((8,5),(7,5)),13).
move(9,((7,5),(7,4)),14).
move(9,((7,4),(7,5)),15).
move(9,((7,5),(8,5)),16).
move(9,((8,5),(8,6)),18).
move(9,((8,6),(8,5)),19).
move(9,((8,5),(9,5)),20).
move(9,((9,5),(8,5)),21).
move(9,((8,5),(7,5)),22).
move(9,((7,5),(8,5)),24).
move(9,((8,5),(7,5)),25).
move(9,((7,5),(7,4)),26).
move(9,((7,4),(7,5)),27).
move(9,((7,5),(7,4)),28).
move(9,((7,4),(6,4)),29).
move(9,((6,4),(7,4)),30).
move(9,((7,4),(8,4)),33).
move(9,((8,4),(9,4)),34).
move(9,((9,4),(9,5)),36).
move(9,((9,5),(9,4)),37).
move(9,((9,4),(8,4)),39).
move(9,((8,4),(7,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,5)),8).
move(10,((8,5),(8,4)),10).
move(10,((8,4),(8,5)),33).
move(10,((8,5),(8,4)),34).
move(10,((8,4),(8,5)),39).
move(10,((8,5),(8,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),4).
move(11,((10,5),(10,4)),6).
move(11,((10,4),(10,3)),7).
move(11,((10,3),(11,3)),8).
move(11,((11,3),(10,3)),9).
move(11,((10,3),(10,4)),10).
move(11,((10,4),(10,3)),27).
move(11,((10,3),(10,4)),28).
move(11,((10,4),(10,3)),33).
move(11,((10,3),(10,4)),34).
move(11,((10,4),(10,3)),37).
move(11,((10,3),(10,4)),38).
move(11,((10,4),(10,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.758s (Solving: 0.09s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 1.750s

Choices      : 1644     (Domain: 1644)
Conflicts    : 90       (Analyzed: 90)
Restarts     : 0       
Model-Level  : 376.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 90       (Deleted: 0)
  Binary     : 23       (Ratio:  25.56%)
  Ternary    : 9        (Ratio:  10.00%)
  Conflict   : 90       (Average Length:    7.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 90       (Average: 14.09 Max: 209 Sum:   1268)
  Executed   : 90       (Average: 14.09 Max: 209 Sum:   1268 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378765   (Original: 352610)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141753  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(3,4)),4).
move(1,((3,4),(3,3)),5).
move(1,((3,3),(2,3)),6).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(3,2)),9).
move(1,((3,2),(4,2)),10).
move(1,((4,2),(5,2)),11).
move(1,((5,2),(6,2)),13).
move(1,((6,2),(6,3)),14).
move(1,((6,3),(7,3)),15).
move(1,((7,3),(7,2)),17).
move(1,((7,2),(6,2)),18).
move(1,((6,2),(7,2)),19).
move(1,((7,2),(8,2)),20).
move(1,((8,2),(9,2)),21).
move(1,((9,2),(10,2)),22).
move(1,((10,2),(10,3)),23).
move(1,((10,3),(10,2)),24).
move(1,((10,2),(9,2)),25).
move(1,((9,2),(9,1)),26).
move(1,((9,1),(9,2)),27).
move(1,((9,2),(8,2)),28).
move(1,((8,2),(8,3)),29).
move(1,((8,3),(8,4)),30).
move(1,((8,4),(8,5)),31).
move(1,((8,5),(8,6)),32).
move(1,((8,6),(7,6)),33).
move(1,((7,6),(6,6)),34).
move(1,((6,6),(5,6)),35).
move(1,((5,6),(5,5)),36).
move(1,((5,5),(5,4)),37).
move(1,((5,4),(4,4)),38).
move(1,((4,4),(3,4)),39).
move(1,((3,4),(3,3)),40).
move(2,((2,6),(3,6)),3).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(4,5)),5).
move(2,((4,5),(4,6)),6).
move(2,((4,6),(3,6)),7).
move(2,((3,6),(4,6)),8).
move(2,((4,6),(5,6)),9).
move(2,((5,6),(6,6)),10).
move(2,((6,6),(7,6)),11).
move(2,((7,6),(8,6)),12).
move(2,((8,6),(8,5)),13).
move(2,((8,5),(8,4)),14).
move(2,((8,4),(9,4)),15).
move(2,((9,4),(8,4)),16).
move(2,((8,4),(8,3)),17).
move(2,((8,3),(8,2)),18).
move(2,((8,2),(8,1)),19).
move(2,((8,1),(7,1)),20).
move(2,((7,1),(7,2)),21).
move(2,((7,2),(8,2)),22).
move(2,((8,2),(9,2)),23).
move(2,((9,2),(8,2)),24).
move(2,((8,2),(9,2)),26).
move(2,((9,2),(10,2)),27).
move(2,((10,2),(10,3)),29).
move(2,((10,3),(10,4)),30).
move(2,((10,4),(10,5)),31).
move(2,((10,5),(10,6)),32).
move(2,((10,6),(9,6)),33).
move(2,((9,6),(9,5)),34).
move(2,((9,5),(10,5)),36).
move(2,((10,5),(9,5)),37).
move(2,((9,5),(10,5)),38).
move(2,((10,5),(10,4)),40).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),3).
move(3,((3,4),(2,4)),4).
move(3,((2,4),(3,4)),5).
move(3,((3,4),(2,4)),6).
move(3,((2,4),(1,4)),7).
move(3,((1,4),(2,4)),8).
move(3,((2,4),(3,4)),9).
move(3,((3,4),(4,4)),10).
move(3,((4,4),(4,3)),11).
move(3,((4,3),(3,3)),12).
move(3,((3,3),(4,3)),13).
move(3,((4,3),(4,2)),14).
move(3,((4,2),(5,2)),15).
move(3,((5,2),(6,2)),16).
move(3,((6,2),(6,3)),17).
move(3,((6,3),(7,3)),18).
move(3,((7,3),(8,3)),19).
move(3,((8,3),(9,3)),20).
move(3,((9,3),(9,4)),21).
move(3,((9,4),(10,4)),22).
move(3,((10,4),(9,4)),23).
move(3,((9,4),(9,5)),24).
move(3,((9,5),(10,5)),25).
move(3,((10,5),(9,5)),26).
move(3,((9,5),(9,4)),27).
move(3,((9,4),(8,4)),28).
move(3,((8,4),(7,4)),29).
move(3,((7,4),(7,3)),30).
move(3,((7,3),(6,3)),31).
move(3,((6,3),(6,4)),32).
move(3,((6,4),(7,4)),33).
move(3,((7,4),(8,4)),34).
move(3,((8,4),(8,3)),35).
move(3,((8,3),(8,2)),36).
move(3,((8,2),(8,3)),37).
move(3,((8,3),(8,2)),38).
move(3,((8,2),(9,2)),39).
move(3,((9,2),(9,3)),40).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(5,6)),3).
move(4,((5,6),(6,6)),4).
move(4,((6,6),(6,5)),5).
move(4,((6,5),(6,4)),6).
move(4,((6,4),(5,4)),7).
move(4,((5,4),(4,4)),8).
move(4,((4,4),(5,4)),9).
move(4,((5,4),(5,5)),10).
move(4,((5,5),(5,4)),12).
move(4,((5,4),(5,3)),14).
move(4,((5,3),(6,3)),15).
move(4,((6,3),(6,4)),16).
move(4,((6,4),(7,4)),17).
move(4,((7,4),(8,4)),18).
move(4,((8,4),(8,5)),19).
move(4,((8,5),(7,5)),20).
move(4,((7,5),(8,5)),22).
move(4,((8,5),(8,4)),24).
move(4,((8,4),(8,3)),25).
move(4,((8,3),(8,4)),26).
move(4,((8,4),(8,5)),27).
move(4,((8,5),(7,5)),28).
move(4,((7,5),(6,5)),29).
move(4,((6,5),(5,5)),30).
move(4,((5,5),(5,4)),31).
move(4,((5,4),(5,5)),32).
move(4,((5,5),(5,4)),34).
move(4,((5,4),(6,4)),35).
move(4,((6,4),(7,4)),36).
move(4,((7,4),(7,5)),37).
move(4,((7,5),(8,5)),38).
move(4,((8,5),(9,5)),39).
move(4,((9,5),(9,4)),40).
move(5,((5,6),(4,6)),1).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(5,4)),6).
move(5,((5,4),(5,5)),7).
move(5,((5,5),(6,5)),8).
move(5,((6,5),(5,5)),9).
move(5,((5,5),(4,5)),10).
move(5,((4,5),(4,6)),11).
move(5,((4,6),(3,6)),12).
move(5,((3,6),(2,6)),13).
move(5,((2,6),(1,6)),14).
move(5,((1,6),(2,6)),15).
move(5,((2,6),(2,5)),16).
move(5,((2,5),(3,5)),17).
move(5,((3,5),(3,4)),18).
move(5,((3,4),(3,3)),19).
move(5,((3,3),(3,4)),20).
move(5,((3,4),(2,4)),21).
move(5,((2,4),(2,5)),22).
move(5,((2,5),(3,5)),23).
move(5,((3,5),(2,5)),24).
move(5,((2,5),(3,5)),25).
move(5,((3,5),(3,4)),26).
move(5,((3,4),(2,4)),27).
move(5,((2,4),(3,4)),28).
move(5,((3,4),(3,3)),29).
move(5,((3,3),(3,2)),30).
move(5,((3,2),(4,2)),31).
move(5,((4,2),(4,3)),32).
move(5,((4,3),(3,3)),33).
move(5,((3,3),(4,3)),34).
move(5,((4,3),(5,3)),35).
move(5,((5,3),(6,3)),36).
move(5,((6,3),(6,2)),37).
move(5,((6,2),(6,3)),38).
move(5,((6,3),(7,3)),39).
move(5,((7,3),(8,3)),40).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(4,5)),6).
move(6,((4,5),(3,5)),7).
move(6,((3,5),(2,5)),8).
move(6,((2,5),(2,4)),9).
move(6,((2,4),(3,4)),10).
move(6,((3,4),(4,4)),11).
move(6,((4,4),(3,4)),13).
move(6,((3,4),(4,4)),14).
move(6,((4,4),(4,5)),15).
move(6,((4,5),(4,4)),16).
move(6,((4,4),(4,3)),17).
move(6,((4,3),(4,4)),18).
move(6,((4,4),(3,4)),19).
move(6,((3,4),(3,5)),20).
move(6,((3,5),(3,4)),22).
move(6,((3,4),(4,4)),23).
move(6,((4,4),(4,3)),24).
move(6,((4,3),(4,4)),25).
move(6,((4,4),(4,5)),26).
move(6,((4,5),(3,5)),27).
move(6,((3,5),(2,5)),28).
move(6,((2,5),(3,5)),29).
move(6,((3,5),(4,5)),30).
move(6,((4,5),(5,5)),31).
move(6,((5,5),(6,5)),32).
move(6,((6,5),(7,5)),33).
move(6,((7,5),(8,5)),34).
move(6,((8,5),(8,4)),36).
move(6,((8,4),(7,4)),37).
move(6,((7,4),(6,4)),38).
move(6,((6,4),(5,4)),39).
move(6,((5,4),(5,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(6,3)),7).
move(7,((6,3),(7,3)),9).
move(7,((7,3),(6,3)),10).
move(7,((6,3),(5,3)),11).
move(7,((5,3),(4,3)),12).
move(7,((4,3),(4,4)),13).
move(7,((4,4),(5,4)),14).
move(7,((5,4),(5,3)),16).
move(7,((5,3),(5,4)),17).
move(7,((5,4),(6,4)),18).
move(7,((6,4),(7,4)),19).
move(7,((7,4),(8,4)),20).
move(7,((8,4),(8,3)),21).
move(7,((8,3),(9,3)),23).
move(7,((9,3),(10,3)),25).
move(7,((10,3),(9,3)),26).
move(7,((9,3),(8,3)),27).
move(7,((8,3),(7,3)),28).
move(7,((7,3),(6,3)),30).
move(7,((6,3),(5,3)),31).
move(7,((5,3),(5,4)),32).
move(7,((5,4),(5,3)),34).
move(7,((5,3),(5,2)),35).
move(7,((5,2),(6,2)),36).
move(7,((6,2),(5,2)),37).
move(7,((5,2),(4,2)),39).
move(7,((4,2),(4,3)),40).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(5,4)),4).
move(8,((5,4),(5,3)),6).
move(8,((5,3),(5,2)),8).
move(8,((5,2),(4,2)),9).
move(8,((4,2),(4,1)),10).
move(8,((4,1),(4,2)),11).
move(8,((4,2),(3,2)),12).
move(8,((3,2),(2,2)),13).
move(8,((2,2),(3,2)),14).
move(8,((3,2),(4,2)),15).
move(8,((4,2),(3,2)),16).
move(8,((3,2),(4,2)),17).
move(8,((4,2),(3,2)),18).
move(8,((3,2),(2,2)),19).
move(8,((2,2),(2,3)),20).
move(8,((2,3),(2,2)),23).
move(8,((2,2),(2,1)),24).
move(8,((2,1),(3,1)),25).
move(8,((3,1),(4,1)),26).
move(8,((4,1),(5,1)),28).
move(8,((5,1),(6,1)),29).
move(8,((6,1),(7,1)),30).
move(8,((7,1),(7,2)),31).
move(8,((7,2),(7,3)),32).
move(8,((7,3),(6,3)),33).
move(8,((6,3),(6,4)),34).
move(8,((6,4),(7,4)),35).
move(8,((7,4),(7,3)),36).
move(8,((7,3),(7,2)),37).
move(8,((7,2),(7,3)),38).
move(8,((7,3),(7,2)),39).
move(8,((7,2),(7,3)),40).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(8,3)),7).
move(9,((8,3),(7,3)),8).
move(9,((7,3),(8,3)),9).
move(9,((8,3),(8,4)),10).
move(9,((8,4),(8,3)),11).
move(9,((8,3),(8,2)),12).
move(9,((8,2),(7,2)),14).
move(9,((7,2),(8,2)),15).
move(9,((8,2),(7,2)),16).
move(9,((7,2),(6,2)),17).
move(9,((6,2),(5,2)),18).
move(9,((5,2),(5,3)),19).
move(9,((5,3),(4,3)),20).
move(9,((4,3),(4,2)),21).
move(9,((4,2),(5,2)),22).
move(9,((5,2),(4,2)),24).
move(9,((4,2),(3,2)),25).
move(9,((3,2),(3,3)),26).
move(9,((3,3),(4,3)),27).
move(9,((4,3),(4,4)),28).
move(9,((4,4),(5,4)),29).
move(9,((5,4),(5,3)),30).
move(9,((5,3),(4,3)),31).
move(9,((4,3),(4,4)),32).
move(9,((4,4),(3,4)),33).
move(9,((3,4),(4,4)),34).
move(9,((4,4),(5,4)),35).
move(9,((5,4),(6,4)),36).
move(9,((6,4),(6,5)),37).
move(9,((6,5),(6,4)),39).
move(9,((6,4),(7,4)),40).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(5,6)),5).
move(10,((5,6),(4,6)),7).
move(10,((4,6),(4,5)),8).
move(10,((4,5),(3,5)),9).
move(10,((3,5),(2,5)),10).
move(10,((2,5),(3,5)),11).
move(10,((3,5),(4,5)),12).
move(10,((4,5),(5,5)),13).
move(10,((5,5),(6,5)),14).
move(10,((6,5),(5,5)),15).
move(10,((5,5),(6,5)),16).
move(10,((6,5),(5,5)),18).
move(10,((5,5),(5,4)),19).
move(10,((5,4),(5,3)),20).
move(10,((5,3),(4,3)),22).
move(10,((4,3),(3,3)),23).
move(10,((3,3),(2,3)),24).
move(10,((2,3),(2,4)),25).
move(10,((2,4),(2,5)),27).
move(10,((2,5),(1,5)),28).
move(10,((1,5),(2,5)),29).
move(10,((2,5),(2,4)),30).
move(10,((2,4),(2,5)),31).
move(10,((2,5),(3,5)),32).
move(10,((3,5),(4,5)),33).
move(10,((4,5),(5,5)),34).
move(10,((5,5),(6,5)),35).
move(10,((6,5),(7,5)),36).
move(10,((7,5),(7,6)),37).
move(10,((7,6),(8,6)),38).
move(10,((8,6),(8,5)),39).
move(10,((8,5),(8,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(9,6)),5).
move(11,((9,6),(8,6)),6).
move(11,((8,6),(8,5)),7).
move(11,((8,5),(8,4)),8).
move(11,((8,4),(7,4)),9).
move(11,((7,4),(6,4)),10).
move(11,((6,4),(6,3)),11).
move(11,((6,3),(6,2)),12).
move(11,((6,2),(6,1)),13).
move(11,((6,1),(6,2)),15).
move(11,((6,2),(6,3)),16).
move(11,((6,3),(6,4)),17).
move(11,((6,4),(6,3)),18).
move(11,((6,3),(6,2)),19).
move(11,((6,2),(5,2)),20).
move(11,((5,2),(6,2)),21).
move(11,((6,2),(6,3)),22).
move(11,((6,3),(7,3)),23).
move(11,((7,3),(7,4)),24).
move(11,((7,4),(6,4)),25).
move(11,((6,4),(5,4)),26).
move(11,((5,4),(4,4)),27).
move(11,((4,4),(5,4)),28).
move(11,((5,4),(6,4)),29).
move(11,((6,4),(7,4)),30).
move(11,((7,4),(7,3)),31).
move(11,((7,3),(8,3)),32).
move(11,((8,3),(9,3)),33).
move(11,((9,3),(10,3)),34).
move(11,((10,3),(10,2)),35).
move(11,((10,2),(10,3)),36).
move(11,((10,3),(10,4)),37).
move(11,((10,4),(10,3)),38).
move(11,((10,3),(10,4)),39).
move(11,((10,4),(10,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.325s (Solving: 0.68s 1st Model: 0.68s Unsat: 0.00s)
CPU Time     : 2.312s

Choices      : 11828    (Domain: 11828)
Conflicts    : 487      (Analyzed: 487)
Restarts     : 2        (Average: 243.50 Last: 313)
Model-Level  : 320.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 487      (Deleted: 0)
  Binary     : 125      (Ratio:  25.67%)
  Ternary    : 49       (Ratio:  10.06%)
  Conflict   : 487      (Average Length:   10.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 487      (Average: 23.61 Max: 280 Sum:  11498)
  Executed   : 487      (Average: 23.61 Max: 280 Sum:  11498 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378765   (Original: 352610)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141753  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

