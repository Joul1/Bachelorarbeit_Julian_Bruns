%%%%%
%Standard
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),8).
move(1,((7,5),(7,4)),9).
move(1,((7,4),(7,3)),10).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(5,5)),4).
move(2,((5,5),(5,4)),5).
move(2,((5,4),(5,3)),7).
move(2,((5,3),(5,2)),8).
move(2,((5,2),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),5).
move(5,((6,3),(7,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(5,6)),4).
move(6,((5,6),(5,5)),6).
move(6,((5,5),(5,4)),7).
move(6,((5,4),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(6,5)),2).
move(8,((6,5),(7,5)),4).
move(8,((7,5),(8,5)),5).
move(8,((8,5),(8,4)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(9,3)),4).
move(9,((9,3),(8,3)),5).
move(9,((8,3),(7,3)),6).
move(9,((7,3),(7,4)),7).
move(9,((7,4),(6,4)),9).
move(9,((6,4),(7,4)),10).
move(9,((7,4),(7,3)),11).
move(9,((7,3),(7,4)),20).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(7,5)),5).
move(11,((7,5),(7,4)),6).
move(11,((7,4),(6,4)),7).
move(11,((6,4),(5,4)),8).
move(11,((5,4),(4,4)),9).
move(11,((4,4),(3,4)),12).
move(11,((3,4),(2,4)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.714s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.719s

Choices      : 709     
Conflicts    : 46       (Analyzed: 46)
Restarts     : 0       
Model-Level  : 237.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 46       (Deleted: 0)
  Binary     : 7        (Ratio:  15.22%)
  Ternary    : 2        (Ratio:   4.35%)
  Conflict   : 46       (Average Length:   26.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 46       (Average: 10.26 Max:  68 Sum:    472)
  Executed   : 46       (Average: 10.26 Max:  68 Sum:    472 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165688   (Original: 153701)
  Choice     : 220     
Atoms        : 69035   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(7,5)),7).
move(1,((7,5),(7,4)),9).
move(1,((7,4),(7,3)),10).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(3,4)),3).
move(2,((3,4),(4,4)),4).
move(2,((4,4),(5,4)),5).
move(2,((5,4),(5,3)),7).
move(2,((5,3),(5,2)),8).
move(2,((5,2),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),4).
move(5,((5,3),(6,3)),5).
move(5,((6,3),(7,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),7).
move(6,((5,4),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,5)),3).
move(8,((7,5),(8,5)),4).
move(8,((8,5),(8,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(6,5)),5).
move(9,((6,5),(6,4)),6).
move(9,((6,4),(7,4)),7).
move(9,((7,4),(6,4)),9).
move(9,((6,4),(7,4)),10).
move(9,((7,4),(7,3)),11).
move(9,((7,3),(7,4)),20).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(6,4)),7).
move(11,((6,4),(5,4)),8).
move(11,((5,4),(4,4)),9).
move(11,((4,4),(3,4)),12).
move(11,((3,4),(2,4)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.717s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.719s

Choices      : 607     
Conflicts    : 45       (Analyzed: 45)
Restarts     : 0       
Model-Level  : 248.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 45       (Deleted: 0)
  Binary     : 8        (Ratio:  17.78%)
  Ternary    : 3        (Ratio:   6.67%)
  Conflict   : 45       (Average Length:   24.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 45       (Average:  7.98 Max:  69 Sum:    359)
  Executed   : 45       (Average:  7.98 Max:  69 Sum:    359 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165908   (Original: 153921)
  Choice     : 220     
  Heuristic  : 84      
Atoms        : 69171   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(7,5)),7).
move(1,((7,5),(7,4)),9).
move(1,((7,4),(7,3)),10).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(3,4)),4).
move(2,((3,4),(4,4)),5).
move(2,((4,4),(5,4)),6).
move(2,((5,4),(5,3)),7).
move(2,((5,3),(5,2)),8).
move(2,((5,2),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),5).
move(5,((6,3),(7,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),7).
move(6,((5,4),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,5)),3).
move(8,((7,5),(8,5)),4).
move(8,((8,5),(8,4)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(9,3)),4).
move(9,((9,3),(8,3)),5).
move(9,((8,3),(7,3)),6).
move(9,((7,3),(7,4)),7).
move(9,((7,4),(6,4)),9).
move(9,((6,4),(7,4)),10).
move(9,((7,4),(7,3)),11).
move(9,((7,3),(7,4)),20).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(7,5)),5).
move(11,((7,5),(7,4)),6).
move(11,((7,4),(6,4)),7).
move(11,((6,4),(5,4)),8).
move(11,((5,4),(4,4)),9).
move(11,((4,4),(3,4)),12).
move(11,((3,4),(2,4)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.724s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.719s

Choices      : 677     
Conflicts    : 49       (Analyzed: 49)
Restarts     : 0       
Model-Level  : 248.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 49       (Deleted: 0)
  Binary     : 9        (Ratio:  18.37%)
  Ternary    : 3        (Ratio:   6.12%)
  Conflict   : 49       (Average Length:   23.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 49       (Average:  8.76 Max:  69 Sum:    429)
  Executed   : 49       (Average:  8.76 Max:  69 Sum:    429 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165835   (Original: 153848)
  Choice     : 220     
Atoms        : 69182   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(7,5)),7).
move(1,((7,5),(7,4)),9).
move(1,((7,4),(7,3)),10).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(3,4)),4).
move(2,((3,4),(4,4)),5).
move(2,((4,4),(5,4)),6).
move(2,((5,4),(5,3)),7).
move(2,((5,3),(5,2)),8).
move(2,((5,2),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),5).
move(5,((6,3),(7,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),7).
move(6,((5,4),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,5)),3).
move(8,((7,5),(8,5)),4).
move(8,((8,5),(8,4)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(9,3)),4).
move(9,((9,3),(8,3)),5).
move(9,((8,3),(7,3)),6).
move(9,((7,3),(7,4)),7).
move(9,((7,4),(6,4)),9).
move(9,((6,4),(7,4)),10).
move(9,((7,4),(7,3)),11).
move(9,((7,3),(7,4)),20).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(7,5)),5).
move(11,((7,5),(7,4)),6).
move(11,((7,4),(6,4)),7).
move(11,((6,4),(5,4)),8).
move(11,((5,4),(4,4)),9).
move(11,((4,4),(3,4)),12).
move(11,((3,4),(2,4)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.815s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 0.797s

Choices      : 677     
Conflicts    : 49       (Analyzed: 49)
Restarts     : 0       
Model-Level  : 248.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 49       (Deleted: 0)
  Binary     : 9        (Ratio:  18.37%)
  Ternary    : 3        (Ratio:   6.12%)
  Conflict   : 49       (Average Length:   23.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 49       (Average:  8.76 Max:  69 Sum:    429)
  Executed   : 49       (Average:  8.76 Max:  69 Sum:    429 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165835   (Original: 153848)
  Choice     : 220     
Atoms        : 69182   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(5,4)),6).
move(1,((5,4),(6,4)),7).
move(1,((6,4),(7,4)),8).
move(1,((7,4),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(2,((4,4),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(4,3)),7).
move(2,((4,3),(4,2)),8).
move(2,((4,2),(5,2)),9).
move(2,((5,2),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,6)),2).
move(3,((3,6),(3,5)),7).
move(3,((3,5),(3,4)),8).
move(3,((3,4),(3,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(8,5)),5).
move(4,((8,5),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(4,((9,4),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),4).
move(5,((6,4),(7,4)),5).
move(5,((7,4),(7,3)),6).
move(5,((7,3),(8,3)),7).
move(5,((8,3),(7,3)),8).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(8,5)),2).
move(6,((8,5),(8,4)),3).
move(6,((8,4),(7,4)),4).
move(6,((7,4),(7,3)),5).
move(6,((7,3),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(8,4)),4).
move(7,((8,4),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(7,((10,3),(10,4)),8).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(6,5)),2).
move(8,((6,5),(6,4)),3).
move(8,((6,4),(6,5)),4).
move(8,((6,5),(7,5)),5).
move(8,((7,5),(8,5)),8).
move(8,((8,5),(8,4)),20).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(6,5)),5).
move(9,((6,5),(6,4)),6).
move(9,((6,4),(6,3)),7).
move(9,((6,3),(6,4)),9).
move(9,((6,4),(7,4)),10).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),6).
move(10,((4,5),(4,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(3,5)),9).
move(11,((3,5),(2,5)),10).
move(11,((2,5),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.844s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.844s

Choices      : 1445    
Conflicts    : 60       (Analyzed: 60)
Restarts     : 0       
Model-Level  : 328.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 60       (Deleted: 0)
  Binary     : 8        (Ratio:  13.33%)
  Ternary    : 7        (Ratio:  11.67%)
  Conflict   : 60       (Average Length:   17.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 60       (Average: 18.62 Max:  84 Sum:   1117)
  Executed   : 60       (Average: 18.62 Max:  84 Sum:   1117 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 167066   (Original: 155101)
  Choice     : 220     
  Heuristic  : 1160     (Original: 1182)
Atoms        : 69253   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(6,3)),8).
move(1,((6,3),(7,3)),9).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(2,((3,3),(4,3)),6).
move(2,((4,3),(5,3)),7).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(2,4)),3).
move(3,((2,4),(2,3)),5).
move(3,((2,3),(3,3)),6).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),4).
move(4,((5,3),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(4,((7,3),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(6,4)),5).
move(5,((6,4),(7,4)),6).
move(5,((7,4),(7,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(5,6)),4).
move(6,((5,6),(4,6)),5).
move(6,((4,6),(4,5)),6).
move(6,((4,5),(4,4)),8).
move(6,((4,4),(4,3)),9).
move(6,((4,3),(4,2)),10).
move(6,((4,2),(4,3)),20).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(7,4)),4).
move(8,((7,4),(8,4)),5).
move(8,((8,4),(8,5)),6).
move(8,((8,5),(8,4)),20).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(7,5)),4).
move(9,((7,5),(7,4)),20).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(3,6)),5).
move(10,((3,6),(4,6)),6).
move(10,((4,6),(4,5)),8).
move(10,((4,5),(4,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(5,5)),7).
move(11,((5,5),(5,4)),8).
move(11,((5,4),(4,4)),9).
move(11,((4,4),(4,3)),10).
move(11,((4,3),(4,4)),11).
move(11,((4,4),(3,4)),12).
move(11,((3,4),(2,4)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.861s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.859s

Choices      : 740     
Conflicts    : 46       (Analyzed: 46)
Restarts     : 0       
Model-Level  : 210.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 46       (Deleted: 0)
  Binary     : 8        (Ratio:  17.39%)
  Ternary    : 2        (Ratio:   4.35%)
  Conflict   : 46       (Average Length:   19.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 46       (Average: 11.52 Max: 102 Sum:    530)
  Executed   : 46       (Average: 11.52 Max: 102 Sum:    530 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 166488   (Original: 154508)
  Choice     : 220     
  Heuristic  : 664      (Original: 671)
Atoms        : 69171   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(7,4)),8).
move(1,((7,4),(8,4)),10).
move(1,((8,4),(8,3)),11).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(5,5)),4).
move(2,((5,5),(5,4)),5).
move(2,((5,4),(5,3)),8).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(8,5)),5).
move(4,((8,5),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(4,((9,4),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),3).
move(7,((7,4),(8,4)),4).
move(7,((8,4),(9,4)),5).
move(7,((9,4),(10,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(8,6)),4).
move(8,((8,6),(8,5)),6).
move(8,((8,5),(8,4)),20).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(6,5)),5).
move(9,((6,5),(6,4)),6).
move(9,((6,4),(7,4)),10).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(2,6)),9).
move(11,((2,6),(2,5)),10).
move(11,((2,5),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.933s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.922s

Choices      : 293      (Domain: 38)
Conflicts    : 25       (Analyzed: 25)
Restarts     : 0       
Model-Level  : 174.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 25       (Deleted: 0)
  Binary     : 1        (Ratio:   4.00%)
  Ternary    : 1        (Ratio:   4.00%)
  Conflict   : 25       (Average Length:   27.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 25       (Average:  4.76 Max:  12 Sum:    119)
  Executed   : 25       (Average:  4.76 Max:  12 Sum:    119 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176505   (Original: 164650)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69193   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(4,4)),5).
move(1,((4,4),(5,4)),6).
move(1,((5,4),(6,4)),7).
move(1,((6,4),(7,4)),8).
move(1,((7,4),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(2,((3,3),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(2,((5,3),(5,4)),7).
move(2,((5,4),(5,3)),8).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),5).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(7,3)),6).
move(4,((7,3),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(8,5)),4).
move(5,((8,5),(8,4)),5).
move(5,((8,4),(7,4)),6).
move(5,((7,4),(7,3)),7).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(8,5)),2).
move(6,((8,5),(8,4)),3).
move(6,((8,4),(7,4)),4).
move(6,((7,4),(7,3)),5).
move(6,((7,3),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(10,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(6,6)),3).
move(8,((6,6),(6,5)),4).
move(8,((6,5),(7,5)),5).
move(8,((7,5),(8,5)),6).
move(8,((8,5),(8,4)),20).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,6)),2).
move(9,((10,6),(9,6)),4).
move(9,((9,6),(8,6)),5).
move(9,((8,6),(7,6)),6).
move(9,((7,6),(7,5)),7).
move(9,((7,5),(7,4)),9).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(3,5)),9).
move(11,((3,5),(2,5)),10).
move(11,((2,5),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.931s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.938s

Choices      : 844     
Conflicts    : 50       (Analyzed: 50)
Restarts     : 0       
Model-Level  : 293.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 50       (Deleted: 0)
  Binary     : 7        (Ratio:  14.00%)
  Ternary    : 7        (Ratio:  14.00%)
  Conflict   : 50       (Average Length:   17.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 50       (Average: 11.02 Max:  52 Sum:    551)
  Executed   : 50       (Average: 11.02 Max:  52 Sum:    551 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176483   (Original: 164628)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69171   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),5).
move(1,((2,4),(2,3)),6).
move(1,((2,3),(2,2)),7).
move(1,((2,2),(3,2)),8).
move(1,((3,2),(4,2)),9).
move(1,((4,2),(5,2)),10).
move(1,((5,2),(4,2)),11).
move(1,((4,2),(4,3)),12).
move(1,((4,3),(4,4)),13).
move(1,((4,4),(5,4)),15).
move(1,((5,4),(6,4)),16).
move(1,((6,4),(7,4)),17).
move(1,((7,4),(7,3)),18).
move(1,((7,3),(8,3)),20).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(2,4)),4).
move(2,((2,4),(3,4)),5).
move(2,((3,4),(4,4)),6).
move(2,((4,4),(4,5)),7).
move(2,((4,5),(4,4)),8).
move(2,((4,4),(4,5)),10).
move(2,((4,5),(5,5)),11).
move(2,((5,5),(5,4)),12).
move(2,((5,4),(5,3)),13).
move(2,((5,3),(5,2)),14).
move(2,((5,2),(4,2)),16).
move(2,((4,2),(3,2)),17).
move(2,((3,2),(4,2)),18).
move(2,((4,2),(4,3)),19).
move(2,((4,3),(5,3)),20).
move(3,((3,6),(3,5)),3).
move(3,((3,5),(2,5)),5).
move(3,((2,5),(2,4)),6).
move(3,((2,4),(2,3)),7).
move(3,((2,3),(2,2)),8).
move(3,((2,2),(2,1)),9).
move(3,((2,1),(1,1)),10).
move(3,((1,1),(1,2)),11).
move(3,((1,2),(2,2)),12).
move(3,((2,2),(3,2)),13).
move(3,((3,2),(3,3)),15).
move(3,((3,3),(3,4)),16).
move(3,((3,4),(3,5)),17).
move(3,((3,5),(3,4)),18).
move(3,((3,4),(3,3)),20).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(5,5)),4).
move(4,((5,5),(6,5)),5).
move(4,((6,5),(7,5)),6).
move(4,((7,5),(8,5)),7).
move(4,((8,5),(9,5)),8).
move(4,((9,5),(10,5)),9).
move(4,((10,5),(9,5)),10).
move(4,((9,5),(10,5)),11).
move(4,((10,5),(9,5)),12).
move(4,((9,5),(8,5)),13).
move(4,((8,5),(8,4)),14).
move(4,((8,4),(8,5)),15).
move(4,((8,5),(8,4)),16).
move(4,((8,4),(8,3)),17).
move(4,((8,3),(9,3)),19).
move(5,((5,6),(5,5)),2).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(6,3)),6).
move(5,((6,3),(7,3)),7).
move(5,((7,3),(6,3)),8).
move(5,((6,3),(6,4)),9).
move(5,((6,4),(7,4)),10).
move(5,((7,4),(7,3)),11).
move(5,((7,3),(6,3)),12).
move(5,((6,3),(6,2)),13).
move(5,((6,2),(7,2)),14).
move(5,((7,2),(8,2)),15).
move(5,((8,2),(7,2)),16).
move(5,((7,2),(7,3)),17).
move(5,((7,3),(7,2)),18).
move(5,((7,2),(7,3)),20).
move(6,((9,6),(9,5)),4).
move(6,((9,5),(10,5)),5).
move(6,((10,5),(10,4)),6).
move(6,((10,4),(9,4)),7).
move(6,((9,4),(8,4)),8).
move(6,((8,4),(9,4)),9).
move(6,((9,4),(9,3)),10).
move(6,((9,3),(8,3)),11).
move(6,((8,3),(8,2)),12).
move(6,((8,2),(8,3)),13).
move(6,((8,3),(7,3)),14).
move(6,((7,3),(7,2)),15).
move(6,((7,2),(6,2)),16).
move(6,((6,2),(5,2)),18).
move(6,((5,2),(4,2)),19).
move(6,((4,2),(4,3)),20).
move(7,((6,6),(5,6)),2).
move(7,((5,6),(6,6)),3).
move(7,((6,6),(5,6)),4).
move(7,((5,6),(5,5)),5).
move(7,((5,5),(6,5)),6).
move(7,((6,5),(7,5)),7).
move(7,((7,5),(7,4)),8).
move(7,((7,4),(7,5)),9).
move(7,((7,5),(6,5)),10).
move(7,((6,5),(7,5)),11).
move(7,((7,5),(7,6)),12).
move(7,((7,6),(7,5)),13).
move(7,((7,5),(8,5)),14).
move(7,((8,5),(9,5)),15).
move(7,((9,5),(10,5)),16).
move(7,((10,5),(9,5)),17).
move(7,((9,5),(9,4)),18).
move(7,((9,4),(10,4)),19).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,6)),2).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(6,2)),9).
move(8,((6,2),(7,2)),10).
move(8,((7,2),(6,2)),11).
move(8,((6,2),(7,2)),12).
move(8,((7,2),(7,3)),13).
move(8,((7,3),(6,3)),14).
move(8,((6,3),(6,4)),15).
move(8,((6,4),(7,4)),16).
move(8,((7,4),(7,5)),17).
move(8,((7,5),(7,4)),19).
move(8,((7,4),(8,4)),20).
move(9,((10,6),(10,5)),2).
move(9,((10,5),(9,5)),3).
move(9,((9,5),(10,5)),4).
move(9,((10,5),(11,5)),5).
move(9,((11,5),(11,4)),7).
move(9,((11,4),(11,3)),8).
move(9,((11,3),(11,2)),9).
move(9,((11,2),(11,1)),10).
move(9,((11,1),(10,1)),11).
move(9,((10,1),(10,2)),12).
move(9,((10,2),(9,2)),14).
move(9,((9,2),(9,3)),15).
move(9,((9,3),(9,4)),16).
move(9,((9,4),(8,4)),17).
move(9,((8,4),(8,5)),18).
move(9,((8,5),(7,5)),19).
move(9,((7,5),(7,4)),20).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(6,5)),3).
move(10,((6,5),(6,6)),4).
move(10,((6,6),(5,6)),5).
move(10,((5,6),(4,6)),6).
move(10,((4,6),(3,6)),7).
move(10,((3,6),(3,5)),8).
move(10,((3,5),(2,5)),9).
move(10,((2,5),(2,4)),10).
move(10,((2,4),(3,4)),12).
move(10,((3,4),(2,4)),13).
move(10,((2,4),(2,3)),14).
move(10,((2,3),(3,3)),16).
move(10,((3,3),(4,3)),17).
move(10,((4,3),(4,4)),18).
move(10,((4,4),(4,5)),19).
move(10,((4,5),(4,4)),20).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(9,4)),6).
move(11,((9,4),(8,4)),7).
move(11,((8,4),(8,5)),8).
move(11,((8,5),(7,5)),10).
move(11,((7,5),(7,4)),11).
move(11,((7,4),(8,4)),12).
move(11,((8,4),(7,4)),13).
move(11,((7,4),(6,4)),14).
move(11,((6,4),(6,5)),15).
move(11,((6,5),(5,5)),16).
move(11,((5,5),(4,5)),17).
move(11,((4,5),(3,5)),18).
move(11,((3,5),(2,5)),19).
move(11,((2,5),(2,4)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.176s (Solving: 0.13s 1st Model: 0.13s Unsat: 0.00s)
CPU Time     : 1.172s

Choices      : 2463     (Domain: 2463)
Conflicts    : 148      (Analyzed: 148)
Restarts     : 0       
Model-Level  : 168.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 148      (Deleted: 0)
  Binary     : 33       (Ratio:  22.30%)
  Ternary    : 17       (Ratio:  11.49%)
  Conflict   : 148      (Average Length:   10.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 148      (Average: 15.51 Max: 118 Sum:   2295)
  Executed   : 148      (Average: 15.51 Max: 118 Sum:   2295 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176483   (Original: 164628)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69171   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

