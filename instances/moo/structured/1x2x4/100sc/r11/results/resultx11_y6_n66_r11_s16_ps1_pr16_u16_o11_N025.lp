%%%%%
%Standard
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(6,3)),8).
move(1,((6,3),(7,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,6)),2).
move(2,((2,6),(3,6)),4).
move(2,((3,6),(2,6)),5).
move(2,((2,6),(3,6)),6).
move(2,((3,6),(3,5)),7).
move(2,((3,5),(3,4)),8).
move(2,((3,4),(3,3)),9).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(5,5)),3).
move(3,((5,5),(4,5)),4).
move(3,((4,5),(3,5)),5).
move(3,((3,5),(3,4)),6).
move(3,((3,4),(3,3)),7).
move(3,((3,3),(4,3)),8).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(4,4)),4).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(4,4)),3).
move(5,((4,4),(3,4)),4).
move(5,((3,4),(2,4)),5).
move(5,((2,4),(2,3)),6).
move(5,((2,3),(2,4)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(9,2)),4).
move(6,((9,2),(9,1)),5).
move(6,((9,1),(8,1)),6).
move(6,((8,1),(8,2)),7).
move(6,((8,2),(8,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),4).
move(8,((8,3),(9,3)),5).
move(8,((9,3),(10,3)),6).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(3,5)),8).
move(9,((3,5),(3,4)),9).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(9,5)),2).
move(10,((9,5),(10,5)),3).
move(10,((10,5),(10,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(4,5)),8).
move(11,((4,5),(4,4)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.689s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 1085    
Conflicts    : 51       (Analyzed: 51)
Restarts     : 0       
Model-Level  : 439.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 51       (Deleted: 0)
  Binary     : 10       (Ratio:  19.61%)
  Ternary    : 2        (Ratio:   3.92%)
  Conflict   : 51       (Average Length:   19.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 51       (Average: 12.67 Max: 108 Sum:    646)
  Executed   : 51       (Average: 12.67 Max: 108 Sum:    646 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353468   (Original: 327181)
  Choice     : 440     
Atoms        : 141635  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(6,3)),8).
move(1,((6,3),(7,3)),9).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(2,2)),4).
move(2,((2,2),(3,2)),5).
move(2,((3,2),(3,3)),6).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(4,3)),4).
move(3,((4,3),(4,4)),5).
move(3,((4,4),(4,3)),6).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),4).
move(4,((5,3),(6,3)),5).
move(4,((6,3),(5,3)),6).
move(5,((5,6),(4,6)),1).
move(5,((4,6),(3,6)),2).
move(5,((3,6),(2,6)),3).
move(5,((2,6),(2,5)),4).
move(5,((2,5),(2,4)),5).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(8,5)),2).
move(6,((8,5),(8,4)),4).
move(6,((8,4),(8,3)),6).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(8,4)),3).
move(8,((8,4),(9,4)),4).
move(8,((9,4),(10,4)),5).
move(8,((10,4),(10,3)),6).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(3,5)),8).
move(9,((3,5),(3,4)),9).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(9,5)),2).
move(10,((9,5),(10,5)),3).
move(10,((10,5),(11,5)),4).
move(10,((11,5),(11,4)),5).
move(10,((11,4),(10,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(4,5)),8).
move(11,((4,5),(4,4)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.688s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 945      (Domain: 137)
Conflicts    : 29       (Analyzed: 29)
Restarts     : 0       
Model-Level  : 619.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 29       (Deleted: 0)
  Binary     : 5        (Ratio:  17.24%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 29       (Average Length:   21.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 29       (Average: 11.24 Max:  52 Sum:    326)
  Executed   : 29       (Average: 11.24 Max:  52 Sum:    326 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353732   (Original: 327445)
  Choice     : 440     
  Heuristic  : 145     
Atoms        : 141754  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(7,4)),8).
move(1,((7,4),(7,3)),9).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(3,5)),2).
move(2,((3,5),(3,4)),3).
move(2,((3,4),(3,3)),4).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(4,4)),3).
move(3,((4,4),(4,3)),4).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(5,4)),3).
move(4,((5,4),(5,3)),4).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(4,5)),2).
move(5,((4,5),(3,5)),3).
move(5,((3,5),(3,4)),4).
move(5,((3,4),(2,4)),5).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(8,4)),3).
move(6,((8,4),(8,3)),4).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(9,3)),6).
move(8,((7,6),(8,6)),1).
move(8,((8,6),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(9,4)),4).
move(8,((9,4),(9,3)),5).
move(8,((9,3),(10,3)),6).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(3,5)),8).
move(9,((3,5),(3,4)),9).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(9,5)),2).
move(10,((9,5),(10,5)),3).
move(10,((10,5),(10,4)),4).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(4,5)),8).
move(11,((4,5),(4,4)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.736s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.734s

Choices      : 400      (Domain: 400)
Conflicts    : 2        (Analyzed: 2)
Restarts     : 0       
Model-Level  : 395.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 2        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 1        (Ratio:  50.00%)
  Conflict   : 2        (Average Length:    4.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 2        (Average:  2.50 Max:   3 Sum:      5)
  Executed   : 2        (Average:  2.50 Max:   3 Sum:      5 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378777   (Original: 352622)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141765  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(5,4)),6).
move(1,((5,4),(5,5)),7).
move(1,((5,5),(6,5)),8).
move(1,((6,5),(7,5)),9).
move(1,((7,5),(7,4)),10).
move(1,((7,4),(7,3)),11).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(3,5)),2).
move(2,((3,5),(3,4)),3).
move(2,((3,4),(3,3)),6).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(4,3)),6).
move(4,((4,6),(4,5)),2).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(5,3)),6).
move(5,((5,6),(5,5)),2).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(4,4)),5).
move(5,((4,4),(3,4)),6).
move(5,((3,4),(2,4)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,2)),7).
move(6,((9,2),(8,2)),8).
move(6,((8,2),(8,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(7,((8,3),(9,3)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),6).
move(8,((8,3),(9,3)),7).
move(8,((9,3),(10,3)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(4,5)),7).
move(9,((4,5),(4,4)),8).
move(9,((4,4),(3,4)),9).
move(10,((8,6),(8,5)),2).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(9,4)),6).
move(10,((9,4),(10,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(6,5)),6).
move(11,((6,5),(6,4)),7).
move(11,((6,4),(5,4)),8).
move(11,((5,4),(4,4)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.754s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.750s

Choices      : 750      (Domain: 128)
Conflicts    : 54       (Analyzed: 54)
Restarts     : 0       
Model-Level  : 397.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 54       (Deleted: 0)
  Binary     : 17       (Ratio:  31.48%)
  Ternary    : 2        (Ratio:   3.70%)
  Conflict   : 54       (Average Length:   14.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 54       (Average:  6.54 Max:  31 Sum:    353)
  Executed   : 54       (Average:  6.54 Max:  31 Sum:    353 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378777   (Original: 352622)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141765  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(7,5)),7).
move(1,((7,5),(7,4)),8).
move(1,((7,4),(7,3)),9).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(3,5)),2).
move(2,((3,5),(3,4)),3).
move(2,((3,4),(3,3)),4).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(4,5)),3).
move(3,((4,5),(4,4)),4).
move(3,((4,4),(4,3)),5).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(5,4)),3).
move(4,((5,4),(5,3)),4).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(4,5)),2).
move(5,((4,5),(3,5)),3).
move(5,((3,5),(2,5)),4).
move(5,((2,5),(2,4)),5).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(9,6)),2).
move(6,((9,6),(8,6)),3).
move(6,((8,6),(8,5)),4).
move(6,((8,5),(8,4)),5).
move(6,((8,4),(8,3)),6).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(9,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(9,4)),4).
move(8,((9,4),(9,3)),5).
move(8,((9,3),(10,3)),6).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(10,6)),2).
move(9,((10,6),(9,6)),3).
move(9,((9,6),(8,6)),4).
move(9,((8,6),(7,6)),5).
move(9,((7,6),(7,5)),6).
move(9,((7,5),(6,5)),7).
move(9,((6,5),(6,4)),8).
move(9,((6,4),(5,4)),9).
move(9,((5,4),(4,4)),10).
move(9,((4,4),(3,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(9,5)),2).
move(10,((9,5),(10,5)),3).
move(10,((10,5),(11,5)),4).
move(10,((11,5),(11,4)),5).
move(10,((11,4),(10,4)),6).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(10,4)),3).
move(11,((10,4),(9,4)),6).
move(11,((9,4),(8,4)),7).
move(11,((8,4),(7,4)),9).
move(11,((7,4),(6,4)),10).
move(11,((6,4),(5,4)),11).
move(11,((5,4),(4,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.676s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.672s

Choices      : 410      (Domain: 39)
Conflicts    : 1        (Analyzed: 1)
Restarts     : 0       
Model-Level  : 403.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 1        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 1        (Average Length:   34.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 1        (Average:  7.00 Max:   7 Sum:      7)
  Executed   : 1        (Average:  7.00 Max:   7 Sum:      7 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354529   (Original: 328264)
  Choice     : 440     
  Heuristic  : 867      (Original: 889)
Atoms        : 141829  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(7,4)),8).
move(1,((7,4),(7,3)),9).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(4,3)),4).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),4).
move(4,((5,3),(6,3)),5).
move(4,((6,3),(5,3)),6).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(5,4)),4).
move(5,((5,4),(4,4)),5).
move(5,((4,4),(3,4)),6).
move(5,((3,4),(2,4)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(9,2)),4).
move(6,((9,2),(8,2)),5).
move(6,((8,2),(8,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(10,5)),4).
move(8,((10,5),(10,4)),6).
move(8,((10,4),(10,3)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(9,4)),3).
move(9,((9,4),(8,4)),4).
move(9,((8,4),(7,4)),5).
move(9,((7,4),(6,4)),6).
move(9,((6,4),(5,4)),7).
move(9,((5,4),(4,4)),8).
move(9,((4,4),(3,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,3)),3).
move(10,((8,3),(9,3)),4).
move(10,((9,3),(10,3)),5).
move(10,((10,3),(11,3)),6).
move(10,((11,3),(11,4)),7).
move(10,((11,4),(10,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(4,5)),8).
move(11,((4,5),(4,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.685s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.672s

Choices      : 1925     (Domain: 1032)
Conflicts    : 31       (Analyzed: 31)
Restarts     : 0       
Model-Level  : 1481.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 31       (Deleted: 0)
  Binary     : 5        (Ratio:  16.13%)
  Ternary    : 1        (Ratio:   3.23%)
  Conflict   : 31       (Average Length:   20.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 31       (Average: 14.32 Max:  61 Sum:    444)
  Executed   : 31       (Average: 14.32 Max:  61 Sum:    444 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354667   (Original: 328384)
  Choice     : 440     
  Heuristic  : 1080     (Original: 1084)
Atoms        : 141754  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(6,3)),8).
move(1,((6,3),(7,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,6)),2).
move(2,((2,6),(3,6)),4).
move(2,((3,6),(3,5)),5).
move(2,((3,5),(3,4)),6).
move(2,((3,4),(3,3)),7).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(6,5)),4).
move(3,((6,5),(6,4)),5).
move(3,((6,4),(5,4)),6).
move(3,((5,4),(4,4)),7).
move(3,((4,4),(4,3)),8).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(4,4)),4).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(4,4)),3).
move(5,((4,4),(3,4)),4).
move(5,((3,4),(2,4)),5).
move(5,((2,4),(2,3)),6).
move(5,((2,3),(2,4)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(10,3)),4).
move(6,((10,3),(10,4)),5).
move(6,((10,4),(9,4)),6).
move(6,((9,4),(8,4)),7).
move(6,((8,4),(8,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),4).
move(8,((8,3),(9,3)),5).
move(8,((9,3),(10,3)),6).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(3,5)),8).
move(9,((3,5),(3,4)),9).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(9,5)),2).
move(10,((9,5),(10,5)),3).
move(10,((10,5),(11,5)),4).
move(10,((11,5),(11,4)),5).
move(10,((11,4),(10,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(4,5)),8).
move(11,((4,5),(4,4)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.733s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.734s

Choices      : 1072     (Domain: 463)
Conflicts    : 49       (Analyzed: 49)
Restarts     : 0       
Model-Level  : 488.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 49       (Deleted: 0)
  Binary     : 11       (Ratio:  22.45%)
  Ternary    : 2        (Ratio:   4.08%)
  Conflict   : 49       (Average Length:   18.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 49       (Average: 11.92 Max:  62 Sum:    584)
  Executed   : 49       (Average: 11.92 Max:  62 Sum:    584 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378790   (Original: 352624)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141777  
Disjunctions : 0        (Original: 1)
Bodies       : 247623   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128049   (Atom=Atom: 470 Body=Body: 482 Other: 127097)
Tight        : Yes
Variables    : 246824   (Eliminated:    0 Frozen: 126446)
Constraints  : 678181   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(1,5)),3).
move(1,((1,5),(1,4)),4).
move(1,((1,4),(2,4)),5).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(1,3)),8).
move(1,((1,3),(2,3)),9).
move(1,((2,3),(2,4)),10).
move(1,((2,4),(2,5)),12).
move(1,((2,5),(2,4)),13).
move(1,((2,4),(2,3)),16).
move(1,((2,3),(2,4)),17).
move(1,((2,4),(3,4)),19).
move(1,((3,4),(2,4)),20).
move(1,((2,4),(2,3)),23).
move(1,((2,3),(2,4)),25).
move(1,((2,4),(2,3)),26).
move(1,((2,3),(3,3)),28).
move(1,((3,3),(4,3)),30).
move(1,((4,3),(5,3)),31).
move(1,((5,3),(6,3)),32).
move(1,((6,3),(7,3)),33).
move(1,((7,3),(6,3)),34).
move(1,((6,3),(5,3)),35).
move(1,((5,3),(4,3)),36).
move(1,((4,3),(5,3)),38).
move(1,((5,3),(6,3)),39).
move(1,((6,3),(7,3)),40).
move(2,((2,6),(2,5)),3).
move(2,((2,5),(2,4)),4).
move(2,((2,4),(2,5)),5).
move(2,((2,5),(2,6)),6).
move(2,((2,6),(2,5)),7).
move(2,((2,5),(3,5)),9).
move(2,((3,5),(3,6)),10).
move(2,((3,6),(2,6)),11).
move(2,((2,6),(3,6)),12).
move(2,((3,6),(2,6)),14).
move(2,((2,6),(2,5)),15).
move(2,((2,5),(2,4)),16).
move(2,((2,4),(3,4)),17).
move(2,((3,4),(3,5)),18).
move(2,((3,5),(2,5)),20).
move(2,((2,5),(2,6)),21).
move(2,((2,6),(2,5)),22).
move(2,((2,5),(2,4)),24).
move(2,((2,4),(3,4)),25).
move(2,((3,4),(2,4)),26).
move(2,((2,4),(3,4)),27).
move(2,((3,4),(2,4)),28).
move(2,((2,4),(3,4)),29).
move(2,((3,4),(3,3)),30).
move(2,((3,3),(3,4)),31).
move(2,((3,4),(2,4)),32).
move(2,((2,4),(3,4)),33).
move(2,((3,4),(3,3)),34).
move(2,((3,3),(3,4)),35).
move(2,((3,4),(3,3)),36).
move(2,((3,3),(3,4)),37).
move(2,((3,4),(3,3)),38).
move(2,((3,3),(2,3)),39).
move(2,((2,3),(3,3)),40).
move(3,((3,6),(3,5)),3).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,5)),7).
move(3,((3,5),(4,5)),8).
move(3,((4,5),(4,4)),9).
move(3,((4,4),(3,4)),10).
move(3,((3,4),(3,5)),11).
move(3,((3,5),(3,4)),12).
move(3,((3,4),(3,5)),13).
move(3,((3,5),(4,5)),14).
move(3,((4,5),(4,4)),15).
move(3,((4,4),(4,5)),16).
move(3,((4,5),(4,4)),17).
move(3,((4,4),(3,4)),18).
move(3,((3,4),(3,3)),19).
move(3,((3,3),(3,4)),21).
move(3,((3,4),(4,4)),22).
move(3,((4,4),(4,3)),23).
move(3,((4,3),(3,3)),24).
move(3,((3,3),(3,4)),26).
move(3,((3,4),(3,3)),27).
move(3,((3,3),(4,3)),28).
move(3,((4,3),(4,4)),30).
move(3,((4,4),(4,5)),31).
move(3,((4,5),(3,5)),32).
move(3,((3,5),(4,5)),33).
move(3,((4,5),(3,5)),34).
move(3,((3,5),(4,5)),35).
move(3,((4,5),(4,4)),37).
move(3,((4,4),(4,5)),38).
move(3,((4,5),(4,4)),39).
move(3,((4,4),(4,3)),40).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(5,5)),3).
move(4,((5,5),(5,4)),4).
move(4,((5,4),(5,3)),5).
move(4,((5,3),(5,4)),6).
move(4,((5,4),(5,5)),7).
move(4,((5,5),(5,6)),8).
move(4,((5,6),(5,5)),9).
move(4,((5,5),(4,5)),10).
move(4,((4,5),(5,5)),11).
move(4,((5,5),(5,4)),13).
move(4,((5,4),(5,3)),14).
move(4,((5,3),(5,4)),15).
move(4,((5,4),(5,5)),17).
move(4,((5,5),(5,4)),18).
move(4,((5,4),(5,5)),19).
move(4,((5,5),(5,6)),20).
move(4,((5,6),(5,5)),21).
move(4,((5,5),(4,5)),22).
move(4,((4,5),(4,4)),23).
move(4,((4,4),(4,5)),24).
move(4,((4,5),(4,4)),25).
move(4,((4,4),(4,5)),26).
move(4,((4,5),(5,5)),27).
move(4,((5,5),(5,4)),28).
move(4,((5,4),(4,4)),29).
move(4,((4,4),(5,4)),30).
move(4,((5,4),(5,5)),32).
move(4,((5,5),(5,4)),33).
move(4,((5,4),(5,3)),34).
move(4,((5,3),(5,4)),35).
move(4,((5,4),(5,5)),36).
move(4,((5,5),(4,5)),37).
move(4,((4,5),(5,5)),38).
move(4,((5,5),(5,4)),39).
move(4,((5,4),(5,3)),40).
move(5,((5,6),(5,5)),2).
move(5,((5,5),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(5,4)),5).
move(5,((5,4),(4,4)),6).
move(5,((4,4),(5,4)),7).
move(5,((5,4),(4,4)),13).
move(5,((4,4),(3,4)),14).
move(5,((3,4),(4,4)),16).
move(5,((4,4),(5,4)),17).
move(5,((5,4),(4,4)),18).
move(5,((4,4),(5,4)),19).
move(5,((5,4),(4,4)),27).
move(5,((4,4),(4,5)),29).
move(5,((4,5),(5,5)),30).
move(5,((5,5),(4,5)),32).
move(5,((4,5),(4,4)),33).
move(5,((4,4),(5,4)),34).
move(5,((5,4),(4,4)),35).
move(5,((4,4),(5,4)),36).
move(5,((5,4),(4,4)),38).
move(5,((4,4),(3,4)),39).
move(5,((3,4),(2,4)),40).
move(6,((9,6),(9,5)),3).
move(6,((9,5),(9,4)),6).
move(6,((9,4),(9,3)),7).
move(6,((9,3),(8,3)),8).
move(6,((8,3),(9,3)),9).
move(6,((9,3),(8,3)),10).
move(6,((8,3),(9,3)),11).
move(6,((9,3),(9,4)),12).
move(6,((9,4),(8,4)),13).
move(6,((8,4),(8,3)),14).
move(6,((8,3),(9,3)),15).
move(6,((9,3),(8,3)),16).
move(6,((8,3),(9,3)),17).
move(6,((9,3),(8,3)),18).
move(6,((8,3),(8,4)),19).
move(6,((8,4),(8,5)),20).
move(6,((8,5),(9,5)),22).
move(6,((9,5),(9,4)),23).
move(6,((9,4),(8,4)),25).
move(6,((8,4),(8,5)),26).
move(6,((8,5),(8,6)),27).
move(6,((8,6),(8,5)),28).
move(6,((8,5),(8,4)),29).
move(6,((8,4),(9,4)),30).
move(6,((9,4),(9,3)),31).
move(6,((9,3),(9,4)),32).
move(6,((9,4),(8,4)),33).
move(6,((8,4),(9,4)),34).
move(6,((9,4),(8,4)),35).
move(6,((8,4),(8,3)),36).
move(6,((8,3),(8,4)),37).
move(6,((8,4),(9,4)),38).
move(6,((9,4),(8,4)),39).
move(6,((8,4),(8,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,4)),6).
move(7,((6,4),(7,4)),10).
move(7,((7,4),(6,4)),11).
move(7,((6,4),(6,3)),12).
move(7,((6,3),(6,4)),13).
move(7,((6,4),(7,4)),27).
move(7,((7,4),(8,4)),28).
move(7,((8,4),(7,4)),29).
move(7,((7,4),(6,4)),30).
move(7,((6,4),(7,4)),37).
move(7,((7,4),(8,4)),38).
move(7,((8,4),(8,3)),39).
move(7,((8,3),(9,3)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,4)),6).
move(8,((7,4),(8,4)),7).
move(8,((8,4),(9,4)),8).
move(8,((9,4),(9,5)),9).
move(8,((9,5),(8,5)),10).
move(8,((8,5),(7,5)),11).
move(8,((7,5),(7,4)),12).
move(8,((7,4),(8,4)),14).
move(8,((8,4),(7,4)),15).
move(8,((7,4),(7,3)),22).
move(8,((7,3),(7,4)),24).
move(8,((7,4),(7,3)),27).
move(8,((7,3),(7,4)),28).
move(8,((7,4),(7,3)),29).
move(8,((7,3),(7,4)),30).
move(8,((7,4),(7,5)),31).
move(8,((7,5),(8,5)),32).
move(8,((8,5),(7,5)),33).
move(8,((7,5),(7,4)),34).
move(8,((7,4),(7,3)),37).
move(8,((7,3),(8,3)),38).
move(8,((8,3),(9,3)),39).
move(8,((9,3),(10,3)),40).
move(9,((10,6),(10,5)),2).
move(9,((10,5),(11,5)),3).
move(9,((11,5),(10,5)),4).
move(9,((10,5),(10,4)),6).
move(9,((10,4),(10,5)),8).
move(9,((10,5),(10,4)),9).
move(9,((10,4),(10,5)),17).
move(9,((10,5),(10,4)),18).
move(9,((10,4),(10,5)),20).
move(9,((10,5),(10,4)),23).
move(9,((10,4),(9,4)),27).
move(9,((9,4),(9,5)),29).
move(9,((9,5),(8,5)),30).
move(9,((8,5),(8,6)),32).
move(9,((8,6),(7,6)),33).
move(9,((7,6),(6,6)),34).
move(9,((6,6),(5,6)),35).
move(9,((5,6),(4,6)),36).
move(9,((4,6),(3,6)),37).
move(9,((3,6),(3,5)),38).
move(9,((3,5),(3,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(9,4)),5).
move(10,((9,4),(8,4)),6).
move(10,((8,4),(8,5)),7).
move(10,((8,5),(8,6)),8).
move(10,((8,6),(8,5)),9).
move(10,((8,5),(8,4)),10).
move(10,((8,4),(9,4)),11).
move(10,((9,4),(8,4)),12).
move(10,((8,4),(8,5)),13).
move(10,((8,5),(8,4)),15).
move(10,((8,4),(8,5)),17).
move(10,((8,5),(8,4)),18).
move(10,((8,4),(9,4)),19).
move(10,((9,4),(10,4)),20).
move(10,((10,4),(9,4)),22).
move(10,((9,4),(8,4)),23).
move(10,((8,4),(8,5)),24).
move(10,((8,5),(9,5)),25).
move(10,((9,5),(10,5)),26).
move(10,((10,5),(10,4)),27).
move(10,((10,4),(10,5)),29).
move(10,((10,5),(9,5)),30).
move(10,((9,5),(9,4)),33).
move(10,((9,4),(10,4)),34).
move(10,((10,4),(10,5)),35).
move(10,((10,5),(10,4)),36).
move(10,((10,4),(10,5)),37).
move(10,((10,5),(10,4)),38).
move(10,((10,4),(10,5)),39).
move(10,((10,5),(10,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(11,4)),6).
move(11,((11,4),(10,4)),8).
move(11,((10,4),(9,4)),9).
move(11,((9,4),(9,5)),11).
move(11,((9,5),(10,5)),12).
move(11,((10,5),(9,5)),17).
move(11,((9,5),(9,4)),18).
move(11,((9,4),(9,5)),19).
move(11,((9,5),(9,4)),20).
move(11,((9,4),(8,4)),22).
move(11,((8,4),(7,4)),23).
move(11,((7,4),(8,4)),24).
move(11,((8,4),(8,5)),25).
move(11,((8,5),(9,5)),26).
move(11,((9,5),(10,5)),27).
move(11,((10,5),(10,6)),29).
move(11,((10,6),(9,6)),30).
move(11,((9,6),(8,6)),31).
move(11,((8,6),(7,6)),32).
move(11,((7,6),(6,6)),33).
move(11,((6,6),(6,5)),34).
move(11,((6,5),(5,5)),35).
move(11,((5,5),(5,6)),36).
move(11,((5,6),(4,6)),37).
move(11,((4,6),(4,5)),39).
move(11,((4,5),(4,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.858s (Solving: 0.19s 1st Model: 0.19s Unsat: 0.00s)
CPU Time     : 1.859s

Choices      : 4255     (Domain: 4255)
Conflicts    : 186      (Analyzed: 186)
Restarts     : 1        (Average: 186.00 Last: 64)
Model-Level  : 366.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 186      (Deleted: 0)
  Binary     : 80       (Ratio:  43.01%)
  Ternary    : 24       (Ratio:  12.90%)
  Conflict   : 186      (Average Length:    5.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 186      (Average: 20.67 Max: 138 Sum:   3844)
  Executed   : 186      (Average: 20.67 Max: 138 Sum:   3844 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378766   (Original: 352611)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141754  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(1,2)),9).
move(1,((1,2),(1,1)),10).
move(1,((1,1),(1,2)),11).
move(1,((1,2),(2,2)),12).
move(1,((2,2),(2,3)),13).
move(1,((2,3),(2,4)),14).
move(1,((2,4),(3,4)),35).
move(1,((3,4),(4,4)),36).
move(1,((4,4),(5,4)),37).
move(1,((5,4),(5,3)),38).
move(1,((5,3),(6,3)),39).
move(1,((6,3),(7,3)),40).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(3,2)),7).
move(2,((3,2),(3,1)),8).
move(2,((3,1),(2,1)),9).
move(2,((2,1),(2,2)),10).
move(2,((2,2),(2,3)),11).
move(2,((2,3),(2,4)),12).
move(2,((2,4),(3,4)),14).
move(2,((3,4),(3,3)),34).
move(2,((3,3),(2,3)),35).
move(2,((2,3),(2,4)),36).
move(2,((2,4),(2,3)),39).
move(2,((2,3),(3,3)),40).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),5).
move(3,((3,3),(3,2)),6).
move(3,((3,2),(2,2)),7).
move(3,((2,2),(2,1)),8).
move(3,((2,1),(1,1)),9).
move(3,((1,1),(2,1)),10).
move(3,((2,1),(2,2)),11).
move(3,((2,2),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(4,3)),34).
move(3,((4,3),(5,3)),35).
move(3,((5,3),(6,3)),36).
move(3,((6,3),(5,3)),37).
move(3,((5,3),(4,3)),38).
move(3,((4,3),(4,2)),39).
move(3,((4,2),(4,3)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,2)),6).
move(4,((4,2),(4,1)),7).
move(4,((4,1),(4,2)),8).
move(4,((4,2),(4,3)),9).
move(4,((4,3),(4,4)),11).
move(4,((4,4),(3,4)),34).
move(4,((3,4),(4,4)),35).
move(4,((4,4),(4,5)),36).
move(4,((4,5),(4,4)),37).
move(4,((4,4),(4,3)),39).
move(4,((4,3),(5,3)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(5,2)),8).
move(5,((5,2),(5,3)),9).
move(5,((5,3),(5,4)),10).
move(5,((5,4),(6,4)),34).
move(5,((6,4),(5,4)),35).
move(5,((5,4),(5,5)),36).
move(5,((5,5),(4,5)),37).
move(5,((4,5),(3,5)),38).
move(5,((3,5),(2,5)),39).
move(5,((2,5),(2,4)),40).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,2)),7).
move(6,((9,2),(10,2)),8).
move(6,((10,2),(10,1)),9).
move(6,((10,1),(11,1)),10).
move(6,((11,1),(10,1)),11).
move(6,((10,1),(10,2)),12).
move(6,((10,2),(9,2)),13).
move(6,((9,2),(9,3)),14).
move(6,((9,3),(9,4)),15).
move(6,((9,4),(9,3)),34).
move(6,((9,3),(8,3)),36).
move(6,((8,3),(9,3)),37).
move(6,((9,3),(9,2)),38).
move(6,((9,2),(8,2)),39).
move(6,((8,2),(8,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(6,1)),7).
move(7,((6,1),(6,2)),8).
move(7,((6,2),(6,3)),9).
move(7,((6,3),(6,2)),10).
move(7,((6,2),(6,3)),11).
move(7,((6,3),(6,4)),12).
move(7,((6,4),(6,3)),34).
move(7,((6,3),(6,4)),36).
move(7,((6,4),(6,3)),37).
move(7,((6,3),(7,3)),38).
move(7,((7,3),(8,3)),39).
move(7,((8,3),(9,3)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(7,4)),10).
move(8,((7,4),(7,3)),35).
move(8,((7,3),(8,3)),38).
move(8,((8,3),(9,3)),39).
move(8,((9,3),(10,3)),40).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(10,6)),3).
move(9,((10,6),(10,5)),4).
move(9,((10,5),(10,4)),6).
move(9,((10,4),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(9,((11,3),(11,2)),9).
move(9,((11,2),(10,2)),10).
move(9,((10,2),(10,3)),11).
move(9,((10,3),(10,4)),12).
move(9,((10,4),(9,4)),34).
move(9,((9,4),(8,4)),35).
move(9,((8,4),(7,4)),36).
move(9,((7,4),(6,4)),37).
move(9,((6,4),(5,4)),38).
move(9,((5,4),(4,4)),39).
move(9,((4,4),(3,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,3)),5).
move(10,((8,3),(8,2)),6).
move(10,((8,2),(8,1)),7).
move(10,((8,1),(9,1)),8).
move(10,((9,1),(9,2)),9).
move(10,((9,2),(8,2)),10).
move(10,((8,2),(8,3)),11).
move(10,((8,3),(8,4)),12).
move(10,((8,4),(8,5)),34).
move(10,((8,5),(9,5)),35).
move(10,((9,5),(9,4)),36).
move(10,((9,4),(8,4)),37).
move(10,((8,4),(9,4)),38).
move(10,((9,4),(10,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(10,2)),7).
move(11,((10,2),(11,2)),8).
move(11,((11,2),(11,1)),9).
move(11,((11,1),(11,2)),10).
move(11,((11,2),(10,2)),11).
move(11,((10,2),(10,3)),12).
move(11,((10,3),(10,4)),34).
move(11,((10,4),(9,4)),35).
move(11,((9,4),(8,4)),36).
move(11,((8,4),(7,4)),37).
move(11,((7,4),(6,4)),38).
move(11,((6,4),(5,4)),39).
move(11,((5,4),(4,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.689s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 427      (Domain: 427)
Conflicts    : 6        (Analyzed: 6)
Restarts     : 0       
Model-Level  : 381.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 6        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 6        (Average Length:   14.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 6        (Average:  7.67 Max:  13 Sum:     46)
  Executed   : 6        (Average:  7.67 Max:  13 Sum:     46 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378766   (Original: 352611)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141754  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

