%%%%%
%Standard
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(7,5)),7).
move(1,((7,5),(7,4)),8).
move(1,((7,4),(7,3)),9).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(6,5)),5).
move(2,((6,5),(6,4)),7).
move(2,((6,4),(5,4)),8).
move(2,((5,4),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(4,6)),4).
move(7,((4,6),(3,6)),5).
move(7,((3,6),(2,6)),6).
move(7,((2,6),(2,5)),7).
move(7,((2,5),(2,4)),8).
move(7,((2,4),(2,3)),20).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(8,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),7).
move(9,((7,6),(7,5)),8).
move(9,((7,5),(7,4)),9).
move(9,((7,4),(7,3)),11).
move(9,((7,3),(7,4)),20).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),7).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(10,4)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.010s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.984s

Choices      : 594     
Conflicts    : 32       (Analyzed: 32)
Restarts     : 0       
Model-Level  : 271.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 32       (Deleted: 0)
  Binary     : 5        (Ratio:  15.62%)
  Ternary    : 2        (Ratio:   6.25%)
  Conflict   : 32       (Average Length:   22.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 32       (Average: 10.09 Max:  66 Sum:    323)
  Executed   : 32       (Average: 10.09 Max:  66 Sum:    323 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165688   (Original: 153701)
  Choice     : 220     
Atoms        : 69035   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(7,5)),7).
move(1,((7,5),(7,4)),8).
move(1,((7,4),(7,3)),9).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(6,5)),5).
move(2,((6,5),(6,4)),7).
move(2,((6,4),(5,4)),8).
move(2,((5,4),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(4,6)),4).
move(7,((4,6),(3,6)),5).
move(7,((3,6),(2,6)),6).
move(7,((2,6),(2,5)),7).
move(7,((2,5),(2,4)),8).
move(7,((2,4),(2,3)),20).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(8,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),7).
move(9,((7,6),(7,5)),8).
move(9,((7,5),(7,4)),9).
move(9,((7,4),(7,3)),11).
move(9,((7,3),(7,4)),20).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),7).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(10,4)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.897s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.875s

Choices      : 592     
Conflicts    : 31       (Analyzed: 31)
Restarts     : 0       
Model-Level  : 263.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 31       (Deleted: 0)
  Binary     : 5        (Ratio:  16.13%)
  Ternary    : 2        (Ratio:   6.45%)
  Conflict   : 31       (Average Length:   22.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 31       (Average: 10.61 Max:  66 Sum:    329)
  Executed   : 31       (Average: 10.61 Max:  66 Sum:    329 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165895   (Original: 153908)
  Choice     : 220     
  Heuristic  : 84      
Atoms        : 69158   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(7,5)),7).
move(1,((7,5),(7,4)),8).
move(1,((7,4),(7,3)),9).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(6,5)),5).
move(2,((6,5),(6,4)),7).
move(2,((6,4),(5,4)),8).
move(2,((5,4),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(4,6)),4).
move(7,((4,6),(3,6)),5).
move(7,((3,6),(2,6)),6).
move(7,((2,6),(2,5)),7).
move(7,((2,5),(2,4)),8).
move(7,((2,4),(2,3)),20).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(8,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),7).
move(9,((7,6),(7,5)),8).
move(9,((7,5),(7,4)),9).
move(9,((7,4),(7,3)),11).
move(9,((7,3),(7,4)),20).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),7).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(10,4)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.943s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.938s

Choices      : 587     
Conflicts    : 31       (Analyzed: 31)
Restarts     : 0       
Model-Level  : 264.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 31       (Deleted: 0)
  Binary     : 5        (Ratio:  16.13%)
  Ternary    : 2        (Ratio:   6.45%)
  Conflict   : 31       (Average Length:   22.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 31       (Average: 10.42 Max:  66 Sum:    323)
  Executed   : 31       (Average: 10.42 Max:  66 Sum:    323 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165822   (Original: 153835)
  Choice     : 220     
Atoms        : 69169   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(7,4)),8).
move(1,((7,4),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(3,5)),2).
move(2,((3,5),(4,5)),3).
move(2,((4,5),(5,5)),4).
move(2,((5,5),(5,4)),5).
move(2,((5,4),(5,3)),6).
move(2,((5,3),(5,2)),7).
move(2,((5,2),(5,3)),8).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),5).
move(3,((3,2),(3,3)),6).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(4,((7,3),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(5,((7,3),(7,4)),6).
move(5,((7,4),(7,3)),7).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(5,6)),1).
move(7,((5,6),(4,6)),2).
move(7,((4,6),(3,6)),3).
move(7,((3,6),(3,5)),4).
move(7,((3,5),(3,4)),5).
move(7,((3,4),(2,4)),6).
move(7,((2,4),(2,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(8,4)),20).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(7,5)),4).
move(9,((7,5),(7,4)),9).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(10,4)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.988s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.969s

Choices      : 684     
Conflicts    : 44       (Analyzed: 44)
Restarts     : 0       
Model-Level  : 267.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 44       (Deleted: 0)
  Binary     : 7        (Ratio:  15.91%)
  Ternary    : 6        (Ratio:  13.64%)
  Conflict   : 44       (Average Length:   16.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 44       (Average:  9.48 Max:  39 Sum:    417)
  Executed   : 44       (Average:  9.48 Max:  39 Sum:    417 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 166851   (Original: 154886)
  Choice     : 220     
  Heuristic  : 965      (Original: 987)
Atoms        : 69233   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(6,3)),8).
move(1,((6,3),(7,3)),9).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(3,5)),2).
move(2,((3,5),(4,5)),3).
move(2,((4,5),(5,5)),4).
move(2,((5,5),(5,4)),5).
move(2,((5,4),(5,3)),6).
move(2,((5,3),(5,2)),7).
move(2,((5,2),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(7,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(5,6)),1).
move(7,((5,6),(4,6)),2).
move(7,((4,6),(3,6)),3).
move(7,((3,6),(2,6)),4).
move(7,((2,6),(2,5)),7).
move(7,((2,5),(2,4)),8).
move(7,((2,4),(2,3)),20).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(8,6)),3).
move(8,((8,6),(8,5)),6).
move(8,((8,5),(8,4)),20).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(7,5)),5).
move(9,((7,5),(7,4)),20).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(9,4)),4).
move(11,((9,4),(10,4)),5).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.970s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.969s

Choices      : 682     
Conflicts    : 33       (Analyzed: 33)
Restarts     : 0       
Model-Level  : 286.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 33       (Deleted: 0)
  Binary     : 6        (Ratio:  18.18%)
  Ternary    : 2        (Ratio:   6.06%)
  Conflict   : 33       (Average Length:   18.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 33       (Average: 12.00 Max: 100 Sum:    396)
  Executed   : 33       (Average: 12.00 Max: 100 Sum:    396 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 166394   (Original: 154410)
  Choice     : 220     
  Heuristic  : 583      (Original: 586)
Atoms        : 69158   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(7,4)),8).
move(1,((7,4),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(3,5)),2).
move(2,((3,5),(3,4)),3).
move(2,((3,4),(4,4)),4).
move(2,((4,4),(5,4)),5).
move(2,((5,4),(5,3)),6).
move(2,((5,3),(6,3)),7).
move(2,((6,3),(5,3)),8).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(2,5)),2).
move(3,((2,5),(2,4)),4).
move(3,((2,4),(2,3)),5).
move(3,((2,3),(3,3)),7).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),4).
move(4,((5,3),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(4,((7,3),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(7,5)),4).
move(5,((7,5),(7,4)),6).
move(5,((7,4),(7,3)),7).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(5,6)),1).
move(7,((5,6),(4,6)),2).
move(7,((4,6),(4,5)),3).
move(7,((4,5),(3,5)),4).
move(7,((3,5),(3,4)),5).
move(7,((3,4),(2,4)),6).
move(7,((2,4),(2,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(8,4)),20).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),5).
move(9,((7,6),(7,5)),6).
move(9,((7,5),(7,4)),9).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(10,4)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.047s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1.047s

Choices      : 487     
Conflicts    : 40       (Analyzed: 40)
Restarts     : 0       
Model-Level  : 251.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 40       (Deleted: 0)
  Binary     : 6        (Ratio:  15.00%)
  Ternary    : 4        (Ratio:  10.00%)
  Conflict   : 40       (Average Length:   19.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 40       (Average:  5.90 Max:  47 Sum:    236)
  Executed   : 40       (Average:  5.90 Max:  47 Sum:    236 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176470   (Original: 164615)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69158   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),3).
move(1,((2,5),(2,4)),5).
move(1,((2,4),(2,5)),6).
move(1,((2,5),(2,4)),7).
move(1,((2,4),(3,4)),8).
move(1,((3,4),(4,4)),9).
move(1,((4,4),(4,3)),10).
move(1,((4,3),(5,3)),11).
move(1,((5,3),(5,2)),12).
move(1,((5,2),(6,2)),13).
move(1,((6,2),(7,2)),14).
move(1,((7,2),(6,2)),15).
move(1,((6,2),(5,2)),16).
move(1,((5,2),(5,3)),17).
move(1,((5,3),(6,3)),18).
move(1,((6,3),(7,3)),19).
move(1,((7,3),(8,3)),20).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(3,5)),2).
move(2,((3,5),(3,6)),3).
move(2,((3,6),(4,6)),4).
move(2,((4,6),(4,5)),5).
move(2,((4,5),(5,5)),6).
move(2,((5,5),(6,5)),7).
move(2,((6,5),(7,5)),8).
move(2,((7,5),(8,5)),9).
move(2,((8,5),(7,5)),10).
move(2,((7,5),(6,5)),11).
move(2,((6,5),(6,4)),12).
move(2,((6,4),(5,4)),13).
move(2,((5,4),(5,5)),14).
move(2,((5,5),(4,5)),15).
move(2,((4,5),(4,4)),16).
move(2,((4,4),(4,3)),17).
move(2,((4,3),(5,3)),18).
move(2,((5,3),(5,2)),19).
move(2,((5,2),(5,3)),20).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(3,6)),2).
move(3,((3,6),(2,6)),3).
move(3,((2,6),(2,5)),5).
move(3,((2,5),(1,5)),6).
move(3,((1,5),(1,4)),7).
move(3,((1,4),(1,3)),8).
move(3,((1,3),(1,2)),9).
move(3,((1,2),(1,1)),10).
move(3,((1,1),(1,2)),11).
move(3,((1,2),(2,2)),12).
move(3,((2,2),(3,2)),13).
move(3,((3,2),(3,3)),14).
move(3,((3,3),(2,3)),15).
move(3,((2,3),(3,3)),16).
move(3,((3,3),(2,3)),17).
move(3,((2,3),(2,2)),18).
move(3,((2,2),(3,2)),19).
move(3,((3,2),(3,3)),20).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,6)),2).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(3,5)),4).
move(4,((3,5),(3,4)),5).
move(4,((3,4),(3,3)),6).
move(4,((3,3),(3,2)),7).
move(4,((3,2),(4,2)),8).
move(4,((4,2),(5,2)),9).
move(4,((5,2),(5,3)),10).
move(4,((5,3),(6,3)),11).
move(4,((6,3),(7,3)),12).
move(4,((7,3),(6,3)),14).
move(4,((6,3),(5,3)),15).
move(4,((5,3),(6,3)),17).
move(4,((6,3),(7,3)),18).
move(4,((7,3),(8,3)),19).
move(4,((8,3),(9,3)),20).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,3)),7).
move(5,((5,3),(5,4)),8).
move(5,((5,4),(6,4)),9).
move(5,((6,4),(7,4)),10).
move(5,((7,4),(7,5)),11).
move(5,((7,5),(6,5)),12).
move(5,((6,5),(5,5)),13).
move(5,((5,5),(6,5)),14).
move(5,((6,5),(7,5)),15).
move(5,((7,5),(7,4)),16).
move(5,((7,4),(6,4)),17).
move(5,((6,4),(7,4)),18).
move(5,((7,4),(7,3)),20).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(10,5)),3).
move(6,((10,5),(10,4)),4).
move(6,((10,4),(10,3)),5).
move(6,((10,3),(11,3)),6).
move(6,((11,3),(11,4)),7).
move(6,((11,4),(11,3)),8).
move(6,((11,3),(10,3)),9).
move(6,((10,3),(10,2)),11).
move(6,((10,2),(9,2)),13).
move(6,((9,2),(8,2)),14).
move(6,((8,2),(7,2)),15).
move(6,((7,2),(6,2)),16).
move(6,((6,2),(5,2)),17).
move(6,((5,2),(4,2)),18).
move(6,((4,2),(4,3)),20).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(6,1)),7).
move(7,((6,1),(6,2)),8).
move(7,((6,2),(6,3)),10).
move(7,((6,3),(6,4)),11).
move(7,((6,4),(5,4)),12).
move(7,((5,4),(4,4)),13).
move(7,((4,4),(5,4)),14).
move(7,((5,4),(4,4)),15).
move(7,((4,4),(5,4)),16).
move(7,((5,4),(4,4)),17).
move(7,((4,4),(3,4)),18).
move(7,((3,4),(2,4)),19).
move(7,((2,4),(2,3)),20).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(8,3)),10).
move(8,((8,3),(8,4)),11).
move(8,((8,4),(7,4)),13).
move(8,((7,4),(7,5)),14).
move(8,((7,5),(8,5)),15).
move(8,((8,5),(9,5)),16).
move(8,((9,5),(8,5)),17).
move(8,((8,5),(7,5)),18).
move(8,((7,5),(8,5)),19).
move(8,((8,5),(8,4)),20).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(9,5)),3).
move(9,((9,5),(9,4)),4).
move(9,((9,4),(9,3)),5).
move(9,((9,3),(9,2)),6).
move(9,((9,2),(9,1)),7).
move(9,((9,1),(9,2)),8).
move(9,((9,2),(8,2)),9).
move(9,((8,2),(7,2)),10).
move(9,((7,2),(7,3)),11).
move(9,((7,3),(8,3)),12).
move(9,((8,3),(8,4)),13).
move(9,((8,4),(8,5)),14).
move(9,((8,5),(9,5)),15).
move(9,((9,5),(10,5)),16).
move(9,((10,5),(9,5)),17).
move(9,((9,5),(8,5)),18).
move(9,((8,5),(8,4)),19).
move(9,((8,4),(7,4)),20).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(9,5)),4).
move(10,((9,5),(9,4)),5).
move(10,((9,4),(9,3)),6).
move(10,((9,3),(9,4)),7).
move(10,((9,4),(9,3)),8).
move(10,((9,3),(8,3)),9).
move(10,((8,3),(8,2)),10).
move(10,((8,2),(8,3)),11).
move(10,((8,3),(9,3)),12).
move(10,((9,3),(9,4)),13).
move(10,((9,4),(8,4)),14).
move(10,((8,4),(7,4)),15).
move(10,((7,4),(6,4)),16).
move(10,((6,4),(5,4)),17).
move(10,((5,4),(6,4)),18).
move(10,((6,4),(5,4)),19).
move(10,((5,4),(4,4)),20).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),4).
move(11,((10,5),(10,4)),6).
move(11,((10,4),(10,3)),7).
move(11,((10,3),(10,2)),8).
move(11,((10,2),(11,2)),9).
move(11,((11,2),(11,1)),10).
move(11,((11,1),(11,2)),11).
move(11,((11,2),(10,2)),13).
move(11,((10,2),(9,2)),14).
move(11,((9,2),(8,2)),15).
move(11,((8,2),(9,2)),16).
move(11,((9,2),(9,3)),17).
move(11,((9,3),(9,4)),18).
move(11,((9,4),(10,4)),19).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.143s (Solving: 0.16s 1st Model: 0.16s Unsat: 0.00s)
CPU Time     : 1.125s

Choices      : 2273     (Domain: 2273)
Conflicts    : 113      (Analyzed: 113)
Restarts     : 1        (Average: 113.00 Last: 34)
Model-Level  : 162.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 113      (Deleted: 0)
  Binary     : 32       (Ratio:  28.32%)
  Ternary    : 5        (Ratio:   4.42%)
  Conflict   : 113      (Average Length:   10.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 113      (Average: 18.68 Max: 160 Sum:   2111)
  Executed   : 113      (Average: 18.68 Max: 160 Sum:   2111 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176470   (Original: 164615)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69158   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

