%%%%%
%Standard
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(7,6)),6).
move(2,((7,6),(8,6)),7).
move(2,((8,6),(9,6)),8).
move(2,((9,6),(10,6)),9).
move(2,((10,6),(10,5)),10).
move(2,((10,5),(10,4)),11).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(7,5)),6).
move(3,((7,5),(7,4)),7).
move(3,((7,4),(8,4)),8).
move(3,((8,4),(9,4)),9).
move(3,((9,4),(9,3)),10).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(4,4)),3).
move(4,((4,4),(5,4)),4).
move(4,((5,4),(5,5)),5).
move(4,((5,5),(6,5)),6).
move(4,((6,5),(7,5)),7).
move(4,((7,5),(8,5)),8).
move(4,((8,5),(9,5)),9).
move(4,((9,5),(9,4)),10).
move(5,((4,6),(5,6)),2).
move(5,((5,6),(6,6)),3).
move(5,((6,6),(7,6)),4).
move(5,((7,6),(8,6)),5).
move(5,((8,6),(8,5)),6).
move(5,((8,5),(8,4)),7).
move(5,((8,4),(8,3)),8).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(6,3)),4).
move(6,((6,3),(6,2)),6).
move(6,((6,2),(6,3)),7).
move(6,((6,3),(5,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(4,4)),4).
move(7,((4,4),(3,4)),5).
move(7,((3,4),(3,3)),6).
move(7,((3,3),(4,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(2,5)),6).
move(8,((2,5),(2,4)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.251s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.250s

Choices      : 735     
Conflicts    : 32       (Analyzed: 32)
Restarts     : 0       
Model-Level  : 313.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 32       (Deleted: 0)
  Binary     : 6        (Ratio:  18.75%)
  Ternary    : 1        (Ratio:   3.12%)
  Conflict   : 32       (Average Length:   20.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 32       (Average: 13.19 Max:  92 Sum:    422)
  Executed   : 32       (Average: 13.19 Max:  92 Sum:    422 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261077   (Original: 241134)
  Choice     : 320     
Atoms        : 106367  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(8,3)),3).
move(1,((8,3),(7,3)),4).
move(1,((7,3),(6,3)),5).
move(1,((6,3),(5,3)),6).
move(1,((5,3),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(2,5)),2).
move(2,((2,5),(3,5)),3).
move(2,((3,5),(4,5)),4).
move(2,((4,5),(5,5)),5).
move(2,((5,5),(6,5)),6).
move(2,((6,5),(7,5)),7).
move(2,((7,5),(8,5)),8).
move(2,((8,5),(9,5)),9).
move(2,((9,5),(10,5)),10).
move(2,((10,5),(10,4)),11).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(6,5)),5).
move(3,((6,5),(7,5)),6).
move(3,((7,5),(8,5)),7).
move(3,((8,5),(9,5)),8).
move(3,((9,5),(9,4)),9).
move(3,((9,4),(9,3)),10).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(3,3)),3).
move(4,((3,3),(4,3)),4).
move(4,((4,3),(5,3)),5).
move(4,((5,3),(5,4)),6).
move(4,((5,4),(6,4)),7).
move(4,((6,4),(7,4)),8).
move(4,((7,4),(8,4)),9).
move(4,((8,4),(9,4)),10).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(7,5)),4).
move(5,((7,5),(8,5)),5).
move(5,((8,5),(8,4)),7).
move(5,((8,4),(8,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(6,5)),2).
move(6,((6,5),(6,4)),3).
move(6,((6,4),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),7).
move(6,((6,3),(5,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(5,4)),3).
move(7,((5,4),(4,4)),4).
move(7,((4,4),(4,5)),6).
move(7,((4,5),(4,4)),7).
move(7,((4,4),(4,3)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),4).
move(8,((6,4),(5,4)),5).
move(8,((5,4),(4,4)),6).
move(8,((4,4),(3,4)),7).
move(8,((3,4),(2,4)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.243s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.234s

Choices      : 880      (Domain: 187)
Conflicts    : 35       (Analyzed: 35)
Restarts     : 0       
Model-Level  : 477.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 35       (Deleted: 0)
  Binary     : 7        (Ratio:  20.00%)
  Ternary    : 1        (Ratio:   2.86%)
  Conflict   : 35       (Average Length:   20.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 35       (Average: 11.51 Max:  58 Sum:    403)
  Executed   : 35       (Average: 11.51 Max:  58 Sum:    403 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261381   (Original: 241438)
  Choice     : 320     
  Heuristic  : 193     
Atoms        : 106478  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDistance.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(7,6)),6).
move(2,((7,6),(8,6)),7).
move(2,((8,6),(9,6)),8).
move(2,((9,6),(10,6)),9).
move(2,((10,6),(10,5)),10).
move(2,((10,5),(10,4)),11).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(6,5)),5).
move(3,((6,5),(6,4)),6).
move(3,((6,4),(7,4)),7).
move(3,((7,4),(7,3)),8).
move(3,((7,3),(7,2)),9).
move(3,((7,2),(8,2)),10).
move(3,((8,2),(9,2)),11).
move(3,((9,2),(9,3)),12).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(8,5)),6).
move(4,((8,5),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(7,5)),4).
move(5,((7,5),(8,5)),5).
move(5,((8,5),(8,4)),6).
move(5,((8,4),(8,3)),7).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(4,4)),4).
move(7,((4,4),(4,3)),5).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(3,4)),6).
move(8,((3,4),(2,4)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.229s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.203s

Choices      : 310      (Domain: 310)
Conflicts    : 8        (Analyzed: 8)
Restarts     : 0       
Model-Level  : 277.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 8        (Deleted: 0)
  Binary     : 7        (Ratio:  87.50%)
  Ternary    : 1        (Ratio:  12.50%)
  Conflict   : 8        (Average Length:    2.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 8        (Average:  4.12 Max:   7 Sum:     33)
  Executed   : 8        (Average:  4.12 Max:   7 Sum:     33 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279652   (Original: 259781)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106486  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((8,6),(7,6)),2).
move(1,((7,6),(7,5)),4).
move(1,((7,5),(7,4)),5).
move(1,((7,4),(7,3)),6).
move(1,((7,3),(7,2)),7).
move(1,((7,2),(7,3)),15).
move(1,((7,3),(7,4)),16).
move(1,((7,4),(7,3)),25).
move(1,((7,3),(6,3)),27).
move(1,((6,3),(6,2)),29).
move(1,((6,2),(6,3)),32).
move(1,((6,3),(6,2)),34).
move(1,((6,2),(7,2)),35).
move(1,((7,2),(6,2)),36).
move(1,((6,2),(5,2)),37).
move(1,((5,2),(4,2)),38).
move(1,((4,2),(3,2)),39).
move(1,((3,2),(3,3)),40).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(3,5)),3).
move(2,((3,5),(4,5)),4).
move(2,((4,5),(4,4)),5).
move(2,((4,4),(5,4)),6).
move(2,((5,4),(5,3)),7).
move(2,((5,3),(6,3)),8).
move(2,((6,3),(6,2)),9).
move(2,((6,2),(6,3)),10).
move(2,((6,3),(7,3)),11).
move(2,((7,3),(8,3)),12).
move(2,((8,3),(9,3)),13).
move(2,((9,3),(10,3)),14).
move(2,((10,3),(9,3)),15).
move(2,((9,3),(9,2)),16).
move(2,((9,2),(9,3)),17).
move(2,((9,3),(10,3)),18).
move(2,((10,3),(10,4)),19).
move(2,((10,4),(9,4)),20).
move(2,((9,4),(8,4)),25).
move(2,((8,4),(7,4)),26).
move(2,((7,4),(7,3)),27).
move(2,((7,3),(8,3)),29).
move(2,((8,3),(9,3)),30).
move(2,((9,3),(9,2)),31).
move(2,((9,2),(8,2)),32).
move(2,((8,2),(7,2)),34).
move(2,((7,2),(7,3)),35).
move(2,((7,3),(8,3)),37).
move(2,((8,3),(9,3)),38).
move(2,((9,3),(9,4)),39).
move(2,((9,4),(10,4)),40).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(2,3)),7).
move(3,((2,3),(3,3)),8).
move(3,((3,3),(3,2)),9).
move(3,((3,2),(3,1)),10).
move(3,((3,1),(3,2)),11).
move(3,((3,2),(4,2)),12).
move(3,((4,2),(5,2)),13).
move(3,((5,2),(4,2)),15).
move(3,((4,2),(5,2)),16).
move(3,((5,2),(4,2)),17).
move(3,((4,2),(5,2)),18).
move(3,((5,2),(5,1)),19).
move(3,((5,1),(6,1)),20).
move(3,((6,1),(7,1)),22).
move(3,((7,1),(7,2)),23).
move(3,((7,2),(8,2)),24).
move(3,((8,2),(9,2)),25).
move(3,((9,2),(9,3)),26).
move(3,((9,3),(9,4)),27).
move(3,((9,4),(8,4)),28).
move(3,((8,4),(9,4)),29).
move(3,((9,4),(8,4)),30).
move(3,((8,4),(8,3)),31).
move(3,((8,3),(8,4)),32).
move(3,((8,4),(8,3)),33).
move(3,((8,3),(9,3)),34).
move(3,((9,3),(9,4)),36).
move(3,((9,4),(8,4)),38).
move(3,((8,4),(8,3)),39).
move(3,((8,3),(9,3)),40).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(3,3)),3).
move(4,((3,3),(4,3)),4).
move(4,((4,3),(5,3)),5).
move(4,((5,3),(6,3)),6).
move(4,((6,3),(6,4)),7).
move(4,((6,4),(7,4)),8).
move(4,((7,4),(8,4)),9).
move(4,((8,4),(9,4)),10).
move(4,((9,4),(9,5)),11).
move(4,((9,5),(8,5)),12).
move(4,((8,5),(9,5)),13).
move(4,((9,5),(10,5)),14).
move(4,((10,5),(9,5)),18).
move(4,((9,5),(10,5)),21).
move(4,((10,5),(9,5)),24).
move(4,((9,5),(9,6)),27).
move(4,((9,6),(9,5)),28).
move(4,((9,5),(10,5)),29).
move(4,((10,5),(9,5)),30).
move(4,((9,5),(9,4)),32).
move(4,((9,4),(9,3)),33).
move(4,((9,3),(10,3)),34).
move(4,((10,3),(9,3)),37).
move(4,((9,3),(9,4)),38).
move(4,((9,4),(9,5)),39).
move(4,((9,5),(9,4)),40).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(4,2)),6).
move(5,((4,2),(3,2)),7).
move(5,((3,2),(2,2)),8).
move(5,((2,2),(1,2)),9).
move(5,((1,2),(2,2)),10).
move(5,((2,2),(2,3)),11).
move(5,((2,3),(2,2)),13).
move(5,((2,2),(3,2)),14).
move(5,((3,2),(4,2)),16).
move(5,((4,2),(4,3)),17).
move(5,((4,3),(5,3)),18).
move(5,((5,3),(6,3)),19).
move(5,((6,3),(7,3)),20).
move(5,((7,3),(8,3)),21).
move(5,((8,3),(9,3)),22).
move(5,((9,3),(10,3)),23).
move(5,((10,3),(10,4)),26).
move(5,((10,4),(10,3)),27).
move(5,((10,3),(9,3)),28).
move(5,((9,3),(9,2)),30).
move(5,((9,2),(8,2)),31).
move(5,((8,2),(8,1)),32).
move(5,((8,1),(9,1)),33).
move(5,((9,1),(9,2)),34).
move(5,((9,2),(8,2)),37).
move(5,((8,2),(8,3)),38).
move(5,((8,3),(7,3)),39).
move(5,((7,3),(8,3)),40).
move(6,((5,6),(4,6)),1).
move(6,((4,6),(4,5)),2).
move(6,((4,5),(5,5)),3).
move(6,((5,5),(6,5)),4).
move(6,((6,5),(7,5)),5).
move(6,((7,5),(8,5)),6).
move(6,((8,5),(8,4)),7).
move(6,((8,4),(8,3)),8).
move(6,((8,3),(8,2)),9).
move(6,((8,2),(9,2)),10).
move(6,((9,2),(10,2)),11).
move(6,((10,2),(9,2)),13).
move(6,((9,2),(8,2)),14).
move(6,((8,2),(7,2)),15).
move(6,((7,2),(6,2)),16).
move(6,((6,2),(5,2)),17).
move(6,((5,2),(5,1)),18).
move(6,((5,1),(4,1)),19).
move(6,((4,1),(4,2)),20).
move(6,((4,2),(3,2)),22).
move(6,((3,2),(4,2)),24).
move(6,((4,2),(5,2)),25).
move(6,((5,2),(6,2)),26).
move(6,((6,2),(7,2)),27).
move(6,((7,2),(8,2)),28).
move(6,((8,2),(9,2)),29).
move(6,((9,2),(8,2)),30).
move(6,((8,2),(7,2)),31).
move(6,((7,2),(7,3)),32).
move(6,((7,3),(7,4)),33).
move(6,((7,4),(6,4)),34).
move(6,((6,4),(5,4)),35).
move(6,((5,4),(4,4)),36).
move(6,((4,4),(4,3)),37).
move(6,((4,3),(4,4)),38).
move(6,((4,4),(4,3)),39).
move(6,((4,3),(5,3)),40).
move(7,((6,6),(5,6)),3).
move(7,((5,6),(5,5)),4).
move(7,((5,5),(5,4)),5).
move(7,((5,4),(5,3)),6).
move(7,((5,3),(4,3)),7).
move(7,((4,3),(4,4)),8).
move(7,((4,4),(5,4)),9).
move(7,((5,4),(4,4)),10).
move(7,((4,4),(4,3)),12).
move(7,((4,3),(3,3)),14).
move(7,((3,3),(4,3)),15).
move(7,((4,3),(5,3)),16).
move(7,((5,3),(5,4)),18).
move(7,((5,4),(6,4)),20).
move(7,((6,4),(5,4)),21).
move(7,((5,4),(4,4)),22).
move(7,((4,4),(4,5)),23).
move(7,((4,5),(4,4)),24).
move(7,((4,4),(3,4)),25).
move(7,((3,4),(2,4)),26).
move(7,((2,4),(2,3)),27).
move(7,((2,3),(2,2)),29).
move(7,((2,2),(2,3)),30).
move(7,((2,3),(2,2)),31).
move(7,((2,2),(3,2)),32).
move(7,((3,2),(4,2)),33).
move(7,((4,2),(5,2)),34).
move(7,((5,2),(6,2)),35).
move(7,((6,2),(6,3)),36).
move(7,((6,3),(5,3)),37).
move(7,((5,3),(5,2)),38).
move(7,((5,2),(4,2)),39).
move(7,((4,2),(4,3)),40).
move(8,((7,6),(7,5)),2).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(6,4)),5).
move(8,((6,4),(6,5)),6).
move(8,((6,5),(5,5)),7).
move(8,((5,5),(5,4)),8).
move(8,((5,4),(6,4)),9).
move(8,((6,4),(5,4)),10).
move(8,((5,4),(5,3)),11).
move(8,((5,3),(5,4)),13).
move(8,((5,4),(4,4)),14).
move(8,((4,4),(4,3)),16).
move(8,((4,3),(3,3)),17).
move(8,((3,3),(4,3)),18).
move(8,((4,3),(5,3)),19).
move(8,((5,3),(6,3)),20).
move(8,((6,3),(7,3)),21).
move(8,((7,3),(7,2)),22).
move(8,((7,2),(7,3)),23).
move(8,((7,3),(7,2)),24).
move(8,((7,2),(8,2)),25).
move(8,((8,2),(8,3)),26).
move(8,((8,3),(8,4)),27).
move(8,((8,4),(8,5)),28).
move(8,((8,5),(9,5)),29).
move(8,((9,5),(9,4)),30).
move(8,((9,4),(9,3)),31).
move(8,((9,3),(8,3)),32).
move(8,((8,3),(7,3)),33).
move(8,((7,3),(6,3)),34).
move(8,((6,3),(5,3)),35).
move(8,((5,3),(4,3)),36).
move(8,((4,3),(3,3)),37).
move(8,((3,3),(2,3)),39).
move(8,((2,3),(2,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.645s (Solving: 0.43s 1st Model: 0.43s Unsat: 0.00s)
CPU Time     : 1.641s

Choices      : 11652    (Domain: 1986)
Conflicts    : 342      (Analyzed: 342)
Restarts     : 2        (Average: 171.00 Last: 89)
Model-Level  : 548.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 342      (Deleted: 0)
  Binary     : 43       (Ratio:  12.57%)
  Ternary    : 12       (Ratio:   3.51%)
  Conflict   : 342      (Average Length:   34.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 342      (Average: 32.16 Max: 881 Sum:  10998)
  Executed   : 342      (Average: 32.16 Max: 881 Sum:  10998 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279652   (Original: 259781)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106486  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(4,4)),6).
move(1,((4,4),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(7,6)),6).
move(2,((7,6),(8,6)),7).
move(2,((8,6),(9,6)),8).
move(2,((9,6),(10,6)),9).
move(2,((10,6),(10,5)),10).
move(2,((10,5),(10,4)),11).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(8,6)),6).
move(3,((8,6),(9,6)),7).
move(3,((9,6),(9,5)),8).
move(3,((9,5),(9,4)),9).
move(3,((9,4),(9,3)),10).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(8,5)),6).
move(4,((8,5),(8,4)),7).
move(4,((8,4),(8,5)),8).
move(4,((8,5),(9,5)),9).
move(4,((9,5),(9,4)),10).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(7,5)),4).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(7,3)),6).
move(5,((7,3),(8,3)),7).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(4,4)),4).
move(7,((4,4),(4,3)),5).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(3,4)),6).
move(8,((3,4),(2,4)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.482s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.484s

Choices      : 306      (Domain: 34)
Conflicts    : 1        (Analyzed: 1)
Restarts     : 0       
Model-Level  : 298.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 1        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 1        (Average Length:   57.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 1        (Average:  8.00 Max:   8 Sum:      8)
  Executed   : 1        (Average:  8.00 Max:   8 Sum:      8 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 262413   (Original: 242486)
  Choice     : 320     
  Heuristic  : 1158     (Original: 1174)
Atoms        : 106545  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(7,4)),3).
move(1,((7,4),(6,4)),4).
move(1,((6,4),(5,4)),5).
move(1,((5,4),(4,4)),6).
move(1,((4,4),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(2,5)),2).
move(2,((2,5),(3,5)),3).
move(2,((3,5),(4,5)),4).
move(2,((4,5),(5,5)),5).
move(2,((5,5),(6,5)),6).
move(2,((6,5),(7,5)),7).
move(2,((7,5),(8,5)),8).
move(2,((8,5),(9,5)),9).
move(2,((9,5),(9,4)),10).
move(2,((9,4),(10,4)),11).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(3,5)),2).
move(3,((3,5),(4,5)),3).
move(3,((4,5),(5,5)),4).
move(3,((5,5),(6,5)),5).
move(3,((6,5),(7,5)),6).
move(3,((7,5),(8,5)),7).
move(3,((8,5),(9,5)),8).
move(3,((9,5),(9,4)),9).
move(3,((9,4),(9,3)),10).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(4,5)),2).
move(4,((4,5),(5,5)),3).
move(4,((5,5),(6,5)),4).
move(4,((6,5),(6,4)),5).
move(4,((6,4),(7,4)),7).
move(4,((7,4),(8,4)),8).
move(4,((8,4),(9,4)),40).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(4,3)),3).
move(5,((4,3),(5,3)),4).
move(5,((5,3),(6,3)),7).
move(5,((6,3),(7,3)),8).
move(5,((7,3),(8,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(5,2)),4).
move(6,((5,2),(5,1)),6).
move(6,((5,1),(5,2)),7).
move(6,((5,2),(5,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(5,4)),3).
move(7,((5,4),(4,4)),4).
move(7,((4,4),(4,3)),5).
move(7,((4,3),(3,3)),6).
move(7,((3,3),(4,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(5,4)),4).
move(8,((5,4),(4,4)),5).
move(8,((4,4),(3,4)),6).
move(8,((3,4),(2,4)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.491s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.500s

Choices      : 1666     (Domain: 1084)
Conflicts    : 28       (Analyzed: 28)
Restarts     : 0       
Model-Level  : 1408.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 28       (Deleted: 0)
  Binary     : 6        (Ratio:  21.43%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 28       (Average Length:   19.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 28       (Average:  9.21 Max:  42 Sum:    258)
  Executed   : 28       (Average:  9.21 Max:  42 Sum:    258 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 262346   (Original: 242404)
  Choice     : 320     
  Heuristic  : 1158     (Original: 1159)
Atoms        : 106478  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(7,6)),6).
move(2,((7,6),(8,6)),7).
move(2,((8,6),(9,6)),8).
move(2,((9,6),(10,6)),9).
move(2,((10,6),(10,5)),10).
move(2,((10,5),(10,4)),11).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(5,6)),3).
move(3,((5,6),(6,6)),4).
move(3,((6,6),(7,6)),5).
move(3,((7,6),(7,5)),6).
move(3,((7,5),(7,4)),7).
move(3,((7,4),(8,4)),8).
move(3,((8,4),(9,4)),9).
move(3,((9,4),(9,3)),10).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(9,6)),6).
move(4,((9,6),(9,5)),7).
move(4,((9,5),(9,4)),10).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(4,3)),3).
move(5,((4,3),(5,3)),4).
move(5,((5,3),(6,3)),6).
move(5,((6,3),(7,3)),7).
move(5,((7,3),(8,3)),8).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(4,4)),3).
move(6,((4,4),(4,3)),4).
move(6,((4,3),(5,3)),6).
move(6,((5,3),(5,4)),7).
move(6,((5,4),(5,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(5,4)),3).
move(7,((5,4),(4,4)),6).
move(7,((4,4),(4,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(4,4)),5).
move(8,((4,4),(3,4)),6).
move(8,((3,4),(2,4)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.376s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.375s

Choices      : 904      (Domain: 555)
Conflicts    : 34       (Analyzed: 34)
Restarts     : 0       
Model-Level  : 322.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 34       (Deleted: 0)
  Binary     : 9        (Ratio:  26.47%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 34       (Average Length:   21.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 34       (Average: 17.12 Max:  92 Sum:    582)
  Executed   : 34       (Average: 17.12 Max:  92 Sum:    582 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279662   (Original: 259783)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106495  
Disjunctions : 0        (Original: 1)
Bodies       : 183368   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93247    (Atom=Atom: 342 Body=Body: 351 Other: 92554)
Tight        : Yes
Variables    : 182697   (Eliminated:    0 Frozen: 92083)
Constraints  : 500665   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((8,6),(8,5)),3).
move(1,((8,5),(8,6)),4).
move(1,((8,6),(8,5)),5).
move(1,((8,5),(8,4)),7).
move(1,((8,4),(8,3)),8).
move(1,((8,3),(8,4)),9).
move(1,((8,4),(8,3)),24).
move(1,((8,3),(8,4)),25).
move(1,((8,4),(8,3)),29).
move(1,((8,3),(8,4)),30).
move(1,((8,4),(8,3)),33).
move(1,((8,3),(7,3)),34).
move(1,((7,3),(6,3)),35).
move(1,((6,3),(6,2)),36).
move(1,((6,2),(5,2)),37).
move(1,((5,2),(5,3)),38).
move(1,((5,3),(4,3)),39).
move(1,((4,3),(3,3)),40).
move(2,((1,6),(1,5)),3).
move(2,((1,5),(1,4)),4).
move(2,((1,4),(2,4)),5).
move(2,((2,4),(1,4)),6).
move(2,((1,4),(2,4)),8).
move(2,((2,4),(2,5)),9).
move(2,((2,5),(2,4)),10).
move(2,((2,4),(3,4)),14).
move(2,((3,4),(2,4)),15).
move(2,((2,4),(3,4)),17).
move(2,((3,4),(2,4)),18).
move(2,((2,4),(2,5)),20).
move(2,((2,5),(2,4)),21).
move(2,((2,4),(3,4)),23).
move(2,((3,4),(2,4)),24).
move(2,((2,4),(2,5)),29).
move(2,((2,5),(2,6)),30).
move(2,((2,6),(3,6)),31).
move(2,((3,6),(4,6)),32).
move(2,((4,6),(5,6)),33).
move(2,((5,6),(6,6)),34).
move(2,((6,6),(7,6)),35).
move(2,((7,6),(7,5)),36).
move(2,((7,5),(8,5)),37).
move(2,((8,5),(9,5)),38).
move(2,((9,5),(10,5)),39).
move(2,((10,5),(10,4)),40).
move(3,((2,6),(2,5)),4).
move(3,((2,5),(2,4)),6).
move(3,((2,4),(2,3)),7).
move(3,((2,3),(3,3)),8).
move(3,((3,3),(3,4)),9).
move(3,((3,4),(3,3)),11).
move(3,((3,3),(2,3)),12).
move(3,((2,3),(2,4)),14).
move(3,((2,4),(2,3)),15).
move(3,((2,3),(2,4)),17).
move(3,((2,4),(2,3)),18).
move(3,((2,3),(3,3)),19).
move(3,((3,3),(4,3)),20).
move(3,((4,3),(5,3)),21).
move(3,((5,3),(6,3)),22).
move(3,((6,3),(7,3)),23).
move(3,((7,3),(6,3)),25).
move(3,((6,3),(7,3)),26).
move(3,((7,3),(6,3)),27).
move(3,((6,3),(5,3)),28).
move(3,((5,3),(4,3)),29).
move(3,((4,3),(3,3)),30).
move(3,((3,3),(4,3)),31).
move(3,((4,3),(5,3)),32).
move(3,((5,3),(6,3)),33).
move(3,((6,3),(6,2)),34).
move(3,((6,2),(7,2)),35).
move(3,((7,2),(7,3)),36).
move(3,((7,3),(7,4)),37).
move(3,((7,4),(8,4)),38).
move(3,((8,4),(8,3)),39).
move(3,((8,3),(9,3)),40).
move(4,((3,6),(3,5)),3).
move(4,((3,5),(3,4)),5).
move(4,((3,4),(4,4)),7).
move(4,((4,4),(4,5)),9).
move(4,((4,5),(3,5)),10).
move(4,((3,5),(3,4)),13).
move(4,((3,4),(4,4)),14).
move(4,((4,4),(3,4)),15).
move(4,((3,4),(4,4)),16).
move(4,((4,4),(3,4)),19).
move(4,((3,4),(4,4)),22).
move(4,((4,4),(4,5)),23).
move(4,((4,5),(3,5)),24).
move(4,((3,5),(3,4)),25).
move(4,((3,4),(3,5)),27).
move(4,((3,5),(3,4)),31).
move(4,((3,4),(4,4)),33).
move(4,((4,4),(4,3)),34).
move(4,((4,3),(5,3)),35).
move(4,((5,3),(6,3)),36).
move(4,((6,3),(7,3)),37).
move(4,((7,3),(7,4)),38).
move(4,((7,4),(8,4)),39).
move(4,((8,4),(9,4)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(4,4)),6).
move(5,((4,4),(4,3)),7).
move(5,((4,3),(4,4)),9).
move(5,((4,4),(4,5)),10).
move(5,((4,5),(4,4)),15).
move(5,((4,4),(4,5)),16).
move(5,((4,5),(4,4)),20).
move(5,((4,4),(4,3)),21).
move(5,((4,3),(5,3)),22).
move(5,((5,3),(6,3)),23).
move(5,((6,3),(5,3)),24).
move(5,((5,3),(6,3)),26).
move(5,((6,3),(5,3)),27).
move(5,((5,3),(4,3)),28).
move(5,((4,3),(4,4)),29).
move(5,((4,4),(4,5)),30).
move(5,((4,5),(4,4)),34).
move(5,((4,4),(4,3)),35).
move(5,((4,3),(5,3)),36).
move(5,((5,3),(6,3)),37).
move(5,((6,3),(7,3)),38).
move(5,((7,3),(8,3)),40).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(5,4)),4).
move(6,((5,4),(5,3)),5).
move(6,((5,3),(5,4)),6).
move(6,((5,4),(5,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),5).
move(7,((6,4),(6,3)),6).
move(7,((6,3),(5,3)),8).
move(7,((5,3),(6,3)),9).
move(7,((6,3),(6,4)),10).
move(7,((6,4),(6,3)),24).
move(7,((6,3),(6,4)),25).
move(7,((6,4),(6,3)),38).
move(7,((6,3),(5,3)),39).
move(7,((5,3),(4,3)),40).
move(8,((7,6),(7,5)),4).
move(8,((7,5),(7,4)),6).
move(8,((7,4),(6,4)),8).
move(8,((6,4),(7,4)),9).
move(8,((7,4),(7,5)),14).
move(8,((7,5),(7,4)),15).
move(8,((7,4),(7,5)),21).
move(8,((7,5),(7,4)),22).
move(8,((7,4),(7,5)),34).
move(8,((7,5),(6,5)),35).
move(8,((6,5),(5,5)),36).
move(8,((5,5),(4,5)),37).
move(8,((4,5),(3,5)),38).
move(8,((3,5),(2,5)),39).
move(8,((2,5),(2,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.277s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1.281s

Choices      : 295      (Domain: 295)
Conflicts    : 15       (Analyzed: 15)
Restarts     : 0       
Model-Level  : 267.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 15       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 3        (Ratio:  20.00%)
  Conflict   : 15       (Average Length:   20.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 15       (Average:  1.87 Max:   4 Sum:     28)
  Executed   : 15       (Average:  1.87 Max:   4 Sum:     28 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279644   (Original: 259773)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106478  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hStrange.lp
%%%%%
move(1,((8,6),(7,6)),2).
move(1,((7,6),(7,5)),5).
move(1,((7,5),(7,4)),6).
move(1,((7,4),(8,4)),7).
move(1,((8,4),(8,3)),8).
move(1,((8,3),(8,2)),9).
move(1,((8,2),(9,2)),10).
move(1,((9,2),(10,2)),11).
move(1,((10,2),(10,1)),12).
move(1,((10,1),(11,1)),13).
move(1,((11,1),(10,1)),14).
move(1,((10,1),(10,2)),15).
move(1,((10,2),(9,2)),16).
move(1,((9,2),(8,2)),17).
move(1,((8,2),(8,3)),18).
move(1,((8,3),(8,4)),19).
move(1,((8,4),(7,4)),20).
move(1,((7,4),(8,4)),21).
move(1,((8,4),(8,3)),33).
move(1,((8,3),(8,2)),34).
move(1,((8,2),(7,2)),35).
move(1,((7,2),(6,2)),36).
move(1,((6,2),(5,2)),37).
move(1,((5,2),(4,2)),38).
move(1,((4,2),(3,2)),39).
move(1,((3,2),(3,3)),40).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(2,2)),8).
move(2,((2,2),(1,2)),9).
move(2,((1,2),(1,1)),10).
move(2,((1,1),(1,2)),11).
move(2,((1,2),(2,2)),12).
move(2,((2,2),(2,3)),13).
move(2,((2,3),(2,4)),14).
move(2,((2,4),(3,4)),33).
move(2,((3,4),(4,4)),34).
move(2,((4,4),(5,4)),35).
move(2,((5,4),(6,4)),36).
move(2,((6,4),(7,4)),37).
move(2,((7,4),(8,4)),38).
move(2,((8,4),(9,4)),39).
move(2,((9,4),(10,4)),40).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(3,1)),8).
move(3,((3,1),(2,1)),9).
move(3,((2,1),(2,2)),10).
move(3,((2,2),(2,3)),11).
move(3,((2,3),(2,4)),12).
move(3,((2,4),(3,4)),14).
move(3,((3,4),(3,3)),20).
move(3,((3,3),(4,3)),21).
move(3,((4,3),(5,3)),22).
move(3,((5,3),(5,2)),23).
move(3,((5,2),(4,2)),24).
move(3,((4,2),(3,2)),25).
move(3,((3,2),(2,2)),26).
move(3,((2,2),(2,3)),27).
move(3,((2,3),(3,3)),33).
move(3,((3,3),(4,3)),35).
move(3,((4,3),(5,3)),36).
move(3,((5,3),(6,3)),37).
move(3,((6,3),(7,3)),38).
move(3,((7,3),(8,3)),39).
move(3,((8,3),(9,3)),40).
move(4,((3,6),(3,5)),2).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(3,3)),5).
move(4,((3,3),(3,2)),6).
move(4,((3,2),(2,2)),7).
move(4,((2,2),(1,2)),8).
move(4,((1,2),(1,1)),9).
move(4,((1,1),(2,1)),10).
move(4,((2,1),(2,2)),11).
move(4,((2,2),(3,2)),12).
move(4,((3,2),(3,3)),13).
move(4,((3,3),(3,2)),20).
move(4,((3,2),(3,3)),21).
move(4,((3,3),(3,4)),22).
move(4,((3,4),(4,4)),33).
move(4,((4,4),(5,4)),34).
move(4,((5,4),(6,4)),35).
move(4,((6,4),(6,5)),36).
move(4,((6,5),(6,4)),37).
move(4,((6,4),(7,4)),38).
move(4,((7,4),(8,4)),39).
move(4,((8,4),(9,4)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(4,2)),6).
move(5,((4,2),(4,1)),7).
move(5,((4,1),(4,2)),8).
move(5,((4,2),(4,3)),9).
move(5,((4,3),(4,4)),10).
move(5,((4,4),(4,5)),32).
move(5,((4,5),(4,4)),35).
move(5,((4,4),(5,4)),36).
move(5,((5,4),(5,3)),37).
move(5,((5,3),(6,3)),38).
move(5,((6,3),(7,3)),39).
move(5,((7,3),(8,3)),40).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(7,2)),8).
move(6,((7,2),(7,1)),9).
move(6,((7,1),(8,1)),10).
move(6,((8,1),(9,1)),11).
move(6,((9,1),(9,2)),12).
move(6,((9,2),(8,2)),13).
move(6,((8,2),(7,2)),14).
move(6,((7,2),(6,2)),15).
move(6,((6,2),(5,2)),16).
move(6,((5,2),(5,3)),17).
move(6,((5,3),(5,4)),18).
move(6,((5,4),(5,3)),32).
move(6,((5,3),(5,4)),33).
move(6,((5,4),(6,4)),34).
move(6,((6,4),(6,3)),35).
move(6,((6,3),(6,2)),37).
move(6,((6,2),(5,2)),38).
move(6,((5,2),(5,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(7,5)),4).
move(7,((7,5),(8,5)),5).
move(7,((8,5),(9,5)),7).
move(7,((9,5),(9,4)),8).
move(7,((9,4),(9,3)),9).
move(7,((9,3),(10,3)),10).
move(7,((10,3),(11,3)),11).
move(7,((11,3),(11,2)),12).
move(7,((11,2),(10,2)),13).
move(7,((10,2),(9,2)),14).
move(7,((9,2),(8,2)),15).
move(7,((8,2),(7,2)),16).
move(7,((7,2),(6,2)),17).
move(7,((6,2),(6,3)),18).
move(7,((6,3),(6,4)),19).
move(7,((6,4),(6,5)),32).
move(7,((6,5),(6,4)),33).
move(7,((6,4),(6,5)),34).
move(7,((6,5),(5,5)),35).
move(7,((5,5),(4,5)),36).
move(7,((4,5),(4,4)),37).
move(7,((4,4),(4,5)),38).
move(7,((4,5),(4,4)),39).
move(7,((4,4),(4,3)),40).
move(8,((7,6),(7,5)),2).
move(8,((7,5),(7,4)),3).
move(8,((7,4),(6,4)),4).
move(8,((6,4),(7,4)),5).
move(8,((7,4),(7,3)),6).
move(8,((7,3),(7,4)),8).
move(8,((7,4),(7,5)),19).
move(8,((7,5),(7,4)),22).
move(8,((7,4),(6,4)),32).
move(8,((6,4),(7,4)),33).
move(8,((7,4),(7,5)),34).
move(8,((7,5),(6,5)),35).
move(8,((6,5),(5,5)),36).
move(8,((5,5),(4,5)),37).
move(8,((4,5),(3,5)),38).
move(8,((3,5),(2,5)),39).
move(8,((2,5),(2,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.270s (Solving: 0.03s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1.266s

Choices      : 308      (Domain: 308)
Conflicts    : 7        (Analyzed: 7)
Restarts     : 0       
Model-Level  : 275.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 7        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 7        (Average Length:   42.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 7        (Average:  4.71 Max:   8 Sum:     33)
  Executed   : 7        (Average:  4.71 Max:   8 Sum:     33 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279644   (Original: 259773)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106478  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

