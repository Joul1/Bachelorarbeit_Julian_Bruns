clingo version 5.5.2
Reading from ...nt/beegfs/home/jubruns/encoding/mif.lp ...
Solving...
Answer: 1
move(1,(6,1),(5,1),1) move(1,(5,1),(5,2),2) move(1,(5,2),(5,3),3) move(1,(5,3),(4,3),4) move(1,(4,3),(3,3),5) move(1,(3,3),(3,2),6) move(1,(3,2),(3,3),8) move(1,(3,3),(3,4),9) move(1,(3,4),(2,4),10) move(1,(2,4),(2,3),11) move(1,(2,3),(3,3),12) move(1,(3,3),(2,3),13) move(1,(2,3),(2,4),14) move(1,(2,4),(1,4),15) move(1,(1,4),(1,5),16) move(1,(1,5),(1,6),17) move(2,(11,11),(10,11),2) move(2,(10,11),(10,10),3) move(2,(10,10),(9,10),5) move(2,(9,10),(8,10),7) move(2,(8,10),(9,10),8) move(2,(9,10),(10,10),9) move(2,(10,10),(10,11),10) move(2,(10,11),(11,11),11) move(2,(11,11),(11,10),12) move(2,(11,10),(10,10),13) move(2,(10,10),(9,10),14) move(2,(9,10),(8,10),15) move(2,(8,10),(8,11),16) move(3,(10,5),(10,4),3) move(3,(10,4),(9,4),4) move(3,(9,4),(8,4),5) move(3,(8,4),(9,4),6) move(3,(9,4),(9,3),7) move(3,(9,3),(9,2),8) move(3,(9,2),(9,3),9) move(3,(9,3),(8,3),10) move(3,(8,3),(8,4),11) move(3,(8,4),(9,4),12) move(3,(9,4),(9,5),13) move(3,(9,5),(9,6),14) move(3,(9,6),(9,7),15) move(3,(9,7),(9,8),16) move(3,(9,8),(10,8),17) move(4,(9,11),(9,10),1) move(4,(9,10),(9,9),2) move(4,(9,9),(9,8),3) move(4,(9,8),(9,7),4) move(4,(9,7),(9,6),5) move(4,(9,6),(9,5),6) move(4,(9,5),(9,4),7) move(4,(9,4),(8,4),8) move(4,(8,4),(8,3),9) move(4,(8,3),(8,2),10) move(4,(8,2),(8,1),11) move(4,(8,1),(7,1),12) move(4,(7,1),(6,1),13) move(4,(6,1),(5,1),14) move(4,(5,1),(4,1),15) move(4,(4,1),(3,1),16) move(4,(3,1),(2,1),17) move(5,(10,9),(9,9),3) move(5,(9,9),(9,8),4) move(5,(9,8),(9,7),5) move(5,(9,7),(9,6),6) move(5,(9,6),(9,5),7) move(5,(9,5),(9,4),8) move(5,(9,4),(9,5),9) move(5,(9,5),(9,4),10) move(5,(9,4),(10,4),11) move(5,(10,4),(11,4),12) move(5,(11,4),(10,4),13) move(5,(10,4),(9,4),14) move(5,(9,4),(9,5),15) move(5,(9,5),(10,5),16) move(5,(10,5),(11,5),17) move(6,(3,3),(4,3),2) move(6,(4,3),(4,2),3) move(6,(4,2),(3,2),4) move(6,(3,2),(2,2),5) move(6,(2,2),(2,3),6) move(6,(2,3),(2,4),7) move(6,(2,4),(1,4),8) move(6,(1,4),(1,5),9) move(6,(1,5),(1,4),10) move(6,(1,4),(1,5),11) move(6,(1,5),(1,6),12) move(6,(1,6),(1,7),13) move(6,(1,7),(2,7),14) move(6,(2,7),(2,8),15) move(6,(2,8),(2,9),16) move(6,(2,9),(2,10),17) move(7,(2,9),(3,9),3) move(7,(3,9),(4,9),5) move(7,(4,9),(5,9),6) move(7,(5,9),(4,9),7) move(7,(4,9),(4,10),8) move(7,(4,10),(3,10),10) move(7,(3,10),(3,9),11) move(7,(3,9),(2,9),12) move(7,(2,9),(2,8),14) move(7,(2,8),(1,8),15) move(7,(1,8),(1,9),16) move(7,(1,9),(1,10),17) move(8,(3,11),(3,10),3) move(8,(3,10),(2,10),4) move(8,(2,10),(2,9),5) move(8,(2,9),(2,8),6) move(8,(2,8),(1,8),7) move(8,(1,8),(1,7),8) move(8,(1,7),(1,6),9) move(8,(1,6),(1,5),10) move(8,(1,5),(2,5),11) move(8,(2,5),(2,4),12) move(8,(2,4),(3,4),13) move(8,(3,4),(4,4),14) move(8,(4,4),(4,3),15) move(8,(4,3),(4,2),16) move(8,(4,2),(4,1),17) move(9,(1,6),(1,7),1) move(9,(1,7),(1,8),2) move(9,(1,8),(2,8),3) move(9,(2,8),(3,8),4) move(9,(3,8),(4,8),5) move(9,(4,8),(5,8),6) move(9,(5,8),(5,9),7) move(9,(5,9),(5,10),8) move(9,(5,10),(5,9),9) move(9,(5,9),(6,9),10) move(9,(6,9),(7,9),11) move(9,(7,9),(8,9),12) move(9,(8,9),(9,9),13) move(9,(9,9),(10,9),14) move(9,(10,9),(10,8),15) move(9,(10,8),(10,7),16) move(9,(10,7),(11,7),17) move(10,(6,9),(7,9),2) move(10,(7,9),(8,9),4) move(10,(8,9),(9,9),5) move(10,(9,9),(9,8),7) move(10,(9,8),(9,7),8) move(10,(9,7),(9,6),9) move(10,(9,6),(9,5),10) move(10,(9,5),(9,4),11) move(10,(9,4),(9,3),12) move(10,(9,3),(8,3),13) move(10,(8,3),(8,2),14) move(10,(8,2),(8,1),15) move(10,(8,1),(7,1),16) move(10,(7,1),(6,1),17)
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.648s (Solving: 0.07s 1st Model: 0.07s Unsat: 0.00s)
CPU Time     : 0.610s

Choices      : 1451     (Domain: 1443)
Conflicts    : 69       (Analyzed: 69)
Restarts     : 1        (Average: 69.00 Last: 5)
Model-Level  : 121.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 69       (Deleted: 0)
  Binary     : 21       (Ratio:  30.43%)
  Ternary    : 9        (Ratio:  13.04%)
  Conflict   : 69       (Average Length:    8.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 69       (Average: 19.28 Max:  96 Sum:   1330)
  Executed   : 69       (Average: 19.28 Max:  96 Sum:   1330 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 217815   (Original: 175210)
  Choice     : 170     
  Heuristic  : 17986    (Original: 18304)
Atoms        : 89945    (Original: 75151 Auxiliary: 14794)
Disjunctions : 0        (Original: 1)
Bodies       : 125079   (Original: 97090)
  Count      : 888      (Original: 1808)
Equivalences : 67264    (Atom=Atom: 203 Body=Body: 224 Other: 66837)
Tight        : Yes
Variables    : 120888   (Eliminated:    0 Frozen: 61685)
Constraints  : 288613   (Binary:  83.0% Ternary:  12.4% Other:   4.6%)

