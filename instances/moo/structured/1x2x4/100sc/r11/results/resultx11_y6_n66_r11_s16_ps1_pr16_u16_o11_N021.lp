%%%%%
%Standard
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(8,6)),7).
move(1,((8,6),(8,5)),9).
move(1,((8,5),(8,4)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(9,5)),8).
move(2,((9,5),(9,4)),9).
move(2,((9,4),(9,3)),10).
move(2,((9,3),(10,3)),20).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(7,6)),4).
move(3,((7,6),(8,6)),5).
move(3,((8,6),(8,5)),6).
move(3,((8,5),(8,4)),7).
move(3,((8,4),(8,3)),8).
move(3,((8,3),(9,3)),20).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(10,6)),6).
move(4,((10,6),(10,5)),8).
move(4,((10,5),(10,4)),9).
move(4,((10,4),(9,4)),20).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(8,5)),5).
move(5,((8,5),(7,5)),6).
move(5,((7,5),(7,4)),20).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),4).
move(6,((8,3),(7,3)),6).
move(6,((7,3),(8,3)),20).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),4).
move(7,((6,2),(5,2)),5).
move(7,((5,2),(4,2)),6).
move(7,((4,2),(5,2)),8).
move(7,((5,2),(5,3)),20).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(8,((2,4),(2,3)),20).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(9,4)),3).
move(9,((9,4),(8,4)),4).
move(9,((8,4),(7,4)),5).
move(9,((7,4),(6,4)),6).
move(9,((6,4),(5,4)),7).
move(9,((5,4),(4,4)),8).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,3)),3).
move(10,((8,3),(7,3)),4).
move(10,((7,3),(6,3)),5).
move(10,((6,3),(5,3)),7).
move(10,((5,3),(4,3)),9).
move(10,((4,3),(3,3)),20).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(11,3)),3).
move(11,((11,3),(10,3)),4).
move(11,((10,3),(9,3)),6).
move(11,((9,3),(9,4)),7).
move(11,((9,4),(8,4)),8).
move(11,((8,4),(7,4)),9).
move(11,((7,4),(7,3)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.718s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.719s

Choices      : 981     
Conflicts    : 53       (Analyzed: 53)
Restarts     : 0       
Model-Level  : 306.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 53       (Deleted: 0)
  Binary     : 9        (Ratio:  16.98%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 53       (Average Length:   32.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 53       (Average: 12.74 Max:  87 Sum:    675)
  Executed   : 53       (Average: 12.74 Max:  87 Sum:    675 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165688   (Original: 153701)
  Choice     : 220     
Atoms        : 69035   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(8,6)),7).
move(1,((8,6),(8,5)),9).
move(1,((8,5),(8,4)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(9,5)),8).
move(2,((9,5),(9,4)),9).
move(2,((9,4),(9,3)),10).
move(2,((9,3),(10,3)),20).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(4,3)),5).
move(3,((4,3),(5,3)),6).
move(3,((5,3),(6,3)),7).
move(3,((6,3),(7,3)),8).
move(3,((7,3),(8,3)),9).
move(3,((8,3),(9,3)),20).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(10,6)),6).
move(4,((10,6),(10,5)),8).
move(4,((10,5),(10,4)),9).
move(4,((10,4),(9,4)),20).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(7,5)),5).
move(5,((7,5),(7,4)),20).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(9,2)),4).
move(6,((9,2),(8,2)),5).
move(6,((8,2),(7,2)),6).
move(6,((7,2),(7,3)),9).
move(6,((7,3),(8,3)),20).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),4).
move(7,((6,2),(6,1)),5).
move(7,((6,1),(6,2)),6).
move(7,((6,2),(5,2)),8).
move(7,((5,2),(5,3)),20).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(4,4)),5).
move(8,((4,4),(3,4)),6).
move(8,((3,4),(3,3)),7).
move(8,((3,3),(2,3)),20).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(6,5)),5).
move(9,((6,5),(5,5)),6).
move(9,((5,5),(5,4)),7).
move(9,((5,4),(5,3)),9).
move(9,((5,3),(5,4)),10).
move(9,((5,4),(4,4)),20).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(5,4)),6).
move(10,((5,4),(5,3)),7).
move(10,((5,3),(4,3)),8).
move(10,((4,3),(3,3)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(8,5)),4).
move(11,((8,5),(8,4)),5).
move(11,((8,4),(7,4)),6).
move(11,((7,4),(7,3)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.736s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 0.734s

Choices      : 1144    
Conflicts    : 57       (Analyzed: 57)
Restarts     : 0       
Model-Level  : 339.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 57       (Deleted: 0)
  Binary     : 10       (Ratio:  17.54%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 57       (Average Length:   35.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 57       (Average: 14.12 Max: 153 Sum:    805)
  Executed   : 57       (Average: 14.12 Max: 153 Sum:    805 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165942   (Original: 153955)
  Choice     : 220     
  Heuristic  : 103     
Atoms        : 69186   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(8,6)),7).
move(1,((8,6),(8,5)),9).
move(1,((8,5),(8,4)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(9,5)),8).
move(2,((9,5),(9,4)),9).
move(2,((9,4),(9,3)),10).
move(2,((9,3),(10,3)),20).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(7,6)),4).
move(3,((7,6),(8,6)),5).
move(3,((8,6),(8,5)),6).
move(3,((8,5),(8,4)),7).
move(3,((8,4),(8,3)),8).
move(3,((8,3),(9,3)),20).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(10,6)),6).
move(4,((10,6),(10,5)),8).
move(4,((10,5),(10,4)),9).
move(4,((10,4),(9,4)),20).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(8,5)),5).
move(5,((8,5),(7,5)),6).
move(5,((7,5),(7,4)),20).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),4).
move(6,((8,3),(7,3)),5).
move(6,((7,3),(7,4)),6).
move(6,((7,4),(7,3)),7).
move(6,((7,3),(8,3)),20).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),4).
move(7,((6,2),(5,2)),5).
move(7,((5,2),(4,2)),6).
move(7,((4,2),(5,2)),8).
move(7,((5,2),(5,3)),20).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(8,((2,4),(2,3)),20).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(9,4)),3).
move(9,((9,4),(8,4)),4).
move(9,((8,4),(7,4)),5).
move(9,((7,4),(6,4)),6).
move(9,((6,4),(5,4)),7).
move(9,((5,4),(4,4)),8).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,3)),3).
move(10,((8,3),(7,3)),4).
move(10,((7,3),(6,3)),5).
move(10,((6,3),(5,3)),6).
move(10,((5,3),(4,3)),9).
move(10,((4,3),(3,3)),20).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(11,3)),3).
move(11,((11,3),(11,4)),4).
move(11,((11,4),(10,4)),6).
move(11,((10,4),(9,4)),7).
move(11,((9,4),(8,4)),8).
move(11,((8,4),(7,4)),9).
move(11,((7,4),(7,3)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.694s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.688s

Choices      : 1008    
Conflicts    : 53       (Analyzed: 53)
Restarts     : 0       
Model-Level  : 311.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 53       (Deleted: 0)
  Binary     : 8        (Ratio:  15.09%)
  Ternary    : 1        (Ratio:   1.89%)
  Conflict   : 53       (Average Length:   32.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 53       (Average: 13.15 Max:  86 Sum:    697)
  Executed   : 53       (Average: 13.15 Max:  86 Sum:    697 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165850   (Original: 153863)
  Choice     : 220     
Atoms        : 69197   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(8,6)),7).
move(1,((8,6),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(8,5)),7).
move(2,((8,5),(9,5)),8).
move(2,((9,5),(9,4)),9).
move(2,((9,4),(9,3)),10).
move(2,((9,3),(10,3)),20).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(7,6)),4).
move(3,((7,6),(8,6)),5).
move(3,((8,6),(8,5)),6).
move(3,((8,5),(8,4)),7).
move(3,((8,4),(8,3)),8).
move(3,((8,3),(9,3)),20).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(10,6)),7).
move(4,((10,6),(10,5)),8).
move(4,((10,5),(10,4)),9).
move(4,((10,4),(9,4)),20).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,5)),5).
move(5,((7,5),(7,4)),20).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),5).
move(6,((8,3),(7,3)),6).
move(6,((7,3),(8,3)),20).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),5).
move(8,((4,5),(3,5)),6).
move(8,((3,5),(3,4)),7).
move(8,((3,4),(3,3)),8).
move(8,((3,3),(2,3)),20).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(6,5)),5).
move(9,((6,5),(5,5)),6).
move(9,((5,5),(4,5)),7).
move(9,((4,5),(4,4)),8).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(7,5)),2).
move(10,((7,5),(7,4)),3).
move(10,((7,4),(6,4)),4).
move(10,((6,4),(5,4)),5).
move(10,((5,4),(5,3)),6).
move(10,((5,3),(4,3)),7).
move(10,((4,3),(4,2)),8).
move(10,((4,2),(4,3)),9).
move(10,((4,3),(3,3)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(8,5)),4).
move(11,((8,5),(8,4)),5).
move(11,((8,4),(7,4)),7).
move(11,((7,4),(7,3)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.701s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.703s

Choices      : 675     
Conflicts    : 41       (Analyzed: 41)
Restarts     : 0       
Model-Level  : 318.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 41       (Deleted: 0)
  Binary     : 5        (Ratio:  12.20%)
  Ternary    : 3        (Ratio:   7.32%)
  Conflict   : 41       (Average Length:   25.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 41       (Average:  8.71 Max:  53 Sum:    357)
  Executed   : 41       (Average:  8.71 Max:  53 Sum:    357 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 167394   (Original: 155429)
  Choice     : 220     
  Heuristic  : 1465     (Original: 1487)
Atoms        : 69276   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(6,5)),6).
move(1,((6,5),(7,5)),8).
move(1,((7,5),(8,5)),9).
move(1,((8,5),(8,4)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(8,5)),7).
move(2,((8,5),(8,4)),8).
move(2,((8,4),(9,4)),9).
move(2,((9,4),(9,3)),10).
move(2,((9,3),(10,3)),20).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(6,5)),4).
move(3,((6,5),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(7,3)),8).
move(3,((7,3),(8,3)),9).
move(3,((8,3),(9,3)),20).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),20).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(7,5)),4).
move(5,((7,5),(6,5)),5).
move(5,((6,5),(7,5)),6).
move(5,((7,5),(7,4)),8).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(9,2)),4).
move(6,((9,2),(8,2)),5).
move(6,((8,2),(7,2)),6).
move(6,((7,2),(6,2)),7).
move(6,((6,2),(7,2)),8).
move(6,((7,2),(7,3)),9).
move(6,((7,3),(8,3)),20).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),5).
move(7,((5,3),(4,3)),6).
move(7,((4,3),(4,2)),7).
move(7,((4,2),(5,2)),8).
move(7,((5,2),(5,3)),20).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(5,4)),4).
move(8,((5,4),(4,4)),5).
move(8,((4,4),(3,4)),6).
move(8,((3,4),(3,3)),7).
move(8,((3,3),(2,3)),8).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(9,3)),4).
move(9,((9,3),(8,3)),5).
move(9,((8,3),(7,3)),7).
move(9,((7,3),(6,3)),8).
move(9,((6,3),(5,3)),9).
move(9,((5,3),(4,3)),10).
move(9,((4,3),(4,4)),11).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,3)),3).
move(10,((8,3),(7,3)),5).
move(10,((7,3),(6,3)),6).
move(10,((6,3),(5,3)),7).
move(10,((5,3),(4,3)),8).
move(10,((4,3),(3,3)),9).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(7,6)),6).
move(11,((7,6),(6,6)),7).
move(11,((6,6),(6,5)),8).
move(11,((6,5),(6,4)),9).
move(11,((6,4),(6,3)),10).
move(11,((6,3),(7,3)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.724s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.719s

Choices      : 1123    
Conflicts    : 54       (Analyzed: 54)
Restarts     : 0       
Model-Level  : 322.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 54       (Deleted: 0)
  Binary     : 10       (Ratio:  18.52%)
  Ternary    : 3        (Ratio:   5.56%)
  Conflict   : 54       (Average Length:   27.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 54       (Average: 14.83 Max: 111 Sum:    801)
  Executed   : 54       (Average: 14.83 Max: 111 Sum:    801 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 166612   (Original: 154630)
  Choice     : 220     
  Heuristic  : 773      (Original: 778)
Atoms        : 69186   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(9,5)),8).
move(2,((9,5),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(2,((10,4),(10,3)),20).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(5,5)),3).
move(3,((5,5),(5,4)),4).
move(3,((5,4),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(7,3)),7).
move(3,((7,3),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(9,4)),7).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(8,6)),3).
move(5,((8,6),(8,5)),5).
move(5,((8,5),(7,5)),6).
move(5,((7,5),(7,4)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(10,5)),4).
move(6,((10,5),(9,5)),5).
move(6,((9,5),(8,5)),6).
move(6,((8,5),(8,4)),7).
move(6,((8,4),(8,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(4,4)),4).
move(7,((4,4),(5,4)),5).
move(7,((5,4),(5,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),4).
move(8,((5,5),(4,5)),5).
move(8,((4,5),(4,4)),6).
move(8,((4,4),(3,4)),7).
move(8,((3,4),(2,4)),8).
move(8,((2,4),(2,3)),20).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(6,5)),5).
move(9,((6,5),(5,5)),6).
move(9,((5,5),(4,5)),7).
move(9,((4,5),(4,4)),8).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,3)),3).
move(10,((8,3),(7,3)),4).
move(10,((7,3),(6,3)),5).
move(10,((6,3),(5,3)),6).
move(10,((5,3),(4,3)),7).
move(10,((4,3),(3,3)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),4).
move(11,((9,5),(9,4)),5).
move(11,((9,4),(9,3)),6).
move(11,((9,3),(8,3)),7).
move(11,((8,3),(8,2)),8).
move(11,((8,2),(7,2)),9).
move(11,((7,2),(7,3)),10).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.707s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.703s

Choices      : 822     
Conflicts    : 59       (Analyzed: 59)
Restarts     : 0       
Model-Level  : 301.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 59       (Deleted: 0)
  Binary     : 9        (Ratio:  15.25%)
  Ternary    : 8        (Ratio:  13.56%)
  Conflict   : 59       (Average Length:   18.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 59       (Average:  8.83 Max:  55 Sum:    521)
  Executed   : 59       (Average:  8.83 Max:  55 Sum:    521 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176498   (Original: 164643)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69186   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(2,1)),9).
move(1,((2,1),(1,1)),10).
move(1,((1,1),(1,2)),11).
move(1,((1,2),(2,2)),12).
move(1,((2,2),(2,3)),13).
move(1,((2,3),(2,4)),14).
move(1,((2,4),(3,4)),15).
move(1,((3,4),(4,4)),16).
move(1,((4,4),(5,4)),17).
move(1,((5,4),(6,4)),18).
move(1,((6,4),(7,4)),19).
move(1,((7,4),(8,4)),20).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(3,2)),7).
move(2,((3,2),(3,1)),8).
move(2,((3,1),(3,2)),9).
move(2,((3,2),(2,2)),10).
move(2,((2,2),(2,3)),11).
move(2,((2,3),(3,3)),12).
move(2,((3,3),(4,3)),13).
move(2,((4,3),(5,3)),14).
move(2,((5,3),(6,3)),15).
move(2,((6,3),(7,3)),16).
move(2,((7,3),(8,3)),17).
move(2,((8,3),(9,3)),18).
move(2,((9,3),(10,3)),19).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),5).
move(3,((3,3),(3,2)),6).
move(3,((3,2),(2,2)),7).
move(3,((2,2),(1,2)),8).
move(3,((1,2),(1,3)),10).
move(3,((1,3),(1,4)),11).
move(3,((1,4),(2,4)),12).
move(3,((2,4),(3,4)),13).
move(3,((3,4),(4,4)),14).
move(3,((4,4),(4,3)),15).
move(3,((4,3),(5,3)),16).
move(3,((5,3),(6,3)),17).
move(3,((6,3),(7,3)),18).
move(3,((7,3),(8,3)),19).
move(3,((8,3),(9,3)),20).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,2)),6).
move(4,((4,2),(4,1)),7).
move(4,((4,1),(4,2)),8).
move(4,((4,2),(4,3)),9).
move(4,((4,3),(4,4)),10).
move(4,((4,4),(4,5)),12).
move(4,((4,5),(4,4)),13).
move(4,((4,4),(4,3)),14).
move(4,((4,3),(5,3)),15).
move(4,((5,3),(6,3)),16).
move(4,((6,3),(6,4)),17).
move(4,((6,4),(7,4)),18).
move(4,((7,4),(8,4)),19).
move(4,((8,4),(9,4)),20).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(5,2)),8).
move(5,((5,2),(5,3)),9).
move(5,((5,3),(5,4)),10).
move(5,((5,4),(5,3)),12).
move(5,((5,3),(5,4)),13).
move(5,((5,4),(6,4)),14).
move(5,((6,4),(6,5)),15).
move(5,((6,5),(5,5)),16).
move(5,((5,5),(6,5)),17).
move(5,((6,5),(6,4)),19).
move(5,((6,4),(7,4)),20).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,2)),7).
move(6,((9,2),(10,2)),8).
move(6,((10,2),(11,2)),9).
move(6,((11,2),(11,1)),10).
move(6,((11,1),(10,1)),11).
move(6,((10,1),(10,2)),12).
move(6,((10,2),(10,3)),13).
move(6,((10,3),(10,4)),14).
move(6,((10,4),(9,4)),15).
move(6,((9,4),(9,3)),16).
move(6,((9,3),(9,2)),18).
move(6,((9,2),(8,2)),19).
move(6,((8,2),(8,3)),20).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(6,1)),7).
move(7,((6,1),(6,2)),8).
move(7,((6,2),(6,3)),9).
move(7,((6,3),(6,4)),10).
move(7,((6,4),(7,4)),11).
move(7,((7,4),(7,5)),12).
move(7,((7,5),(6,5)),13).
move(7,((6,5),(5,5)),14).
move(7,((5,5),(5,4)),15).
move(7,((5,4),(5,5)),17).
move(7,((5,5),(5,4)),18).
move(7,((5,4),(5,3)),19).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(7,4)),10).
move(8,((7,4),(7,3)),11).
move(8,((7,3),(6,3)),12).
move(8,((6,3),(6,4)),13).
move(8,((6,4),(6,3)),14).
move(8,((6,3),(6,2)),15).
move(8,((6,2),(5,2)),16).
move(8,((5,2),(4,2)),17).
move(8,((4,2),(3,2)),18).
move(8,((3,2),(3,3)),19).
move(8,((3,3),(2,3)),20).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(10,6)),3).
move(9,((10,6),(10,5)),4).
move(9,((10,5),(10,4)),6).
move(9,((10,4),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(9,((11,3),(10,3)),9).
move(9,((10,3),(9,3)),11).
move(9,((9,3),(8,3)),13).
move(9,((8,3),(7,3)),14).
move(9,((7,3),(7,2)),15).
move(9,((7,2),(6,2)),16).
move(9,((6,2),(5,2)),17).
move(9,((5,2),(4,2)),18).
move(9,((4,2),(4,3)),19).
move(9,((4,3),(4,4)),20).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,3)),5).
move(10,((8,3),(8,2)),6).
move(10,((8,2),(8,1)),7).
move(10,((8,1),(9,1)),8).
move(10,((9,1),(9,2)),9).
move(10,((9,2),(8,2)),10).
move(10,((8,2),(7,2)),11).
move(10,((7,2),(6,2)),12).
move(10,((6,2),(6,3)),13).
move(10,((6,3),(6,2)),14).
move(10,((6,2),(5,2)),15).
move(10,((5,2),(4,2)),16).
move(10,((4,2),(3,2)),17).
move(10,((3,2),(2,2)),18).
move(10,((2,2),(3,2)),19).
move(10,((3,2),(3,3)),20).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(10,2)),7).
move(11,((10,2),(10,1)),8).
move(11,((10,1),(10,2)),10).
move(11,((10,2),(9,2)),12).
move(11,((9,2),(9,3)),13).
move(11,((9,3),(8,3)),14).
move(11,((8,3),(7,3)),15).
move(11,((7,3),(7,2)),16).
move(11,((7,2),(6,2)),17).
move(11,((6,2),(6,3)),18).
move(11,((6,3),(7,3)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.722s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.719s

Choices      : 339      (Domain: 339)
Conflicts    : 29       (Analyzed: 29)
Restarts     : 0       
Model-Level  : 160.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 29       (Deleted: 0)
  Binary     : 2        (Ratio:   6.90%)
  Ternary    : 2        (Ratio:   6.90%)
  Conflict   : 29       (Average Length:   21.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 29       (Average:  6.17 Max:  29 Sum:    179)
  Executed   : 29       (Average:  6.17 Max:  29 Sum:    179 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176498   (Original: 164643)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69186   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

