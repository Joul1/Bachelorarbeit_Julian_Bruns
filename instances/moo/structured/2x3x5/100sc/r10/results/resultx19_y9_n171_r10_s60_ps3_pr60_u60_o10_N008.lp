%%%%%
%Standard
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(3,4)),6).
move(2,((3,4),(4,4)),7).
move(2,((4,4),(4,3)),8).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(4,((5,3),(5,4)),8).
move(4,((5,4),(5,3)),9).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(6,2)),8).
move(5,((6,2),(6,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),8).
move(6,((7,3),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(8,3)),8).
move(7,((8,3),(9,3)),9).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(8,7)),2).
move(8,((8,7),(8,6)),3).
move(8,((8,6),(8,5)),4).
move(8,((8,5),(8,4)),5).
move(8,((8,4),(8,3)),6).
move(8,((8,3),(9,3)),8).
move(8,((9,3),(10,3)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),6).
move(10,((11,4),(12,4)),8).
move(10,((12,4),(12,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.041s (Solving: 0.11s 1st Model: 0.11s Unsat: 0.00s)
CPU Time     : 4.031s

Choices      : 1157    
Conflicts    : 27       (Analyzed: 27)
Restarts     : 0       
Model-Level  : 459.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 27       (Deleted: 0)
  Binary     : 7        (Ratio:  25.93%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 27       (Average Length:   38.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 27       (Average: 25.85 Max: 109 Sum:    698)
  Executed   : 27       (Average: 25.85 Max: 109 Sum:    698 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 826268   (Original: 769656)
  Choice     : 400     
Atoms        : 338345  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(2,((3,3),(4,3)),8).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(3,3)),8).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(4,((5,3),(5,4)),8).
move(4,((5,4),(5,3)),9).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(6,2)),8).
move(5,((6,2),(6,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(7,4)),6).
move(6,((7,4),(7,3)),8).
move(6,((7,3),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(8,3)),8).
move(7,((8,3),(9,3)),9).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(8,7)),2).
move(8,((8,7),(8,6)),3).
move(8,((8,6),(8,5)),4).
move(8,((8,5),(8,4)),5).
move(8,((8,4),(8,3)),6).
move(8,((8,3),(9,3)),8).
move(8,((9,3),(10,3)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(11,5)),5).
move(10,((11,5),(12,5)),6).
move(10,((12,5),(12,4)),8).
move(10,((12,4),(12,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.175s (Solving: 0.08s 1st Model: 0.08s Unsat: 0.00s)
CPU Time     : 4.172s

Choices      : 1054    
Conflicts    : 29       (Analyzed: 29)
Restarts     : 0       
Model-Level  : 473.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 29       (Deleted: 0)
  Binary     : 7        (Ratio:  24.14%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 29       (Average Length:   36.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 29       (Average: 20.03 Max: 109 Sum:    581)
  Executed   : 29       (Average: 20.03 Max: 109 Sum:    581 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 826367   (Original: 769755)
  Choice     : 400     
Atoms        : 338444  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(2,8)),2).
move(1,((2,8),(2,7)),3).
move(1,((2,7),(2,6)),4).
move(1,((2,6),(2,5)),5).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(4,8)),3).
move(2,((4,8),(4,7)),4).
move(2,((4,7),(4,6)),5).
move(2,((4,6),(4,5)),6).
move(2,((4,5),(4,4)),7).
move(2,((4,4),(4,3)),8).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(5,9)),1).
move(4,((5,9),(5,8)),2).
move(4,((5,8),(5,7)),3).
move(4,((5,7),(5,6)),4).
move(4,((5,6),(5,5)),5).
move(4,((5,5),(5,4)),6).
move(4,((5,4),(5,3)),7).
move(5,((5,9),(6,9)),1).
move(5,((6,9),(6,8)),2).
move(5,((6,8),(6,7)),3).
move(5,((6,7),(6,6)),4).
move(5,((6,6),(6,5)),5).
move(5,((6,5),(6,4)),6).
move(5,((6,4),(6,3)),7).
move(6,((6,9),(7,9)),1).
move(6,((7,9),(8,9)),2).
move(6,((8,9),(8,8)),3).
move(6,((8,8),(8,7)),4).
move(6,((8,7),(8,6)),5).
move(6,((8,6),(8,5)),6).
move(6,((8,5),(8,4)),7).
move(6,((8,4),(8,3)),8).
move(7,((7,9),(8,9)),1).
move(7,((8,9),(9,9)),2).
move(7,((9,9),(9,8)),3).
move(7,((9,8),(9,7)),4).
move(7,((9,7),(9,6)),5).
move(7,((9,6),(9,5)),6).
move(7,((9,5),(9,4)),7).
move(7,((9,4),(9,3)),8).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(9,8)),2).
move(8,((9,8),(9,7)),3).
move(8,((9,7),(9,6)),4).
move(8,((9,6),(9,5)),5).
move(8,((9,5),(9,4)),6).
move(8,((9,4),(9,3)),7).
move(8,((9,3),(10,3)),8).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(10,4)),6).
move(9,((10,4),(11,4)),7).
move(9,((11,4),(11,3)),8).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(10,3)),6).
move(10,((10,3),(11,3)),7).
move(10,((11,3),(12,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.321s (Solving: 0.08s 1st Model: 0.07s Unsat: 0.00s)
CPU Time     : 4.297s

Choices      : 415      (Domain: 415)
Conflicts    : 4        (Analyzed: 4)
Restarts     : 0       
Model-Level  : 372.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 4        (Deleted: 0)
  Binary     : 4        (Ratio: 100.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 4        (Average Length:    2.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 4        (Average: 10.75 Max:  13 Sum:     43)
  Executed   : 4        (Average: 10.75 Max:  13 Sum:     43 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878872   (Original: 822370)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338454  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(2,8)),2).
move(1,((2,8),(2,7)),3).
move(1,((2,7),(2,6)),4).
move(1,((2,6),(2,5)),5).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),9).
move(1,((2,2),(2,3)),11).
move(2,((2,9),(3,9)),3).
move(2,((3,9),(3,8)),4).
move(2,((3,8),(2,8)),5).
move(2,((2,8),(2,7)),6).
move(2,((2,7),(2,6)),7).
move(2,((2,6),(2,5)),8).
move(2,((2,5),(2,4)),9).
move(2,((2,4),(2,3)),10).
move(2,((2,3),(3,3)),11).
move(2,((3,3),(4,3)),12).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,4)),7).
move(3,((3,4),(2,4)),8).
move(3,((2,4),(2,3)),9).
move(3,((2,3),(3,3)),10).
move(3,((3,3),(3,4)),11).
move(3,((3,4),(3,3)),12).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(5,5)),5).
move(4,((5,5),(5,4)),6).
move(4,((5,4),(5,3)),7).
move(4,((5,3),(4,3)),8).
move(4,((4,3),(3,3)),9).
move(4,((3,3),(4,3)),10).
move(4,((4,3),(5,3)),11).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),6).
move(5,((5,5),(5,4)),7).
move(5,((5,4),(5,3)),8).
move(5,((5,3),(6,3)),9).
move(6,((6,9),(7,9)),1).
move(6,((7,9),(8,9)),2).
move(6,((8,9),(9,9)),3).
move(6,((9,9),(10,9)),4).
move(6,((10,9),(11,9)),5).
move(6,((11,9),(11,8)),6).
move(6,((11,8),(12,8)),8).
move(6,((12,8),(13,8)),9).
move(6,((13,8),(14,8)),10).
move(6,((14,8),(15,8)),11).
move(6,((15,8),(14,8)),12).
move(6,((14,8),(13,8)),13).
move(6,((13,8),(12,8)),14).
move(6,((12,8),(11,8)),15).
move(6,((11,8),(10,8)),16).
move(6,((10,8),(9,8)),17).
move(6,((9,8),(9,7)),18).
move(6,((9,7),(9,6)),19).
move(6,((9,6),(9,5)),20).
move(6,((9,5),(9,4)),21).
move(6,((9,4),(9,3)),27).
move(6,((9,3),(9,4)),28).
move(6,((9,4),(8,4)),29).
move(6,((8,4),(8,3)),35).
move(6,((8,3),(9,3)),36).
move(6,((9,3),(8,3)),40).
move(7,((7,9),(8,9)),1).
move(7,((8,9),(8,8)),2).
move(7,((8,8),(8,7)),5).
move(7,((8,7),(8,6)),6).
move(7,((8,6),(8,5)),7).
move(7,((8,5),(8,4)),8).
move(7,((8,4),(9,4)),10).
move(7,((9,4),(9,3)),11).
move(7,((9,3),(9,2)),12).
move(7,((9,2),(9,3)),40).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(9,8)),2).
move(8,((9,8),(9,7)),3).
move(8,((9,7),(9,6)),4).
move(8,((9,6),(9,5)),5).
move(8,((9,5),(10,5)),7).
move(8,((10,5),(10,4)),8).
move(8,((10,4),(10,5)),9).
move(8,((10,5),(10,4)),10).
move(8,((10,4),(10,3)),11).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(10,3)),7).
move(9,((10,3),(11,3)),9).
move(9,((11,3),(11,4)),10).
move(9,((11,4),(12,4)),11).
move(9,((12,4),(12,3)),13).
move(9,((12,3),(11,3)),14).
move(10,((10,9),(9,9)),2).
move(10,((9,9),(9,8)),3).
move(10,((9,8),(9,7)),6).
move(10,((9,7),(9,6)),7).
move(10,((9,6),(9,5)),8).
move(10,((9,5),(9,4)),9).
move(10,((9,4),(9,5)),10).
move(10,((9,5),(10,5)),11).
move(10,((10,5),(11,5)),12).
move(10,((11,5),(12,5)),13).
move(10,((12,5),(13,5)),14).
move(10,((13,5),(13,4)),15).
move(10,((13,4),(12,4)),16).
move(10,((12,4),(13,4)),20).
move(10,((13,4),(13,3)),21).
move(10,((13,3),(13,4)),34).
move(10,((13,4),(12,4)),35).
move(10,((12,4),(12,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 5.196s (Solving: 0.69s 1st Model: 0.69s Unsat: 0.00s)
CPU Time     : 5.078s

Choices      : 5148     (Domain: 1101)
Conflicts    : 149      (Analyzed: 149)
Restarts     : 1        (Average: 149.00 Last: 88)
Model-Level  : 396.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 149      (Deleted: 0)
  Binary     : 46       (Ratio:  30.87%)
  Ternary    : 6        (Ratio:   4.03%)
  Conflict   : 149      (Average Length:   28.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 149      (Average: 30.09 Max: 331 Sum:   4483)
  Executed   : 149      (Average: 30.09 Max: 331 Sum:   4483 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878872   (Original: 822370)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338454  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(2,8)),2).
move(1,((2,8),(2,7)),3).
move(1,((2,7),(2,6)),4).
move(1,((2,6),(2,5)),5).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(4,8)),3).
move(2,((4,8),(4,7)),4).
move(2,((4,7),(4,6)),5).
move(2,((4,6),(4,5)),6).
move(2,((4,5),(4,4)),7).
move(2,((4,4),(4,3)),8).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(5,9)),1).
move(4,((5,9),(5,8)),2).
move(4,((5,8),(5,7)),3).
move(4,((5,7),(5,6)),4).
move(4,((5,6),(5,5)),5).
move(4,((5,5),(5,4)),6).
move(4,((5,4),(5,3)),7).
move(5,((5,9),(6,9)),1).
move(5,((6,9),(6,8)),2).
move(5,((6,8),(6,7)),3).
move(5,((6,7),(6,6)),4).
move(5,((6,6),(6,5)),5).
move(5,((6,5),(6,4)),6).
move(5,((6,4),(6,3)),7).
move(6,((6,9),(7,9)),1).
move(6,((7,9),(8,9)),2).
move(6,((8,9),(8,8)),3).
move(6,((8,8),(8,7)),4).
move(6,((8,7),(8,6)),5).
move(6,((8,6),(8,5)),6).
move(6,((8,5),(8,4)),7).
move(6,((8,4),(8,3)),8).
move(7,((7,9),(8,9)),1).
move(7,((8,9),(9,9)),2).
move(7,((9,9),(9,8)),3).
move(7,((9,8),(9,7)),4).
move(7,((9,7),(9,6)),5).
move(7,((9,6),(9,5)),6).
move(7,((9,5),(9,4)),7).
move(7,((9,4),(9,3)),8).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(10,8)),3).
move(8,((10,8),(10,7)),4).
move(8,((10,7),(10,6)),5).
move(8,((10,6),(10,5)),6).
move(8,((10,5),(10,4)),7).
move(8,((10,4),(10,3)),8).
move(9,((9,9),(10,9)),1).
move(9,((10,9),(11,9)),2).
move(9,((11,9),(11,8)),3).
move(9,((11,8),(11,7)),4).
move(9,((11,7),(11,6)),5).
move(9,((11,6),(11,5)),6).
move(9,((11,5),(11,4)),7).
move(9,((11,4),(11,3)),8).
move(10,((10,9),(11,9)),1).
move(10,((11,9),(12,9)),2).
move(10,((12,9),(12,8)),3).
move(10,((12,8),(12,7)),4).
move(10,((12,7),(12,6)),5).
move(10,((12,6),(12,5)),6).
move(10,((12,5),(12,4)),7).
move(10,((12,4),(12,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.377s (Solving: 0.07s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 4.359s

Choices      : 388      (Domain: 63)
Conflicts    : 0        (Analyzed: 0)
Restarts     : 0       
Model-Level  : 388.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 0        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 0        (Average:  0.00 Max:   0 Sum:      0)
  Executed   : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio: 100.00%)

Rules        : 828036   (Original: 771444)
  Choice     : 400     
  Heuristic  : 1584     (Original: 1604)
Atoms        : 338529  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(3,4)),6).
move(2,((3,4),(4,4)),7).
move(2,((4,4),(4,3)),10).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(3,3)),9).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(3,3)),8).
move(4,((3,3),(4,3)),9).
move(4,((4,3),(5,3)),10).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(5,((6,3),(6,4)),8).
move(5,((6,4),(6,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(7,4)),6).
move(6,((7,4),(8,4)),8).
move(6,((8,4),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(7,((8,3),(9,3)),8).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(8,7)),2).
move(8,((8,7),(8,6)),3).
move(8,((8,6),(8,5)),4).
move(8,((8,5),(8,4)),5).
move(8,((8,4),(8,3)),6).
move(8,((8,3),(9,3)),7).
move(8,((9,3),(10,3)),8).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),7).
move(10,((11,4),(12,4)),8).
move(10,((12,4),(12,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.873s (Solving: 0.08s 1st Model: 0.08s Unsat: 0.00s)
CPU Time     : 4.766s

Choices      : 1219     (Domain: 156)
Conflicts    : 27       (Analyzed: 27)
Restarts     : 0       
Model-Level  : 620.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 27       (Deleted: 0)
  Binary     : 4        (Ratio:  14.81%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 27       (Average Length:   38.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 27       (Average: 22.19 Max: 110 Sum:    599)
  Executed   : 27       (Average: 22.19 Max: 110 Sum:    599 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 826527   (Original: 769915)
  Choice     : 400     
  Heuristic  : 160     
Atoms        : 338444  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(2,((3,3),(4,3)),8).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(3,3)),8).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(4,((5,3),(5,4)),8).
move(4,((5,4),(5,3)),9).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(6,2)),8).
move(5,((6,2),(6,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(7,4)),6).
move(6,((7,4),(7,3)),8).
move(6,((7,3),(8,3)),9).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(8,3)),8).
move(7,((8,3),(9,3)),9).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(8,7)),2).
move(8,((8,7),(8,6)),3).
move(8,((8,6),(8,5)),4).
move(8,((8,5),(8,4)),5).
move(8,((8,4),(8,3)),6).
move(8,((8,3),(9,3)),8).
move(8,((9,3),(10,3)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(11,5)),5).
move(10,((11,5),(12,5)),6).
move(10,((12,5),(12,4)),8).
move(10,((12,4),(12,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.374s (Solving: 0.09s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 4.344s

Choices      : 1062     (Domain: 580)
Conflicts    : 29       (Analyzed: 29)
Restarts     : 0       
Model-Level  : 475.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 29       (Deleted: 0)
  Binary     : 7        (Ratio:  24.14%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 29       (Average Length:   36.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 29       (Average: 20.24 Max: 113 Sum:    587)
  Executed   : 29       (Average: 20.24 Max: 113 Sum:    587 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878884   (Original: 822372)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338465  
Disjunctions : 0        (Original: 1)
Bodies       : 566810   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305314   (Atom=Atom: 428 Body=Body: 439 Other: 304447)
Tight        : Yes
Variables    : 567731   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531526  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,9),(2,9)),2).
move(1,((2,9),(2,8)),4).
move(1,((2,8),(2,7)),6).
move(1,((2,7),(2,6)),7).
move(1,((2,6),(2,5)),8).
move(1,((2,5),(2,4)),9).
move(1,((2,4),(2,3)),10).
move(1,((2,3),(1,3)),11).
move(1,((1,3),(2,3)),12).
move(1,((2,3),(2,4)),15).
move(1,((2,4),(2,5)),17).
move(1,((2,5),(2,4)),18).
move(1,((2,4),(2,3)),19).
move(1,((2,3),(2,4)),20).
move(1,((2,4),(2,3)),21).
move(1,((2,3),(2,4)),22).
move(1,((2,4),(2,3)),23).
move(1,((2,3),(2,4)),25).
move(1,((2,4),(2,5)),27).
move(1,((2,5),(2,4)),28).
move(1,((2,4),(2,3)),29).
move(1,((2,3),(2,4)),30).
move(1,((2,4),(2,3)),31).
move(1,((2,3),(2,4)),32).
move(1,((2,4),(2,3)),33).
move(1,((2,3),(2,4)),34).
move(1,((2,4),(2,3)),35).
move(1,((2,3),(2,4)),36).
move(1,((2,4),(2,3)),38).
move(1,((2,3),(2,4)),39).
move(1,((2,4),(2,3)),40).
move(2,((2,9),(2,8)),2).
move(2,((2,8),(2,7)),3).
move(2,((2,7),(3,7)),4).
move(2,((3,7),(2,7)),5).
move(2,((2,7),(2,6)),6).
move(2,((2,6),(2,5)),7).
move(2,((2,5),(2,4)),8).
move(2,((2,4),(2,3)),9).
move(2,((2,3),(3,3)),10).
move(2,((3,3),(2,3)),11).
move(2,((2,3),(2,4)),12).
move(2,((2,4),(2,5)),13).
move(2,((2,5),(2,6)),14).
move(2,((2,6),(2,5)),15).
move(2,((2,5),(2,6)),16).
move(2,((2,6),(2,7)),17).
move(2,((2,7),(2,8)),23).
move(2,((2,8),(2,7)),24).
move(2,((2,7),(2,6)),26).
move(2,((2,6),(2,7)),28).
move(2,((2,7),(2,6)),30).
move(2,((2,6),(2,5)),31).
move(2,((2,5),(2,6)),32).
move(2,((2,6),(3,6)),33).
move(2,((3,6),(4,6)),35).
move(2,((4,6),(4,5)),36).
move(2,((4,5),(4,4)),37).
move(2,((4,4),(4,3)),40).
move(3,((3,9),(3,8)),3).
move(3,((3,8),(3,7)),5).
move(3,((3,7),(3,6)),6).
move(3,((3,6),(3,5)),7).
move(3,((3,5),(3,4)),8).
move(3,((3,4),(3,3)),9).
move(3,((3,3),(3,4)),10).
move(3,((3,4),(3,5)),11).
move(3,((3,5),(3,6)),12).
move(3,((3,6),(3,5)),13).
move(3,((3,5),(3,4)),15).
move(3,((3,4),(3,3)),16).
move(3,((3,3),(3,4)),17).
move(3,((3,4),(3,3)),18).
move(3,((3,3),(3,4)),19).
move(3,((3,4),(3,3)),20).
move(3,((3,3),(3,4)),21).
move(3,((3,4),(3,3)),23).
move(3,((3,3),(3,4)),24).
move(3,((3,4),(3,3)),26).
move(3,((3,3),(3,4)),27).
move(3,((3,4),(3,3)),28).
move(3,((3,3),(3,4)),29).
move(3,((3,4),(3,3)),30).
move(3,((3,3),(3,4)),32).
move(3,((3,4),(3,3)),34).
move(3,((3,3),(3,4)),35).
move(3,((3,4),(3,3)),38).
move(3,((3,3),(3,4)),39).
move(3,((3,4),(3,3)),40).
move(4,((4,9),(4,8)),3).
move(4,((4,8),(4,7)),4).
move(4,((4,7),(5,7)),5).
move(4,((5,7),(5,8)),6).
move(4,((5,8),(4,8)),8).
move(4,((4,8),(4,7)),9).
move(4,((4,7),(4,6)),10).
move(4,((4,6),(4,5)),11).
move(4,((4,5),(4,4)),12).
move(4,((4,4),(5,4)),13).
move(4,((5,4),(5,3)),14).
move(4,((5,3),(5,4)),16).
move(4,((5,4),(5,5)),17).
move(4,((5,5),(5,6)),18).
move(4,((5,6),(5,7)),19).
move(4,((5,7),(4,7)),20).
move(4,((4,7),(4,6)),21).
move(4,((4,6),(4,5)),22).
move(4,((4,5),(4,4)),23).
move(4,((4,4),(4,3)),24).
move(4,((4,3),(5,3)),25).
move(4,((5,3),(5,4)),26).
move(4,((5,4),(5,5)),27).
move(4,((5,5),(4,5)),28).
move(4,((4,5),(4,6)),29).
move(4,((4,6),(4,5)),30).
move(4,((4,5),(4,6)),31).
move(4,((4,6),(4,7)),33).
move(4,((4,7),(4,6)),34).
move(4,((4,6),(4,5)),35).
move(4,((4,5),(4,4)),36).
move(4,((4,4),(5,4)),37).
move(4,((5,4),(5,5)),38).
move(4,((5,5),(5,4)),39).
move(4,((5,4),(5,3)),40).
move(5,((5,9),(5,8)),3).
move(5,((5,8),(5,7)),4).
move(5,((5,7),(5,6)),5).
move(5,((5,6),(5,5)),6).
move(5,((5,5),(5,4)),7).
move(5,((5,4),(5,3)),8).
move(5,((5,3),(6,3)),10).
move(5,((6,3),(5,3)),12).
move(5,((5,3),(6,3)),13).
move(5,((6,3),(6,4)),14).
move(5,((6,4),(6,3)),17).
move(5,((6,3),(5,3)),18).
move(5,((5,3),(6,3)),19).
move(5,((6,3),(6,4)),21).
move(5,((6,4),(6,5)),22).
move(5,((6,5),(6,6)),23).
move(5,((6,6),(6,7)),24).
move(5,((6,7),(6,8)),25).
move(5,((6,8),(5,8)),26).
move(5,((5,8),(6,8)),27).
move(5,((6,8),(5,8)),28).
move(5,((5,8),(5,7)),29).
move(5,((5,7),(5,6)),30).
move(5,((5,6),(5,5)),31).
move(5,((5,5),(5,6)),32).
move(5,((5,6),(6,6)),33).
move(5,((6,6),(5,6)),34).
move(5,((5,6),(6,6)),35).
move(5,((6,6),(6,5)),36).
move(5,((6,5),(6,6)),37).
move(5,((6,6),(6,5)),38).
move(5,((6,5),(6,4)),39).
move(5,((6,4),(6,3)),40).
move(6,((6,9),(6,8)),3).
move(6,((6,8),(6,7)),4).
move(6,((6,7),(6,6)),5).
move(6,((6,6),(6,5)),6).
move(6,((6,5),(6,4)),7).
move(6,((6,4),(6,3)),8).
move(6,((6,3),(6,4)),9).
move(6,((6,4),(6,5)),10).
move(6,((6,5),(6,6)),11).
move(6,((6,6),(6,7)),12).
move(6,((6,7),(6,6)),20).
move(6,((6,6),(6,7)),21).
move(6,((6,7),(7,7)),24).
move(6,((7,7),(6,7)),25).
move(6,((6,7),(7,7)),26).
move(6,((7,7),(6,7)),27).
move(6,((6,7),(7,7)),31).
move(6,((7,7),(6,7)),33).
move(6,((6,7),(7,7)),35).
move(6,((7,7),(7,6)),36).
move(6,((7,6),(7,5)),37).
move(6,((7,5),(7,4)),38).
move(6,((7,4),(8,4)),39).
move(6,((8,4),(8,3)),40).
move(7,((7,9),(7,8)),3).
move(7,((7,8),(8,8)),4).
move(7,((8,8),(8,7)),5).
move(7,((8,7),(8,6)),6).
move(7,((8,6),(8,5)),7).
move(7,((8,5),(8,4)),8).
move(7,((8,4),(9,4)),9).
move(7,((9,4),(9,3)),10).
move(7,((9,3),(8,3)),11).
move(7,((8,3),(7,3)),12).
move(7,((7,3),(7,4)),13).
move(7,((7,4),(7,5)),14).
move(7,((7,5),(7,6)),15).
move(7,((7,6),(7,7)),16).
move(7,((7,7),(7,8)),19).
move(7,((7,8),(7,7)),20).
move(7,((7,7),(7,6)),24).
move(7,((7,6),(7,5)),25).
move(7,((7,5),(7,6)),26).
move(7,((7,6),(7,7)),27).
move(7,((7,7),(7,6)),31).
move(7,((7,6),(7,5)),34).
move(7,((7,5),(7,4)),35).
move(7,((7,4),(7,3)),36).
move(7,((7,3),(8,3)),37).
move(7,((8,3),(9,3)),38).
move(7,((9,3),(9,4)),39).
move(7,((9,4),(9,3)),40).
move(8,((8,9),(9,9)),2).
move(8,((9,9),(9,8)),3).
move(8,((9,8),(9,7)),4).
move(8,((9,7),(9,8)),5).
move(8,((9,8),(9,7)),6).
move(8,((9,7),(9,6)),7).
move(8,((9,6),(9,5)),8).
move(8,((9,5),(10,5)),9).
move(8,((10,5),(10,4)),10).
move(8,((10,4),(10,3)),11).
move(8,((10,3),(9,3)),12).
move(8,((9,3),(8,3)),13).
move(8,((8,3),(8,4)),14).
move(8,((8,4),(8,5)),15).
move(8,((8,5),(8,6)),16).
move(8,((8,6),(8,7)),17).
move(8,((8,7),(9,7)),18).
move(8,((9,7),(8,7)),19).
move(8,((8,7),(8,6)),27).
move(8,((8,6),(8,7)),28).
move(8,((8,7),(9,7)),30).
move(8,((9,7),(10,7)),31).
move(8,((10,7),(10,6)),33).
move(8,((10,6),(10,5)),34).
move(8,((10,5),(10,4)),35).
move(8,((10,4),(10,3)),36).
move(8,((10,3),(9,3)),37).
move(8,((9,3),(10,3)),38).
move(8,((10,3),(10,4)),39).
move(8,((10,4),(10,3)),40).
move(9,((9,9),(10,9)),2).
move(9,((10,9),(9,9)),3).
move(9,((9,9),(10,9)),5).
move(9,((10,9),(10,8)),6).
move(9,((10,8),(10,7)),7).
move(9,((10,7),(10,6)),8).
move(9,((10,6),(10,7)),11).
move(9,((10,7),(9,7)),13).
move(9,((9,7),(9,8)),15).
move(9,((9,8),(9,7)),19).
move(9,((9,7),(9,6)),21).
move(9,((9,6),(9,7)),22).
move(9,((9,7),(9,8)),24).
move(9,((9,8),(9,7)),26).
move(9,((9,7),(9,6)),30).
move(9,((9,6),(9,7)),31).
move(9,((9,7),(9,6)),32).
move(9,((9,6),(10,6)),34).
move(9,((10,6),(11,6)),35).
move(9,((11,6),(11,5)),36).
move(9,((11,5),(11,4)),38).
move(9,((11,4),(11,3)),40).
move(10,((10,9),(10,8)),2).
move(10,((10,8),(10,9)),3).
move(10,((10,9),(10,8)),4).
move(10,((10,8),(11,8)),5).
move(10,((11,8),(11,9)),6).
move(10,((11,9),(11,8)),7).
move(10,((11,8),(11,7)),8).
move(10,((11,7),(11,6)),9).
move(10,((11,6),(11,5)),10).
move(10,((11,5),(11,4)),11).
move(10,((11,4),(11,3)),12).
move(10,((11,3),(12,3)),13).
move(10,((12,3),(11,3)),14).
move(10,((11,3),(10,3)),15).
move(10,((10,3),(10,4)),16).
move(10,((10,4),(10,5)),17).
move(10,((10,5),(10,6)),18).
move(10,((10,6),(10,7)),19).
move(10,((10,7),(11,7)),20).
move(10,((11,7),(10,7)),21).
move(10,((10,7),(11,7)),26).
move(10,((11,7),(10,7)),27).
move(10,((10,7),(10,6)),30).
move(10,((10,6),(10,5)),33).
move(10,((10,5),(10,4)),34).
move(10,((10,4),(11,4)),35).
move(10,((11,4),(12,4)),38).
move(10,((12,4),(12,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.735s (Solving: 0.29s 1st Model: 0.29s Unsat: 0.00s)
CPU Time     : 4.672s

Choices      : 2184     (Domain: 2184)
Conflicts    : 94       (Analyzed: 94)
Restarts     : 0       
Model-Level  : 348.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 94       (Deleted: 0)
  Binary     : 43       (Ratio:  45.74%)
  Ternary    : 10       (Ratio:  10.64%)
  Conflict   : 94       (Average Length:    5.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 94       (Average: 19.53 Max: 191 Sum:   1836)
  Executed   : 94       (Average: 19.53 Max: 191 Sum:   1836 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878862   (Original: 822360)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338444  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,9),(2,9)),2).
move(1,((2,9),(2,8)),4).
move(1,((2,8),(2,7)),6).
move(1,((2,7),(2,6)),7).
move(1,((2,6),(2,5)),8).
move(1,((2,5),(2,4)),9).
move(1,((2,4),(2,3)),10).
move(1,((2,3),(2,2)),11).
move(1,((2,2),(1,2)),12).
move(1,((1,2),(1,1)),13).
move(1,((1,1),(1,2)),14).
move(1,((1,2),(2,2)),15).
move(1,((2,2),(3,2)),17).
move(1,((3,2),(4,2)),18).
move(1,((4,2),(5,2)),19).
move(1,((5,2),(6,2)),20).
move(1,((6,2),(7,2)),21).
move(1,((7,2),(7,3)),22).
move(1,((7,3),(7,4)),23).
move(1,((7,4),(6,4)),24).
move(1,((6,4),(5,4)),25).
move(1,((5,4),(4,4)),26).
move(1,((4,4),(3,4)),27).
move(1,((3,4),(2,4)),28).
move(1,((2,4),(2,5)),29).
move(1,((2,5),(2,6)),30).
move(1,((2,6),(3,6)),31).
move(1,((3,6),(3,5)),32).
move(1,((3,5),(4,5)),34).
move(1,((4,5),(4,4)),35).
move(1,((4,4),(4,3)),37).
move(1,((4,3),(3,3)),38).
move(1,((3,3),(2,3)),39).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(4,8)),3).
move(2,((4,8),(4,7)),4).
move(2,((4,7),(4,6)),5).
move(2,((4,6),(4,7)),6).
move(2,((4,7),(4,8)),7).
move(2,((4,8),(4,7)),8).
move(2,((4,7),(4,8)),9).
move(2,((4,8),(3,8)),10).
move(2,((3,8),(2,8)),12).
move(2,((2,8),(3,8)),13).
move(2,((3,8),(2,8)),14).
move(2,((2,8),(3,8)),15).
move(2,((3,8),(2,8)),16).
move(2,((2,8),(2,7)),17).
move(2,((2,7),(2,8)),18).
move(2,((2,8),(3,8)),19).
move(2,((3,8),(4,8)),20).
move(2,((4,8),(5,8)),21).
move(2,((5,8),(5,7)),22).
move(2,((5,7),(5,8)),23).
move(2,((5,8),(4,8)),24).
move(2,((4,8),(3,8)),25).
move(2,((3,8),(3,7)),26).
move(2,((3,7),(3,8)),27).
move(2,((3,8),(2,8)),28).
move(2,((2,8),(3,8)),29).
move(2,((3,8),(3,7)),30).
move(2,((3,7),(4,7)),31).
move(2,((4,7),(4,6)),32).
move(2,((4,6),(4,5)),33).
move(2,((4,5),(4,4)),34).
move(2,((4,4),(4,3)),35).
move(2,((4,3),(5,3)),37).
move(2,((5,3),(4,3)),38).
move(2,((4,3),(4,4)),39).
move(2,((4,4),(4,3)),40).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(2,8)),2).
move(3,((2,8),(2,7)),3).
move(3,((2,7),(2,6)),4).
move(3,((2,6),(3,6)),5).
move(3,((3,6),(3,5)),6).
move(3,((3,5),(3,4)),8).
move(3,((3,4),(3,3)),9).
move(3,((3,3),(3,2)),10).
move(3,((3,2),(3,1)),11).
move(3,((3,1),(2,1)),12).
move(3,((2,1),(2,2)),13).
move(3,((2,2),(2,3)),14).
move(3,((2,3),(3,3)),15).
move(3,((3,3),(4,3)),16).
move(3,((4,3),(4,4)),17).
move(3,((4,4),(4,5)),18).
move(3,((4,5),(4,6)),19).
move(3,((4,6),(4,7)),20).
move(3,((4,7),(4,8)),21).
move(3,((4,8),(3,8)),22).
move(3,((3,8),(4,8)),23).
move(3,((4,8),(3,8)),24).
move(3,((3,8),(3,7)),25).
move(3,((3,7),(2,7)),26).
move(3,((2,7),(2,6)),27).
move(3,((2,6),(3,6)),29).
move(3,((3,6),(3,5)),30).
move(3,((3,5),(3,4)),31).
move(3,((3,4),(3,3)),32).
move(3,((3,3),(3,2)),34).
move(3,((3,2),(3,3)),35).
move(3,((3,3),(3,2)),36).
move(3,((3,2),(3,3)),37).
move(3,((3,3),(3,2)),38).
move(3,((3,2),(3,3)),40).
move(4,((4,9),(4,8)),2).
move(4,((4,8),(3,8)),3).
move(4,((3,8),(4,8)),5).
move(4,((4,8),(5,8)),6).
move(4,((5,8),(5,7)),7).
move(4,((5,7),(5,8)),9).
move(4,((5,8),(4,8)),10).
move(4,((4,8),(5,8)),11).
move(4,((5,8),(4,8)),12).
move(4,((4,8),(5,8)),13).
move(4,((5,8),(4,8)),14).
move(4,((4,8),(5,8)),15).
move(4,((5,8),(4,8)),16).
move(4,((4,8),(3,8)),17).
move(4,((3,8),(3,7)),18).
move(4,((3,7),(3,6)),19).
move(4,((3,6),(4,6)),20).
move(4,((4,6),(3,6)),21).
move(4,((3,6),(3,7)),22).
move(4,((3,7),(3,8)),23).
move(4,((3,8),(2,8)),24).
move(4,((2,8),(2,7)),25).
move(4,((2,7),(2,8)),26).
move(4,((2,8),(2,7)),27).
move(4,((2,7),(3,7)),28).
move(4,((3,7),(4,7)),29).
move(4,((4,7),(5,7)),30).
move(4,((5,7),(5,6)),31).
move(4,((5,6),(5,5)),32).
move(4,((5,5),(5,4)),33).
move(4,((5,4),(5,3)),34).
move(4,((5,3),(5,2)),35).
move(4,((5,2),(4,2)),36).
move(4,((4,2),(3,2)),37).
move(4,((3,2),(4,2)),38).
move(4,((4,2),(5,2)),39).
move(4,((5,2),(5,3)),40).
move(5,((5,9),(5,8)),3).
move(5,((5,8),(5,7)),4).
move(5,((5,7),(5,6)),5).
move(5,((5,6),(5,5)),6).
move(5,((5,5),(5,4)),7).
move(5,((5,4),(5,3)),8).
move(5,((5,3),(5,2)),9).
move(5,((5,2),(6,2)),10).
move(5,((6,2),(7,2)),11).
move(5,((7,2),(7,3)),12).
move(5,((7,3),(7,4)),14).
move(5,((7,4),(7,5)),15).
move(5,((7,5),(7,6)),16).
move(5,((7,6),(7,7)),17).
move(5,((7,7),(7,8)),18).
move(5,((7,8),(8,8)),19).
move(5,((8,8),(7,8)),20).
move(5,((7,8),(6,8)),21).
move(5,((6,8),(7,8)),22).
move(5,((7,8),(6,8)),23).
move(5,((6,8),(5,8)),24).
move(5,((5,8),(5,7)),25).
move(5,((5,7),(5,6)),26).
move(5,((5,6),(5,7)),27).
move(5,((5,7),(5,6)),28).
move(5,((5,6),(5,7)),29).
move(5,((5,7),(5,6)),30).
move(5,((5,6),(6,6)),31).
move(5,((6,6),(6,5)),32).
move(5,((6,5),(6,4)),33).
move(5,((6,4),(6,3)),34).
move(5,((6,3),(6,2)),35).
move(5,((6,2),(7,2)),36).
move(5,((7,2),(6,2)),39).
move(5,((6,2),(6,3)),40).
move(6,((6,9),(7,9)),1).
move(6,((7,9),(7,8)),2).
move(6,((7,8),(7,7)),3).
move(6,((7,7),(8,7)),4).
move(6,((8,7),(9,7)),5).
move(6,((9,7),(9,6)),6).
move(6,((9,6),(9,5)),7).
move(6,((9,5),(9,4)),8).
move(6,((9,4),(9,3)),9).
move(6,((9,3),(8,3)),10).
move(6,((8,3),(7,3)),11).
move(6,((7,3),(7,4)),12).
move(6,((7,4),(7,5)),13).
move(6,((7,5),(8,5)),14).
move(6,((8,5),(8,6)),16).
move(6,((8,6),(8,7)),17).
move(6,((8,7),(8,8)),18).
move(6,((8,8),(8,7)),19).
move(6,((8,7),(7,7)),20).
move(6,((7,7),(7,8)),21).
move(6,((7,8),(8,8)),22).
move(6,((8,8),(7,8)),23).
move(6,((7,8),(6,8)),24).
move(6,((6,8),(7,8)),25).
move(6,((7,8),(8,8)),26).
move(6,((8,8),(7,8)),27).
move(6,((7,8),(7,7)),28).
move(6,((7,7),(8,7)),29).
move(6,((8,7),(7,7)),30).
move(6,((7,7),(6,7)),31).
move(6,((6,7),(6,6)),32).
move(6,((6,6),(7,6)),33).
move(6,((7,6),(7,5)),34).
move(6,((7,5),(7,4)),35).
move(6,((7,4),(7,3)),36).
move(6,((7,3),(7,4)),37).
move(6,((7,4),(7,3)),38).
move(6,((7,3),(8,3)),40).
move(7,((7,9),(8,9)),1).
move(7,((8,9),(9,9)),3).
move(7,((9,9),(10,9)),4).
move(7,((10,9),(11,9)),5).
move(7,((11,9),(12,9)),6).
move(7,((12,9),(12,8)),7).
move(7,((12,8),(13,8)),8).
move(7,((13,8),(14,8)),9).
move(7,((14,8),(14,7)),10).
move(7,((14,7),(14,6)),12).
move(7,((14,6),(15,6)),13).
move(7,((15,6),(15,5)),14).
move(7,((15,5),(15,4)),15).
move(7,((15,4),(15,3)),16).
move(7,((15,3),(15,2)),17).
move(7,((15,2),(16,2)),18).
move(7,((16,2),(17,2)),19).
move(7,((17,2),(18,2)),20).
move(7,((18,2),(19,2)),21).
move(7,((19,2),(18,2)),22).
move(7,((18,2),(17,2)),23).
move(7,((17,2),(16,2)),24).
move(7,((16,2),(15,2)),25).
move(7,((15,2),(14,2)),26).
move(7,((14,2),(13,2)),27).
move(7,((13,2),(12,2)),28).
move(7,((12,2),(11,2)),29).
move(7,((11,2),(10,2)),30).
move(7,((10,2),(10,3)),31).
move(7,((10,3),(10,2)),32).
move(7,((10,2),(11,2)),33).
move(7,((11,2),(12,2)),34).
move(7,((12,2),(13,2)),35).
move(7,((13,2),(13,3)),36).
move(7,((13,3),(12,3)),37).
move(7,((12,3),(11,3)),38).
move(7,((11,3),(10,3)),39).
move(7,((10,3),(9,3)),40).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(9,8)),2).
move(8,((9,8),(8,8)),3).
move(8,((8,8),(9,8)),4).
move(8,((9,8),(10,8)),5).
move(8,((10,8),(10,7)),6).
move(8,((10,7),(10,6)),7).
move(8,((10,6),(9,6)),8).
move(8,((9,6),(8,6)),9).
move(8,((8,6),(8,5)),10).
move(8,((8,5),(7,5)),11).
move(8,((7,5),(6,5)),12).
move(8,((6,5),(6,4)),13).
move(8,((6,4),(6,3)),14).
move(8,((6,3),(5,3)),15).
move(8,((5,3),(5,4)),16).
move(8,((5,4),(4,4)),18).
move(8,((4,4),(3,4)),19).
move(8,((3,4),(3,5)),20).
move(8,((3,5),(3,4)),22).
move(8,((3,4),(3,3)),23).
move(8,((3,3),(4,3)),24).
move(8,((4,3),(5,3)),25).
move(8,((5,3),(6,3)),26).
move(8,((6,3),(7,3)),27).
move(8,((7,3),(8,3)),28).
move(8,((8,3),(9,3)),29).
move(8,((9,3),(9,2)),30).
move(8,((9,2),(10,2)),31).
move(8,((10,2),(9,2)),32).
move(8,((9,2),(8,2)),34).
move(8,((8,2),(9,2)),36).
move(8,((9,2),(10,2)),39).
move(8,((10,2),(10,3)),40).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(8,8)),2).
move(9,((8,8),(8,9)),3).
move(9,((8,9),(8,8)),4).
move(9,((8,8),(9,8)),5).
move(9,((9,8),(10,8)),6).
move(9,((10,8),(10,7)),7).
move(9,((10,7),(10,6)),8).
move(9,((10,6),(11,6)),9).
move(9,((11,6),(11,5)),10).
move(9,((11,5),(12,5)),11).
move(9,((12,5),(13,5)),12).
move(9,((13,5),(13,4)),13).
move(9,((13,4),(13,3)),14).
move(9,((13,3),(13,2)),15).
move(9,((13,2),(14,2)),16).
move(9,((14,2),(14,3)),17).
move(9,((14,3),(15,3)),18).
move(9,((15,3),(16,3)),19).
move(9,((16,3),(17,3)),20).
move(9,((17,3),(16,3)),21).
move(9,((16,3),(16,2)),22).
move(9,((16,2),(15,2)),23).
move(9,((15,2),(14,2)),24).
move(9,((14,2),(13,2)),25).
move(9,((13,2),(12,2)),26).
move(9,((12,2),(12,3)),28).
move(9,((12,3),(11,3)),30).
move(9,((11,3),(12,3)),33).
move(9,((12,3),(13,3)),34).
move(9,((13,3),(14,3)),35).
move(9,((14,3),(14,2)),36).
move(9,((14,2),(13,2)),37).
move(9,((13,2),(12,2)),38).
move(9,((12,2),(11,2)),39).
move(9,((11,2),(11,3)),40).
move(10,((10,9),(9,9)),2).
move(10,((9,9),(9,8)),3).
move(10,((9,8),(10,8)),4).
move(10,((10,8),(11,8)),5).
move(10,((11,8),(11,7)),6).
move(10,((11,7),(12,7)),7).
move(10,((12,7),(13,7)),8).
move(10,((13,7),(14,7)),9).
move(10,((14,7),(15,7)),10).
move(10,((15,7),(16,7)),11).
move(10,((16,7),(16,6)),12).
move(10,((16,6),(16,7)),13).
move(10,((16,7),(17,7)),14).
move(10,((17,7),(17,6)),15).
move(10,((17,6),(17,5)),16).
move(10,((17,5),(17,4)),17).
move(10,((17,4),(17,3)),18).
move(10,((17,3),(17,2)),20).
move(10,((17,2),(16,2)),21).
move(10,((16,2),(15,2)),22).
move(10,((15,2),(14,2)),23).
move(10,((14,2),(13,2)),24).
move(10,((13,2),(12,2)),25).
move(10,((12,2),(12,3)),26).
move(10,((12,3),(13,3)),28).
move(10,((13,3),(14,3)),29).
move(10,((14,3),(15,3)),30).
move(10,((15,3),(15,2)),32).
move(10,((15,2),(14,2)),33).
move(10,((14,2),(13,2)),34).
move(10,((13,2),(13,3)),35).
move(10,((13,3),(12,3)),36).
move(10,((12,3),(12,2)),37).
move(10,((12,2),(11,2)),38).
move(10,((11,2),(11,3)),39).
move(10,((11,3),(12,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 5.459s (Solving: 1.34s 1st Model: 1.34s Unsat: 0.00s)
CPU Time     : 5.375s

Choices      : 12763    (Domain: 12763)
Conflicts    : 267      (Analyzed: 267)
Restarts     : 1        (Average: 267.00 Last: 21)
Model-Level  : 301.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 267      (Deleted: 0)
  Binary     : 101      (Ratio:  37.83%)
  Ternary    : 25       (Ratio:   9.36%)
  Conflict   : 267      (Average Length:   11.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 267      (Average: 46.46 Max: 299 Sum:  12405)
  Executed   : 267      (Average: 46.46 Max: 299 Sum:  12405 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878862   (Original: 822360)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338444  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

