%%%%%
%Standard
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(5,4)),6).
move(1,((5,4),(5,3)),7).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(4,3)),4).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),4).
move(4,((5,3),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),4).
move(5,((6,4),(7,4)),5).
move(5,((7,4),(8,4)),6).
move(5,((8,4),(8,3)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(10,3)),4).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),4).
move(7,((7,4),(8,4)),5).
move(7,((8,4),(8,3)),6).
move(7,((8,3),(9,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(3,5)),8).
move(9,((3,5),(3,4)),9).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(5,4)),5).
move(10,((5,4),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),6).
move(11,((6,6),(5,6)),7).
move(11,((5,6),(5,5)),8).
move(11,((5,5),(5,4)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.663s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.672s

Choices      : 861     
Conflicts    : 35       (Analyzed: 35)
Restarts     : 0       
Model-Level  : 466.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 35       (Deleted: 0)
  Binary     : 8        (Ratio:  22.86%)
  Ternary    : 1        (Ratio:   2.86%)
  Conflict   : 35       (Average Length:   17.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 35       (Average: 11.29 Max:  40 Sum:    395)
  Executed   : 35       (Average: 11.29 Max:  40 Sum:    395 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353468   (Original: 327181)
  Choice     : 440     
Atoms        : 141635  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(5,4)),6).
move(1,((5,4),(5,3)),7).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(4,3)),4).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),4).
move(4,((5,3),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),4).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(8,4)),6).
move(5,((8,4),(8,3)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(10,3)),4).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),4).
move(7,((7,4),(8,4)),5).
move(7,((8,4),(8,3)),6).
move(7,((8,3),(9,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(3,5)),8).
move(9,((3,5),(3,4)),9).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(5,4)),5).
move(10,((5,4),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),6).
move(11,((6,6),(5,6)),7).
move(11,((5,6),(5,5)),8).
move(11,((5,5),(5,4)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.674s (Solving: 0.05s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.672s

Choices      : 1040     (Domain: 177)
Conflicts    : 36       (Analyzed: 36)
Restarts     : 0       
Model-Level  : 655.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 36       (Deleted: 0)
  Binary     : 9        (Ratio:  25.00%)
  Ternary    : 1        (Ratio:   2.78%)
  Conflict   : 36       (Average Length:   16.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 36       (Average: 10.69 Max:  37 Sum:    385)
  Executed   : 36       (Average: 10.69 Max:  37 Sum:    385 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353782   (Original: 327495)
  Choice     : 440     
  Heuristic  : 188     
Atoms        : 141761  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(3,4)),4).
move(1,((3,4),(4,4)),5).
move(1,((4,4),(5,4)),6).
move(1,((5,4),(5,3)),7).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(3,5)),2).
move(2,((3,5),(3,4)),3).
move(2,((3,4),(3,3)),4).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(4,5)),2).
move(3,((4,5),(4,4)),3).
move(3,((4,4),(4,3)),4).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(6,4)),4).
move(4,((6,4),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(5,((7,3),(8,3)),6).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(10,5)),2).
move(6,((10,5),(10,4)),3).
move(6,((10,4),(10,3)),4).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(9,3)),6).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(3,5)),8).
move(9,((3,5),(3,4)),9).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(5,5)),7).
move(11,((5,5),(5,4)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.692s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.703s

Choices      : 402      (Domain: 402)
Conflicts    : 0        (Analyzed: 0)
Restarts     : 0       
Model-Level  : 402.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 0        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 0        (Average:  0.00 Max:   0 Sum:      0)
  Executed   : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio: 100.00%)

Rules        : 378784   (Original: 352629)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141772  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(2,5)),2).
move(1,((2,5),(2,6)),3).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(3,5)),6).
move(1,((3,5),(4,5)),7).
move(1,((4,5),(5,5)),8).
move(1,((5,5),(5,4)),9).
move(1,((5,4),(5,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(3,5)),2).
move(2,((3,5),(3,4)),3).
move(2,((3,4),(3,3)),4).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(4,5)),2).
move(3,((4,5),(4,4)),3).
move(3,((4,4),(4,3)),4).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),4).
move(4,((5,3),(6,3)),6).
move(4,((6,3),(7,3)),7).
move(5,((5,6),(5,5)),2).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(6,4)),5).
move(5,((6,4),(7,4)),6).
move(5,((7,4),(8,4)),7).
move(5,((8,4),(8,3)),8).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(10,5)),2).
move(6,((10,5),(10,4)),3).
move(6,((10,4),(10,3)),4).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(7,((8,3),(9,3)),8).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(3,5)),5).
move(8,((3,5),(3,4)),6).
move(8,((3,4),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(3,5)),8).
move(9,((3,5),(3,4)),10).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(10,((4,4),(5,4)),7).
move(10,((5,4),(4,4)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(5,5)),7).
move(11,((5,5),(5,4)),8).
move(11,((5,4),(6,4)),9).
move(11,((6,4),(5,4)),10).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.728s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 1.719s

Choices      : 891      (Domain: 204)
Conflicts    : 60       (Analyzed: 60)
Restarts     : 0       
Model-Level  : 402.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 60       (Deleted: 0)
  Binary     : 26       (Ratio:  43.33%)
  Ternary    : 2        (Ratio:   3.33%)
  Conflict   : 60       (Average Length:   11.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 60       (Average:  8.15 Max:  43 Sum:    489)
  Executed   : 60       (Average:  8.15 Max:  43 Sum:    489 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378784   (Original: 352629)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141772  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(5,4)),6).
move(1,((5,4),(5,3)),7).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(3,5)),2).
move(2,((3,5),(3,4)),3).
move(2,((3,4),(3,3)),4).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(4,5)),2).
move(3,((4,5),(4,4)),3).
move(3,((4,4),(4,3)),4).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(6,5)),3).
move(4,((6,5),(6,4)),4).
move(4,((6,4),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(5,((7,3),(8,3)),6).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(10,4)),3).
move(6,((10,4),(10,3)),4).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(9,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(9,5)),2).
move(9,((9,5),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(6,5)),5).
move(9,((6,5),(5,5)),6).
move(9,((5,5),(4,5)),7).
move(9,((4,5),(4,4)),8).
move(9,((4,4),(3,4)),9).
move(10,((8,6),(8,5)),2).
move(10,((8,5),(8,4)),3).
move(10,((8,4),(7,4)),5).
move(10,((7,4),(6,4)),6).
move(10,((6,4),(5,4)),7).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(9,5)),3).
move(11,((9,5),(9,4)),4).
move(11,((9,4),(8,4)),5).
move(11,((8,4),(7,4)),6).
move(11,((7,4),(6,4)),7).
move(11,((6,4),(6,5)),8).
move(11,((6,5),(5,5)),9).
move(11,((5,5),(5,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.688s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 412      (Domain: 39)
Conflicts    : 1        (Analyzed: 1)
Restarts     : 0       
Model-Level  : 411.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 1        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 1        (Average Length:   40.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 1        (Average:  1.00 Max:   1 Sum:      1)
  Executed   : 1        (Average:  1.00 Max:   1 Sum:      1 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354622   (Original: 328357)
  Choice     : 440     
  Heuristic  : 950      (Original: 972)
Atoms        : 141839  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(2,4)),3).
move(1,((2,4),(3,4)),4).
move(1,((3,4),(4,4)),5).
move(1,((4,4),(4,3)),6).
move(1,((4,3),(5,3)),7).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(2,((3,3),(3,2)),5).
move(2,((3,2),(3,3)),6).
move(2,((3,3),(3,4)),7).
move(2,((3,4),(3,3)),8).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(4,2)),5).
move(3,((4,2),(4,3)),7).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(7,3)),7).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(8,4)),5).
move(5,((8,4),(8,3)),6).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(10,3)),4).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(9,5)),2).
move(9,((9,5),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(6,5)),5).
move(9,((6,5),(5,5)),6).
move(9,((5,5),(4,5)),7).
move(9,((4,5),(4,4)),8).
move(9,((4,4),(3,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(5,4)),5).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(4,5)),8).
move(11,((4,5),(5,5)),9).
move(11,((5,5),(5,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.707s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.719s

Choices      : 1936     (Domain: 1134)
Conflicts    : 27       (Analyzed: 27)
Restarts     : 0       
Model-Level  : 1618.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 27       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 1        (Ratio:   3.70%)
  Conflict   : 27       (Average Length:   21.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 27       (Average: 11.78 Max:  72 Sum:    318)
  Executed   : 27       (Average: 11.78 Max:  72 Sum:    318 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354787   (Original: 328503)
  Choice     : 440     
  Heuristic  : 1193     (Original: 1196)
Atoms        : 141761  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(2,6)),3).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(3,5)),5).
move(1,((3,5),(4,5)),6).
move(1,((4,5),(5,5)),7).
move(1,((5,5),(5,4)),8).
move(1,((5,4),(5,3)),9).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(3,5)),2).
move(2,((3,5),(3,4)),4).
move(2,((3,4),(3,3)),5).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(4,3)),4).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(7,3)),6).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(5,((7,3),(8,3)),6).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(10,3)),4).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),4).
move(7,((7,4),(8,4)),5).
move(7,((8,4),(9,4)),6).
move(7,((9,4),(9,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(3,5)),8).
move(9,((3,5),(3,4)),9).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(5,4)),5).
move(10,((5,4),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(5,5)),8).
move(11,((5,5),(5,4)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.825s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.828s

Choices      : 842      (Domain: 316)
Conflicts    : 31       (Analyzed: 31)
Restarts     : 0       
Model-Level  : 474.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 31       (Deleted: 0)
  Binary     : 9        (Ratio:  29.03%)
  Ternary    : 1        (Ratio:   3.23%)
  Conflict   : 31       (Average Length:   16.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 31       (Average: 11.87 Max:  48 Sum:    368)
  Executed   : 31       (Average: 11.87 Max:  48 Sum:    368 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378797   (Original: 352631)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141784  
Disjunctions : 0        (Original: 1)
Bodies       : 247623   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128049   (Atom=Atom: 470 Body=Body: 482 Other: 127097)
Tight        : Yes
Variables    : 246824   (Eliminated:    0 Frozen: 126446)
Constraints  : 678181   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(2,6)),3).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(1,5)),6).
move(1,((1,5),(1,4)),7).
move(1,((1,4),(1,3)),8).
move(1,((1,3),(1,4)),9).
move(1,((1,4),(1,5)),10).
move(1,((1,5),(2,5)),11).
move(1,((2,5),(3,5)),12).
move(1,((3,5),(2,5)),13).
move(1,((2,5),(3,5)),24).
move(1,((3,5),(2,5)),25).
move(1,((2,5),(3,5)),34).
move(1,((3,5),(4,5)),35).
move(1,((4,5),(4,6)),36).
move(1,((4,6),(4,5)),37).
move(1,((4,5),(4,4)),38).
move(1,((4,4),(4,3)),39).
move(1,((4,3),(5,3)),40).
move(2,((2,6),(3,6)),3).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(2,4)),8).
move(2,((2,4),(2,3)),39).
move(2,((2,3),(3,3)),40).
move(3,((3,6),(3,5)),3).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),5).
move(3,((3,3),(3,4)),7).
move(3,((3,4),(3,3)),39).
move(3,((3,3),(4,3)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,4)),6).
move(4,((4,4),(4,5)),8).
move(4,((4,5),(4,4)),9).
move(4,((4,4),(5,4)),10).
move(4,((5,4),(4,4)),11).
move(4,((4,4),(4,3)),12).
move(4,((4,3),(4,4)),13).
move(4,((4,4),(5,4)),18).
move(4,((5,4),(5,3)),19).
move(4,((5,3),(4,3)),20).
move(4,((4,3),(4,4)),21).
move(4,((4,4),(4,3)),27).
move(4,((4,3),(4,4)),29).
move(4,((4,4),(5,4)),37).
move(4,((5,4),(5,3)),38).
move(4,((5,3),(6,3)),39).
move(4,((6,3),(7,3)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,4)),6).
move(5,((5,4),(6,4)),9).
move(5,((6,4),(5,4)),11).
move(5,((5,4),(5,3)),13).
move(5,((5,3),(6,3)),14).
move(5,((6,3),(5,3)),15).
move(5,((5,3),(5,4)),16).
move(5,((5,4),(5,3)),18).
move(5,((5,3),(6,3)),19).
move(5,((6,3),(5,3)),20).
move(5,((5,3),(6,3)),21).
move(5,((6,3),(7,3)),22).
move(5,((7,3),(6,3)),23).
move(5,((6,3),(5,3)),24).
move(5,((5,3),(5,4)),25).
move(5,((5,4),(5,3)),27).
move(5,((5,3),(5,4)),28).
move(5,((5,4),(6,4)),31).
move(5,((6,4),(5,4)),33).
move(5,((5,4),(5,3)),37).
move(5,((5,3),(6,3)),38).
move(5,((6,3),(7,3)),39).
move(5,((7,3),(8,3)),40).
move(6,((9,6),(9,5)),3).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(10,3)),7).
move(6,((10,3),(9,3)),8).
move(6,((9,3),(9,4)),9).
move(6,((9,4),(9,3)),10).
move(6,((9,3),(9,4)),11).
move(6,((9,4),(10,4)),39).
move(6,((10,4),(10,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,4)),6).
move(7,((6,4),(6,3)),9).
move(7,((6,3),(6,4)),11).
move(7,((6,4),(6,3)),27).
move(7,((6,3),(7,3)),28).
move(7,((7,3),(6,3)),29).
move(7,((6,3),(6,4)),30).
move(7,((6,4),(6,3)),31).
move(7,((6,3),(6,4)),33).
move(7,((6,4),(6,3)),37).
move(7,((6,3),(7,3)),38).
move(7,((7,3),(8,3)),39).
move(7,((8,3),(9,3)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,5)),6).
move(8,((7,5),(6,5)),9).
move(8,((6,5),(7,5)),10).
move(8,((7,5),(7,4)),11).
move(8,((7,4),(7,5)),14).
move(8,((7,5),(7,4)),21).
move(8,((7,4),(7,5)),23).
move(8,((7,5),(7,4)),24).
move(8,((7,4),(7,5)),31).
move(8,((7,5),(6,5)),32).
move(8,((6,5),(7,5)),33).
move(8,((7,5),(6,5)),34).
move(8,((6,5),(5,5)),35).
move(8,((5,5),(4,5)),36).
move(8,((4,5),(3,5)),37).
move(8,((3,5),(2,5)),38).
move(8,((2,5),(2,4)),40).
move(9,((10,6),(10,5)),2).
move(9,((10,5),(10,4)),3).
move(9,((10,4),(9,4)),4).
move(9,((9,4),(10,4)),5).
move(9,((10,4),(9,4)),6).
move(9,((9,4),(10,4)),7).
move(9,((10,4),(10,5)),8).
move(9,((10,5),(11,5)),10).
move(9,((11,5),(11,4)),11).
move(9,((11,4),(10,4)),12).
move(9,((10,4),(10,3)),13).
move(9,((10,3),(10,4)),15).
move(9,((10,4),(11,4)),16).
move(9,((11,4),(11,5)),17).
move(9,((11,5),(10,5)),18).
move(9,((10,5),(9,5)),19).
move(9,((9,5),(10,5)),20).
move(9,((10,5),(9,5)),23).
move(9,((9,5),(10,5)),25).
move(9,((10,5),(9,5)),28).
move(9,((9,5),(10,5)),29).
move(9,((10,5),(9,5)),33).
move(9,((9,5),(8,5)),34).
move(9,((8,5),(7,5)),35).
move(9,((7,5),(6,5)),36).
move(9,((6,5),(5,5)),37).
move(9,((5,5),(4,5)),38).
move(9,((4,5),(3,5)),39).
move(9,((3,5),(3,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(7,4)),14).
move(10,((7,4),(8,4)),21).
move(10,((8,4),(8,5)),31).
move(10,((8,5),(8,4)),34).
move(10,((8,4),(7,4)),37).
move(10,((7,4),(6,4)),38).
move(10,((6,4),(5,4)),39).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),4).
move(11,((10,5),(10,4)),6).
move(11,((10,4),(11,4)),7).
move(11,((11,4),(10,4)),8).
move(11,((10,4),(10,5)),12).
move(11,((10,5),(10,4)),13).
move(11,((10,4),(10,5)),15).
move(11,((10,5),(10,4)),16).
move(11,((10,4),(10,5)),19).
move(11,((10,5),(10,4)),20).
move(11,((10,4),(10,5)),23).
move(11,((10,5),(10,4)),25).
move(11,((10,4),(10,5)),28).
move(11,((10,5),(10,4)),29).
move(11,((10,4),(10,5)),33).
move(11,((10,5),(9,5)),35).
move(11,((9,5),(8,5)),36).
move(11,((8,5),(7,5)),37).
move(11,((7,5),(6,5)),38).
move(11,((6,5),(5,5)),39).
move(11,((5,5),(5,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.743s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.750s

Choices      : 415      (Domain: 415)
Conflicts    : 6        (Analyzed: 6)
Restarts     : 0       
Model-Level  : 390.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 6        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 6        (Average Length:   26.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 6        (Average:  4.17 Max:  16 Sum:     25)
  Executed   : 6        (Average:  4.17 Max:  16 Sum:     25 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378773   (Original: 352618)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141761  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(1,2)),9).
move(1,((1,2),(1,1)),10).
move(1,((1,1),(1,2)),11).
move(1,((1,2),(2,2)),12).
move(1,((2,2),(2,3)),13).
move(1,((2,3),(2,4)),14).
move(1,((2,4),(3,4)),37).
move(1,((3,4),(3,3)),38).
move(1,((3,3),(4,3)),39).
move(1,((4,3),(5,3)),40).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(3,2)),7).
move(2,((3,2),(3,1)),8).
move(2,((3,1),(2,1)),9).
move(2,((2,1),(2,2)),10).
move(2,((2,2),(2,3)),11).
move(2,((2,3),(2,4)),12).
move(2,((2,4),(3,4)),14).
move(2,((3,4),(3,3)),37).
move(2,((3,3),(3,2)),38).
move(2,((3,2),(3,3)),40).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),5).
move(3,((3,3),(3,2)),6).
move(3,((3,2),(2,2)),7).
move(3,((2,2),(2,1)),8).
move(3,((2,1),(1,1)),9).
move(3,((1,1),(2,1)),10).
move(3,((2,1),(2,2)),11).
move(3,((2,2),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(2,3)),37).
move(3,((2,3),(3,3)),39).
move(3,((3,3),(4,3)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,2)),6).
move(4,((4,2),(4,1)),7).
move(4,((4,1),(4,2)),8).
move(4,((4,2),(4,3)),9).
move(4,((4,3),(4,4)),11).
move(4,((4,4),(4,3)),37).
move(4,((4,3),(5,3)),38).
move(4,((5,3),(6,3)),39).
move(4,((6,3),(7,3)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(5,2)),8).
move(5,((5,2),(5,3)),9).
move(5,((5,3),(5,4)),10).
move(5,((5,4),(5,3)),37).
move(5,((5,3),(6,3)),38).
move(5,((6,3),(7,3)),39).
move(5,((7,3),(8,3)),40).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,2)),7).
move(6,((9,2),(10,2)),8).
move(6,((10,2),(10,1)),9).
move(6,((10,1),(11,1)),10).
move(6,((11,1),(10,1)),11).
move(6,((10,1),(10,2)),12).
move(6,((10,2),(9,2)),13).
move(6,((9,2),(9,3)),14).
move(6,((9,3),(9,4)),15).
move(6,((9,4),(9,3)),34).
move(6,((9,3),(9,4)),35).
move(6,((9,4),(9,3)),36).
move(6,((9,3),(9,4)),37).
move(6,((9,4),(10,4)),39).
move(6,((10,4),(10,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(6,1)),7).
move(7,((6,1),(6,2)),8).
move(7,((6,2),(6,3)),9).
move(7,((6,3),(6,2)),10).
move(7,((6,2),(6,3)),11).
move(7,((6,3),(6,4)),12).
move(7,((6,4),(6,3)),36).
move(7,((6,3),(7,3)),37).
move(7,((7,3),(8,3)),38).
move(7,((8,3),(9,3)),39).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(7,4)),10).
move(8,((7,4),(6,4)),36).
move(8,((6,4),(5,4)),37).
move(8,((5,4),(4,4)),38).
move(8,((4,4),(3,4)),39).
move(8,((3,4),(2,4)),40).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(10,6)),3).
move(9,((10,6),(10,5)),4).
move(9,((10,5),(10,4)),6).
move(9,((10,4),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(9,((11,3),(11,2)),9).
move(9,((11,2),(10,2)),10).
move(9,((10,2),(10,3)),11).
move(9,((10,3),(10,4)),12).
move(9,((10,4),(9,4)),34).
move(9,((9,4),(8,4)),35).
move(9,((8,4),(7,4)),36).
move(9,((7,4),(6,4)),37).
move(9,((6,4),(5,4)),38).
move(9,((5,4),(4,4)),39).
move(9,((4,4),(3,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,3)),5).
move(10,((8,3),(8,2)),6).
move(10,((8,2),(8,1)),7).
move(10,((8,1),(9,1)),8).
move(10,((9,1),(9,2)),9).
move(10,((9,2),(8,2)),10).
move(10,((8,2),(8,3)),11).
move(10,((8,3),(8,4)),12).
move(10,((8,4),(8,5)),35).
move(10,((8,5),(7,5)),36).
move(10,((7,5),(6,5)),37).
move(10,((6,5),(5,5)),38).
move(10,((5,5),(4,5)),39).
move(10,((4,5),(4,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(10,2)),7).
move(11,((10,2),(11,2)),8).
move(11,((11,2),(11,1)),9).
move(11,((11,1),(11,2)),10).
move(11,((11,2),(10,2)),11).
move(11,((10,2),(10,3)),12).
move(11,((10,3),(10,4)),34).
move(11,((10,4),(9,4)),36).
move(11,((9,4),(8,4)),37).
move(11,((8,4),(7,4)),38).
move(11,((7,4),(6,4)),39).
move(11,((6,4),(5,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.726s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.719s

Choices      : 425      (Domain: 425)
Conflicts    : 8        (Analyzed: 8)
Restarts     : 0       
Model-Level  : 382.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 8        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 8        (Average Length:   12.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 8        (Average:  5.38 Max:  11 Sum:     43)
  Executed   : 8        (Average:  5.38 Max:  11 Sum:     43 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378773   (Original: 352618)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141761  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

