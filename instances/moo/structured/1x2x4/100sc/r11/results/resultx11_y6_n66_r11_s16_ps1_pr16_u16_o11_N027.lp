%%%%%
%Standard
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(4,4)),5).
move(1,((4,4),(5,4)),6).
move(1,((5,4),(6,4)),7).
move(1,((6,4),(7,4)),8).
move(1,((7,4),(8,4)),10).
move(1,((8,4),(8,3)),11).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(5,5)),4).
move(2,((5,5),(5,4)),7).
move(2,((5,4),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(3,1)),5).
move(3,((3,1),(3,2)),7).
move(3,((3,2),(3,3)),8).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(8,5)),4).
move(5,((8,5),(7,5)),6).
move(5,((7,5),(7,4)),7).
move(5,((7,4),(7,3)),8).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),5).
move(6,((8,3),(7,3)),6).
move(6,((7,3),(6,3)),7).
move(6,((6,3),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),4).
move(7,((5,3),(4,3)),5).
move(7,((4,3),(3,3)),6).
move(7,((3,3),(2,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),7).
move(8,((2,5),(2,4)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(6,5)),5).
move(9,((6,5),(6,4)),8).
move(9,((6,4),(7,4)),10).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(10,((4,4),(4,3)),7).
move(10,((4,3),(4,4)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(8,6)),6).
move(11,((8,6),(8,5)),7).
move(11,((8,5),(8,4)),8).
move(11,((8,4),(8,5)),10).
move(11,((8,5),(8,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.985s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.984s

Choices      : 1242    
Conflicts    : 55       (Analyzed: 55)
Restarts     : 0       
Model-Level  : 278.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 55       (Deleted: 0)
  Binary     : 9        (Ratio:  16.36%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 55       (Average Length:   20.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 55       (Average: 17.53 Max: 125 Sum:    964)
  Executed   : 55       (Average: 17.53 Max: 125 Sum:    964 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165688   (Original: 153701)
  Choice     : 220     
Atoms        : 69035   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(7,5)),8).
move(1,((7,5),(7,4)),9).
move(1,((7,4),(8,4)),10).
move(1,((8,4),(8,3)),11).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(5,5)),4).
move(2,((5,5),(5,4)),7).
move(2,((5,4),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(3,1)),5).
move(3,((3,1),(3,2)),7).
move(3,((3,2),(3,3)),8).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(8,5)),4).
move(5,((8,5),(7,5)),6).
move(5,((7,5),(7,4)),7).
move(5,((7,4),(7,3)),8).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),5).
move(6,((8,3),(7,3)),6).
move(6,((7,3),(6,3)),7).
move(6,((6,3),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),4).
move(7,((5,3),(4,3)),5).
move(7,((4,3),(3,3)),6).
move(7,((3,3),(2,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(4,4)),5).
move(8,((4,4),(3,4)),7).
move(8,((3,4),(2,4)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(6,5)),5).
move(9,((6,5),(6,4)),6).
move(9,((6,4),(7,4)),10).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,3)),3).
move(10,((8,3),(7,3)),4).
move(10,((7,3),(6,3)),5).
move(10,((6,3),(5,3)),6).
move(10,((5,3),(4,3)),7).
move(10,((4,3),(4,4)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(8,6)),6).
move(11,((8,6),(8,5)),7).
move(11,((8,5),(8,4)),8).
move(11,((8,4),(8,5)),10).
move(11,((8,5),(8,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.819s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.828s

Choices      : 1225    
Conflicts    : 53       (Analyzed: 53)
Restarts     : 0       
Model-Level  : 283.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 53       (Deleted: 0)
  Binary     : 9        (Ratio:  16.98%)
  Ternary    : 1        (Ratio:   1.89%)
  Conflict   : 53       (Average Length:   20.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 53       (Average: 17.77 Max: 135 Sum:    942)
  Executed   : 53       (Average: 17.77 Max: 135 Sum:    942 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165950   (Original: 153963)
  Choice     : 220     
  Heuristic  : 125     
Atoms        : 69172   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(7,4)),8).
move(1,((7,4),(8,4)),10).
move(1,((8,4),(8,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(2,((3,3),(3,4)),5).
move(2,((3,4),(4,4)),6).
move(2,((4,4),(5,4)),7).
move(2,((5,4),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(3,1)),5).
move(3,((3,1),(3,2)),7).
move(3,((3,2),(3,3)),8).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(8,5)),4).
move(5,((8,5),(7,5)),6).
move(5,((7,5),(7,4)),7).
move(5,((7,4),(7,3)),8).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),5).
move(6,((8,3),(7,3)),6).
move(6,((7,3),(6,3)),7).
move(6,((6,3),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),4).
move(7,((5,3),(4,3)),5).
move(7,((4,3),(3,3)),6).
move(7,((3,3),(2,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(3,4)),7).
move(8,((3,4),(2,4)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),4).
move(9,((7,6),(6,6)),5).
move(9,((6,6),(5,6)),6).
move(9,((5,6),(5,5)),7).
move(9,((5,5),(6,5)),8).
move(9,((6,5),(6,4)),9).
move(9,((6,4),(7,4)),10).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(6,4)),4).
move(10,((6,4),(6,3)),5).
move(10,((6,3),(5,3)),6).
move(10,((5,3),(4,3)),7).
move(10,((4,3),(4,4)),8).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(10,4)),4).
move(11,((10,4),(9,4)),5).
move(11,((9,4),(8,4)),9).
move(11,((8,4),(8,5)),10).
move(11,((8,5),(8,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.897s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.891s

Choices      : 1295    
Conflicts    : 58       (Analyzed: 58)
Restarts     : 0       
Model-Level  : 248.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 58       (Deleted: 0)
  Binary     : 10       (Ratio:  17.24%)
  Ternary    : 1        (Ratio:   1.72%)
  Conflict   : 58       (Average Length:   20.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 58       (Average: 18.05 Max:  97 Sum:   1047)
  Executed   : 58       (Average: 18.05 Max:  97 Sum:   1047 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165836   (Original: 153849)
  Choice     : 220     
Atoms        : 69183   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(7,4)),8).
move(1,((7,4),(8,4)),10).
move(1,((8,4),(8,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(2,((3,3),(3,4)),5).
move(2,((3,4),(4,4)),6).
move(2,((4,4),(5,4)),7).
move(2,((5,4),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(3,1)),5).
move(3,((3,1),(3,2)),7).
move(3,((3,2),(3,3)),8).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(8,5)),4).
move(5,((8,5),(7,5)),6).
move(5,((7,5),(7,4)),7).
move(5,((7,4),(7,3)),8).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),5).
move(6,((8,3),(7,3)),6).
move(6,((7,3),(6,3)),7).
move(6,((6,3),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),4).
move(7,((5,3),(4,3)),5).
move(7,((4,3),(3,3)),6).
move(7,((3,3),(2,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(3,4)),7).
move(8,((3,4),(2,4)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),4).
move(9,((7,6),(6,6)),5).
move(9,((6,6),(5,6)),6).
move(9,((5,6),(5,5)),7).
move(9,((5,5),(6,5)),8).
move(9,((6,5),(6,4)),9).
move(9,((6,4),(7,4)),10).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(6,4)),4).
move(10,((6,4),(6,3)),5).
move(10,((6,3),(5,3)),6).
move(10,((5,3),(4,3)),7).
move(10,((4,3),(4,4)),8).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(10,4)),4).
move(11,((10,4),(9,4)),5).
move(11,((9,4),(8,4)),9).
move(11,((8,4),(8,5)),10).
move(11,((8,5),(8,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.009s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.016s

Choices      : 1295    
Conflicts    : 58       (Analyzed: 58)
Restarts     : 0       
Model-Level  : 248.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 58       (Deleted: 0)
  Binary     : 10       (Ratio:  17.24%)
  Ternary    : 1        (Ratio:   1.72%)
  Conflict   : 58       (Average Length:   20.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 58       (Average: 18.05 Max:  97 Sum:   1047)
  Executed   : 58       (Average: 18.05 Max:  97 Sum:   1047 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165836   (Original: 153849)
  Choice     : 220     
Atoms        : 69183   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),5).
move(1,((5,6),(5,5)),6).
move(1,((5,5),(5,4)),7).
move(1,((5,4),(6,4)),8).
move(1,((6,4),(7,4)),9).
move(1,((7,4),(8,4)),10).
move(1,((8,4),(8,3)),11).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(5,5)),4).
move(2,((5,5),(6,5)),6).
move(2,((6,5),(6,4)),7).
move(2,((6,4),(6,3)),8).
move(2,((6,3),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(3,1)),5).
move(3,((3,1),(4,1)),6).
move(3,((4,1),(3,1)),7).
move(3,((3,1),(3,2)),8).
move(3,((3,2),(3,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(9,4)),7).
move(4,((9,4),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(5,((7,3),(8,3)),6).
move(5,((8,3),(7,3)),8).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(8,5)),2).
move(6,((8,5),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(5,4)),3).
move(7,((5,4),(4,4)),5).
move(7,((4,4),(3,4)),6).
move(7,((3,4),(2,4)),7).
move(7,((2,4),(2,3)),8).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(3,4)),7).
move(8,((3,4),(2,4)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(9,6)),3).
move(9,((9,6),(8,6)),4).
move(9,((8,6),(7,6)),8).
move(9,((7,6),(7,5)),9).
move(9,((7,5),(7,4)),10).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(6,4)),4).
move(10,((6,4),(5,4)),5).
move(10,((5,4),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(7,6)),6).
move(11,((7,6),(7,5)),7).
move(11,((7,5),(8,5)),8).
move(11,((8,5),(8,4)),9).
move(11,((8,4),(9,4)),10).
move(11,((9,4),(8,4)),11).
move(11,((8,4),(8,5)),12).
move(11,((8,5),(8,4)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.868s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 0.875s

Choices      : 1579    
Conflicts    : 78       (Analyzed: 78)
Restarts     : 0       
Model-Level  : 287.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 78       (Deleted: 0)
  Binary     : 9        (Ratio:  11.54%)
  Ternary    : 9        (Ratio:  11.54%)
  Conflict   : 78       (Average Length:   19.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 78       (Average: 16.56 Max:  98 Sum:   1292)
  Executed   : 78       (Average: 16.56 Max:  98 Sum:   1292 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 167017   (Original: 155052)
  Choice     : 220     
  Heuristic  : 1111     (Original: 1133)
Atoms        : 69253   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(7,4)),9).
move(1,((7,4),(8,4)),10).
move(1,((8,4),(8,3)),11).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(6,5)),5).
move(2,((6,5),(6,4)),6).
move(2,((6,4),(5,4)),7).
move(2,((5,4),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(3,1)),5).
move(3,((3,1),(3,2)),7).
move(3,((3,2),(3,3)),8).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(5,((7,3),(7,4)),6).
move(5,((7,4),(7,3)),8).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),5).
move(6,((8,3),(7,3)),6).
move(6,((7,3),(6,3)),7).
move(6,((6,3),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(5,4)),3).
move(7,((5,4),(5,3)),4).
move(7,((5,3),(4,3)),5).
move(7,((4,3),(3,3)),6).
move(7,((3,3),(2,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),4).
move(8,((6,4),(5,4)),5).
move(8,((5,4),(4,4)),6).
move(8,((4,4),(3,4)),7).
move(8,((3,4),(2,4)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),4).
move(9,((7,6),(7,5)),9).
move(9,((7,5),(7,4)),10).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(7,4)),4).
move(10,((7,4),(6,4)),5).
move(10,((6,4),(5,4)),6).
move(10,((5,4),(4,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(8,5)),4).
move(11,((8,5),(8,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.898s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.906s

Choices      : 935     
Conflicts    : 52       (Analyzed: 52)
Restarts     : 0       
Model-Level  : 275.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 52       (Deleted: 0)
  Binary     : 9        (Ratio:  17.31%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 52       (Average Length:   20.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 52       (Average: 12.69 Max:  57 Sum:    660)
  Executed   : 52       (Average: 12.69 Max:  57 Sum:    660 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 166502   (Original: 154519)
  Choice     : 220     
  Heuristic  : 677      (Original: 681)
Atoms        : 69172   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(8,6)),7).
move(1,((8,6),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,6)),2).
move(2,((2,6),(3,6)),3).
move(2,((3,6),(4,6)),4).
move(2,((4,6),(5,6)),6).
move(2,((5,6),(5,5)),7).
move(2,((5,5),(5,4)),8).
move(2,((5,4),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(4,((9,4),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),7).
move(6,((5,4),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(3,5)),4).
move(7,((3,5),(2,5)),5).
move(7,((2,5),(2,4)),6).
move(7,((2,4),(2,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(2,5)),7).
move(8,((2,5),(2,4)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),5).
move(9,((7,5),(7,4)),6).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(11,5)),3).
move(11,((11,5),(11,4)),4).
move(11,((11,4),(10,4)),5).
move(11,((10,4),(9,4)),8).
move(11,((9,4),(8,4)),10).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.833s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.812s

Choices      : 421      (Domain: 63)
Conflicts    : 33       (Analyzed: 33)
Restarts     : 0       
Model-Level  : 201.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 33       (Deleted: 0)
  Binary     : 1        (Ratio:   3.03%)
  Ternary    : 2        (Ratio:   6.06%)
  Conflict   : 33       (Average Length:   25.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 33       (Average:  6.67 Max:  26 Sum:    220)
  Executed   : 33       (Average:  6.67 Max:  26 Sum:    220 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176506   (Original: 164651)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69194   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(5,5)),4).
move(2,((5,5),(5,4)),5).
move(2,((5,4),(5,3)),8).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(6,4)),4).
move(4,((6,4),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(4,((7,3),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(7,3)),7).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(5,4)),3).
move(7,((5,4),(4,4)),4).
move(7,((4,4),(3,4)),5).
move(7,((3,4),(2,4)),6).
move(7,((2,4),(2,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(3,5)),5).
move(8,((3,5),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),4).
move(9,((8,5),(7,5)),6).
move(9,((7,5),(7,4)),7).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),3).
move(11,((9,6),(9,5)),4).
move(11,((9,5),(9,4)),5).
move(11,((9,4),(8,4)),10).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.898s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.906s

Choices      : 584     
Conflicts    : 36       (Analyzed: 36)
Restarts     : 0       
Model-Level  : 243.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 36       (Deleted: 0)
  Binary     : 6        (Ratio:  16.67%)
  Ternary    : 3        (Ratio:   8.33%)
  Conflict   : 36       (Average Length:   19.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 36       (Average:  9.47 Max:  54 Sum:    341)
  Executed   : 36       (Average:  9.47 Max:  54 Sum:    341 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176484   (Original: 164629)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69172   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(2,1)),9).
move(1,((2,1),(1,1)),10).
move(1,((1,1),(1,2)),11).
move(1,((1,2),(2,2)),12).
move(1,((2,2),(2,3)),13).
move(1,((2,3),(3,3)),14).
move(1,((3,3),(4,3)),16).
move(1,((4,3),(5,3)),17).
move(1,((5,3),(6,3)),18).
move(1,((6,3),(7,3)),19).
move(1,((7,3),(8,3)),20).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(3,2)),7).
move(2,((3,2),(3,1)),8).
move(2,((3,1),(3,2)),9).
move(2,((3,2),(2,2)),10).
move(2,((2,2),(2,3)),11).
move(2,((2,3),(2,4)),12).
move(2,((2,4),(3,4)),13).
move(2,((3,4),(4,4)),14).
move(2,((4,4),(4,3)),15).
move(2,((4,3),(5,3)),16).
move(2,((5,3),(5,2)),17).
move(2,((5,2),(5,3)),18).
move(2,((5,3),(5,2)),19).
move(2,((5,2),(5,3)),20).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),5).
move(3,((3,3),(3,2)),6).
move(3,((3,2),(2,2)),7).
move(3,((2,2),(1,2)),8).
move(3,((1,2),(2,2)),11).
move(3,((2,2),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(3,4)),14).
move(3,((3,4),(2,4)),15).
move(3,((2,4),(3,4)),16).
move(3,((3,4),(3,3)),17).
move(3,((3,3),(3,2)),19).
move(3,((3,2),(3,3)),20).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,2)),6).
move(4,((4,2),(4,1)),7).
move(4,((4,1),(4,2)),8).
move(4,((4,2),(4,3)),9).
move(4,((4,3),(4,4)),10).
move(4,((4,4),(4,3)),13).
move(4,((4,3),(5,3)),15).
move(4,((5,3),(6,3)),16).
move(4,((6,3),(7,3)),18).
move(4,((7,3),(8,3)),19).
move(4,((8,3),(9,3)),20).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(5,2)),8).
move(5,((5,2),(5,3)),9).
move(5,((5,3),(5,4)),10).
move(5,((5,4),(5,3)),13).
move(5,((5,3),(6,3)),14).
move(5,((6,3),(7,3)),15).
move(5,((7,3),(8,3)),16).
move(5,((8,3),(8,2)),18).
move(5,((8,2),(7,2)),19).
move(5,((7,2),(7,3)),20).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,2)),7).
move(6,((9,2),(10,2)),8).
move(6,((10,2),(11,2)),9).
move(6,((11,2),(11,1)),10).
move(6,((11,1),(10,1)),11).
move(6,((10,1),(10,2)),12).
move(6,((10,2),(9,2)),13).
move(6,((9,2),(8,2)),15).
move(6,((8,2),(7,2)),16).
move(6,((7,2),(6,2)),17).
move(6,((6,2),(5,2)),18).
move(6,((5,2),(4,2)),19).
move(6,((4,2),(4,3)),20).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(6,1)),7).
move(7,((6,1),(6,2)),8).
move(7,((6,2),(6,3)),9).
move(7,((6,3),(6,4)),10).
move(7,((6,4),(5,4)),13).
move(7,((5,4),(5,3)),14).
move(7,((5,3),(5,4)),15).
move(7,((5,4),(4,4)),16).
move(7,((4,4),(3,4)),18).
move(7,((3,4),(2,4)),19).
move(7,((2,4),(2,3)),20).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(7,4)),10).
move(8,((7,4),(6,4)),13).
move(8,((6,4),(5,4)),14).
move(8,((5,4),(4,4)),15).
move(8,((4,4),(4,5)),16).
move(8,((4,5),(3,5)),17).
move(8,((3,5),(2,5)),19).
move(8,((2,5),(2,4)),20).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(10,6)),3).
move(9,((10,6),(10,5)),4).
move(9,((10,5),(10,4)),6).
move(9,((10,4),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(9,((11,3),(10,3)),9).
move(9,((10,3),(10,4)),11).
move(9,((10,4),(10,5)),14).
move(9,((10,5),(9,5)),15).
move(9,((9,5),(8,5)),16).
move(9,((8,5),(8,4)),17).
move(9,((8,4),(8,5)),18).
move(9,((8,5),(8,4)),19).
move(9,((8,4),(7,4)),20).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,3)),5).
move(10,((8,3),(8,2)),6).
move(10,((8,2),(8,1)),7).
move(10,((8,1),(9,1)),8).
move(10,((9,1),(9,2)),9).
move(10,((9,2),(8,2)),10).
move(10,((8,2),(8,3)),11).
move(10,((8,3),(8,4)),12).
move(10,((8,4),(7,4)),13).
move(10,((7,4),(6,4)),14).
move(10,((6,4),(6,5)),15).
move(10,((6,5),(5,5)),16).
move(10,((5,5),(4,5)),17).
move(10,((4,5),(4,4)),18).
move(10,((4,4),(4,5)),19).
move(10,((4,5),(4,4)),20).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(10,2)),7).
move(11,((10,2),(10,1)),8).
move(11,((10,1),(10,2)),10).
move(11,((10,2),(10,3)),11).
move(11,((10,3),(10,2)),13).
move(11,((10,2),(10,3)),14).
move(11,((10,3),(9,3)),15).
move(11,((9,3),(9,4)),16).
move(11,((9,4),(9,5)),17).
move(11,((9,5),(8,5)),19).
move(11,((8,5),(8,4)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.972s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.969s

Choices      : 445      (Domain: 445)
Conflicts    : 30       (Analyzed: 30)
Restarts     : 0       
Model-Level  : 174.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 30       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 2        (Ratio:   6.67%)
  Conflict   : 30       (Average Length:   14.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 30       (Average:  9.03 Max:  34 Sum:    271)
  Executed   : 30       (Average:  9.03 Max:  34 Sum:    271 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176484   (Original: 164629)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69172   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

