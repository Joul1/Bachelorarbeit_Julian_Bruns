clingo version 5.5.2
Reading from ...nt/beegfs/home/jubruns/encoding/mif.lp ...
Solving...
Answer: 1
move(9,(8,7),(8,6),1) move(10,(8,11),(7,11),1) move(1,(13,13),(12,13),2) move(2,(13,10),(13,9),2) move(3,(6,8),(6,7),2) move(4,(13,6),(12,6),2) move(5,(12,13),(11,13),2) move(6,(12,12),(11,12),2) move(7,(5,8),(5,9),2) move(8,(12,9),(11,9),2) move(9,(8,6),(8,5),2) move(10,(7,11),(7,10),2) move(11,(12,10),(13,10),2) move(12,(10,5),(10,4),2) move(13,(8,10),(8,11),2) move(14,(7,6),(8,6),2) move(15,(13,12),(13,13),2) move(16,(13,4),(12,4),2) move(1,(12,13),(12,12),3) move(2,(13,9),(12,9),3) move(3,(6,7),(5,7),3) move(4,(12,6),(12,5),3) move(5,(11,13),(10,13),3) move(6,(11,12),(10,12),3) move(7,(5,9),(6,9),3) move(8,(11,9),(11,8),3) move(9,(8,5),(9,5),3) move(10,(7,10),(7,9),3) move(11,(13,10),(13,9),3) move(12,(10,4),(10,3),3) move(13,(8,11),(8,12),3) move(14,(8,6),(8,5),3) move(16,(12,4),(13,4),3) move(1,(12,12),(13,12),4) move(2,(12,9),(11,9),4) move(3,(5,7),(5,8),4) move(4,(12,5),(11,5),4) move(5,(10,13),(9,13),4) move(6,(10,12),(11,12),4) move(7,(6,9),(7,9),4) move(8,(11,8),(11,7),4) move(9,(9,5),(10,5),4) move(10,(7,9),(7,8),4) move(12,(10,3),(11,3),4) move(13,(8,12),(7,12),4) move(14,(8,5),(8,4),4) move(16,(13,4),(12,4),4) move(1,(13,12),(12,12),5) move(2,(11,9),(11,8),5) move(3,(5,8),(4,8),5) move(6,(11,12),(11,11),5) move(7,(7,9),(7,8),5) move(8,(11,7),(12,7),5) move(9,(10,5),(10,6),5) move(10,(7,8),(6,8),5) move(11,(13,9),(13,10),5) move(12,(11,3),(11,2),5) move(13,(7,12),(8,12),5) move(14,(8,4),(7,4),5) move(15,(13,13),(13,12),5) move(16,(12,4),(13,4),5) move(1,(12,12),(12,13),6) move(2,(11,8),(11,7),6) move(5,(9,13),(10,13),6) move(6,(11,11),(12,11),6) move(8,(12,7),(12,6),6) move(9,(10,6),(10,7),6) move(10,(6,8),(6,7),6) move(13,(8,12),(8,11),6) move(14,(7,4),(6,4),6) move(15,(13,12),(12,12),6) move(16,(13,4),(12,4),6) move(2,(11,7),(12,7),7) move(4,(11,5),(10,5),7) move(5,(10,13),(10,12),7) move(7,(7,8),(7,9),7) move(8,(12,6),(12,5),7) move(9,(10,7),(11,7),7) move(10,(6,7),(5,7),7) move(11,(13,10),(13,9),7) move(13,(8,11),(8,12),7) move(14,(6,4),(5,4),7) move(15,(12,12),(13,12),7) move(16,(12,4),(13,4),7) move(1,(12,13),(11,13),8) move(2,(12,7),(12,6),8) move(4,(10,5),(10,6),8) move(5,(10,12),(11,12),8) move(6,(12,11),(11,11),8) move(7,(7,9),(7,8),8) move(8,(12,5),(12,4),8) move(9,(11,7),(11,8),8) move(10,(5,7),(5,6),8) move(11,(13,9),(13,10),8) move(13,(8,12),(7,12),8) move(14,(5,4),(5,5),8) move(15,(13,12),(13,13),8) move(16,(13,4),(13,5),8) move(1,(11,13),(10,13),9) move(2,(12,6),(13,6),9) move(4,(10,6),(10,7),9) move(5,(11,12),(11,13),9) move(6,(11,11),(12,11),9) move(8,(12,4),(13,4),9) move(9,(11,8),(11,9),9) move(10,(5,6),(5,5),9) move(11,(13,10),(13,9),9) move(13,(7,12),(8,12),9) move(14,(5,5),(4,5),9) move(15,(13,13),(12,13),9) move(3,(4,8),(5,8),10) move(4,(10,7),(11,7),10) move(5,(11,13),(11,12),10) move(8,(13,4),(12,4),10) move(10,(5,5),(5,4),10) move(11,(13,9),(13,10),10) move(12,(11,2),(11,3),10) move(13,(8,12),(7,12),10) move(14,(4,5),(5,5),10) move(15,(12,13),(11,13),10) move(16,(13,5),(13,4),10) move(3,(5,8),(5,9),11) move(4,(11,7),(11,8),11) move(5,(11,12),(11,11),11) move(6,(12,11),(12,10),11) move(7,(7,8),(7,9),11) move(9,(11,9),(10,9),11) move(10,(5,4),(6,4),11) move(12,(11,3),(10,3),11) move(13,(7,12),(8,12),11) move(14,(5,5),(5,6),11) move(3,(5,9),(5,10),12) move(4,(11,8),(11,9),12) move(5,(11,11),(11,12),12) move(6,(12,10),(11,10),12) move(7,(7,9),(6,9),12) move(9,(10,9),(9,9),12) move(10,(6,4),(7,4),12) move(11,(13,10),(12,10),12) move(12,(10,3),(10,4),12) move(13,(8,12),(7,12),12) move(16,(13,4),(13,5),12) move(2,(13,6),(13,5),13) move(3,(5,10),(4,10),13) move(4,(11,9),(12,9),13) move(5,(11,12),(11,11),13) move(6,(11,10),(12,10),13) move(7,(6,9),(5,9),13) move(8,(12,4),(13,4),13) move(9,(9,9),(9,10),13) move(10,(7,4),(8,4),13) move(11,(12,10),(12,11),13) move(12,(10,4),(10,5),13) move(13,(7,12),(8,12),13) move(14,(5,6),(5,7),13) move(15,(11,13),(12,13),13) move(16,(13,5),(12,5),13) move(2,(13,5),(13,4),14) move(3,(4,10),(4,11),14) move(4,(12,9),(13,9),14) move(5,(11,11),(12,11),14) move(6,(12,10),(13,10),14) move(8,(13,4),(12,4),14) move(9,(9,10),(8,10),14) move(10,(8,4),(9,4),14) move(11,(12,11),(12,12),14) move(12,(10,5),(10,6),14) move(14,(5,7),(6,7),14) move(15,(12,13),(13,13),14) move(16,(12,5),(13,5),14)
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.624s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.601s

Choices      : 2111     (Domain: 2111)
Conflicts    : 77       (Analyzed: 77)
Restarts     : 1        (Average: 77.00 Last: 4)
Model-Level  : 563.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 77       (Deleted: 0)
  Binary     : 3        (Ratio:   3.90%)
  Ternary    : 1        (Ratio:   1.30%)
  Conflict   : 77       (Average Length:   37.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 77       (Average: 11.82 Max: 358 Sum:    910)
  Executed   : 77       (Average: 11.82 Max: 358 Sum:    910 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 213537   (Original: 172134)
  Choice     : 224     
  Heuristic  : 9210     (Original: 9475)
Atoms        : 94040    (Original: 79262 Auxiliary: 14778)
Bodies       : 124097   (Original: 97389)
  Count      : 890      (Original: 1710)
Equivalences : 73908    (Atom=Atom: 267 Body=Body: 284 Other: 73357)
Tight        : Yes
Variables    : 120562   (Eliminated:    0 Frozen: 70249)
Constraints  : 292876   (Binary:  84.6% Ternary:  11.7% Other:   3.7%)

