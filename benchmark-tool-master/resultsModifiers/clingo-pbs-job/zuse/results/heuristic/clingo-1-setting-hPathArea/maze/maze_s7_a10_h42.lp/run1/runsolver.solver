clingo version 5.5.2
Reading from ...nt/beegfs/home/jubruns/encoding/mif.lp ...
Solving...
Answer: 1
move(1,(12,13),(11,13),5) move(1,(11,13),(12,13),6) move(1,(12,13),(11,13),9) move(1,(11,13),(12,13),10) move(1,(12,13),(11,13),11) move(1,(11,13),(12,13),13) move(1,(12,13),(11,13),14) move(1,(11,13),(12,13),15) move(1,(12,13),(11,13),16) move(1,(11,13),(12,13),18) move(1,(12,13),(11,13),19) move(1,(11,13),(12,13),21) move(1,(12,13),(11,13),23) move(1,(11,13),(11,12),24) move(1,(11,12),(11,11),25) move(1,(11,11),(10,11),26) move(1,(10,11),(9,11),27) move(1,(9,11),(8,11),28) move(1,(8,11),(7,11),29) move(1,(7,11),(7,12),30) move(1,(7,12),(7,13),31) move(1,(7,13),(8,13),32) move(1,(8,13),(9,13),33) move(1,(9,13),(9,14),42) move(2,(8,13),(9,13),3) move(2,(9,13),(8,13),8) move(2,(8,13),(9,13),13) move(2,(9,13),(8,13),15) move(2,(8,13),(9,13),17) move(2,(9,13),(8,13),19) move(2,(8,13),(9,13),21) move(2,(9,13),(8,13),22) move(2,(8,13),(9,13),23) move(2,(9,13),(8,13),24) move(2,(8,13),(7,13),26) move(2,(7,13),(7,12),27) move(2,(7,12),(7,11),28) move(2,(7,11),(6,11),29) move(2,(6,11),(7,11),30) move(2,(7,11),(7,12),31) move(2,(7,12),(7,13),33) move(2,(7,13),(7,12),34) move(2,(7,12),(7,11),35) move(2,(7,11),(8,11),36) move(2,(8,11),(9,11),37) move(2,(9,11),(10,11),38) move(2,(10,11),(11,11),39) move(2,(11,11),(11,12),40) move(3,(12,3),(11,3),3) move(3,(11,3),(10,3),4) move(3,(10,3),(9,3),5) move(3,(9,3),(9,2),6) move(3,(9,2),(9,1),7) move(3,(9,1),(8,1),8) move(3,(8,1),(7,1),9) move(3,(7,1),(7,2),10) move(3,(7,2),(7,3),11) move(3,(7,3),(6,3),12) move(3,(6,3),(5,3),13) move(3,(5,3),(4,3),14) move(3,(4,3),(3,3),15) move(3,(3,3),(2,3),16) move(3,(2,3),(1,3),17) move(3,(1,3),(1,4),18) move(3,(1,4),(1,5),19) move(3,(1,5),(2,5),20) move(3,(2,5),(3,5),21) move(3,(3,5),(3,6),22) move(3,(3,6),(3,5),23) move(3,(3,5),(3,6),30) move(3,(3,6),(3,7),31) move(3,(3,7),(2,7),32) move(3,(2,7),(1,7),33) move(3,(1,7),(1,8),34) move(3,(1,8),(1,9),35) move(3,(1,9),(2,9),36) move(3,(2,9),(3,9),37) move(3,(3,9),(4,9),38) move(3,(4,9),(5,9),39) move(3,(5,9),(4,9),40) move(3,(4,9),(3,9),41) move(3,(3,9),(3,10),42) move(4,(5,6),(5,5),2) move(4,(5,5),(4,5),21) move(4,(4,5),(3,5),22) move(4,(3,5),(2,5),23) move(4,(2,5),(1,5),24) move(4,(1,5),(1,4),25) move(4,(1,4),(1,3),26) move(4,(1,3),(2,3),27) move(4,(2,3),(3,3),28) move(4,(3,3),(4,3),29) move(4,(4,3),(5,3),30) move(4,(5,3),(6,3),31) move(4,(6,3),(7,3),32) move(4,(7,3),(7,2),33) move(4,(7,2),(7,1),34) move(4,(7,1),(8,1),35) move(4,(8,1),(9,1),36) move(4,(9,1),(9,2),37) move(4,(9,2),(9,3),38) move(4,(9,3),(9,4),39) move(4,(9,4),(9,5),40) move(4,(9,5),(10,5),42) move(5,(11,8),(11,9),5) move(5,(11,9),(12,9),6) move(5,(12,9),(13,9),7) move(5,(13,9),(13,8),8) move(6,(9,7),(9,6),1) move(6,(9,6),(9,5),2) move(6,(9,5),(9,4),3) move(6,(9,4),(9,3),4) move(6,(9,3),(9,2),5) move(6,(9,2),(9,1),6) move(6,(9,1),(8,1),7) move(6,(8,1),(7,1),8) move(6,(7,1),(7,2),9) move(6,(7,2),(7,3),10) move(6,(7,3),(6,3),11) move(6,(6,3),(5,3),12) move(6,(5,3),(4,3),13) move(6,(4,3),(3,3),14) move(6,(3,3),(2,3),15) move(6,(2,3),(1,3),16) move(6,(1,3),(1,4),17) move(6,(1,4),(1,5),18) move(6,(1,5),(2,5),19) move(6,(2,5),(3,5),20) move(6,(3,5),(3,6),21) move(6,(3,6),(3,7),22) move(6,(3,7),(2,7),23) move(6,(2,7),(1,7),24) move(6,(1,7),(1,8),25) move(6,(1,8),(1,9),26) move(6,(1,9),(2,9),27) move(6,(2,9),(3,9),28) move(6,(3,9),(4,9),29) move(6,(4,9),(5,9),30) move(6,(5,9),(5,10),31) move(6,(5,10),(5,11),32) move(6,(5,11),(6,11),33) move(6,(6,11),(7,11),34) move(6,(7,11),(8,11),35) move(6,(8,11),(9,11),36) move(6,(9,11),(10,11),37) move(6,(10,11),(11,11),38) move(6,(11,11),(11,12),39) move(6,(11,12),(11,13),40) move(6,(11,13),(12,13),41) move(6,(12,13),(13,13),42) move(7,(3,3),(2,3),1) move(7,(2,3),(1,3),2) move(7,(1,3),(1,4),3) move(7,(1,4),(1,5),4) move(7,(1,5),(2,5),5) move(7,(2,5),(3,5),6) move(7,(3,5),(3,6),7) move(7,(3,6),(3,7),8) move(7,(3,7),(2,7),9) move(7,(2,7),(1,7),10) move(7,(1,7),(1,8),11) move(7,(1,8),(1,9),12) move(7,(1,9),(1,10),13) move(7,(1,10),(1,9),15) move(7,(1,9),(2,9),16) move(7,(2,9),(3,9),17) move(7,(3,9),(3,10),21) move(7,(3,10),(3,9),22) move(7,(3,9),(3,10),23) move(7,(3,10),(3,9),24) move(7,(3,9),(4,9),27) move(7,(4,9),(5,9),28) move(7,(5,9),(5,10),29) move(7,(5,10),(5,11),30) move(7,(5,11),(6,11),31) move(7,(6,11),(7,11),32) move(7,(7,11),(8,11),34) move(7,(8,11),(9,11),35) move(7,(9,11),(10,11),36) move(7,(10,11),(11,11),37) move(7,(11,11),(11,12),38) move(7,(11,12),(11,13),39) move(7,(11,13),(12,13),40) move(7,(12,13),(13,13),41) move(7,(13,13),(13,12),42) move(8,(1,9),(2,9),2) move(8,(2,9),(3,9),4) move(8,(3,9),(2,9),5) move(8,(2,9),(1,9),6) move(8,(1,9),(2,9),10) move(8,(2,9),(3,9),11) move(8,(3,9),(2,9),12) move(8,(2,9),(1,9),13) move(8,(1,9),(1,8),15) move(8,(1,8),(1,9),16) move(8,(1,9),(2,9),18) move(8,(2,9),(1,9),19) move(8,(1,9),(2,9),20) move(8,(2,9),(3,9),21) move(8,(3,9),(2,9),22) move(8,(2,9),(3,9),23) move(8,(3,9),(2,9),24) move(8,(2,9),(1,9),25) move(8,(1,9),(1,10),26) move(8,(1,10),(1,9),27) move(8,(1,9),(2,9),31) move(8,(2,9),(3,9),32) move(8,(3,9),(2,9),34) move(8,(2,9),(3,9),35) move(8,(3,9),(3,10),37) move(8,(3,10),(3,9),38) move(8,(3,9),(2,9),39) move(8,(2,9),(1,9),40) move(8,(1,9),(2,9),41) move(8,(2,9),(3,9),42) move(9,(3,10),(3,9),3) move(9,(3,9),(4,9),4) move(9,(4,9),(5,9),5) move(9,(5,9),(5,10),6) move(9,(5,10),(5,11),7) move(9,(5,11),(6,11),18) move(9,(6,11),(7,11),19) move(9,(7,11),(7,12),20) move(9,(7,12),(7,11),21) move(9,(7,11),(6,11),28) move(9,(6,11),(5,11),29) move(9,(5,11),(5,12),30) move(9,(5,12),(5,11),31) move(9,(5,11),(5,12),32) move(9,(5,12),(5,11),33) move(9,(5,11),(6,11),40) move(9,(6,11),(7,11),41) move(9,(7,11),(7,12),42) move(10,(9,14),(9,15),25) move(10,(9,15),(9,14),26) move(10,(9,14),(9,15),42)
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.061s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.037s

Choices      : 1104     (Domain: 1104)
Conflicts    : 55       (Analyzed: 55)
Restarts     : 0       
Model-Level  : 257.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 55       (Deleted: 0)
  Binary     : 20       (Ratio:  36.36%)
  Ternary    : 4        (Ratio:   7.27%)
  Conflict   : 55       (Average Length:   19.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 55       (Average: 15.40 Max: 156 Sum:    847)
  Executed   : 55       (Average: 15.40 Max: 156 Sum:    847 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 298368   (Original: 269000)
  Choice     : 420     
  Heuristic  : 20099    (Original: 22816)
Atoms        : 120240  
Bodies       : 190297   (Original: 158212)
  Count      : 2708     (Original: 4469)
Equivalences : 315353   (Atom=Atom: 617 Body=Body: 681 Other: 314055)
Tight        : Yes
Variables    : 172807   (Eliminated:    0 Frozen: 94403)
Constraints  : 390641   (Binary:  79.9% Ternary:  13.6% Other:   6.5%)

