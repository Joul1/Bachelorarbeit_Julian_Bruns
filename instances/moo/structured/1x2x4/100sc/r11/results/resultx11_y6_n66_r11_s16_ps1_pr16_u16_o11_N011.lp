%%%%%
%Standard
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(2,3)),4).
move(1,((2,3),(2,4)),5).
move(1,((2,4),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,6)),4).
move(2,((4,6),(4,5)),5).
move(2,((4,5),(5,5)),6).
move(2,((5,5),(5,4)),7).
move(2,((5,4),(5,3)),8).
move(2,((5,3),(4,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(4,5)),2).
move(3,((4,5),(5,5)),3).
move(3,((5,5),(6,5)),4).
move(3,((6,5),(7,5)),5).
move(3,((7,5),(7,4)),6).
move(3,((7,4),(6,4)),7).
move(3,((6,4),(5,4)),8).
move(3,((5,4),(5,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(7,3)),6).
move(4,((7,3),(7,2)),7).
move(4,((7,2),(7,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(8,5)),4).
move(5,((8,5),(8,4)),5).
move(5,((8,4),(8,3)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(9,2)),4).
move(6,((9,2),(8,2)),5).
move(6,((8,2),(8,3)),6).
move(6,((8,3),(8,2)),7).
move(6,((8,2),(9,2)),8).
move(6,((9,2),(9,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(3,5)),8).
move(9,((3,5),(3,4)),9).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(7,4)),4).
move(10,((7,4),(6,4)),5).
move(10,((6,4),(5,4)),6).
move(10,((5,4),(4,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(6,5)),9).
move(11,((6,5),(6,4)),10).
move(11,((6,4),(5,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.943s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 0.906s

Choices      : 999     
Conflicts    : 50       (Analyzed: 50)
Restarts     : 0       
Model-Level  : 296.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 50       (Deleted: 0)
  Binary     : 9        (Ratio:  18.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 50       (Average Length:   22.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 50       (Average: 14.06 Max:  98 Sum:    703)
  Executed   : 50       (Average: 14.06 Max:  98 Sum:    703 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165688   (Original: 153701)
  Choice     : 220     
Atoms        : 69035   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(2,3)),4).
move(1,((2,3),(2,4)),5).
move(1,((2,4),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,6)),4).
move(2,((4,6),(4,5)),5).
move(2,((4,5),(5,5)),6).
move(2,((5,5),(5,4)),7).
move(2,((5,4),(5,3)),8).
move(2,((5,3),(4,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(4,5)),2).
move(3,((4,5),(5,5)),3).
move(3,((5,5),(6,5)),4).
move(3,((6,5),(7,5)),5).
move(3,((7,5),(7,4)),6).
move(3,((7,4),(6,4)),7).
move(3,((6,4),(5,4)),8).
move(3,((5,4),(5,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(7,3)),6).
move(4,((7,3),(7,2)),7).
move(4,((7,2),(7,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(8,5)),4).
move(5,((8,5),(8,4)),5).
move(5,((8,4),(8,3)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(9,2)),4).
move(6,((9,2),(8,2)),5).
move(6,((8,2),(8,3)),6).
move(6,((8,3),(8,2)),7).
move(6,((8,2),(9,2)),8).
move(6,((9,2),(9,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(3,5)),8).
move(9,((3,5),(3,4)),9).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(7,4)),4).
move(10,((7,4),(6,4)),5).
move(10,((6,4),(5,4)),6).
move(10,((5,4),(4,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),9).
move(11,((5,6),(5,5)),10).
move(11,((5,5),(5,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.861s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.859s

Choices      : 1022    
Conflicts    : 50       (Analyzed: 50)
Restarts     : 0       
Model-Level  : 299.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 50       (Deleted: 0)
  Binary     : 9        (Ratio:  18.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 50       (Average Length:   22.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 50       (Average: 14.46 Max:  99 Sum:    723)
  Executed   : 50       (Average: 14.46 Max:  99 Sum:    723 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165902   (Original: 153915)
  Choice     : 220     
  Heuristic  : 88      
Atoms        : 69161   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(2,3)),4).
move(1,((2,3),(2,4)),5).
move(1,((2,4),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,6)),4).
move(2,((4,6),(4,5)),5).
move(2,((4,5),(5,5)),6).
move(2,((5,5),(5,4)),7).
move(2,((5,4),(5,3)),8).
move(2,((5,3),(4,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(4,5)),2).
move(3,((4,5),(5,5)),3).
move(3,((5,5),(6,5)),4).
move(3,((6,5),(7,5)),5).
move(3,((7,5),(7,4)),6).
move(3,((7,4),(6,4)),7).
move(3,((6,4),(5,4)),8).
move(3,((5,4),(5,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(7,3)),6).
move(4,((7,3),(7,2)),7).
move(4,((7,2),(7,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(8,5)),4).
move(5,((8,5),(8,4)),5).
move(5,((8,4),(8,3)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(9,2)),4).
move(6,((9,2),(8,2)),5).
move(6,((8,2),(8,3)),6).
move(6,((8,3),(8,2)),7).
move(6,((8,2),(9,2)),8).
move(6,((9,2),(9,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(3,5)),8).
move(9,((3,5),(3,4)),9).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(7,4)),4).
move(10,((7,4),(6,4)),5).
move(10,((6,4),(5,4)),6).
move(10,((5,4),(4,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(6,5)),9).
move(11,((6,5),(6,4)),10).
move(11,((6,4),(5,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.923s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.922s

Choices      : 1010    
Conflicts    : 50       (Analyzed: 50)
Restarts     : 0       
Model-Level  : 299.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 50       (Deleted: 0)
  Binary     : 9        (Ratio:  18.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 50       (Average Length:   22.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 50       (Average: 14.22 Max:  98 Sum:    711)
  Executed   : 50       (Average: 14.22 Max:  98 Sum:    711 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165825   (Original: 153838)
  Choice     : 220     
Atoms        : 69172   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),4).
move(1,((1,2),(1,1)),5).
move(1,((1,1),(2,1)),6).
move(1,((2,1),(3,1)),7).
move(1,((3,1),(3,2)),8).
move(1,((3,2),(3,3)),9).
move(1,((3,3),(3,2)),10).
move(1,((3,2),(3,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(2,2)),4).
move(2,((2,2),(2,1)),5).
move(2,((2,1),(3,1)),6).
move(2,((3,1),(4,1)),7).
move(2,((4,1),(4,2)),8).
move(2,((4,2),(4,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(3,1)),5).
move(3,((3,1),(4,1)),6).
move(3,((4,1),(4,2)),7).
move(3,((4,2),(5,2)),8).
move(3,((5,2),(5,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(5,3)),4).
move(4,((5,3),(5,2)),5).
move(4,((5,2),(6,2)),6).
move(4,((6,2),(7,2)),7).
move(4,((7,2),(7,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),4).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(7,3)),6).
move(5,((7,3),(8,3)),7).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(8,5)),2).
move(6,((8,5),(8,4)),4).
move(6,((8,4),(9,4)),6).
move(6,((9,4),(9,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(3,5)),5).
move(8,((3,5),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),5).
move(9,((6,6),(6,5)),6).
move(9,((6,5),(5,5)),7).
move(9,((5,5),(4,5)),8).
move(9,((4,5),(3,5)),9).
move(9,((3,5),(3,4)),10).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(7,4)),6).
move(11,((7,4),(7,3)),7).
move(11,((7,3),(6,3)),8).
move(11,((6,3),(6,4)),9).
move(11,((6,4),(5,4)),10).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.862s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.859s

Choices      : 1106    
Conflicts    : 64       (Analyzed: 64)
Restarts     : 0       
Model-Level  : 351.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 64       (Deleted: 0)
  Binary     : 12       (Ratio:  18.75%)
  Ternary    : 4        (Ratio:   6.25%)
  Conflict   : 64       (Average Length:   20.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 64       (Average: 11.80 Max: 100 Sum:    755)
  Executed   : 64       (Average: 11.80 Max: 100 Sum:    755 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 166866   (Original: 154901)
  Choice     : 220     
  Heuristic  : 974      (Original: 996)
Atoms        : 69239   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),4).
move(1,((1,2),(2,2)),5).
move(1,((2,2),(3,2)),8).
move(1,((3,2),(3,3)),9).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),5).
move(2,((4,4),(4,3)),6).
move(2,((4,3),(4,2)),7).
move(2,((4,2),(4,3)),8).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(4,3)),4).
move(3,((4,3),(5,3)),5).
move(3,((5,3),(5,4)),6).
move(3,((5,4),(5,3)),7).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(7,3)),7).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),5).
move(5,((6,3),(7,3)),6).
move(5,((7,3),(8,3)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(9,2)),4).
move(6,((9,2),(8,2)),5).
move(6,((8,2),(8,3)),6).
move(6,((8,3),(9,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(5,6)),5).
move(9,((5,6),(4,6)),6).
move(9,((4,6),(3,6)),7).
move(9,((3,6),(3,5)),8).
move(9,((3,5),(3,4)),10).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(10,4)),3).
move(11,((10,4),(9,4)),5).
move(11,((9,4),(8,4)),6).
move(11,((8,4),(7,4)),7).
move(11,((7,4),(6,4)),8).
move(11,((6,4),(5,4)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.875s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.875s

Choices      : 1068    
Conflicts    : 55       (Analyzed: 55)
Restarts     : 0       
Model-Level  : 277.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 55       (Deleted: 0)
  Binary     : 11       (Ratio:  20.00%)
  Ternary    : 1        (Ratio:   1.82%)
  Conflict   : 55       (Average Length:   19.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 55       (Average: 14.38 Max: 109 Sum:    791)
  Executed   : 55       (Average: 14.38 Max: 109 Sum:    791 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 166367   (Original: 154383)
  Choice     : 220     
  Heuristic  : 553      (Original: 556)
Atoms        : 69161   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(3,6)),3).
move(1,((3,6),(3,5)),4).
move(1,((3,5),(3,4)),5).
move(1,((3,4),(3,3)),6).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),5).
move(2,((4,4),(4,3)),6).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(4,5)),2).
move(3,((4,5),(4,4)),3).
move(3,((4,4),(5,4)),4).
move(3,((5,4),(5,3)),5).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(7,4)),6).
move(4,((7,4),(7,3)),7).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),4).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(7,3)),6).
move(5,((7,3),(8,3)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),4).
move(6,((9,3),(9,2)),6).
move(6,((9,2),(9,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(7,((10,4),(10,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(3,5)),5).
move(8,((3,5),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),5).
move(9,((6,6),(5,6)),6).
move(9,((5,6),(4,6)),7).
move(9,((4,6),(4,5)),8).
move(9,((4,5),(3,5)),9).
move(9,((3,5),(3,4)),10).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),3).
move(10,((8,4),(7,4)),4).
move(10,((7,4),(6,4)),5).
move(10,((6,4),(5,4)),6).
move(10,((5,4),(4,4)),7).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(10,4)),3).
move(11,((10,4),(9,4)),5).
move(11,((9,4),(8,4)),6).
move(11,((8,4),(7,4)),7).
move(11,((7,4),(6,4)),8).
move(11,((6,4),(5,4)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.893s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.891s

Choices      : 907     
Conflicts    : 51       (Analyzed: 51)
Restarts     : 0       
Model-Level  : 361.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 51       (Deleted: 0)
  Binary     : 13       (Ratio:  25.49%)
  Ternary    : 1        (Ratio:   1.96%)
  Conflict   : 51       (Average Length:   18.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 51       (Average: 10.71 Max:  66 Sum:    546)
  Executed   : 51       (Average: 10.71 Max:  66 Sum:    546 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176473   (Original: 164618)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69161   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(2,1)),9).
move(1,((2,1),(1,1)),10).
move(1,((1,1),(1,2)),11).
move(1,((1,2),(2,2)),12).
move(1,((2,2),(2,3)),13).
move(1,((2,3),(2,4)),14).
move(1,((2,4),(2,3)),19).
move(1,((2,3),(3,3)),20).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(3,2)),7).
move(2,((3,2),(3,1)),8).
move(2,((3,1),(3,2)),9).
move(2,((3,2),(2,2)),10).
move(2,((2,2),(2,3)),11).
move(2,((2,3),(2,4)),12).
move(2,((2,4),(3,4)),14).
move(2,((3,4),(3,3)),19).
move(2,((3,3),(4,3)),20).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),5).
move(3,((3,3),(3,2)),6).
move(3,((3,2),(2,2)),7).
move(3,((2,2),(1,2)),8).
move(3,((1,2),(2,2)),11).
move(3,((2,2),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(4,3)),19).
move(3,((4,3),(5,3)),20).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,2)),6).
move(4,((4,2),(4,1)),7).
move(4,((4,1),(4,2)),8).
move(4,((4,2),(4,3)),9).
move(4,((4,3),(4,4)),10).
move(4,((4,4),(4,3)),17).
move(4,((4,3),(5,3)),18).
move(4,((5,3),(6,3)),19).
move(4,((6,3),(7,3)),20).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(5,2)),8).
move(5,((5,2),(5,3)),9).
move(5,((5,3),(5,4)),10).
move(5,((5,4),(5,3)),17).
move(5,((5,3),(6,3)),18).
move(5,((6,3),(7,3)),19).
move(5,((7,3),(8,3)),20).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,2)),7).
move(6,((9,2),(10,2)),8).
move(6,((10,2),(11,2)),9).
move(6,((11,2),(11,1)),10).
move(6,((11,1),(10,1)),11).
move(6,((10,1),(10,2)),12).
move(6,((10,2),(9,2)),13).
move(6,((9,2),(9,3)),14).
move(6,((9,3),(9,4)),15).
move(6,((9,4),(9,3)),16).
move(6,((9,3),(9,4)),17).
move(6,((9,4),(9,3)),20).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(6,1)),7).
move(7,((6,1),(6,2)),8).
move(7,((6,2),(6,3)),9).
move(7,((6,3),(6,4)),10).
move(7,((6,4),(6,3)),16).
move(7,((6,3),(7,3)),17).
move(7,((7,3),(8,3)),18).
move(7,((8,3),(9,3)),19).
move(7,((9,3),(10,3)),20).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(7,4)),10).
move(8,((7,4),(6,4)),16).
move(8,((6,4),(5,4)),17).
move(8,((5,4),(4,4)),18).
move(8,((4,4),(3,4)),19).
move(8,((3,4),(2,4)),20).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(10,6)),3).
move(9,((10,6),(10,5)),4).
move(9,((10,5),(10,4)),6).
move(9,((10,4),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(9,((11,3),(10,3)),9).
move(9,((10,3),(10,4)),11).
move(9,((10,4),(9,4)),14).
move(9,((9,4),(8,4)),15).
move(9,((8,4),(7,4)),16).
move(9,((7,4),(6,4)),17).
move(9,((6,4),(5,4)),18).
move(9,((5,4),(4,4)),19).
move(9,((4,4),(3,4)),20).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,3)),5).
move(10,((8,3),(8,2)),6).
move(10,((8,2),(8,1)),7).
move(10,((8,1),(9,1)),8).
move(10,((9,1),(9,2)),9).
move(10,((9,2),(8,2)),10).
move(10,((8,2),(8,3)),11).
move(10,((8,3),(8,4)),12).
move(10,((8,4),(8,3)),15).
move(10,((8,3),(8,4)),16).
move(10,((8,4),(7,4)),17).
move(10,((7,4),(6,4)),18).
move(10,((6,4),(5,4)),19).
move(10,((5,4),(4,4)),20).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(10,2)),7).
move(11,((10,2),(10,1)),8).
move(11,((10,1),(10,2)),10).
move(11,((10,2),(10,3)),11).
move(11,((10,3),(10,4)),14).
move(11,((10,4),(9,4)),16).
move(11,((9,4),(8,4)),17).
move(11,((8,4),(7,4)),18).
move(11,((7,4),(6,4)),19).
move(11,((6,4),(5,4)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.712s (Solving: 0.01s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 0.703s

Choices      : 177      (Domain: 177)
Conflicts    : 1        (Analyzed: 1)
Restarts     : 0       
Model-Level  : 162.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 1        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 1        (Average Length:    5.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 1        (Average: 15.00 Max:  15 Sum:     15)
  Executed   : 1        (Average: 15.00 Max:  15 Sum:     15 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176473   (Original: 164618)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69161   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

