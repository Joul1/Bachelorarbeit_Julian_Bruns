%%%%%
%Standard
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(4,6)),4).
move(1,((4,6),(4,5)),5).
move(1,((4,5),(4,4)),6).
move(1,((4,4),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),3).
move(2,((3,5),(3,6)),5).
move(2,((3,6),(2,6)),6).
move(2,((2,6),(2,5)),7).
move(2,((2,5),(3,5)),8).
move(2,((3,5),(3,4)),10).
move(2,((3,4),(4,4)),11).
move(2,((4,4),(4,3)),12).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(3,3)),4).
move(3,((3,3),(3,4)),5).
move(3,((3,4),(3,3)),7).
move(3,((3,3),(3,2)),8).
move(3,((3,2),(4,2)),9).
move(3,((4,2),(5,2)),10).
move(3,((5,2),(5,3)),11).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(4,5)),2).
move(4,((4,5),(5,5)),3).
move(4,((5,5),(5,6)),4).
move(4,((5,6),(6,6)),5).
move(4,((6,6),(7,6)),6).
move(4,((7,6),(7,5)),8).
move(4,((7,5),(7,4)),9).
move(4,((7,4),(7,3)),10).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(4,5)),3).
move(5,((4,5),(5,5)),4).
move(5,((5,5),(6,5)),5).
move(5,((6,5),(6,4)),6).
move(5,((6,4),(7,4)),7).
move(5,((7,4),(8,4)),8).
move(5,((8,4),(8,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(6,5)),2).
move(6,((6,5),(7,5)),3).
move(6,((7,5),(8,5)),4).
move(6,((8,5),(8,4)),5).
move(6,((8,4),(9,4)),6).
move(6,((9,4),(9,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),3).
move(7,((7,4),(8,4)),4).
move(7,((8,4),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),8).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.841s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.844s

Choices      : 1086    
Conflicts    : 63       (Analyzed: 63)
Restarts     : 0       
Model-Level  : 159.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 63       (Deleted: 0)
  Binary     : 15       (Ratio:  23.81%)
  Ternary    : 3        (Ratio:   4.76%)
  Conflict   : 63       (Average Length:   18.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 63       (Average: 14.71 Max:  87 Sum:    927)
  Executed   : 63       (Average: 14.71 Max:  87 Sum:    927 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 123157   (Original: 113614)
  Choice     : 160     
Atoms        : 51947   
Bodies       : 84220    (Original: 74677)
  Count      : 1172     (Original: 1569)
Equivalences : 45406    (Atom=Atom: 182 Body=Body: 191 Other: 45033)
Tight        : Yes
Variables    : 83041    (Eliminated:    0 Frozen: 44723)
Constraints  : 218125   (Binary:  79.6% Ternary:  14.5% Other:   5.9%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(5,5)),4).
move(1,((5,5),(5,4)),5).
move(1,((5,4),(4,4)),6).
move(1,((4,4),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(1,3)),3).
move(2,((1,3),(1,2)),4).
move(2,((1,2),(1,1)),5).
move(2,((1,1),(2,1)),6).
move(2,((2,1),(3,1)),7).
move(2,((3,1),(3,2)),8).
move(2,((3,2),(2,2)),9).
move(2,((2,2),(3,2)),10).
move(2,((3,2),(4,2)),11).
move(2,((4,2),(4,3)),12).
move(3,((2,6),(1,6)),1).
move(3,((1,6),(1,5)),2).
move(3,((1,5),(2,5)),3).
move(3,((2,5),(3,5)),4).
move(3,((3,5),(4,5)),5).
move(3,((4,5),(5,5)),6).
move(3,((5,5),(5,4)),7).
move(3,((5,4),(5,3)),8).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(4,5)),2).
move(4,((4,5),(5,5)),3).
move(4,((5,5),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(8,5)),6).
move(4,((8,5),(8,4)),8).
move(4,((8,4),(7,4)),9).
move(4,((7,4),(7,3)),10).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(5,4)),4).
move(5,((5,4),(6,4)),5).
move(5,((6,4),(6,3)),7).
move(5,((6,3),(7,3)),8).
move(5,((7,3),(8,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(6,3)),4).
move(6,((6,3),(7,3)),5).
move(6,((7,3),(8,3)),6).
move(6,((8,3),(9,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),5).
move(7,((9,5),(9,4)),6).
move(7,((9,4),(9,3)),7).
move(7,((9,3),(10,3)),8).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.658s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.672s

Choices      : 1050    
Conflicts    : 54       (Analyzed: 54)
Restarts     : 0       
Model-Level  : 160.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 54       (Deleted: 0)
  Binary     : 14       (Ratio:  25.93%)
  Ternary    : 2        (Ratio:   3.70%)
  Conflict   : 54       (Average Length:   17.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 54       (Average: 16.48 Max:  87 Sum:    890)
  Executed   : 54       (Average: 16.48 Max:  87 Sum:    890 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 123345   (Original: 113802)
  Choice     : 160     
  Heuristic  : 89      
Atoms        : 52046   
Bodies       : 84220    (Original: 74677)
  Count      : 1172     (Original: 1569)
Equivalences : 45406    (Atom=Atom: 182 Body=Body: 191 Other: 45033)
Tight        : Yes
Variables    : 83041    (Eliminated:    0 Frozen: 44723)
Constraints  : 218125   (Binary:  79.6% Ternary:  14.5% Other:   5.9%)

%%%%%
%hDistance.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(5,5)),4).
move(1,((5,5),(5,4)),5).
move(1,((5,4),(4,4)),6).
move(1,((4,4),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(1,3)),3).
move(2,((1,3),(1,2)),4).
move(2,((1,2),(1,1)),5).
move(2,((1,1),(2,1)),6).
move(2,((2,1),(1,1)),7).
move(2,((1,1),(2,1)),8).
move(2,((2,1),(2,2)),9).
move(2,((2,2),(3,2)),10).
move(2,((3,2),(4,2)),11).
move(2,((4,2),(4,3)),12).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(3,5)),2).
move(3,((3,5),(4,5)),5).
move(3,((4,5),(5,5)),6).
move(3,((5,5),(5,4)),7).
move(3,((5,4),(5,3)),8).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(4,5)),2).
move(4,((4,5),(5,5)),3).
move(4,((5,5),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(8,5)),6).
move(4,((8,5),(7,5)),8).
move(4,((7,5),(7,4)),9).
move(4,((7,4),(7,3)),10).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(5,4)),4).
move(5,((5,4),(6,4)),5).
move(5,((6,4),(7,4)),7).
move(5,((7,4),(8,4)),8).
move(5,((8,4),(8,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(6,3)),4).
move(6,((6,3),(7,3)),5).
move(6,((7,3),(8,3)),6).
move(6,((8,3),(9,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),5).
move(7,((9,5),(9,4)),6).
move(7,((9,4),(9,3)),7).
move(7,((9,3),(10,3)),8).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.548s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.547s

Choices      : 975     
Conflicts    : 51       (Analyzed: 51)
Restarts     : 0       
Model-Level  : 158.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 51       (Deleted: 0)
  Binary     : 14       (Ratio:  27.45%)
  Ternary    : 1        (Ratio:   1.96%)
  Conflict   : 51       (Average Length:   18.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 51       (Average: 16.02 Max:  87 Sum:    817)
  Executed   : 51       (Average: 16.02 Max:  87 Sum:    817 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 123264   (Original: 113721)
  Choice     : 160     
Atoms        : 52054   
Bodies       : 84220    (Original: 74677)
  Count      : 1172     (Original: 1569)
Equivalences : 45406    (Atom=Atom: 182 Body=Body: 191 Other: 45033)
Tight        : Yes
Variables    : 83041    (Eliminated:    0 Frozen: 44723)
Constraints  : 218125   (Binary:  79.6% Ternary:  14.5% Other:   5.9%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(2,5)),3).
move(2,((2,5),(2,4)),4).
move(2,((2,4),(3,4)),5).
move(2,((3,4),(4,4)),6).
move(2,((4,4),(4,3)),7).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),3).
move(3,((4,6),(4,5)),4).
move(3,((4,5),(4,4)),5).
move(3,((4,4),(5,4)),6).
move(3,((5,4),(5,3)),7).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(4,4)),3).
move(4,((4,4),(5,4)),4).
move(4,((5,4),(5,5)),5).
move(4,((5,5),(6,5)),6).
move(4,((6,5),(6,4)),7).
move(4,((6,4),(7,4)),8).
move(4,((7,4),(7,3)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(5,5)),2).
move(5,((5,5),(5,4)),3).
move(5,((5,4),(6,4)),4).
move(5,((6,4),(7,4)),6).
move(5,((7,4),(8,4)),7).
move(5,((8,4),(8,3)),8).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(6,4)),3).
move(6,((6,4),(7,4)),4).
move(6,((7,4),(8,4)),6).
move(6,((8,4),(9,4)),7).
move(6,((9,4),(9,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),3).
move(7,((7,4),(8,4)),4).
move(7,((8,4),(9,4)),5).
move(7,((9,4),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),3).
move(8,((5,6),(4,6)),4).
move(8,((4,6),(3,6)),5).
move(8,((3,6),(2,6)),6).
move(8,((2,6),(2,5)),7).
move(8,((2,5),(2,4)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.545s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.547s

Choices      : 720     
Conflicts    : 43       (Analyzed: 43)
Restarts     : 0       
Model-Level  : 230.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 43       (Deleted: 0)
  Binary     : 12       (Ratio:  27.91%)
  Ternary    : 4        (Ratio:   9.30%)
  Conflict   : 43       (Average Length:   17.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 43       (Average: 11.40 Max:  98 Sum:    490)
  Executed   : 43       (Average: 11.40 Max:  98 Sum:    490 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 124272   (Original: 114745)
  Choice     : 160     
  Heuristic  : 953      (Original: 969)
Atoms        : 52109   
Bodies       : 84220    (Original: 74677)
  Count      : 1172     (Original: 1569)
Equivalences : 45406    (Atom=Atom: 182 Body=Body: 191 Other: 45033)
Tight        : Yes
Variables    : 83041    (Eliminated:    0 Frozen: 44723)
Constraints  : 218125   (Binary:  79.6% Ternary:  14.5% Other:   5.9%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(5,5)),4).
move(1,((5,5),(5,4)),5).
move(1,((5,4),(4,4)),6).
move(1,((4,4),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(6,6)),5).
move(2,((6,6),(6,5)),6).
move(2,((6,5),(5,5)),9).
move(2,((5,5),(5,4)),10).
move(2,((5,4),(4,4)),11).
move(2,((4,4),(4,3)),12).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(2,2)),4).
move(3,((2,2),(3,2)),5).
move(3,((3,2),(4,2)),6).
move(3,((4,2),(5,2)),7).
move(3,((5,2),(5,3)),8).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(4,4)),3).
move(4,((4,4),(5,4)),4).
move(4,((5,4),(6,4)),5).
move(4,((6,4),(6,3)),6).
move(4,((6,3),(6,2)),8).
move(4,((6,2),(7,2)),9).
move(4,((7,2),(7,3)),10).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(4,3)),3).
move(5,((4,3),(4,2)),4).
move(5,((4,2),(5,2)),5).
move(5,((5,2),(6,2)),6).
move(5,((6,2),(7,2)),7).
move(5,((7,2),(8,2)),8).
move(5,((8,2),(8,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(6,5)),2).
move(6,((6,5),(7,5)),3).
move(6,((7,5),(8,5)),4).
move(6,((8,5),(8,4)),5).
move(6,((8,4),(8,3)),6).
move(6,((8,3),(9,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(7,((10,4),(10,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(4,4)),5).
move(8,((4,4),(3,4)),6).
move(8,((3,4),(2,4)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.541s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.531s

Choices      : 969     
Conflicts    : 42       (Analyzed: 42)
Restarts     : 0       
Model-Level  : 184.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 42       (Deleted: 0)
  Binary     : 9        (Ratio:  21.43%)
  Ternary    : 1        (Ratio:   2.38%)
  Conflict   : 42       (Average Length:   21.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 42       (Average: 18.69 Max:  91 Sum:    785)
  Executed   : 42       (Average: 18.69 Max:  91 Sum:    785 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 123685   (Original: 114142)
  Choice     : 160     
  Heuristic  : 429     
Atoms        : 52046   
Bodies       : 84220    (Original: 74677)
  Count      : 1172     (Original: 1569)
Equivalences : 45406    (Atom=Atom: 182 Body=Body: 191 Other: 45033)
Tight        : Yes
Variables    : 83041    (Eliminated:    0 Frozen: 44723)
Constraints  : 218125   (Binary:  79.6% Ternary:  14.5% Other:   5.9%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(2,4)),3).
move(2,((2,4),(2,3)),4).
move(2,((2,3),(3,3)),5).
move(2,((3,3),(4,3)),6).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(3,5)),3).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(4,4)),5).
move(3,((4,4),(5,4)),6).
move(3,((5,4),(5,3)),7).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(5,3)),6).
move(4,((5,3),(6,3)),7).
move(4,((6,3),(7,3)),8).
move(5,((4,6),(4,5)),2).
move(5,((4,5),(4,4)),3).
move(5,((4,4),(5,4)),4).
move(5,((5,4),(6,4)),5).
move(5,((6,4),(6,3)),6).
move(5,((6,3),(7,3)),7).
move(5,((7,3),(8,3)),8).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(6,5)),2).
move(6,((6,5),(7,5)),3).
move(6,((7,5),(7,4)),4).
move(6,((7,4),(8,4)),6).
move(6,((8,4),(9,4)),7).
move(6,((9,4),(9,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),6).
move(8,((2,6),(2,5)),7).
move(8,((2,5),(2,4)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.553s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.547s

Choices      : 540     
Conflicts    : 35       (Analyzed: 35)
Restarts     : 0       
Model-Level  : 254.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 35       (Deleted: 0)
  Binary     : 11       (Ratio:  31.43%)
  Ternary    : 1        (Ratio:   2.86%)
  Conflict   : 35       (Average Length:   19.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 35       (Average:  8.17 Max:  30 Sum:    286)
  Executed   : 35       (Average:  8.17 Max:  30 Sum:    286 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 131152   (Original: 121681)
  Choice     : 160     
  Heuristic  : 7896     (Original: 7968)
Atoms        : 52046   
Bodies       : 84220    (Original: 74677)
  Count      : 1172     (Original: 1569)
Equivalences : 45406    (Atom=Atom: 182 Body=Body: 191 Other: 45033)
Tight        : Yes
Variables    : 83041    (Eliminated:    0 Frozen: 44723)
Constraints  : 218125   (Binary:  79.6% Ternary:  14.5% Other:   5.9%)

%%%%%
%hStrange.lp
%%%%%
move(1,((8,6),(7,6)),2).
move(1,((7,6),(7,5)),3).
move(1,((7,5),(7,6)),4).
move(1,((7,6),(7,5)),5).
move(1,((7,5),(7,4)),6).
move(1,((7,4),(8,4)),7).
move(1,((8,4),(8,3)),8).
move(1,((8,3),(8,2)),9).
move(1,((8,2),(9,2)),10).
move(1,((9,2),(10,2)),11).
move(1,((10,2),(9,2)),12).
move(1,((9,2),(8,2)),13).
move(1,((8,2),(7,2)),14).
move(1,((7,2),(6,2)),15).
move(1,((6,2),(6,3)),16).
move(1,((6,3),(5,3)),17).
move(1,((5,3),(4,3)),18).
move(1,((4,3),(3,3)),19).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(2,2)),8).
move(2,((2,2),(1,2)),9).
move(2,((1,2),(1,1)),10).
move(2,((1,1),(1,2)),11).
move(2,((1,2),(2,2)),12).
move(2,((2,2),(2,3)),13).
move(2,((2,3),(2,4)),14).
move(2,((2,4),(3,4)),18).
move(2,((3,4),(4,4)),19).
move(2,((4,4),(4,3)),20).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(3,1)),8).
move(3,((3,1),(3,2)),9).
move(3,((3,2),(2,2)),10).
move(3,((2,2),(2,3)),11).
move(3,((2,3),(2,4)),12).
move(3,((2,4),(3,4)),13).
move(3,((3,4),(3,3)),14).
move(3,((3,3),(2,3)),15).
move(3,((2,3),(3,3)),16).
move(3,((3,3),(3,2)),17).
move(3,((3,2),(4,2)),18).
move(3,((4,2),(5,2)),19).
move(3,((5,2),(5,3)),20).
move(4,((3,6),(3,5)),2).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(2,4)),5).
move(4,((2,4),(2,3)),6).
move(4,((2,3),(2,2)),7).
move(4,((2,2),(2,1)),8).
move(4,((2,1),(3,1)),10).
move(4,((3,1),(3,2)),11).
move(4,((3,2),(3,3)),12).
move(4,((3,3),(4,3)),13).
move(4,((4,3),(4,4)),14).
move(4,((4,4),(3,4)),15).
move(4,((3,4),(4,4)),16).
move(4,((4,4),(5,4)),17).
move(4,((5,4),(6,4)),18).
move(4,((6,4),(7,4)),19).
move(4,((7,4),(7,3)),20).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(4,2)),6).
move(5,((4,2),(4,1)),7).
move(5,((4,1),(4,2)),8).
move(5,((4,2),(4,3)),9).
move(5,((4,3),(4,4)),10).
move(5,((4,4),(5,4)),11).
move(5,((5,4),(5,5)),12).
move(5,((5,5),(6,5)),13).
move(5,((6,5),(7,5)),14).
move(5,((7,5),(7,4)),15).
move(5,((7,4),(6,4)),16).
move(5,((6,4),(6,3)),18).
move(5,((6,3),(7,3)),19).
move(5,((7,3),(8,3)),20).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(7,2)),8).
move(6,((7,2),(7,1)),9).
move(6,((7,1),(8,1)),10).
move(6,((8,1),(9,1)),11).
move(6,((9,1),(10,1)),12).
move(6,((10,1),(10,2)),13).
move(6,((10,2),(9,2)),14).
move(6,((9,2),(9,3)),15).
move(6,((9,3),(8,3)),16).
move(6,((8,3),(7,3)),17).
move(6,((7,3),(8,3)),18).
move(6,((8,3),(9,3)),19).
move(7,((6,6),(7,6)),3).
move(7,((7,6),(8,6)),4).
move(7,((8,6),(8,5)),5).
move(7,((8,5),(9,5)),7).
move(7,((9,5),(9,4)),8).
move(7,((9,4),(9,3)),9).
move(7,((9,3),(10,3)),10).
move(7,((10,3),(11,3)),11).
move(7,((11,3),(11,2)),12).
move(7,((11,2),(11,1)),13).
move(7,((11,1),(10,1)),14).
move(7,((10,1),(10,2)),15).
move(7,((10,2),(9,2)),16).
move(7,((9,2),(9,3)),17).
move(7,((9,3),(9,4)),18).
move(7,((9,4),(10,4)),19).
move(7,((10,4),(10,3)),20).
move(8,((7,6),(7,5)),2).
move(8,((7,5),(6,5)),3).
move(8,((6,5),(7,5)),4).
move(8,((7,5),(7,4)),5).
move(8,((7,4),(7,3)),6).
move(8,((7,3),(7,4)),8).
move(8,((7,4),(6,4)),9).
move(8,((6,4),(7,4)),10).
move(8,((7,4),(6,4)),11).
move(8,((6,4),(5,4)),12).
move(8,((5,4),(4,4)),13).
move(8,((4,4),(3,4)),14).
move(8,((3,4),(3,3)),15).
move(8,((3,3),(3,4)),16).
move(8,((3,4),(3,5)),17).
move(8,((3,5),(2,5)),18).
move(8,((2,5),(2,4)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.554s (Solving: 0.01s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 0.547s

Choices      : 183      (Domain: 183)
Conflicts    : 15       (Analyzed: 15)
Restarts     : 0       
Model-Level  : 124.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 15       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 15       (Average Length:   19.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 15       (Average:  3.93 Max:  27 Sum:     59)
  Executed   : 15       (Average:  3.93 Max:  27 Sum:     59 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 131152   (Original: 121681)
  Choice     : 160     
  Heuristic  : 7896     (Original: 7968)
Atoms        : 52046   
Bodies       : 84220    (Original: 74677)
  Count      : 1172     (Original: 1569)
Equivalences : 45406    (Atom=Atom: 182 Body=Body: 191 Other: 45033)
Tight        : Yes
Variables    : 83041    (Eliminated:    0 Frozen: 44723)
Constraints  : 218125   (Binary:  79.6% Ternary:  14.5% Other:   5.9%)

