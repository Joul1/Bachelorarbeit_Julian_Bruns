%%%%%
%Standard
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(4,6)),5).
move(1,((4,6),(3,6)),7).
move(1,((3,6),(3,5)),8).
move(1,((3,5),(3,4)),9).
move(1,((3,4),(3,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(4,4)),3).
move(3,((4,4),(5,4)),4).
move(3,((5,4),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(7,3)),7).
move(3,((7,3),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(8,4)),5).
move(5,((8,4),(8,3)),6).
move(5,((8,3),(8,4)),7).
move(5,((8,4),(8,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),5).
move(7,((5,3),(4,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,2)),4).
move(8,((7,2),(7,3)),8).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(9,5)),2).
move(9,((9,5),(8,5)),6).
move(9,((8,5),(7,5)),7).
move(9,((7,5),(7,4)),8).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(7,4)),3).
move(10,((7,4),(7,5)),4).
move(10,((7,5),(7,4)),5).
move(10,((7,4),(8,4)),6).
move(10,((8,4),(8,5)),7).
move(10,((8,5),(8,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(5,5)),7).
move(11,((5,5),(4,5)),8).
move(11,((4,5),(3,5)),9).
move(11,((3,5),(2,5)),10).
move(11,((2,5),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.907s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.906s

Choices      : 588     
Conflicts    : 35       (Analyzed: 35)
Restarts     : 0       
Model-Level  : 243.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 35       (Deleted: 0)
  Binary     : 7        (Ratio:  20.00%)
  Ternary    : 1        (Ratio:   2.86%)
  Conflict   : 35       (Average Length:   18.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 35       (Average:  9.86 Max:  47 Sum:    345)
  Executed   : 35       (Average:  9.86 Max:  47 Sum:    345 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165688   (Original: 153701)
  Choice     : 220     
Atoms        : 69035   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),4).
move(1,((1,2),(1,3)),5).
move(1,((1,3),(2,3)),7).
move(1,((2,3),(3,3)),8).
move(1,((3,3),(3,4)),9).
move(1,((3,4),(3,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(4,4)),3).
move(3,((4,4),(5,4)),4).
move(3,((5,4),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(7,3)),7).
move(3,((7,3),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(8,4)),5).
move(5,((8,4),(8,5)),6).
move(5,((8,5),(8,4)),7).
move(5,((8,4),(8,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),5).
move(7,((5,3),(4,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,2)),4).
move(8,((7,2),(7,3)),8).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(9,5)),2).
move(9,((9,5),(9,4)),4).
move(9,((9,4),(8,4)),6).
move(9,((8,4),(7,4)),7).
move(9,((7,4),(6,4)),8).
move(9,((6,4),(7,4)),9).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,3)),3).
move(10,((8,3),(7,3)),4).
move(10,((7,3),(7,4)),5).
move(10,((7,4),(7,5)),6).
move(10,((7,5),(8,5)),7).
move(10,((8,5),(8,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(5,5)),7).
move(11,((5,5),(4,5)),8).
move(11,((4,5),(3,5)),9).
move(11,((3,5),(2,5)),10).
move(11,((2,5),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.002s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.000s

Choices      : 673     
Conflicts    : 38       (Analyzed: 38)
Restarts     : 0       
Model-Level  : 228.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 38       (Deleted: 0)
  Binary     : 7        (Ratio:  18.42%)
  Ternary    : 1        (Ratio:   2.63%)
  Conflict   : 38       (Average Length:   18.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 38       (Average: 11.71 Max:  56 Sum:    445)
  Executed   : 38       (Average: 11.71 Max:  56 Sum:    445 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165866   (Original: 153879)
  Choice     : 220     
  Heuristic  : 46      
Atoms        : 69167   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(4,6)),5).
move(1,((4,6),(3,6)),7).
move(1,((3,6),(3,5)),8).
move(1,((3,5),(3,4)),9).
move(1,((3,4),(3,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(4,4)),3).
move(3,((4,4),(5,4)),4).
move(3,((5,4),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(7,3)),7).
move(3,((7,3),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(5,((7,3),(8,3)),6).
move(5,((8,3),(8,4)),7).
move(5,((8,4),(8,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),5).
move(7,((5,3),(4,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,2)),4).
move(8,((7,2),(7,3)),8).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(9,5)),2).
move(9,((9,5),(9,4)),4).
move(9,((9,4),(8,4)),5).
move(9,((8,4),(7,4)),7).
move(9,((7,4),(6,4)),8).
move(9,((6,4),(7,4)),9).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,3)),3).
move(10,((8,3),(8,4)),4).
move(10,((8,4),(7,4)),5).
move(10,((7,4),(7,5)),6).
move(10,((7,5),(8,5)),7).
move(10,((8,5),(8,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(5,5)),7).
move(11,((5,5),(4,5)),8).
move(11,((4,5),(3,5)),9).
move(11,((3,5),(2,5)),10).
move(11,((2,5),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.877s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.875s

Choices      : 656     
Conflicts    : 41       (Analyzed: 41)
Restarts     : 0       
Model-Level  : 217.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 41       (Deleted: 0)
  Binary     : 8        (Ratio:  19.51%)
  Ternary    : 1        (Ratio:   2.44%)
  Conflict   : 41       (Average Length:   16.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 41       (Average: 10.71 Max:  47 Sum:    439)
  Executed   : 41       (Average: 10.71 Max:  47 Sum:    439 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165831   (Original: 153844)
  Choice     : 220     
Atoms        : 69178   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(4,6)),5).
move(1,((4,6),(3,6)),7).
move(1,((3,6),(3,5)),8).
move(1,((3,5),(3,4)),9).
move(1,((3,4),(3,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(4,4)),3).
move(3,((4,4),(5,4)),4).
move(3,((5,4),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(7,3)),7).
move(3,((7,3),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(5,((7,3),(8,3)),6).
move(5,((8,3),(8,4)),7).
move(5,((8,4),(8,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),5).
move(7,((5,3),(4,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,2)),4).
move(8,((7,2),(7,3)),8).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(9,5)),2).
move(9,((9,5),(9,4)),4).
move(9,((9,4),(8,4)),5).
move(9,((8,4),(7,4)),7).
move(9,((7,4),(6,4)),8).
move(9,((6,4),(7,4)),9).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,3)),3).
move(10,((8,3),(8,4)),4).
move(10,((8,4),(7,4)),5).
move(10,((7,4),(7,5)),6).
move(10,((7,5),(8,5)),7).
move(10,((8,5),(8,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(5,5)),7).
move(11,((5,5),(4,5)),8).
move(11,((4,5),(3,5)),9).
move(11,((3,5),(2,5)),10).
move(11,((2,5),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.943s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.938s

Choices      : 656     
Conflicts    : 41       (Analyzed: 41)
Restarts     : 0       
Model-Level  : 217.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 41       (Deleted: 0)
  Binary     : 8        (Ratio:  19.51%)
  Ternary    : 1        (Ratio:   2.44%)
  Conflict   : 41       (Average Length:   16.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 41       (Average: 10.71 Max:  47 Sum:    439)
  Executed   : 41       (Average: 10.71 Max:  47 Sum:    439 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165831   (Original: 153844)
  Choice     : 220     
Atoms        : 69178   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),4).
move(1,((1,2),(1,1)),5).
move(1,((1,1),(2,1)),6).
move(1,((2,1),(3,1)),7).
move(1,((3,1),(3,2)),8).
move(1,((3,2),(3,3)),9).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(9,5)),8).
move(2,((9,5),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(6,5)),4).
move(3,((6,5),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(8,4)),7).
move(3,((8,4),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(8,5)),5).
move(4,((8,5),(9,5)),6).
move(4,((9,5),(9,4)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(8,6)),3).
move(5,((8,6),(9,6)),4).
move(5,((9,6),(9,5)),5).
move(5,((9,5),(9,4)),6).
move(5,((9,4),(8,4)),8).
move(5,((8,4),(8,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(8,5)),2).
move(6,((8,5),(7,5)),3).
move(6,((7,5),(7,4)),4).
move(6,((7,4),(7,3)),5).
move(6,((7,3),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),4).
move(7,((4,5),(4,4)),5).
move(7,((4,4),(4,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(8,4)),3).
move(8,((8,4),(7,4)),5).
move(8,((7,4),(7,3)),6).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(6,5)),5).
move(9,((6,5),(6,4)),6).
move(9,((6,4),(7,4)),7).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,3)),3).
move(10,((8,3),(8,4)),5).
move(10,((8,4),(8,5)),6).
move(10,((8,5),(8,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(5,5)),7).
move(11,((5,5),(4,5)),8).
move(11,((4,5),(3,5)),9).
move(11,((3,5),(2,5)),10).
move(11,((2,5),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.884s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.891s

Choices      : 571     
Conflicts    : 35       (Analyzed: 35)
Restarts     : 0       
Model-Level  : 307.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 35       (Deleted: 0)
  Binary     : 7        (Ratio:  20.00%)
  Ternary    : 3        (Ratio:   8.57%)
  Conflict   : 35       (Average Length:   19.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 35       (Average:  7.54 Max:  45 Sum:    264)
  Executed   : 35       (Average:  7.54 Max:  45 Sum:    264 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 167087   (Original: 155122)
  Choice     : 220     
  Heuristic  : 1186     (Original: 1208)
Atoms        : 69248   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),4).
move(1,((1,2),(2,2)),6).
move(1,((2,2),(2,3)),7).
move(1,((2,3),(3,3)),9).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(4,4)),3).
move(3,((4,4),(5,4)),4).
move(3,((5,4),(6,4)),5).
move(3,((6,4),(6,3)),6).
move(3,((6,3),(7,3)),7).
move(3,((7,3),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),5).
move(5,((7,4),(8,4)),6).
move(5,((8,4),(8,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),5).
move(7,((5,3),(4,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,2)),4).
move(8,((7,2),(7,3)),8).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(9,3)),4).
move(9,((9,3),(8,3)),5).
move(9,((8,3),(7,3)),6).
move(9,((7,3),(7,4)),7).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(7,4)),3).
move(10,((7,4),(8,4)),5).
move(10,((8,4),(8,5)),6).
move(10,((8,5),(8,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(5,5)),7).
move(11,((5,5),(5,4)),8).
move(11,((5,4),(4,4)),9).
move(11,((4,4),(3,4)),10).
move(11,((3,4),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.887s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.891s

Choices      : 792     
Conflicts    : 34       (Analyzed: 34)
Restarts     : 0       
Model-Level  : 335.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 34       (Deleted: 0)
  Binary     : 4        (Ratio:  11.76%)
  Ternary    : 1        (Ratio:   2.94%)
  Conflict   : 34       (Average Length:   22.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 34       (Average: 13.44 Max:  74 Sum:    457)
  Executed   : 34       (Average: 13.44 Max:  74 Sum:    457 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 166458   (Original: 154478)
  Choice     : 220     
  Heuristic  : 638      (Original: 645)
Atoms        : 69167   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(2,3)),4).
move(1,((2,3),(3,3)),5).
move(1,((3,3),(3,4)),6).
move(1,((3,4),(3,3)),7).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(4,4)),3).
move(3,((4,4),(5,4)),4).
move(3,((5,4),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(8,4)),7).
move(3,((8,4),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(9,4)),7).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(5,2)),4).
move(5,((5,2),(6,2)),5).
move(5,((6,2),(7,2)),6).
move(5,((7,2),(8,2)),7).
move(5,((8,2),(8,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),7).
move(6,((5,4),(5,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),4).
move(7,((5,3),(4,3)),5).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),4).
move(8,((7,3),(8,3)),5).
move(8,((8,3),(7,3)),6).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(7,5)),4).
move(9,((7,5),(6,5)),5).
move(9,((6,5),(6,4)),6).
move(9,((6,4),(7,4)),7).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(5,5)),7).
move(11,((5,5),(4,5)),8).
move(11,((4,5),(4,4)),9).
move(11,((4,4),(3,4)),10).
move(11,((3,4),(2,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.944s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.938s

Choices      : 313      (Domain: 51)
Conflicts    : 29       (Analyzed: 29)
Restarts     : 0       
Model-Level  : 183.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 29       (Deleted: 0)
  Binary     : 3        (Ratio:  10.34%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 29       (Average Length:   25.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 29       (Average:  4.48 Max:  21 Sum:    130)
  Executed   : 29       (Average:  4.48 Max:  21 Sum:    130 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176501   (Original: 164646)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69189   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(2,5)),2).
move(1,((2,5),(3,5)),4).
move(1,((3,5),(3,4)),5).
move(1,((3,4),(3,3)),6).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(9,5)),8).
move(2,((9,5),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(4,5)),2).
move(3,((4,5),(4,4)),3).
move(3,((4,4),(5,4)),4).
move(3,((5,4),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(8,4)),7).
move(3,((8,4),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(7,5)),4).
move(4,((7,5),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(9,4)),7).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(6,5)),2).
move(5,((6,5),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(5,((7,3),(8,3)),6).
move(5,((8,3),(8,2)),7).
move(5,((8,2),(8,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(6,4)),6).
move(6,((6,4),(5,4)),7).
move(6,((5,4),(5,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),4).
move(7,((4,5),(4,4)),5).
move(7,((4,4),(4,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(6,3)),4).
move(8,((6,3),(5,3)),5).
move(8,((5,3),(6,3)),6).
move(8,((6,3),(7,3)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(9,5)),2).
move(9,((9,5),(9,4)),3).
move(9,((9,4),(8,4)),4).
move(9,((8,4),(7,4)),5).
move(9,((7,4),(7,3)),6).
move(9,((7,3),(7,4)),7).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(9,5)),3).
move(10,((9,5),(8,5)),6).
move(10,((8,5),(8,4)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(7,5)),5).
move(11,((7,5),(6,5)),7).
move(11,((6,5),(6,4)),8).
move(11,((6,4),(5,4)),9).
move(11,((5,4),(4,4)),10).
move(11,((4,4),(3,4)),11).
move(11,((3,4),(2,4)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.986s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.984s

Choices      : 585     
Conflicts    : 47       (Analyzed: 47)
Restarts     : 0       
Model-Level  : 254.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 47       (Deleted: 0)
  Binary     : 8        (Ratio:  17.02%)
  Ternary    : 1        (Ratio:   2.13%)
  Conflict   : 47       (Average Length:   21.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 47       (Average:  7.04 Max:  31 Sum:    331)
  Executed   : 47       (Average:  7.04 Max:  31 Sum:    331 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176479   (Original: 164624)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69167   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(2,1)),9).
move(1,((2,1),(1,1)),10).
move(1,((1,1),(1,2)),11).
move(1,((1,2),(2,2)),12).
move(1,((2,2),(2,3)),13).
move(1,((2,3),(2,4)),14).
move(1,((2,4),(2,3)),15).
move(1,((2,3),(2,4)),16).
move(1,((2,4),(2,5)),17).
move(1,((2,5),(2,4)),18).
move(1,((2,4),(2,3)),19).
move(1,((2,3),(3,3)),20).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(2,4)),4).
move(2,((2,4),(3,4)),5).
move(2,((3,4),(4,4)),6).
move(2,((4,4),(5,4)),7).
move(2,((5,4),(6,4)),8).
move(2,((6,4),(6,3)),9).
move(2,((6,3),(6,2)),10).
move(2,((6,2),(6,1)),11).
move(2,((6,1),(7,1)),12).
move(2,((7,1),(8,1)),13).
move(2,((8,1),(9,1)),14).
move(2,((9,1),(9,2)),15).
move(2,((9,2),(10,2)),16).
move(2,((10,2),(9,2)),17).
move(2,((9,2),(10,2)),18).
move(2,((10,2),(10,3)),19).
move(2,((10,3),(10,4)),20).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(4,5)),2).
move(3,((4,5),(5,5)),3).
move(3,((5,5),(5,4)),4).
move(3,((5,4),(5,3)),5).
move(3,((5,3),(5,2)),6).
move(3,((5,2),(5,1)),7).
move(3,((5,1),(6,1)),8).
move(3,((6,1),(7,1)),9).
move(3,((7,1),(8,1)),10).
move(3,((8,1),(9,1)),11).
move(3,((9,1),(10,1)),12).
move(3,((10,1),(10,2)),13).
move(3,((10,2),(10,3)),14).
move(3,((10,3),(9,3)),15).
move(3,((9,3),(9,2)),16).
move(3,((9,2),(8,2)),17).
move(3,((8,2),(9,2)),18).
move(3,((9,2),(9,3)),20).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(6,4)),4).
move(4,((6,4),(6,3)),5).
move(4,((6,3),(6,2)),6).
move(4,((6,2),(7,2)),7).
move(4,((7,2),(8,2)),8).
move(4,((8,2),(9,2)),9).
move(4,((9,2),(8,2)),10).
move(4,((8,2),(9,2)),11).
move(4,((9,2),(10,2)),12).
move(4,((10,2),(9,2)),13).
move(4,((9,2),(8,2)),14).
move(4,((8,2),(7,2)),15).
move(4,((7,2),(8,2)),16).
move(4,((8,2),(8,3)),17).
move(4,((8,3),(8,4)),18).
move(4,((8,4),(9,4)),20).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(5,((6,3),(5,3)),8).
move(5,((5,3),(4,3)),9).
move(5,((4,3),(5,3)),10).
move(5,((5,3),(6,3)),11).
move(5,((6,3),(7,3)),12).
move(5,((7,3),(8,3)),13).
move(5,((8,3),(9,3)),14).
move(5,((9,3),(9,4)),15).
move(5,((9,4),(9,3)),16).
move(5,((9,3),(9,4)),18).
move(5,((9,4),(9,3)),19).
move(5,((9,3),(8,3)),20).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),3).
move(6,((9,4),(9,3)),5).
move(6,((9,3),(9,2)),6).
move(6,((9,2),(9,3)),8).
move(6,((9,3),(8,3)),9).
move(6,((8,3),(7,3)),10).
move(6,((7,3),(7,4)),11).
move(6,((7,4),(6,4)),12).
move(6,((6,4),(7,4)),13).
move(6,((7,4),(7,3)),14).
move(6,((7,3),(7,2)),16).
move(6,((7,2),(6,2)),18).
move(6,((6,2),(5,2)),19).
move(6,((5,2),(5,3)),20).
move(7,((6,6),(6,5)),4).
move(7,((6,5),(6,4)),5).
move(7,((6,4),(7,4)),6).
move(7,((7,4),(7,3)),7).
move(7,((7,3),(7,2)),8).
move(7,((7,2),(8,2)),9).
move(7,((8,2),(7,2)),10).
move(7,((7,2),(6,2)),11).
move(7,((6,2),(6,3)),12).
move(7,((6,3),(6,4)),13).
move(7,((6,4),(5,4)),14).
move(7,((5,4),(4,4)),15).
move(7,((4,4),(3,4)),16).
move(7,((3,4),(3,3)),17).
move(7,((3,3),(3,4)),18).
move(7,((3,4),(3,3)),19).
move(7,((3,3),(4,3)),20).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(8,2)),7).
move(8,((8,2),(9,2)),8).
move(8,((9,2),(9,3)),9).
move(8,((9,3),(8,3)),10).
move(8,((8,3),(8,2)),11).
move(8,((8,2),(9,2)),12).
move(8,((9,2),(9,3)),13).
move(8,((9,3),(9,2)),14).
move(8,((9,2),(8,2)),15).
move(8,((8,2),(8,1)),16).
move(8,((8,1),(8,2)),18).
move(8,((8,2),(7,2)),19).
move(8,((7,2),(7,3)),20).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(9,5)),3).
move(9,((9,5),(10,5)),4).
move(9,((10,5),(10,4)),5).
move(9,((10,4),(10,3)),6).
move(9,((10,3),(10,2)),8).
move(9,((10,2),(11,2)),9).
move(9,((11,2),(11,1)),10).
move(9,((11,1),(11,2)),11).
move(9,((11,2),(11,3)),12).
move(9,((11,3),(10,3)),13).
move(9,((10,3),(10,4)),14).
move(9,((10,4),(10,5)),15).
move(9,((10,5),(9,5)),16).
move(9,((9,5),(8,5)),17).
move(9,((8,5),(7,5)),18).
move(9,((7,5),(7,4)),19).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(9,5)),4).
move(10,((9,5),(9,4)),5).
move(10,((9,4),(9,3)),6).
move(10,((9,3),(9,4)),7).
move(10,((9,4),(10,4)),8).
move(10,((10,4),(10,5)),9).
move(10,((10,5),(9,5)),10).
move(10,((9,5),(10,5)),11).
move(10,((10,5),(9,5)),12).
move(10,((9,5),(8,5)),13).
move(10,((8,5),(8,4)),15).
move(10,((8,4),(8,5)),16).
move(10,((8,5),(8,4)),17).
move(10,((8,4),(8,5)),18).
move(10,((8,5),(8,4)),20).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),5).
move(11,((10,5),(10,4)),6).
move(11,((10,4),(11,4)),7).
move(11,((11,4),(11,3)),8).
move(11,((11,3),(10,3)),9).
move(11,((10,3),(9,3)),10).
move(11,((9,3),(10,3)),11).
move(11,((10,3),(9,3)),12).
move(11,((9,3),(9,4)),13).
move(11,((9,4),(8,4)),14).
move(11,((8,4),(7,4)),15).
move(11,((7,4),(6,4)),16).
move(11,((6,4),(5,4)),17).
move(11,((5,4),(4,4)),18).
move(11,((4,4),(3,4)),19).
move(11,((3,4),(2,4)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.061s (Solving: 0.15s 1st Model: 0.14s Unsat: 0.00s)
CPU Time     : 1.047s

Choices      : 1708     (Domain: 1708)
Conflicts    : 127      (Analyzed: 127)
Restarts     : 1        (Average: 127.00 Last: 26)
Model-Level  : 143.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 127      (Deleted: 0)
  Binary     : 24       (Ratio:  18.90%)
  Ternary    : 13       (Ratio:  10.24%)
  Conflict   : 127      (Average Length:   18.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 127      (Average: 12.31 Max: 110 Sum:   1564)
  Executed   : 127      (Average: 12.31 Max: 110 Sum:   1564 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176479   (Original: 164624)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69167   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

