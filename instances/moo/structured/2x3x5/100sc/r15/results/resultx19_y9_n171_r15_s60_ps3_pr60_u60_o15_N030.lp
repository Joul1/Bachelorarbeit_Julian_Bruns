%%%%%
%Standard
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(5,9)),4).
move(1,((5,9),(6,9)),5).
move(1,((6,9),(6,8)),6).
move(1,((6,8),(5,8)),7).
move(1,((5,8),(5,7)),8).
move(1,((5,7),(5,6)),9).
move(1,((5,6),(4,6)),14).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(3,7)),3).
move(2,((3,7),(4,7)),4).
move(2,((4,7),(4,6)),6).
move(2,((4,6),(4,5)),7).
move(2,((4,5),(5,5)),8).
move(2,((5,5),(5,4)),9).
move(2,((5,4),(5,3)),10).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(5,8)),2).
move(4,((5,8),(5,7)),5).
move(4,((5,7),(5,6)),6).
move(4,((5,6),(6,6)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(8,7)),2).
move(7,((8,7),(8,6)),3).
move(7,((8,6),(8,5)),4).
move(7,((8,5),(7,5)),5).
move(7,((7,5),(6,5)),6).
move(7,((6,5),(5,5)),7).
move(7,((5,5),(5,4)),8).
move(7,((5,4),(5,3)),9).
move(7,((5,3),(4,3)),10).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(8,8)),2).
move(8,((8,8),(9,8)),3).
move(8,((9,8),(10,8)),4).
move(8,((10,8),(11,8)),5).
move(8,((11,8),(12,8)),6).
move(8,((12,8),(13,8)),7).
move(8,((13,8),(14,8)),8).
move(8,((14,8),(14,7)),9).
move(8,((14,7),(14,6)),12).
move(8,((14,6),(14,5)),13).
move(8,((14,5),(14,4)),14).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(6,9)),3).
move(9,((6,9),(6,8)),5).
move(9,((6,8),(6,7)),6).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),6).
move(10,((11,4),(12,4)),7).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),2).
move(11,((11,7),(12,7)),4).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(13,7)),4).
move(12,((13,7),(14,7)),12).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(13,7)),2).
move(13,((13,7),(14,7)),4).
move(13,((14,7),(15,7)),5).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(5,9)),9).
move(14,((5,9),(5,8)),10).
move(14,((5,8),(5,7)),11).
move(14,((5,7),(4,7)),12).
move(14,((4,7),(4,6)),13).
move(14,((4,6),(3,6)),14).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(15,7)),2).
move(15,((15,7),(15,6)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.741s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 2.734s

Choices      : 1171    
Conflicts    : 46       (Analyzed: 46)
Restarts     : 0       
Model-Level  : 440.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 46       (Deleted: 0)
  Binary     : 11       (Ratio:  23.91%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 46       (Average Length:   38.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 46       (Average: 15.89 Max:  69 Sum:    731)
  Executed   : 46       (Average: 15.89 Max:  69 Sum:    731 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 575569   (Original: 514321)
  Choice     : 300     
Atoms        : 249746   (Original: 235036 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(5,9)),4).
move(1,((5,9),(5,8)),7).
move(1,((5,8),(5,7)),8).
move(1,((5,7),(5,6)),9).
move(1,((5,6),(4,6)),14).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(3,5)),5).
move(2,((3,5),(4,5)),6).
move(2,((4,5),(5,5)),8).
move(2,((5,5),(5,4)),9).
move(2,((5,4),(5,3)),10).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(5,6)),5).
move(4,((5,6),(6,6)),6).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((8,9),(7,9)),1).
move(7,((7,9),(6,9)),2).
move(7,((6,9),(5,9)),3).
move(7,((5,9),(5,8)),4).
move(7,((5,8),(5,7)),5).
move(7,((5,7),(5,6)),6).
move(7,((5,6),(5,5)),7).
move(7,((5,5),(5,4)),8).
move(7,((5,4),(5,3)),9).
move(7,((5,3),(4,3)),10).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(8,8)),2).
move(8,((8,8),(9,8)),3).
move(8,((9,8),(10,8)),4).
move(8,((10,8),(11,8)),5).
move(8,((11,8),(12,8)),6).
move(8,((12,8),(13,8)),7).
move(8,((13,8),(14,8)),8).
move(8,((14,8),(14,7)),9).
move(8,((14,7),(14,6)),12).
move(8,((14,6),(14,5)),13).
move(8,((14,5),(14,4)),14).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(6,9)),3).
move(9,((6,9),(6,8)),4).
move(9,((6,8),(6,7)),5).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),6).
move(10,((11,4),(12,4)),7).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),2).
move(11,((11,7),(12,7)),4).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(13,7)),3).
move(12,((13,7),(14,7)),12).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(13,7)),2).
move(13,((13,7),(13,6)),3).
move(13,((13,6),(14,6)),4).
move(13,((14,6),(15,6)),5).
move(13,((15,6),(15,7)),6).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(5,9)),9).
move(14,((5,9),(5,8)),10).
move(14,((5,8),(5,7)),11).
move(14,((5,7),(4,7)),12).
move(14,((4,7),(4,6)),13).
move(14,((4,6),(3,6)),14).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(15,7)),2).
move(15,((15,7),(15,6)),3).
move(15,((15,6),(15,5)),4).
move(15,((15,5),(15,6)),6).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.641s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 2.641s

Choices      : 1107    
Conflicts    : 46       (Analyzed: 46)
Restarts     : 0       
Model-Level  : 447.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 46       (Deleted: 0)
  Binary     : 9        (Ratio:  19.57%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 46       (Average Length:   39.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 46       (Average: 14.35 Max:  57 Sum:    660)
  Executed   : 46       (Average: 14.35 Max:  57 Sum:    660 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 575835   (Original: 514587)
  Choice     : 300     
  Heuristic  : 82      
Atoms        : 249930   (Original: 235220 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(5,9)),4).
move(1,((5,9),(6,9)),5).
move(1,((6,9),(6,8)),6).
move(1,((6,8),(5,8)),7).
move(1,((5,8),(5,7)),8).
move(1,((5,7),(5,6)),9).
move(1,((5,6),(4,6)),14).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(3,7)),3).
move(2,((3,7),(4,7)),4).
move(2,((4,7),(4,6)),6).
move(2,((4,6),(4,5)),7).
move(2,((4,5),(5,5)),8).
move(2,((5,5),(5,4)),9).
move(2,((5,4),(5,3)),10).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(5,8)),2).
move(4,((5,8),(5,7)),5).
move(4,((5,7),(5,6)),6).
move(4,((5,6),(6,6)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(8,7)),2).
move(7,((8,7),(8,6)),3).
move(7,((8,6),(8,5)),4).
move(7,((8,5),(7,5)),5).
move(7,((7,5),(6,5)),6).
move(7,((6,5),(5,5)),7).
move(7,((5,5),(5,4)),8).
move(7,((5,4),(5,3)),9).
move(7,((5,3),(4,3)),10).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(8,8)),2).
move(8,((8,8),(9,8)),3).
move(8,((9,8),(10,8)),4).
move(8,((10,8),(11,8)),5).
move(8,((11,8),(12,8)),6).
move(8,((12,8),(13,8)),7).
move(8,((13,8),(14,8)),8).
move(8,((14,8),(14,7)),9).
move(8,((14,7),(14,6)),12).
move(8,((14,6),(14,5)),13).
move(8,((14,5),(14,4)),14).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(6,9)),3).
move(9,((6,9),(6,8)),5).
move(9,((6,8),(6,7)),6).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),6).
move(10,((11,4),(12,4)),7).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),2).
move(11,((11,7),(12,7)),4).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(13,7)),4).
move(12,((13,7),(14,7)),12).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(13,7)),2).
move(13,((13,7),(14,7)),4).
move(13,((14,7),(15,7)),5).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(5,9)),9).
move(14,((5,9),(5,8)),10).
move(14,((5,8),(5,7)),11).
move(14,((5,7),(4,7)),12).
move(14,((4,7),(4,6)),13).
move(14,((4,6),(3,6)),14).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(15,7)),2).
move(15,((15,7),(15,6)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.612s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 2.609s

Choices      : 1166    
Conflicts    : 46       (Analyzed: 46)
Restarts     : 0       
Model-Level  : 438.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 46       (Deleted: 0)
  Binary     : 11       (Ratio:  23.91%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 46       (Average Length:   38.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 46       (Average: 15.83 Max:  70 Sum:    728)
  Executed   : 46       (Average: 15.83 Max:  70 Sum:    728 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 575768   (Original: 514520)
  Choice     : 300     
Atoms        : 249945   (Original: 235235 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,9),(2,9)),10).
move(1,((2,9),(3,9)),11).
move(1,((3,9),(4,9)),12).
move(1,((4,9),(4,8)),14).
move(1,((4,8),(4,7)),15).
move(1,((4,7),(4,6)),16).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(4,8)),3).
move(2,((4,8),(5,8)),4).
move(2,((5,8),(5,7)),5).
move(2,((5,7),(5,6)),6).
move(2,((5,6),(5,5)),7).
move(2,((5,5),(5,4)),8).
move(2,((5,4),(5,3)),9).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(5,9)),1).
move(4,((5,9),(5,8)),2).
move(4,((5,8),(6,8)),3).
move(4,((6,8),(7,8)),4).
move(4,((7,8),(7,7)),5).
move(4,((7,7),(7,6)),7).
move(4,((7,6),(6,6)),8).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((8,9),(7,9)),1).
move(7,((7,9),(6,9)),2).
move(7,((6,9),(6,8)),4).
move(7,((6,8),(5,8)),5).
move(7,((5,8),(4,8)),6).
move(7,((4,8),(4,7)),7).
move(7,((4,7),(4,6)),8).
move(7,((4,6),(4,5)),9).
move(7,((4,5),(4,4)),10).
move(7,((4,4),(4,3)),11).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(8,8)),2).
move(8,((8,8),(9,8)),3).
move(8,((9,8),(9,7)),4).
move(8,((9,7),(10,7)),5).
move(8,((10,7),(11,7)),6).
move(8,((11,7),(11,6)),7).
move(8,((11,6),(12,6)),8).
move(8,((12,6),(12,5)),9).
move(8,((12,5),(13,5)),10).
move(8,((13,5),(14,5)),11).
move(8,((14,5),(14,4)),12).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(6,9)),4).
move(9,((6,9),(5,9)),5).
move(9,((5,9),(5,8)),6).
move(9,((5,8),(5,7)),7).
move(9,((5,7),(6,7)),11).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(11,5)),5).
move(10,((11,5),(11,4)),6).
move(10,((11,4),(12,4)),7).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),2).
move(11,((11,7),(11,6)),3).
move(11,((11,6),(12,6)),4).
move(11,((12,6),(12,7)),8).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(13,7)),3).
move(12,((13,7),(14,7)),4).
move(12,((14,7),(14,6)),5).
move(12,((14,6),(13,6)),6).
move(12,((13,6),(13,7)),7).
move(12,((13,7),(14,7)),8).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(12,8)),3).
move(13,((12,8),(12,7)),4).
move(13,((12,7),(13,7)),5).
move(13,((13,7),(14,7)),6).
move(13,((14,7),(15,7)),8).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(5,9)),9).
move(14,((5,9),(4,9)),10).
move(14,((4,9),(4,8)),11).
move(14,((4,8),(4,7)),12).
move(14,((4,7),(4,6)),13).
move(14,((4,6),(3,6)),14).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(15,7)),2).
move(15,((15,7),(15,6)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.648s (Solving: 0.09s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 2.641s

Choices      : 1687    
Conflicts    : 76       (Analyzed: 76)
Restarts     : 0       
Model-Level  : 462.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 76       (Deleted: 0)
  Binary     : 15       (Ratio:  19.74%)
  Ternary    : 9        (Ratio:  11.84%)
  Conflict   : 76       (Average Length:   29.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 76       (Average: 16.12 Max:  90 Sum:   1225)
  Executed   : 76       (Average: 16.12 Max:  90 Sum:   1225 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 578688   (Original: 517470)
  Choice     : 300     
  Heuristic  : 2817     (Original: 2847)
Atoms        : 250048   (Original: 235338 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(2,6)),4).
move(1,((2,6),(3,6)),5).
move(1,((3,6),(4,6)),6).
move(1,((4,6),(5,6)),7).
move(1,((5,6),(4,6)),8).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(4,8)),3).
move(2,((4,8),(5,8)),4).
move(2,((5,8),(5,7)),5).
move(2,((5,7),(6,7)),6).
move(2,((6,7),(5,7)),9).
move(2,((5,7),(5,6)),10).
move(2,((5,6),(5,5)),11).
move(2,((5,5),(5,4)),12).
move(2,((5,4),(5,3)),13).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,4)),9).
move(3,((3,4),(3,3)),10).
move(4,((4,9),(5,9)),1).
move(4,((5,9),(5,8)),2).
move(4,((5,8),(6,8)),3).
move(4,((6,8),(6,7)),5).
move(4,((6,7),(6,6)),6).
move(4,((6,6),(6,5)),10).
move(4,((6,5),(6,6)),11).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(7,2)),8).
move(6,((7,2),(7,3)),9).
move(6,((7,3),(8,3)),10).
move(7,((8,9),(7,9)),1).
move(7,((7,9),(6,9)),2).
move(7,((6,9),(5,9)),3).
move(7,((5,9),(4,9)),4).
move(7,((4,9),(4,8)),5).
move(7,((4,8),(4,7)),6).
move(7,((4,7),(4,6)),7).
move(7,((4,6),(4,5)),8).
move(7,((4,5),(4,4)),9).
move(7,((4,4),(4,3)),10).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(8,8)),2).
move(8,((8,8),(9,8)),3).
move(8,((9,8),(10,8)),4).
move(8,((10,8),(11,8)),5).
move(8,((11,8),(12,8)),6).
move(8,((12,8),(12,7)),7).
move(8,((12,7),(12,6)),8).
move(8,((12,6),(12,5)),9).
move(8,((12,5),(13,5)),10).
move(8,((13,5),(13,4)),11).
move(8,((13,4),(14,4)),12).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(6,9)),3).
move(9,((6,9),(6,8)),5).
move(9,((6,8),(6,7)),9).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(10,3)),6).
move(10,((10,3),(11,3)),7).
move(10,((11,3),(11,4)),8).
move(10,((11,4),(12,4)),9).
move(11,((11,9),(12,9)),1).
move(11,((12,9),(12,8)),2).
move(11,((12,8),(12,9)),3).
move(11,((12,9),(12,8)),7).
move(11,((12,8),(12,7)),8).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(13,8)),2).
move(12,((13,8),(14,8)),3).
move(12,((14,8),(14,7)),4).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(14,8)),2).
move(13,((14,8),(15,8)),3).
move(13,((15,8),(15,7)),4).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(5,9)),9).
move(14,((5,9),(4,9)),10).
move(14,((4,9),(3,9)),11).
move(14,((3,9),(3,8)),12).
move(14,((3,8),(3,7)),13).
move(14,((3,7),(3,6)),14).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(15,7)),2).
move(15,((15,7),(15,6)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.676s (Solving: 0.11s 1st Model: 0.11s Unsat: 0.00s)
CPU Time     : 2.672s

Choices      : 3224    
Conflicts    : 58       (Analyzed: 58)
Restarts     : 0       
Model-Level  : 554.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 58       (Deleted: 0)
  Binary     : 14       (Ratio:  24.14%)
  Ternary    : 2        (Ratio:   3.45%)
  Conflict   : 58       (Average Length:   40.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 58       (Average: 46.03 Max: 351 Sum:   2670)
  Executed   : 58       (Average: 46.03 Max: 351 Sum:   2670 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 576525   (Original: 515285)
  Choice     : 300     
  Heuristic  : 772      (Original: 780)
Atoms        : 249930   (Original: 235220 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),4).
move(1,((4,9),(5,9)),5).
move(1,((5,9),(5,8)),6).
move(1,((5,8),(5,7)),7).
move(1,((5,7),(5,6)),8).
move(1,((5,6),(4,6)),9).
move(1,((4,6),(5,6)),10).
move(1,((5,6),(4,6)),14).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(2,((3,3),(4,3)),8).
move(2,((4,3),(5,3)),9).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),8).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),3).
move(4,((4,7),(4,6)),4).
move(4,((4,6),(5,6)),5).
move(4,((5,6),(6,6)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(6,5)),6).
move(5,((6,5),(6,4)),7).
move(5,((6,4),(6,3)),8).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(7,7)),4).
move(6,((7,7),(7,6)),5).
move(6,((7,6),(7,5)),6).
move(6,((7,5),(7,4)),7).
move(6,((7,4),(8,4)),8).
move(6,((8,4),(8,3)),9).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(7,8)),2).
move(7,((7,8),(6,8)),3).
move(7,((6,8),(6,7)),4).
move(7,((6,7),(6,6)),5).
move(7,((6,6),(6,5)),7).
move(7,((6,5),(6,4)),8).
move(7,((6,4),(5,4)),9).
move(7,((5,4),(4,4)),10).
move(7,((4,4),(4,3)),11).
move(8,((7,9),(8,9)),1).
move(8,((8,9),(9,9)),2).
move(8,((9,9),(10,9)),3).
move(8,((10,9),(10,8)),4).
move(8,((10,8),(11,8)),5).
move(8,((11,8),(12,8)),6).
move(8,((12,8),(12,7)),7).
move(8,((12,7),(12,6)),8).
move(8,((12,6),(12,5)),9).
move(8,((12,5),(13,5)),10).
move(8,((13,5),(14,5)),11).
move(8,((14,5),(14,4)),12).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(8,8)),2).
move(9,((8,8),(7,8)),3).
move(9,((7,8),(6,8)),4).
move(9,((6,8),(6,7)),11).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(11,5)),5).
move(10,((11,5),(11,4)),6).
move(10,((11,4),(12,4)),7).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),2).
move(11,((11,7),(12,7)),8).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(13,7)),3).
move(12,((13,7),(14,7)),4).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(14,8)),3).
move(13,((14,8),(15,8)),4).
move(13,((15,8),(15,7)),5).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(8,8)),7).
move(14,((8,8),(7,8)),8).
move(14,((7,8),(7,7)),9).
move(14,((7,7),(6,7)),10).
move(14,((6,7),(5,7)),11).
move(14,((5,7),(4,7)),12).
move(14,((4,7),(4,6)),13).
move(14,((4,6),(3,6)),14).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(15,7)),2).
move(15,((15,7),(15,6)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.692s (Solving: 0.08s 1st Model: 0.08s Unsat: 0.00s)
CPU Time     : 2.688s

Choices      : 1145    
Conflicts    : 57       (Analyzed: 57)
Restarts     : 0       
Model-Level  : 309.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 57       (Deleted: 0)
  Binary     : 13       (Ratio:  22.81%)
  Ternary    : 5        (Ratio:   8.77%)
  Conflict   : 57       (Average Length:   34.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 57       (Average: 14.67 Max:  79 Sum:    836)
  Executed   : 57       (Average: 14.67 Max:  79 Sum:    836 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 603975   (Original: 542971)
  Choice     : 300     
  Heuristic  : 28222    (Original: 28466)
Atoms        : 249930   (Original: 235220 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(2,7)),3).
move(1,((2,7),(2,6)),4).
move(1,((2,6),(2,5)),5).
move(1,((2,5),(1,5)),6).
move(1,((1,5),(1,4)),7).
move(1,((1,4),(2,4)),8).
move(1,((2,4),(2,3)),9).
move(1,((2,3),(3,3)),12).
move(1,((3,3),(4,3)),13).
move(1,((4,3),(3,3)),15).
move(1,((3,3),(3,4)),16).
move(1,((3,4),(3,5)),17).
move(1,((3,5),(3,6)),18).
move(1,((3,6),(4,6)),20).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(3,8)),4).
move(2,((3,8),(3,7)),5).
move(2,((3,7),(3,6)),6).
move(2,((3,6),(3,5)),7).
move(2,((3,5),(3,4)),8).
move(2,((3,4),(3,3)),9).
move(2,((3,3),(3,2)),10).
move(2,((3,2),(2,2)),11).
move(2,((2,2),(3,2)),12).
move(2,((3,2),(3,3)),13).
move(2,((3,3),(3,4)),15).
move(2,((3,4),(3,5)),16).
move(2,((3,5),(4,5)),17).
move(2,((4,5),(5,5)),18).
move(2,((5,5),(5,4)),19).
move(2,((5,4),(5,3)),20).
move(3,((3,9),(2,9)),1).
move(3,((2,9),(1,9)),2).
move(3,((1,9),(1,8)),3).
move(3,((1,8),(2,8)),4).
move(3,((2,8),(2,7)),5).
move(3,((2,7),(2,6)),6).
move(3,((2,6),(2,5)),7).
move(3,((2,5),(2,4)),9).
move(3,((2,4),(3,4)),11).
move(3,((3,4),(4,4)),12).
move(3,((4,4),(3,4)),13).
move(3,((3,4),(2,4)),14).
move(3,((2,4),(2,3)),15).
move(3,((2,3),(2,2)),16).
move(3,((2,2),(3,2)),17).
move(3,((3,2),(4,2)),18).
move(3,((4,2),(3,2)),19).
move(3,((3,2),(3,3)),20).
move(4,((4,9),(3,9)),2).
move(4,((3,9),(3,8)),3).
move(4,((3,8),(3,7)),4).
move(4,((3,7),(3,6)),5).
move(4,((3,6),(3,5)),6).
move(4,((3,5),(3,4)),7).
move(4,((3,4),(4,4)),8).
move(4,((4,4),(5,4)),9).
move(4,((5,4),(6,4)),10).
move(4,((6,4),(7,4)),11).
move(4,((7,4),(8,4)),12).
move(4,((8,4),(8,3)),13).
move(4,((8,3),(9,3)),14).
move(4,((9,3),(9,4)),15).
move(4,((9,4),(9,5)),16).
move(4,((9,5),(8,5)),17).
move(4,((8,5),(7,5)),18).
move(4,((7,5),(6,5)),19).
move(4,((6,5),(6,6)),20).
move(5,((5,9),(5,8)),3).
move(5,((5,8),(5,7)),4).
move(5,((5,7),(5,6)),5).
move(5,((5,6),(6,6)),7).
move(5,((6,6),(7,6)),8).
move(5,((7,6),(8,6)),9).
move(5,((8,6),(8,7)),10).
move(5,((8,7),(7,7)),11).
move(5,((7,7),(7,6)),12).
move(5,((7,6),(7,7)),13).
move(5,((7,7),(7,6)),15).
move(5,((7,6),(7,5)),16).
move(5,((7,5),(6,5)),18).
move(5,((6,5),(6,4)),19).
move(5,((6,4),(6,3)),20).
move(6,((6,9),(6,8)),2).
move(6,((6,8),(6,7)),3).
move(6,((6,7),(6,6)),4).
move(6,((6,6),(6,5)),5).
move(6,((6,5),(5,5)),6).
move(6,((5,5),(5,4)),7).
move(6,((5,4),(5,3)),8).
move(6,((5,3),(5,2)),9).
move(6,((5,2),(5,3)),10).
move(6,((5,3),(6,3)),11).
move(6,((6,3),(6,4)),12).
move(6,((6,4),(7,4)),13).
move(6,((7,4),(8,4)),14).
move(6,((8,4),(7,4)),16).
move(6,((7,4),(6,4)),17).
move(6,((6,4),(7,4)),18).
move(6,((7,4),(8,4)),19).
move(6,((8,4),(8,3)),20).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(7,8)),2).
move(7,((7,8),(6,8)),3).
move(7,((6,8),(6,7)),4).
move(7,((6,7),(6,6)),5).
move(7,((6,6),(6,5)),6).
move(7,((6,5),(6,4)),7).
move(7,((6,4),(6,3)),8).
move(7,((6,3),(6,2)),9).
move(7,((6,2),(6,1)),10).
move(7,((6,1),(5,1)),11).
move(7,((5,1),(4,1)),12).
move(7,((4,1),(4,2)),13).
move(7,((4,2),(3,2)),14).
move(7,((3,2),(4,2)),15).
move(7,((4,2),(4,3)),16).
move(7,((4,3),(4,4)),17).
move(7,((4,4),(4,3)),20).
move(8,((7,9),(7,8)),3).
move(8,((7,8),(7,7)),4).
move(8,((7,7),(8,7)),5).
move(8,((8,7),(9,7)),6).
move(8,((9,7),(10,7)),7).
move(8,((10,7),(11,7)),8).
move(8,((11,7),(12,7)),9).
move(8,((12,7),(13,7)),10).
move(8,((13,7),(13,6)),11).
move(8,((13,6),(13,5)),12).
move(8,((13,5),(13,4)),13).
move(8,((13,4),(13,3)),14).
move(8,((13,3),(12,3)),15).
move(8,((12,3),(13,3)),16).
move(8,((13,3),(14,3)),17).
move(8,((14,3),(15,3)),18).
move(8,((15,3),(15,4)),19).
move(8,((15,4),(14,4)),20).
move(9,((9,9),(9,8)),3).
move(9,((9,8),(9,7)),4).
move(9,((9,7),(9,6)),5).
move(9,((9,6),(9,5)),6).
move(9,((9,5),(9,4)),7).
move(9,((9,4),(9,3)),8).
move(9,((9,3),(9,2)),9).
move(9,((9,2),(9,1)),10).
move(9,((9,1),(9,2)),11).
move(9,((9,2),(9,3)),12).
move(9,((9,3),(9,4)),13).
move(9,((9,4),(9,5)),15).
move(9,((9,5),(9,6)),16).
move(9,((9,6),(8,6)),17).
move(9,((8,6),(7,6)),18).
move(9,((7,6),(6,6)),19).
move(9,((6,6),(6,7)),20).
move(10,((10,9),(10,8)),3).
move(10,((10,8),(10,7)),4).
move(10,((10,7),(10,6)),5).
move(10,((10,6),(10,5)),6).
move(10,((10,5),(10,4)),7).
move(10,((10,4),(10,3)),8).
move(10,((10,3),(10,2)),9).
move(10,((10,2),(11,2)),10).
move(10,((11,2),(12,2)),11).
move(10,((12,2),(13,2)),12).
move(10,((13,2),(14,2)),13).
move(10,((14,2),(14,3)),14).
move(10,((14,3),(14,2)),16).
move(10,((14,2),(13,2)),17).
move(10,((13,2),(13,3)),18).
move(10,((13,3),(12,3)),19).
move(10,((12,3),(12,4)),20).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(12,8)),2).
move(11,((12,8),(11,8)),3).
move(11,((11,8),(11,7)),4).
move(11,((11,7),(11,6)),5).
move(11,((11,6),(12,6)),6).
move(11,((12,6),(13,6)),7).
move(11,((13,6),(14,6)),8).
move(11,((14,6),(15,6)),9).
move(11,((15,6),(14,6)),10).
move(11,((14,6),(14,7)),11).
move(11,((14,7),(13,7)),12).
move(11,((13,7),(13,8)),13).
move(11,((13,8),(12,8)),14).
move(11,((12,8),(13,8)),15).
move(11,((13,8),(12,8)),16).
move(11,((12,8),(12,7)),17).
move(11,((12,7),(12,8)),18).
move(11,((12,8),(12,7)),20).
move(12,((12,9),(11,9)),1).
move(12,((11,9),(11,8)),2).
move(12,((11,8),(11,7)),3).
move(12,((11,7),(11,6)),4).
move(12,((11,6),(12,6)),5).
move(12,((12,6),(13,6)),6).
move(12,((13,6),(14,6)),7).
move(12,((14,6),(15,6)),8).
move(12,((15,6),(16,6)),9).
move(12,((16,6),(16,5)),10).
move(12,((16,5),(17,5)),11).
move(12,((17,5),(18,5)),12).
move(12,((18,5),(17,5)),13).
move(12,((17,5),(16,5)),14).
move(12,((16,5),(16,6)),15).
move(12,((16,6),(16,7)),16).
move(12,((16,7),(15,7)),17).
move(12,((15,7),(14,7)),18).
move(12,((14,7),(14,8)),19).
move(12,((14,8),(14,7)),20).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(13,7)),3).
move(13,((13,7),(12,7)),4).
move(13,((12,7),(13,7)),5).
move(13,((13,7),(14,7)),6).
move(13,((14,7),(15,7)),7).
move(13,((15,7),(16,7)),8).
move(13,((16,7),(17,7)),9).
move(13,((17,7),(18,7)),10).
move(13,((18,7),(18,8)),11).
move(13,((18,8),(17,8)),12).
move(13,((17,8),(18,8)),13).
move(13,((18,8),(18,7)),15).
move(13,((18,7),(18,8)),16).
move(13,((18,8),(18,7)),17).
move(13,((18,7),(17,7)),18).
move(13,((17,7),(16,7)),19).
move(13,((16,7),(15,7)),20).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(6,8)),9).
move(14,((6,8),(7,8)),10).
move(14,((7,8),(6,8)),11).
move(14,((6,8),(5,8)),12).
move(14,((5,8),(5,7)),13).
move(14,((5,7),(4,7)),14).
move(14,((4,7),(3,7)),15).
move(14,((3,7),(3,6)),16).
move(14,((3,6),(2,6)),17).
move(14,((2,6),(2,5)),18).
move(14,((2,5),(2,6)),19).
move(14,((2,6),(3,6)),20).
move(15,((15,9),(14,9)),2).
move(15,((14,9),(14,8)),3).
move(15,((14,8),(14,7)),4).
move(15,((14,7),(14,6)),5).
move(15,((14,6),(14,5)),7).
move(15,((14,5),(14,4)),9).
move(15,((14,4),(14,3)),10).
move(15,((14,3),(14,2)),11).
move(15,((14,2),(15,2)),12).
move(15,((15,2),(16,2)),13).
move(15,((16,2),(17,2)),14).
move(15,((17,2),(17,3)),15).
move(15,((17,3),(16,3)),16).
move(15,((16,3),(16,4)),17).
move(15,((16,4),(16,5)),18).
move(15,((16,5),(16,6)),19).
move(15,((16,6),(15,6)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.958s (Solving: 0.38s 1st Model: 0.38s Unsat: 0.00s)
CPU Time     : 2.953s

Choices      : 3388     (Domain: 3388)
Conflicts    : 179      (Analyzed: 179)
Restarts     : 1        (Average: 179.00 Last: 24)
Model-Level  : 222.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 179      (Deleted: 0)
  Binary     : 52       (Ratio:  29.05%)
  Ternary    : 11       (Ratio:   6.15%)
  Conflict   : 179      (Average Length:   11.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 179      (Average: 17.69 Max: 156 Sum:   3166)
  Executed   : 179      (Average: 17.69 Max: 156 Sum:   3166 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 603975   (Original: 542971)
  Choice     : 300     
  Heuristic  : 28222    (Original: 28466)
Atoms        : 249930   (Original: 235220 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

