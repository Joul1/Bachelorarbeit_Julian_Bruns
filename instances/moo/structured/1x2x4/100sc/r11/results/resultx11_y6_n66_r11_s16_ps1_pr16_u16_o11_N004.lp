%%%%%
%Standard
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),4).
move(1,((1,2),(1,3)),7).
move(1,((1,3),(2,3)),8).
move(1,((2,3),(3,3)),9).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(4,3)),4).
move(3,((4,3),(5,3)),5).
move(3,((5,3),(6,3)),6).
move(3,((6,3),(7,3)),7).
move(3,((7,3),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(8,6)),3).
move(5,((8,6),(8,5)),4).
move(5,((8,5),(8,4)),6).
move(5,((8,4),(8,3)),40).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(8,4)),3).
move(6,((8,4),(7,4)),4).
move(6,((7,4),(6,4)),5).
move(6,((6,4),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(5,4)),4).
move(7,((5,4),(4,4)),5).
move(7,((4,4),(4,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),4).
move(8,((8,3),(9,3)),5).
move(8,((9,3),(10,3)),6).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(7,6)),6).
move(9,((7,6),(7,5)),7).
move(9,((7,5),(7,4)),8).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(9,5)),2).
move(10,((9,5),(8,5)),6).
move(10,((8,5),(8,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(10,4)),3).
move(11,((10,4),(9,4)),4).
move(11,((9,4),(8,4)),5).
move(11,((8,4),(7,4)),6).
move(11,((7,4),(6,4)),7).
move(11,((6,4),(5,4)),8).
move(11,((5,4),(4,4)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.675s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.672s

Choices      : 706     
Conflicts    : 32       (Analyzed: 32)
Restarts     : 0       
Model-Level  : 435.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 32       (Deleted: 0)
  Binary     : 4        (Ratio:  12.50%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 32       (Average Length:   19.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 32       (Average:  8.47 Max:  96 Sum:    271)
  Executed   : 32       (Average:  8.47 Max:  96 Sum:    271 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353468   (Original: 327181)
  Choice     : 440     
Atoms        : 141635  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(2,3)),5).
move(1,((2,3),(2,4)),6).
move(1,((2,4),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(7,5)),6).
move(2,((7,5),(8,5)),7).
move(2,((8,5),(9,5)),8).
move(2,((9,5),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(4,4)),3).
move(3,((4,4),(5,4)),4).
move(3,((5,4),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(7,3)),7).
move(3,((7,3),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(8,4)),6).
move(5,((8,4),(8,3)),40).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),7).
move(6,((5,4),(5,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),5).
move(7,((5,3),(4,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(8,4)),3).
move(8,((8,4),(8,3)),6).
move(8,((8,3),(9,3)),7).
move(8,((9,3),(10,3)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(6,5)),5).
move(9,((6,5),(6,4)),6).
move(9,((6,4),(7,4)),7).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(9,5)),2).
move(10,((9,5),(8,5)),5).
move(10,((8,5),(8,6)),6).
move(10,((8,6),(8,5)),8).
move(10,((8,5),(8,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(6,4)),7).
move(11,((6,4),(5,4)),8).
move(11,((5,4),(4,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.725s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.703s

Choices      : 797      (Domain: 102)
Conflicts    : 33       (Analyzed: 33)
Restarts     : 0       
Model-Level  : 538.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 33       (Deleted: 0)
  Binary     : 8        (Ratio:  24.24%)
  Ternary    : 1        (Ratio:   3.03%)
  Conflict   : 33       (Average Length:   17.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 33       (Average:  7.85 Max:  35 Sum:    259)
  Executed   : 33       (Average:  7.85 Max:  35 Sum:    259 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353710   (Original: 327423)
  Choice     : 440     
  Heuristic  : 107     
Atoms        : 141770  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(3,4)),4).
move(1,((3,4),(3,3)),5).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(5,5)),3).
move(3,((5,5),(5,4)),4).
move(3,((5,4),(5,3)),5).
move(3,((5,3),(5,2)),6).
move(3,((5,2),(6,2)),7).
move(3,((6,2),(7,2)),8).
move(3,((7,2),(8,2)),9).
move(3,((8,2),(9,2)),10).
move(3,((9,2),(9,3)),11).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(6,5)),2).
move(5,((6,5),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(5,((7,3),(8,3)),6).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(4,4)),4).
move(7,((4,4),(4,3)),5).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(10,5)),4).
move(8,((10,5),(10,4)),5).
move(8,((10,4),(10,3)),6).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(7,4)),5).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(6,4)),7).
move(11,((6,4),(5,4)),8).
move(11,((5,4),(4,4)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.721s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.719s

Choices      : 387      (Domain: 387)
Conflicts    : 0        (Analyzed: 0)
Restarts     : 0       
Model-Level  : 387.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 0        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 0        (Average:  0.00 Max:   0 Sum:      0)
  Executed   : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio: 100.00%)

Rules        : 378793   (Original: 352638)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141781  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(2,5)),2).
move(1,((2,5),(2,4)),5).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(3,3)),8).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(5,5)),3).
move(3,((5,5),(5,4)),4).
move(3,((5,4),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(8,4)),7).
move(3,((8,4),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(8,5)),5).
move(4,((8,5),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(6,5)),2).
move(5,((6,5),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(5,((7,3),(7,2)),6).
move(5,((7,2),(8,2)),7).
move(5,((8,2),(8,3)),40).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(6,((4,3),(5,3)),9).
move(6,((5,3),(5,4)),10).
move(6,((5,4),(5,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(4,4)),4).
move(7,((4,4),(4,3)),5).
move(7,((4,3),(4,2)),6).
move(7,((4,2),(3,2)),7).
move(7,((3,2),(4,2)),8).
move(7,((4,2),(4,3)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(9,4)),4).
move(8,((9,4),(10,4)),5).
move(8,((10,4),(10,3)),7).
move(8,((10,3),(10,2)),8).
move(8,((10,2),(10,3)),40).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,6)),2).
move(9,((10,6),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(8,3)),7).
move(9,((8,3),(7,3)),8).
move(9,((7,3),(7,4)),9).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(9,5)),2).
move(10,((9,5),(10,5)),3).
move(10,((10,5),(11,5)),6).
move(10,((11,5),(10,5)),7).
move(10,((10,5),(9,5)),8).
move(10,((9,5),(8,5)),9).
move(10,((8,5),(8,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(6,4)),7).
move(11,((6,4),(5,4)),8).
move(11,((5,4),(4,4)),9).
move(11,((4,4),(4,5)),10).
move(11,((4,5),(4,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.795s (Solving: 0.09s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 1.797s

Choices      : 811      (Domain: 246)
Conflicts    : 68       (Analyzed: 68)
Restarts     : 0       
Model-Level  : 385.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 68       (Deleted: 0)
  Binary     : 23       (Ratio:  33.82%)
  Ternary    : 5        (Ratio:   7.35%)
  Conflict   : 68       (Average Length:   41.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 68       (Average:  6.26 Max:  35 Sum:    426)
  Executed   : 68       (Average:  6.26 Max:  35 Sum:    426 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378793   (Original: 352638)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141781  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(3,4)),4).
move(1,((3,4),(3,3)),5).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(7,6)),4).
move(3,((7,6),(8,6)),5).
move(3,((8,6),(9,6)),6).
move(3,((9,6),(9,5)),7).
move(3,((9,5),(9,4)),8).
move(3,((9,4),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(4,((9,4),(8,4)),8).
move(4,((8,4),(9,4)),40).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(5,((7,3),(7,2)),6).
move(5,((7,2),(7,3)),8).
move(5,((7,3),(8,3)),40).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(8,6)),3).
move(6,((8,6),(8,5)),4).
move(6,((8,5),(8,4)),5).
move(6,((8,4),(8,3)),6).
move(6,((8,3),(7,3)),7).
move(6,((7,3),(6,3)),8).
move(6,((6,3),(5,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(4,4)),4).
move(7,((4,4),(4,3)),5).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(9,4)),4).
move(8,((9,4),(9,3)),5).
move(8,((9,3),(10,3)),6).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(8,4)),4).
move(9,((8,4),(7,4)),5).
move(9,((7,4),(6,4)),6).
move(9,((6,4),(6,5)),7).
move(9,((6,5),(7,5)),8).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(9,5)),2).
move(10,((9,5),(10,5)),3).
move(10,((10,5),(9,5)),4).
move(10,((9,5),(8,5)),5).
move(10,((8,5),(7,5)),6).
move(10,((7,5),(7,4)),8).
move(10,((7,4),(8,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(10,4)),3).
move(11,((10,4),(9,4)),5).
move(11,((9,4),(8,4)),6).
move(11,((8,4),(7,4)),7).
move(11,((7,4),(6,4)),8).
move(11,((6,4),(5,4)),9).
move(11,((5,4),(4,4)),10).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.699s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.703s

Choices      : 492      (Domain: 49)
Conflicts    : 10       (Analyzed: 10)
Restarts     : 0       
Model-Level  : 433.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 10       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 10       (Average Length:   32.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 10       (Average:  5.90 Max:  25 Sum:     59)
  Executed   : 10       (Average:  5.90 Max:  25 Sum:     59 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354851   (Original: 328586)
  Choice     : 440     
  Heuristic  : 1166     (Original: 1188)
Atoms        : 141852  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(2,3)),4).
move(1,((2,3),(3,3)),5).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(3,5)),2).
move(2,((3,5),(4,5)),3).
move(2,((4,5),(5,5)),4).
move(2,((5,5),(6,5)),5).
move(2,((6,5),(7,5)),6).
move(2,((7,5),(8,5)),7).
move(2,((8,5),(9,5)),8).
move(2,((9,5),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(4,5)),2).
move(3,((4,5),(5,5)),3).
move(3,((5,5),(6,5)),4).
move(3,((6,5),(7,5)),5).
move(3,((7,5),(8,5)),6).
move(3,((8,5),(9,5)),7).
move(3,((9,5),(9,4)),8).
move(3,((9,4),(9,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),5).
move(4,((6,4),(7,4)),6).
move(4,((7,4),(8,4)),7).
move(4,((8,4),(9,4)),40).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(8,5)),4).
move(5,((8,5),(8,4)),5).
move(5,((8,4),(8,3)),6).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(8,4)),3).
move(6,((8,4),(7,4)),4).
move(6,((7,4),(7,3)),5).
move(6,((7,3),(6,3)),7).
move(6,((6,3),(5,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),4).
move(7,((5,3),(4,3)),5).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),4).
move(8,((8,3),(9,3)),6).
move(8,((9,3),(10,3)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(9,3)),4).
move(9,((9,3),(9,2)),6).
move(9,((9,2),(8,2)),7).
move(9,((8,2),(7,2)),8).
move(9,((7,2),(7,3)),9).
move(9,((7,3),(7,4)),40).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(7,5)),2).
move(10,((7,5),(7,4)),3).
move(10,((7,4),(7,3)),4).
move(10,((7,3),(6,3)),5).
move(10,((6,3),(6,4)),6).
move(10,((6,4),(7,4)),7).
move(10,((7,4),(8,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(3,5)),9).
move(11,((3,5),(3,4)),10).
move(11,((3,4),(4,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.937s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 1.906s

Choices      : 2066     (Domain: 1389)
Conflicts    : 23       (Analyzed: 23)
Restarts     : 0       
Model-Level  : 1843.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 23       (Deleted: 0)
  Binary     : 3        (Ratio:  13.04%)
  Ternary    : 1        (Ratio:   4.35%)
  Conflict   : 23       (Average Length:   21.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 23       (Average:  9.70 Max:  39 Sum:    223)
  Executed   : 23       (Average:  9.70 Max:  39 Sum:    223 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 355066   (Original: 328787)
  Choice     : 440     
  Heuristic  : 1463     (Original: 1471)
Atoms        : 141770  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(1,5)),2).
move(1,((1,5),(2,5)),5).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(3,3)),8).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(6,5)),5).
move(2,((6,5),(7,5)),6).
move(2,((7,5),(8,5)),7).
move(2,((8,5),(9,5)),8).
move(2,((9,5),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(4,4)),3).
move(3,((4,4),(5,4)),4).
move(3,((5,4),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(7,3)),7).
move(3,((7,3),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(8,5)),6).
move(4,((8,5),(9,5)),7).
move(4,((9,5),(9,4)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(8,5)),4).
move(5,((8,5),(9,5)),5).
move(5,((9,5),(9,4)),6).
move(5,((9,4),(8,4)),7).
move(5,((8,4),(8,3)),40).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(6,5)),6).
move(6,((6,5),(5,5)),7).
move(6,((5,5),(5,4)),8).
move(6,((5,4),(5,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),5).
move(7,((5,3),(4,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),4).
move(8,((8,3),(8,4)),5).
move(8,((8,4),(8,3)),6).
move(8,((8,3),(9,3)),7).
move(8,((9,3),(10,3)),8).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(9,3)),4).
move(9,((9,3),(9,4)),5).
move(9,((9,4),(8,4)),6).
move(9,((8,4),(7,4)),7).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,5)),5).
move(10,((8,5),(8,6)),6).
move(10,((8,6),(8,5)),8).
move(10,((8,5),(8,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(3,5)),9).
move(11,((3,5),(3,4)),10).
move(11,((3,4),(4,4)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.779s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.781s

Choices      : 939      (Domain: 398)
Conflicts    : 39       (Analyzed: 39)
Restarts     : 0       
Model-Level  : 482.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 39       (Deleted: 0)
  Binary     : 5        (Ratio:  12.82%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 39       (Average Length:   19.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 39       (Average: 11.72 Max:  90 Sum:    457)
  Executed   : 39       (Average: 11.72 Max:  90 Sum:    457 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378806   (Original: 352640)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141793  
Disjunctions : 0        (Original: 1)
Bodies       : 247623   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128049   (Atom=Atom: 470 Body=Body: 482 Other: 127097)
Tight        : Yes
Variables    : 246824   (Eliminated:    0 Frozen: 126446)
Constraints  : 678181   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(1,3)),8).
move(1,((1,3),(2,3)),9).
move(1,((2,3),(2,4)),10).
move(1,((2,4),(3,4)),12).
move(1,((3,4),(2,4)),13).
move(1,((2,4),(3,4)),36).
move(1,((3,4),(3,3)),38).
move(1,((3,3),(2,3)),39).
move(1,((2,3),(3,3)),40).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(2,4)),3).
move(2,((2,4),(3,4)),4).
move(2,((3,4),(2,4)),5).
move(2,((2,4),(3,4)),6).
move(2,((3,4),(2,4)),7).
move(2,((2,4),(2,5)),10).
move(2,((2,5),(2,4)),12).
move(2,((2,4),(2,5)),13).
move(2,((2,5),(3,5)),30).
move(2,((3,5),(4,5)),31).
move(2,((4,5),(5,5)),32).
move(2,((5,5),(6,5)),33).
move(2,((6,5),(7,5)),34).
move(2,((7,5),(7,6)),35).
move(2,((7,6),(8,6)),36).
move(2,((8,6),(8,5)),37).
move(2,((8,5),(9,5)),38).
move(2,((9,5),(10,5)),39).
move(2,((10,5),(10,4)),40).
move(3,((3,6),(3,5)),3).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,4)),7).
move(3,((3,4),(3,3)),9).
move(3,((3,3),(3,4)),10).
move(3,((3,4),(3,3)),12).
move(3,((3,3),(4,3)),13).
move(3,((4,3),(4,4)),16).
move(3,((4,4),(3,4)),17).
move(3,((3,4),(3,3)),20).
move(3,((3,3),(4,3)),21).
move(3,((4,3),(3,3)),22).
move(3,((3,3),(4,3)),25).
move(3,((4,3),(3,3)),26).
move(3,((3,3),(3,4)),27).
move(3,((3,4),(3,3)),29).
move(3,((3,3),(4,3)),30).
move(3,((4,3),(4,4)),31).
move(3,((4,4),(4,3)),33).
move(3,((4,3),(4,2)),34).
move(3,((4,2),(5,2)),35).
move(3,((5,2),(6,2)),36).
move(3,((6,2),(6,3)),37).
move(3,((6,3),(7,3)),38).
move(3,((7,3),(8,3)),39).
move(3,((8,3),(9,3)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,5)),6).
move(4,((4,5),(5,5)),8).
move(4,((5,5),(4,5)),9).
move(4,((4,5),(5,5)),10).
move(4,((5,5),(4,5)),11).
move(4,((4,5),(4,4)),15).
move(4,((4,4),(5,4)),16).
move(4,((5,4),(6,4)),17).
move(4,((6,4),(7,4)),18).
move(4,((7,4),(7,5)),20).
move(4,((7,5),(6,5)),21).
move(4,((6,5),(7,5)),22).
move(4,((7,5),(7,4)),23).
move(4,((7,4),(6,4)),24).
move(4,((6,4),(5,4)),26).
move(4,((5,4),(6,4)),27).
move(4,((6,4),(6,5)),29).
move(4,((6,5),(5,5)),30).
move(4,((5,5),(5,4)),31).
move(4,((5,4),(5,5)),33).
move(4,((5,5),(6,5)),34).
move(4,((6,5),(7,5)),35).
move(4,((7,5),(7,6)),36).
move(4,((7,6),(8,6)),37).
move(4,((8,6),(8,5)),38).
move(4,((8,5),(9,5)),39).
move(4,((9,5),(9,4)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,4)),6).
move(5,((5,4),(5,5)),7).
move(5,((5,5),(6,5)),8).
move(5,((6,5),(6,4)),10).
move(5,((6,4),(5,4)),11).
move(5,((5,4),(5,5)),13).
move(5,((5,5),(5,4)),24).
move(5,((5,4),(5,3)),25).
move(5,((5,3),(6,3)),26).
move(5,((6,3),(5,3)),27).
move(5,((5,3),(6,3)),28).
move(5,((6,3),(5,3)),29).
move(5,((5,3),(6,3)),30).
move(5,((6,3),(5,3)),33).
move(5,((5,3),(5,4)),35).
move(5,((5,4),(6,4)),37).
move(5,((6,4),(6,3)),38).
move(5,((6,3),(7,3)),39).
move(5,((7,3),(8,3)),40).
move(6,((9,6),(9,5)),3).
move(6,((9,5),(9,4)),4).
move(6,((9,4),(9,3)),5).
move(6,((9,3),(8,3)),7).
move(6,((8,3),(9,3)),8).
move(6,((9,3),(9,4)),9).
move(6,((9,4),(9,3)),10).
move(6,((9,3),(9,4)),12).
move(6,((9,4),(9,3)),13).
move(6,((9,3),(9,4)),14).
move(6,((9,4),(9,5)),16).
move(6,((9,5),(8,5)),17).
move(6,((8,5),(9,5)),18).
move(6,((9,5),(9,4)),19).
move(6,((9,4),(9,3)),21).
move(6,((9,3),(9,4)),22).
move(6,((9,4),(9,3)),26).
move(6,((9,3),(9,4)),27).
move(6,((9,4),(9,3)),30).
move(6,((9,3),(9,4)),31).
move(6,((9,4),(10,4)),32).
move(6,((10,4),(10,5)),33).
move(6,((10,5),(9,5)),34).
move(6,((9,5),(8,5)),35).
move(6,((8,5),(7,5)),36).
move(6,((7,5),(7,4)),37).
move(6,((7,4),(6,4)),38).
move(6,((6,4),(6,3)),39).
move(6,((6,3),(5,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,4)),6).
move(7,((6,4),(6,3)),7).
move(7,((6,3),(5,3)),8).
move(7,((5,3),(6,3)),9).
move(7,((6,3),(5,3)),10).
move(7,((5,3),(6,3)),11).
move(7,((6,3),(5,3)),14).
move(7,((5,3),(6,3)),15).
move(7,((6,3),(5,3)),16).
move(7,((5,3),(6,3)),17).
move(7,((6,3),(5,3)),18).
move(7,((5,3),(6,3)),19).
move(7,((6,3),(6,4)),21).
move(7,((6,4),(6,5)),22).
move(7,((6,5),(5,5)),24).
move(7,((5,5),(5,4)),25).
move(7,((5,4),(5,3)),26).
move(7,((5,3),(5,4)),27).
move(7,((5,4),(5,3)),28).
move(7,((5,3),(5,4)),29).
move(7,((5,4),(6,4)),30).
move(7,((6,4),(6,5)),36).
move(7,((6,5),(5,5)),37).
move(7,((5,5),(4,5)),38).
move(7,((4,5),(4,4)),39).
move(7,((4,4),(4,3)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,4)),7).
move(8,((7,4),(7,5)),8).
move(8,((7,5),(8,5)),9).
move(8,((8,5),(7,5)),10).
move(8,((7,5),(7,4)),11).
move(8,((7,4),(7,3)),13).
move(8,((7,3),(8,3)),14).
move(8,((8,3),(7,3)),15).
move(8,((7,3),(7,4)),16).
move(8,((7,4),(7,3)),18).
move(8,((7,3),(7,4)),20).
move(8,((7,4),(7,3)),22).
move(8,((7,3),(8,3)),23).
move(8,((8,3),(7,3)),24).
move(8,((7,3),(7,4)),25).
move(8,((7,4),(7,3)),27).
move(8,((7,3),(7,4)),29).
move(8,((7,4),(7,5)),30).
move(8,((7,5),(8,5)),32).
move(8,((8,5),(7,5)),33).
move(8,((7,5),(7,4)),34).
move(8,((7,4),(7,3)),36).
move(8,((7,3),(8,3)),38).
move(8,((8,3),(9,3)),39).
move(8,((9,3),(10,3)),40).
move(9,((10,6),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(10,4)),6).
move(9,((10,4),(9,4)),8).
move(9,((9,4),(9,5)),9).
move(9,((9,5),(9,4)),10).
move(9,((9,4),(10,4)),12).
move(9,((10,4),(9,4)),13).
move(9,((9,4),(9,5)),14).
move(9,((9,5),(10,5)),15).
move(9,((10,5),(9,5)),17).
move(9,((9,5),(9,4)),18).
move(9,((9,4),(10,4)),19).
move(9,((10,4),(10,5)),22).
move(9,((10,5),(10,4)),27).
move(9,((10,4),(9,4)),30).
move(9,((9,4),(9,5)),31).
move(9,((9,5),(9,4)),34).
move(9,((9,4),(9,5)),35).
move(9,((9,5),(8,5)),36).
move(9,((8,5),(7,5)),37).
move(9,((7,5),(7,4)),38).
move(9,((7,4),(7,5)),39).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,5)),39).
move(10,((8,5),(8,4)),40).
move(11,((11,6),(10,6)),3).
move(11,((10,6),(10,5)),4).
move(11,((10,5),(11,5)),6).
move(11,((11,5),(11,4)),7).
move(11,((11,4),(10,4)),8).
move(11,((10,4),(10,5)),12).
move(11,((10,5),(10,4)),13).
move(11,((10,4),(10,5)),14).
move(11,((10,5),(10,4)),15).
move(11,((10,4),(10,5)),19).
move(11,((10,5),(9,5)),22).
move(11,((9,5),(9,4)),26).
move(11,((9,4),(9,5)),27).
move(11,((9,5),(10,5)),28).
move(11,((10,5),(10,4)),30).
move(11,((10,4),(10,3)),32).
move(11,((10,3),(9,3)),33).
move(11,((9,3),(8,3)),34).
move(11,((8,3),(7,3)),35).
move(11,((7,3),(6,3)),36).
move(11,((6,3),(5,3)),37).
move(11,((5,3),(5,4)),38).
move(11,((5,4),(4,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.761s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.766s

Choices      : 475      (Domain: 475)
Conflicts    : 26       (Analyzed: 26)
Restarts     : 0       
Model-Level  : 389.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 26       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 26       (Average Length:   12.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 26       (Average:  3.31 Max:   9 Sum:     86)
  Executed   : 26       (Average:  3.31 Max:   9 Sum:     86 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378782   (Original: 352627)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141770  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(1,2)),9).
move(1,((1,2),(1,1)),10).
move(1,((1,1),(1,2)),11).
move(1,((1,2),(2,2)),12).
move(1,((2,2),(2,3)),13).
move(1,((2,3),(2,4)),14).
move(1,((2,4),(2,3)),34).
move(1,((2,3),(3,3)),35).
move(1,((3,3),(2,3)),36).
move(1,((2,3),(2,4)),37).
move(1,((2,4),(2,3)),39).
move(1,((2,3),(3,3)),40).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(3,2)),7).
move(2,((3,2),(3,1)),8).
move(2,((3,1),(2,1)),9).
move(2,((2,1),(2,2)),10).
move(2,((2,2),(2,3)),11).
move(2,((2,3),(2,4)),12).
move(2,((2,4),(3,4)),14).
move(2,((3,4),(4,4)),34).
move(2,((4,4),(5,4)),35).
move(2,((5,4),(6,4)),36).
move(2,((6,4),(7,4)),37).
move(2,((7,4),(8,4)),38).
move(2,((8,4),(9,4)),39).
move(2,((9,4),(10,4)),40).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),5).
move(3,((3,3),(3,2)),6).
move(3,((3,2),(2,2)),7).
move(3,((2,2),(2,1)),8).
move(3,((2,1),(1,1)),9).
move(3,((1,1),(2,1)),10).
move(3,((2,1),(2,2)),11).
move(3,((2,2),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(4,3)),33).
move(3,((4,3),(5,3)),34).
move(3,((5,3),(6,3)),35).
move(3,((6,3),(6,2)),36).
move(3,((6,2),(7,2)),37).
move(3,((7,2),(7,3)),38).
move(3,((7,3),(8,3)),39).
move(3,((8,3),(9,3)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,2)),6).
move(4,((4,2),(4,1)),7).
move(4,((4,1),(4,2)),8).
move(4,((4,2),(4,3)),9).
move(4,((4,3),(4,4)),11).
move(4,((4,4),(4,5)),33).
move(4,((4,5),(5,5)),35).
move(4,((5,5),(6,5)),36).
move(4,((6,5),(7,5)),37).
move(4,((7,5),(8,5)),38).
move(4,((8,5),(9,5)),39).
move(4,((9,5),(9,4)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(5,2)),8).
move(5,((5,2),(5,3)),9).
move(5,((5,3),(5,4)),10).
move(5,((5,4),(4,4)),33).
move(5,((4,4),(5,4)),34).
move(5,((5,4),(6,4)),35).
move(5,((6,4),(7,4)),36).
move(5,((7,4),(8,4)),37).
move(5,((8,4),(8,3)),38).
move(5,((8,3),(8,4)),39).
move(5,((8,4),(8,3)),40).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,2)),7).
move(6,((9,2),(10,2)),8).
move(6,((10,2),(10,1)),9).
move(6,((10,1),(11,1)),10).
move(6,((11,1),(10,1)),11).
move(6,((10,1),(10,2)),12).
move(6,((10,2),(9,2)),13).
move(6,((9,2),(9,3)),14).
move(6,((9,3),(9,4)),15).
move(6,((9,4),(9,3)),35).
move(6,((9,3),(8,3)),36).
move(6,((8,3),(7,3)),37).
move(6,((7,3),(6,3)),38).
move(6,((6,3),(5,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(6,1)),7).
move(7,((6,1),(6,2)),8).
move(7,((6,2),(6,3)),9).
move(7,((6,3),(6,2)),10).
move(7,((6,2),(6,3)),11).
move(7,((6,3),(6,4)),12).
move(7,((6,4),(6,3)),33).
move(7,((6,3),(6,2)),34).
move(7,((6,2),(5,2)),35).
move(7,((5,2),(4,2)),36).
move(7,((4,2),(5,2)),38).
move(7,((5,2),(4,2)),39).
move(7,((4,2),(4,3)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(7,4)),10).
move(8,((7,4),(8,4)),34).
move(8,((8,4),(9,4)),35).
move(8,((9,4),(9,5)),36).
move(8,((9,5),(9,4)),37).
move(8,((9,4),(10,4)),39).
move(8,((10,4),(10,3)),40).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(10,6)),3).
move(9,((10,6),(10,5)),4).
move(9,((10,5),(10,4)),6).
move(9,((10,4),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(9,((11,3),(11,2)),9).
move(9,((11,2),(10,2)),10).
move(9,((10,2),(10,3)),11).
move(9,((10,3),(10,4)),12).
move(9,((10,4),(10,5)),33).
move(9,((10,5),(9,5)),34).
move(9,((9,5),(8,5)),35).
move(9,((8,5),(7,5)),36).
move(9,((7,5),(7,6)),37).
move(9,((7,6),(7,5)),38).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,3)),5).
move(10,((8,3),(8,2)),6).
move(10,((8,2),(8,1)),7).
move(10,((8,1),(9,1)),8).
move(10,((9,1),(9,2)),9).
move(10,((9,2),(8,2)),10).
move(10,((8,2),(8,3)),11).
move(10,((8,3),(8,4)),12).
move(10,((8,4),(8,5)),33).
move(10,((8,5),(7,5)),34).
move(10,((7,5),(7,4)),35).
move(10,((7,4),(8,4)),36).
move(10,((8,4),(8,5)),37).
move(10,((8,5),(8,6)),38).
move(10,((8,6),(8,5)),39).
move(10,((8,5),(8,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(10,2)),7).
move(11,((10,2),(11,2)),8).
move(11,((11,2),(11,1)),9).
move(11,((11,1),(11,2)),10).
move(11,((11,2),(10,2)),11).
move(11,((10,2),(10,3)),12).
move(11,((10,3),(9,3)),33).
move(11,((9,3),(8,3)),34).
move(11,((8,3),(7,3)),35).
move(11,((7,3),(6,3)),36).
move(11,((6,3),(6,4)),38).
move(11,((6,4),(5,4)),39).
move(11,((5,4),(4,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.716s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.719s

Choices      : 464      (Domain: 464)
Conflicts    : 19       (Analyzed: 19)
Restarts     : 0       
Model-Level  : 374.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 19       (Deleted: 0)
  Binary     : 4        (Ratio:  21.05%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 19       (Average Length:   20.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 19       (Average:  4.74 Max:  18 Sum:     90)
  Executed   : 19       (Average:  4.74 Max:  18 Sum:     90 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378782   (Original: 352627)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141770  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

