%%%%%
%Standard
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(4,6)),5).
move(1,((4,6),(3,6)),6).
move(1,((3,6),(3,5)),7).
move(1,((3,5),(3,4)),8).
move(1,((3,4),(3,3)),9).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(7,6)),4).
move(3,((7,6),(8,6)),5).
move(3,((8,6),(8,5)),6).
move(3,((8,5),(8,4)),7).
move(3,((8,4),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(9,4)),7).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(8,6)),4).
move(5,((8,6),(9,6)),5).
move(5,((9,6),(9,5)),6).
move(5,((9,5),(8,5)),7).
move(5,((8,5),(8,4)),8).
move(5,((8,4),(8,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(4,5)),6).
move(6,((4,5),(4,4)),7).
move(6,((4,4),(5,4)),8).
move(6,((5,4),(5,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),4).
move(7,((6,2),(6,3)),5).
move(7,((6,3),(5,3)),7).
move(7,((5,3),(4,3)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),3).
move(8,((6,5),(5,5)),4).
move(8,((5,5),(4,5)),5).
move(8,((4,5),(3,5)),6).
move(8,((3,5),(3,4)),7).
move(8,((3,4),(2,4)),8).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(10,2)),4).
move(9,((10,2),(9,2)),5).
move(9,((9,2),(8,2)),6).
move(9,((8,2),(7,2)),7).
move(9,((7,2),(7,3)),8).
move(9,((7,3),(7,4)),9).
move(9,((7,4),(6,4)),10).
move(9,((6,4),(7,4)),20).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(9,4)),3).
move(10,((9,4),(9,5)),7).
move(10,((9,5),(8,5)),8).
move(10,((8,5),(8,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(7,4)),6).
move(11,((7,4),(6,4)),9).
move(11,((6,4),(6,3)),10).
move(11,((6,3),(7,3)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.853s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.844s

Choices      : 1011    
Conflicts    : 54       (Analyzed: 54)
Restarts     : 0       
Model-Level  : 287.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 54       (Deleted: 0)
  Binary     : 11       (Ratio:  20.37%)
  Ternary    : 1        (Ratio:   1.85%)
  Conflict   : 54       (Average Length:   25.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 54       (Average: 13.41 Max: 104 Sum:    724)
  Executed   : 54       (Average: 13.41 Max: 104 Sum:    724 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165688   (Original: 153701)
  Choice     : 220     
Atoms        : 69035   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(2,4)),4).
move(1,((2,4),(2,5)),5).
move(1,((2,5),(1,5)),6).
move(1,((1,5),(1,4)),7).
move(1,((1,4),(1,3)),8).
move(1,((1,3),(2,3)),9).
move(1,((2,3),(3,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(5,5)),4).
move(2,((5,5),(6,5)),5).
move(2,((6,5),(7,5)),6).
move(2,((7,5),(8,5)),7).
move(2,((8,5),(9,5)),8).
move(2,((9,5),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(4,5)),2).
move(3,((4,5),(5,5)),3).
move(3,((5,5),(6,5)),4).
move(3,((6,5),(7,5)),5).
move(3,((7,5),(7,4)),6).
move(3,((7,4),(7,3)),7).
move(3,((7,3),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(9,4)),7).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(8,5)),4).
move(5,((8,5),(8,6)),5).
move(5,((8,6),(8,5)),6).
move(5,((8,5),(8,4)),7).
move(5,((8,4),(8,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(5,6)),4).
move(6,((5,6),(4,6)),5).
move(6,((4,6),(4,5)),6).
move(6,((4,5),(4,4)),7).
move(6,((4,4),(5,4)),8).
move(6,((5,4),(5,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),4).
move(7,((6,2),(5,2)),5).
move(7,((5,2),(5,3)),6).
move(7,((5,3),(4,3)),7).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(8,6)),4).
move(9,((8,6),(9,6)),5).
move(9,((9,6),(8,6)),6).
move(9,((8,6),(7,6)),8).
move(9,((7,6),(7,5)),9).
move(9,((7,5),(7,4)),10).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(6,5)),3).
move(10,((6,5),(7,5)),4).
move(10,((7,5),(7,6)),5).
move(10,((7,6),(7,5)),7).
move(10,((7,5),(8,5)),8).
move(10,((8,5),(8,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(6,5)),6).
move(11,((6,5),(6,4)),7).
move(11,((6,4),(6,3)),8).
move(11,((6,3),(7,3)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.872s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.875s

Choices      : 990     
Conflicts    : 53       (Analyzed: 53)
Restarts     : 0       
Model-Level  : 220.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 53       (Deleted: 0)
  Binary     : 8        (Ratio:  15.09%)
  Ternary    : 1        (Ratio:   1.89%)
  Conflict   : 53       (Average Length:   19.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 53       (Average: 14.53 Max: 109 Sum:    770)
  Executed   : 53       (Average: 14.53 Max: 109 Sum:    770 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165901   (Original: 153914)
  Choice     : 220     
  Heuristic  : 81      
Atoms        : 69167   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),4).
move(1,((1,2),(1,3)),5).
move(1,((1,3),(1,4)),6).
move(1,((1,4),(1,5)),7).
move(1,((1,5),(2,5)),8).
move(1,((2,5),(3,5)),9).
move(1,((3,5),(3,4)),10).
move(1,((3,4),(3,3)),11).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(7,6)),4).
move(3,((7,6),(8,6)),5).
move(3,((8,6),(8,5)),6).
move(3,((8,5),(8,4)),7).
move(3,((8,4),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(9,4)),7).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(8,6)),4).
move(5,((8,6),(9,6)),5).
move(5,((9,6),(9,5)),6).
move(5,((9,5),(8,5)),7).
move(5,((8,5),(8,4)),8).
move(5,((8,4),(8,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(4,5)),6).
move(6,((4,5),(4,4)),7).
move(6,((4,4),(5,4)),8).
move(6,((5,4),(5,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),4).
move(7,((6,2),(6,3)),5).
move(7,((6,3),(5,3)),7).
move(7,((5,3),(4,3)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),3).
move(8,((6,5),(5,5)),4).
move(8,((5,5),(4,5)),5).
move(8,((4,5),(3,5)),6).
move(8,((3,5),(3,4)),7).
move(8,((3,4),(2,4)),8).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(10,2)),4).
move(9,((10,2),(10,1)),5).
move(9,((10,1),(9,1)),6).
move(9,((9,1),(8,1)),7).
move(9,((8,1),(8,2)),8).
move(9,((8,2),(7,2)),9).
move(9,((7,2),(7,3)),11).
move(9,((7,3),(7,4)),20).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(9,4)),3).
move(10,((9,4),(9,5)),7).
move(10,((9,5),(8,5)),8).
move(10,((8,5),(8,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(7,4)),6).
move(11,((7,4),(7,3)),9).
move(11,((7,3),(8,3)),10).
move(11,((8,3),(7,3)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.955s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.969s

Choices      : 1050    
Conflicts    : 55       (Analyzed: 55)
Restarts     : 0       
Model-Level  : 306.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 55       (Deleted: 0)
  Binary     : 10       (Ratio:  18.18%)
  Ternary    : 1        (Ratio:   1.82%)
  Conflict   : 55       (Average Length:   26.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 55       (Average: 13.53 Max: 104 Sum:    744)
  Executed   : 55       (Average: 13.53 Max: 104 Sum:    744 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165831   (Original: 153844)
  Choice     : 220     
Atoms        : 69178   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),4).
move(1,((1,2),(1,3)),5).
move(1,((1,3),(1,4)),6).
move(1,((1,4),(1,5)),7).
move(1,((1,5),(2,5)),8).
move(1,((2,5),(3,5)),9).
move(1,((3,5),(3,4)),10).
move(1,((3,4),(3,3)),11).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(7,6)),4).
move(3,((7,6),(8,6)),5).
move(3,((8,6),(8,5)),6).
move(3,((8,5),(8,4)),7).
move(3,((8,4),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(9,4)),7).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(8,6)),4).
move(5,((8,6),(9,6)),5).
move(5,((9,6),(9,5)),6).
move(5,((9,5),(8,5)),7).
move(5,((8,5),(8,4)),8).
move(5,((8,4),(8,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(4,5)),6).
move(6,((4,5),(4,4)),7).
move(6,((4,4),(5,4)),8).
move(6,((5,4),(5,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),4).
move(7,((6,2),(6,3)),5).
move(7,((6,3),(5,3)),7).
move(7,((5,3),(4,3)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),3).
move(8,((6,5),(5,5)),4).
move(8,((5,5),(4,5)),5).
move(8,((4,5),(3,5)),6).
move(8,((3,5),(3,4)),7).
move(8,((3,4),(2,4)),8).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(10,2)),4).
move(9,((10,2),(10,1)),5).
move(9,((10,1),(9,1)),6).
move(9,((9,1),(8,1)),7).
move(9,((8,1),(8,2)),8).
move(9,((8,2),(7,2)),9).
move(9,((7,2),(7,3)),11).
move(9,((7,3),(7,4)),20).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(9,4)),3).
move(10,((9,4),(9,5)),7).
move(10,((9,5),(8,5)),8).
move(10,((8,5),(8,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(7,4)),6).
move(11,((7,4),(7,3)),9).
move(11,((7,3),(8,3)),10).
move(11,((8,3),(7,3)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.981s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.984s

Choices      : 1050    
Conflicts    : 55       (Analyzed: 55)
Restarts     : 0       
Model-Level  : 306.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 55       (Deleted: 0)
  Binary     : 10       (Ratio:  18.18%)
  Ternary    : 1        (Ratio:   1.82%)
  Conflict   : 55       (Average Length:   26.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 55       (Average: 13.53 Max: 104 Sum:    744)
  Executed   : 55       (Average: 13.53 Max: 104 Sum:    744 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165831   (Original: 153844)
  Choice     : 220     
Atoms        : 69178   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(2,5)),2).
move(1,((2,5),(2,4)),3).
move(1,((2,4),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(1,((2,3),(3,3)),8).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(9,5)),8).
move(2,((9,5),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(6,5)),4).
move(3,((6,5),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(7,3)),7).
move(3,((7,3),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(8,5)),5).
move(4,((8,5),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(8,6)),3).
move(5,((8,6),(9,6)),4).
move(5,((9,6),(9,5)),5).
move(5,((9,5),(9,4)),6).
move(5,((9,4),(8,4)),7).
move(5,((8,4),(8,3)),20).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(8,4)),3).
move(6,((8,4),(8,3)),4).
move(6,((8,3),(7,3)),5).
move(6,((7,3),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(5,4)),3).
move(7,((5,4),(4,4)),4).
move(7,((4,4),(4,3)),5).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(3,4)),6).
move(8,((3,4),(2,4)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),3).
move(9,((10,4),(9,4)),4).
move(9,((9,4),(8,4)),5).
move(9,((8,4),(8,5)),7).
move(9,((8,5),(7,5)),8).
move(9,((7,5),(7,4)),9).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(7,6)),4).
move(10,((7,6),(8,6)),5).
move(10,((8,6),(8,5)),6).
move(10,((8,5),(8,6)),7).
move(10,((8,6),(8,5)),8).
move(10,((8,5),(8,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(7,4)),7).
move(11,((7,4),(7,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.983s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.969s

Choices      : 761     
Conflicts    : 47       (Analyzed: 47)
Restarts     : 0       
Model-Level  : 304.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 47       (Deleted: 0)
  Binary     : 6        (Ratio:  12.77%)
  Ternary    : 5        (Ratio:  10.64%)
  Conflict   : 47       (Average Length:   17.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 47       (Average:  9.72 Max:  82 Sum:    457)
  Executed   : 47       (Average:  9.72 Max:  82 Sum:    457 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 167040   (Original: 155075)
  Choice     : 220     
  Heuristic  : 1139     (Original: 1161)
Atoms        : 69248   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),4).
move(1,((1,2),(1,3)),7).
move(1,((1,3),(2,3)),8).
move(1,((2,3),(3,3)),9).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(4,4)),3).
move(3,((4,4),(5,4)),4).
move(3,((5,4),(6,4)),5).
move(3,((6,4),(6,3)),6).
move(3,((6,3),(7,3)),7).
move(3,((7,3),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(8,4)),6).
move(5,((8,4),(8,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),5).
move(7,((5,3),(4,3)),6).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(10,2)),4).
move(9,((10,2),(9,2)),5).
move(9,((9,2),(8,2)),6).
move(9,((8,2),(7,2)),7).
move(9,((7,2),(7,3)),8).
move(9,((7,3),(7,4)),9).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(9,4)),4).
move(10,((9,4),(9,5)),5).
move(10,((9,5),(8,5)),6).
move(10,((8,5),(8,4)),20).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(7,4)),7).
move(11,((7,4),(6,4)),8).
move(11,((6,4),(6,3)),9).
move(11,((6,3),(7,3)),10).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.851s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.859s

Choices      : 787     
Conflicts    : 35       (Analyzed: 35)
Restarts     : 0       
Model-Level  : 268.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 35       (Deleted: 0)
  Binary     : 5        (Ratio:  14.29%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 35       (Average Length:   19.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 35       (Average: 14.83 Max:  84 Sum:    519)
  Executed   : 35       (Average: 14.83 Max:  84 Sum:    519 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 166447   (Original: 154464)
  Choice     : 220     
  Heuristic  : 627      (Original: 631)
Atoms        : 69167   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),4).
move(1,((1,2),(2,2)),5).
move(1,((2,2),(2,3)),6).
move(1,((2,3),(3,3)),7).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(10,6)),8).
move(2,((10,6),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(6,5)),4).
move(3,((6,5),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(7,3)),7).
move(3,((7,3),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(9,4)),7).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(5,2)),4).
move(5,((5,2),(6,2)),5).
move(5,((6,2),(7,2)),6).
move(5,((7,2),(8,2)),7).
move(5,((8,2),(8,3)),20).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),4).
move(6,((8,3),(7,3)),5).
move(6,((7,3),(6,3)),7).
move(6,((6,3),(5,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(5,3)),5).
move(7,((5,3),(4,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(3,4)),6).
move(8,((3,4),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),6).
move(9,((7,5),(7,4)),7).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(8,3)),5).
move(10,((8,3),(8,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(6,4)),7).
move(11,((6,4),(6,3)),8).
move(11,((6,3),(7,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.998s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.984s

Choices      : 357      (Domain: 70)
Conflicts    : 35       (Analyzed: 35)
Restarts     : 0       
Model-Level  : 194.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 35       (Deleted: 0)
  Binary     : 3        (Ratio:   8.57%)
  Ternary    : 1        (Ratio:   2.86%)
  Conflict   : 35       (Average Length:   23.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 35       (Average:  4.66 Max:  25 Sum:    163)
  Executed   : 35       (Average:  4.66 Max:  25 Sum:    163 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176501   (Original: 164646)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69189   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(3,6)),3).
move(1,((3,6),(3,5)),4).
move(1,((3,5),(3,4)),5).
move(1,((3,4),(3,3)),6).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(8,6)),6).
move(2,((8,6),(9,6)),7).
move(2,((9,6),(9,5)),8).
move(2,((9,5),(10,5)),9).
move(2,((10,5),(10,4)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(4,5)),2).
move(3,((4,5),(4,4)),3).
move(3,((4,4),(5,4)),4).
move(3,((5,4),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(7,3)),7).
move(3,((7,3),(8,3)),8).
move(3,((8,3),(9,3)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(8,5)),5).
move(4,((8,5),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(5,((7,3),(8,3)),6).
move(5,((8,3),(8,2)),7).
move(5,((8,2),(8,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),4).
move(7,((6,3),(5,3)),5).
move(7,((5,3),(4,3)),6).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),3).
move(9,((8,6),(8,5)),6).
move(9,((8,5),(7,5)),7).
move(9,((7,5),(7,4)),8).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(7,5)),2).
move(10,((7,5),(8,5)),3).
move(10,((8,5),(9,5)),4).
move(10,((9,5),(9,4)),5).
move(10,((9,4),(8,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(10,5)),2).
move(11,((10,5),(9,5)),3).
move(11,((9,5),(9,4)),4).
move(11,((9,4),(8,4)),5).
move(11,((8,4),(7,4)),7).
move(11,((7,4),(7,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.903s (Solving: 0.03s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.891s

Choices      : 470     
Conflicts    : 35       (Analyzed: 35)
Restarts     : 0       
Model-Level  : 235.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 35       (Deleted: 0)
  Binary     : 5        (Ratio:  14.29%)
  Ternary    : 6        (Ratio:  17.14%)
  Conflict   : 35       (Average Length:   16.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 35       (Average:  6.71 Max:  33 Sum:    235)
  Executed   : 35       (Average:  6.71 Max:  33 Sum:    235 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176479   (Original: 164624)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69167   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),7).
move(1,((2,4),(2,3)),8).
move(1,((2,3),(2,2)),9).
move(1,((2,2),(2,1)),10).
move(1,((2,1),(2,2)),11).
move(1,((2,2),(2,3)),12).
move(1,((2,3),(2,4)),13).
move(1,((2,4),(2,3)),14).
move(1,((2,3),(2,2)),15).
move(1,((2,2),(3,2)),17).
move(1,((3,2),(4,2)),18).
move(1,((4,2),(3,2)),19).
move(1,((3,2),(3,3)),20).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(1,3)),8).
move(2,((1,3),(1,2)),9).
move(2,((1,2),(2,2)),10).
move(2,((2,2),(3,2)),11).
move(2,((3,2),(4,2)),12).
move(2,((4,2),(5,2)),13).
move(2,((5,2),(6,2)),14).
move(2,((6,2),(7,2)),15).
move(2,((7,2),(8,2)),16).
move(2,((8,2),(8,3)),17).
move(2,((8,3),(9,3)),18).
move(2,((9,3),(10,3)),19).
move(2,((10,3),(10,4)),20).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),5).
move(3,((3,3),(3,2)),6).
move(3,((3,2),(4,2)),7).
move(3,((4,2),(4,3)),8).
move(3,((4,3),(4,2)),9).
move(3,((4,2),(5,2)),10).
move(3,((5,2),(6,2)),11).
move(3,((6,2),(6,3)),12).
move(3,((6,3),(6,2)),13).
move(3,((6,2),(7,2)),14).
move(3,((7,2),(7,3)),15).
move(3,((7,3),(7,2)),16).
move(3,((7,2),(7,3)),17).
move(3,((7,3),(8,3)),18).
move(3,((8,3),(9,3)),19).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(5,3)),6).
move(4,((5,3),(5,4)),7).
move(4,((5,4),(4,4)),8).
move(4,((4,4),(4,3)),9).
move(4,((4,3),(4,4)),10).
move(4,((4,4),(5,4)),11).
move(4,((5,4),(6,4)),12).
move(4,((6,4),(7,4)),13).
move(4,((7,4),(7,5)),15).
move(4,((7,5),(7,4)),16).
move(4,((7,4),(7,5)),17).
move(4,((7,5),(7,4)),18).
move(4,((7,4),(8,4)),19).
move(4,((8,4),(9,4)),20).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(4,1)),8).
move(5,((4,1),(3,1)),9).
move(5,((3,1),(3,2)),10).
move(5,((3,2),(4,2)),11).
move(5,((4,2),(5,2)),12).
move(5,((5,2),(5,3)),13).
move(5,((5,3),(6,3)),14).
move(5,((6,3),(6,2)),15).
move(5,((6,2),(5,2)),16).
move(5,((5,2),(6,2)),17).
move(5,((6,2),(7,2)),18).
move(5,((7,2),(8,2)),19).
move(5,((8,2),(8,3)),20).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),3).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,2)),7).
move(6,((9,2),(10,2)),8).
move(6,((10,2),(10,3)),9).
move(6,((10,3),(9,3)),10).
move(6,((9,3),(8,3)),11).
move(6,((8,3),(7,3)),12).
move(6,((7,3),(6,3)),13).
move(6,((6,3),(7,3)),14).
move(6,((7,3),(8,3)),15).
move(6,((8,3),(7,3)),16).
move(6,((7,3),(6,3)),17).
move(6,((6,3),(6,2)),18).
move(6,((6,2),(5,2)),19).
move(6,((5,2),(5,3)),20).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(5,5)),4).
move(7,((5,5),(4,5)),5).
move(7,((4,5),(3,5)),6).
move(7,((3,5),(4,5)),7).
move(7,((4,5),(5,5)),8).
move(7,((5,5),(5,4)),9).
move(7,((5,4),(5,3)),10).
move(7,((5,3),(5,2)),11).
move(7,((5,2),(5,3)),12).
move(7,((5,3),(4,3)),13).
move(7,((4,3),(4,2)),14).
move(7,((4,2),(5,2)),15).
move(7,((5,2),(5,3)),16).
move(7,((5,3),(5,2)),18).
move(7,((5,2),(4,2)),19).
move(7,((4,2),(4,3)),20).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(6,3)),10).
move(8,((6,3),(5,3)),11).
move(8,((5,3),(5,4)),12).
move(8,((5,4),(6,4)),13).
move(8,((6,4),(5,4)),14).
move(8,((5,4),(5,5)),15).
move(8,((5,5),(5,4)),16).
move(8,((5,4),(4,4)),17).
move(8,((4,4),(3,4)),18).
move(8,((3,4),(2,4)),19).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(9,5)),3).
move(9,((9,5),(10,5)),4).
move(9,((10,5),(10,4)),5).
move(9,((10,4),(10,3)),6).
move(9,((10,3),(11,3)),7).
move(9,((11,3),(11,2)),8).
move(9,((11,2),(10,2)),10).
move(9,((10,2),(9,2)),11).
move(9,((9,2),(9,3)),12).
move(9,((9,3),(8,3)),14).
move(9,((8,3),(8,2)),15).
move(9,((8,2),(8,3)),16).
move(9,((8,3),(8,4)),17).
move(9,((8,4),(8,5)),18).
move(9,((8,5),(7,5)),19).
move(9,((7,5),(7,4)),20).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(9,5)),4).
move(10,((9,5),(10,5)),5).
move(10,((10,5),(10,4)),6).
move(10,((10,4),(10,3)),7).
move(10,((10,3),(11,3)),8).
move(10,((11,3),(11,4)),9).
move(10,((11,4),(10,4)),10).
move(10,((10,4),(9,4)),11).
move(10,((9,4),(8,4)),12).
move(10,((8,4),(8,5)),13).
move(10,((8,5),(7,5)),14).
move(10,((7,5),(6,5)),15).
move(10,((6,5),(6,4)),16).
move(10,((6,4),(7,4)),17).
move(10,((7,4),(8,4)),18).
move(10,((8,4),(8,5)),19).
move(10,((8,5),(8,4)),20).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(10,3)),5).
move(11,((10,3),(10,2)),6).
move(11,((10,2),(10,1)),8).
move(11,((10,1),(9,1)),10).
move(11,((9,1),(8,1)),11).
move(11,((8,1),(8,2)),12).
move(11,((8,2),(7,2)),13).
move(11,((7,2),(8,2)),14).
move(11,((8,2),(9,2)),15).
move(11,((9,2),(10,2)),16).
move(11,((10,2),(9,2)),17).
move(11,((9,2),(8,2)),18).
move(11,((8,2),(8,3)),19).
move(11,((8,3),(7,3)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.025s (Solving: 0.12s 1st Model: 0.12s Unsat: 0.00s)
CPU Time     : 1.016s

Choices      : 2257     (Domain: 2257)
Conflicts    : 123      (Analyzed: 123)
Restarts     : 0       
Model-Level  : 155.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 123      (Deleted: 0)
  Binary     : 31       (Ratio:  25.20%)
  Ternary    : 10       (Ratio:   8.13%)
  Conflict   : 123      (Average Length:   12.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 123      (Average: 17.09 Max: 146 Sum:   2102)
  Executed   : 123      (Average: 17.09 Max: 146 Sum:   2102 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176479   (Original: 164624)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69167   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

