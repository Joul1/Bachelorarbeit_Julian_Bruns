%%%%%
%Standard
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(4,3)),7).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(6,4)),6).
move(5,((6,4),(7,4)),7).
move(5,((7,4),(7,3)),8).
move(5,((7,3),(8,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(8,3)),8).
move(7,((8,3),(9,3)),9).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(8,7)),2).
move(8,((8,7),(8,6)),3).
move(8,((8,6),(8,5)),4).
move(8,((8,5),(8,4)),5).
move(8,((8,4),(8,3)),6).
move(8,((8,3),(9,3)),8).
move(8,((9,3),(10,3)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),6).
move(10,((11,4),(12,4)),8).
move(10,((12,4),(12,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.047s (Solving: 0.07s 1st Model: 0.07s Unsat: 0.00s)
CPU Time     : 4.047s

Choices      : 835     
Conflicts    : 20       (Analyzed: 20)
Restarts     : 0       
Model-Level  : 465.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 20       (Deleted: 0)
  Binary     : 6        (Ratio:  30.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 20       (Average Length:   37.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 20       (Average: 18.50 Max:  89 Sum:    370)
  Executed   : 20       (Average: 18.50 Max:  89 Sum:    370 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 826268   (Original: 769656)
  Choice     : 400     
Atoms        : 338345  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(4,3)),7).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(6,4)),6).
move(5,((6,4),(7,4)),7).
move(5,((7,4),(7,3)),8).
move(5,((7,3),(8,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(8,3)),8).
move(7,((8,3),(9,3)),9).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(8,7)),2).
move(8,((8,7),(8,6)),3).
move(8,((8,6),(8,5)),4).
move(8,((8,5),(8,4)),5).
move(8,((8,4),(8,3)),6).
move(8,((8,3),(9,3)),8).
move(8,((9,3),(10,3)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),6).
move(10,((11,4),(12,4)),8).
move(10,((12,4),(12,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.112s (Solving: 0.07s 1st Model: 0.07s Unsat: 0.00s)
CPU Time     : 4.125s

Choices      : 836     
Conflicts    : 20       (Analyzed: 20)
Restarts     : 0       
Model-Level  : 464.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 20       (Deleted: 0)
  Binary     : 6        (Ratio:  30.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 20       (Average Length:   37.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 20       (Average: 18.60 Max:  89 Sum:    372)
  Executed   : 20       (Average: 18.60 Max:  89 Sum:    372 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 826367   (Original: 769755)
  Choice     : 400     
Atoms        : 338444  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(2,8)),2).
move(1,((2,8),(2,7)),3).
move(1,((2,7),(2,6)),4).
move(1,((2,6),(2,5)),5).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(3,8)),2).
move(2,((3,8),(3,7)),3).
move(2,((3,7),(3,6)),4).
move(2,((3,6),(3,5)),5).
move(2,((3,5),(3,4)),6).
move(2,((3,4),(3,3)),7).
move(3,((3,9),(4,9)),1).
move(3,((4,9),(4,8)),2).
move(3,((4,8),(4,7)),3).
move(3,((4,7),(4,6)),4).
move(3,((4,6),(4,5)),5).
move(3,((4,5),(4,4)),6).
move(3,((4,4),(4,3)),7).
move(4,((4,9),(5,9)),1).
move(4,((5,9),(5,8)),2).
move(4,((5,8),(5,7)),3).
move(4,((5,7),(5,6)),4).
move(4,((5,6),(5,5)),5).
move(4,((5,5),(5,4)),6).
move(4,((5,4),(5,3)),7).
move(5,((5,9),(6,9)),1).
move(5,((6,9),(7,9)),2).
move(5,((7,9),(7,8)),3).
move(5,((7,8),(8,8)),4).
move(5,((8,8),(8,7)),5).
move(5,((8,7),(8,6)),6).
move(5,((8,6),(8,5)),7).
move(5,((8,5),(8,4)),8).
move(5,((8,4),(8,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(7,((7,9),(8,9)),1).
move(7,((8,9),(9,9)),2).
move(7,((9,9),(9,8)),3).
move(7,((9,8),(9,7)),4).
move(7,((9,7),(9,6)),5).
move(7,((9,6),(9,5)),6).
move(7,((9,5),(9,4)),7).
move(7,((9,4),(9,3)),8).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(9,8)),2).
move(8,((9,8),(9,7)),3).
move(8,((9,7),(9,6)),4).
move(8,((9,6),(9,5)),5).
move(8,((9,5),(9,4)),6).
move(8,((9,4),(9,3)),7).
move(8,((9,3),(10,3)),8).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(10,4)),6).
move(9,((10,4),(11,4)),7).
move(9,((11,4),(11,3)),8).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(10,3)),6).
move(10,((10,3),(11,3)),7).
move(10,((11,3),(12,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.595s (Solving: 0.09s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 4.375s

Choices      : 417      (Domain: 417)
Conflicts    : 4        (Analyzed: 4)
Restarts     : 0       
Model-Level  : 374.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 4        (Deleted: 0)
  Binary     : 4        (Ratio: 100.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 4        (Average Length:    2.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 4        (Average: 10.75 Max:  13 Sum:     43)
  Executed   : 4        (Average: 10.75 Max:  13 Sum:     43 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878872   (Original: 822370)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338454  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(2,5)),5).
move(1,((2,5),(2,4)),9).
move(1,((2,4),(2,3)),10).
move(1,((2,3),(2,2)),11).
move(1,((2,2),(2,1)),12).
move(1,((2,1),(2,2)),14).
move(1,((2,2),(2,3)),16).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(1,6)),8).
move(2,((1,6),(1,5)),9).
move(2,((1,5),(1,4)),10).
move(2,((1,4),(1,3)),11).
move(2,((1,3),(1,2)),12).
move(2,((1,2),(2,2)),13).
move(2,((2,2),(2,3)),14).
move(2,((2,3),(3,3)),15).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),6).
move(3,((3,6),(3,5)),7).
move(3,((3,5),(3,4)),8).
move(3,((3,4),(4,4)),9).
move(3,((4,4),(4,5)),10).
move(3,((4,5),(4,4)),11).
move(3,((4,4),(4,3)),12).
move(3,((4,3),(4,4)),13).
move(3,((4,4),(4,3)),15).
move(4,((4,9),(4,8)),2).
move(4,((4,8),(3,8)),4).
move(4,((3,8),(2,8)),5).
move(4,((2,8),(2,7)),6).
move(4,((2,7),(1,7)),7).
move(4,((1,7),(2,7)),8).
move(4,((2,7),(2,6)),9).
move(4,((2,6),(2,5)),10).
move(4,((2,5),(2,4)),11).
move(4,((2,4),(2,3)),12).
move(4,((2,3),(3,3)),13).
move(4,((3,3),(4,3)),14).
move(4,((4,3),(5,3)),15).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),5).
move(5,((5,6),(5,5)),6).
move(5,((5,5),(5,4)),7).
move(5,((5,4),(5,3)),8).
move(5,((5,3),(6,3)),9).
move(5,((6,3),(7,3)),10).
move(5,((7,3),(8,3)),11).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(6,3)),10).
move(7,((7,9),(8,9)),1).
move(7,((8,9),(8,8)),2).
move(7,((8,8),(8,7)),3).
move(7,((8,7),(8,6)),4).
move(7,((8,6),(8,5)),5).
move(7,((8,5),(8,4)),6).
move(7,((8,4),(9,4)),7).
move(7,((9,4),(9,3)),8).
move(7,((9,3),(9,4)),9).
move(7,((9,4),(9,3)),10).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(10,8)),3).
move(8,((10,8),(11,8)),6).
move(8,((11,8),(12,8)),7).
move(8,((12,8),(13,8)),8).
move(8,((13,8),(13,7)),10).
move(8,((13,7),(14,7)),11).
move(8,((14,7),(14,6)),13).
move(8,((14,6),(14,5)),14).
move(8,((14,5),(14,4)),15).
move(8,((14,4),(13,4)),16).
move(8,((13,4),(12,4)),17).
move(8,((12,4),(11,4)),18).
move(8,((11,4),(11,3)),19).
move(8,((11,3),(11,4)),36).
move(8,((11,4),(10,4)),37).
move(8,((10,4),(10,3)),38).
move(8,((10,3),(10,4)),39).
move(8,((10,4),(10,3)),40).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(10,3)),7).
move(9,((10,3),(10,4)),8).
move(9,((10,4),(11,4)),9).
move(9,((11,4),(11,5)),10).
move(9,((11,5),(12,5)),11).
move(9,((12,5),(12,4)),12).
move(9,((12,4),(13,4)),13).
move(9,((13,4),(13,3)),14).
move(9,((13,3),(14,3)),15).
move(9,((14,3),(15,3)),16).
move(9,((15,3),(14,3)),17).
move(9,((14,3),(13,3)),18).
move(9,((13,3),(12,3)),28).
move(9,((12,3),(12,2)),35).
move(9,((12,2),(12,3)),36).
move(9,((12,3),(11,3)),38).
move(9,((11,3),(11,2)),39).
move(9,((11,2),(11,3)),40).
move(10,((10,9),(11,9)),1).
move(10,((11,9),(12,9)),2).
move(10,((12,9),(12,8)),3).
move(10,((12,8),(11,8)),4).
move(10,((11,8),(11,7)),5).
move(10,((11,7),(11,6)),6).
move(10,((11,6),(11,7)),7).
move(10,((11,7),(12,7)),9).
move(10,((12,7),(12,6)),10).
move(10,((12,6),(13,6)),11).
move(10,((13,6),(14,6)),12).
move(10,((14,6),(15,6)),13).
move(10,((15,6),(16,6)),14).
move(10,((16,6),(16,5)),15).
move(10,((16,5),(16,4)),17).
move(10,((16,4),(17,4)),28).
move(10,((17,4),(18,4)),29).
move(10,((18,4),(17,4)),31).
move(10,((17,4),(16,4)),32).
move(10,((16,4),(15,4)),33).
move(10,((15,4),(14,4)),34).
move(10,((14,4),(13,4)),35).
move(10,((13,4),(12,4)),36).
move(10,((12,4),(12,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 5.178s (Solving: 0.79s 1st Model: 0.79s Unsat: 0.00s)
CPU Time     : 5.078s

Choices      : 5545     (Domain: 1464)
Conflicts    : 225      (Analyzed: 225)
Restarts     : 1        (Average: 225.00 Last: 127)
Model-Level  : 468.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 225      (Deleted: 0)
  Binary     : 58       (Ratio:  25.78%)
  Ternary    : 11       (Ratio:   4.89%)
  Conflict   : 225      (Average Length:   32.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 225      (Average: 21.30 Max: 369 Sum:   4792)
  Executed   : 225      (Average: 21.30 Max: 369 Sum:   4792 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878872   (Original: 822370)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338454  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(2,8)),2).
move(1,((2,8),(2,7)),3).
move(1,((2,7),(2,6)),4).
move(1,((2,6),(2,5)),5).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(3,8)),2).
move(2,((3,8),(3,7)),3).
move(2,((3,7),(3,6)),4).
move(2,((3,6),(3,5)),5).
move(2,((3,5),(3,4)),6).
move(2,((3,4),(3,3)),7).
move(3,((3,9),(4,9)),1).
move(3,((4,9),(4,8)),2).
move(3,((4,8),(4,7)),3).
move(3,((4,7),(4,6)),4).
move(3,((4,6),(4,5)),5).
move(3,((4,5),(4,4)),6).
move(3,((4,4),(4,3)),7).
move(4,((4,9),(5,9)),1).
move(4,((5,9),(5,8)),2).
move(4,((5,8),(5,7)),3).
move(4,((5,7),(5,6)),4).
move(4,((5,6),(5,5)),5).
move(4,((5,5),(5,4)),6).
move(4,((5,4),(5,3)),7).
move(5,((5,9),(6,9)),1).
move(5,((6,9),(7,9)),2).
move(5,((7,9),(8,9)),3).
move(5,((8,9),(8,8)),4).
move(5,((8,8),(8,7)),5).
move(5,((8,7),(8,6)),6).
move(5,((8,6),(8,5)),7).
move(5,((8,5),(8,4)),8).
move(5,((8,4),(8,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(7,((7,9),(8,9)),1).
move(7,((8,9),(9,9)),2).
move(7,((9,9),(9,8)),3).
move(7,((9,8),(9,7)),4).
move(7,((9,7),(9,6)),5).
move(7,((9,6),(9,5)),6).
move(7,((9,5),(9,4)),7).
move(7,((9,4),(9,3)),8).
move(8,((8,9),(9,9)),1).
move(8,((9,9),(10,9)),2).
move(8,((10,9),(10,8)),3).
move(8,((10,8),(10,7)),4).
move(8,((10,7),(10,6)),5).
move(8,((10,6),(10,5)),6).
move(8,((10,5),(10,4)),7).
move(8,((10,4),(10,3)),8).
move(9,((9,9),(10,9)),1).
move(9,((10,9),(11,9)),2).
move(9,((11,9),(11,8)),3).
move(9,((11,8),(11,7)),4).
move(9,((11,7),(11,6)),5).
move(9,((11,6),(11,5)),6).
move(9,((11,5),(11,4)),7).
move(9,((11,4),(11,3)),8).
move(10,((10,9),(11,9)),1).
move(10,((11,9),(12,9)),2).
move(10,((12,9),(12,8)),3).
move(10,((12,8),(12,7)),4).
move(10,((12,7),(12,6)),5).
move(10,((12,6),(12,5)),6).
move(10,((12,5),(12,4)),7).
move(10,((12,4),(12,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.912s (Solving: 0.11s 1st Model: 0.11s Unsat: 0.00s)
CPU Time     : 4.781s

Choices      : 386      (Domain: 61)
Conflicts    : 0        (Analyzed: 0)
Restarts     : 0       
Model-Level  : 386.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 0        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 0        (Average:  0.00 Max:   0 Sum:      0)
  Executed   : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio: 100.00%)

Rules        : 828052   (Original: 771460)
  Choice     : 400     
  Heuristic  : 1600     (Original: 1620)
Atoms        : 338529  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(4,3)),7).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(6,4)),6).
move(5,((6,4),(7,4)),7).
move(5,((7,4),(7,3)),8).
move(5,((7,3),(8,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(8,3)),8).
move(7,((8,3),(9,3)),9).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(8,7)),2).
move(8,((8,7),(8,6)),3).
move(8,((8,6),(8,5)),4).
move(8,((8,5),(8,4)),5).
move(8,((8,4),(8,3)),6).
move(8,((8,3),(9,3)),8).
move(8,((9,3),(10,3)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(11,5)),6).
move(10,((11,5),(12,5)),7).
move(10,((12,5),(12,4)),8).
move(10,((12,4),(12,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 5.156s (Solving: 0.09s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 5.109s

Choices      : 985      (Domain: 156)
Conflicts    : 19       (Analyzed: 19)
Restarts     : 0       
Model-Level  : 649.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 19       (Deleted: 0)
  Binary     : 5        (Ratio:  26.32%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 19       (Average Length:   38.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 19       (Average: 17.68 Max: 101 Sum:    336)
  Executed   : 19       (Average: 17.68 Max: 101 Sum:    336 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 826527   (Original: 769915)
  Choice     : 400     
  Heuristic  : 160     
Atoms        : 338444  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(2,3)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(4,3)),7).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(4,4)),5).
move(4,((4,4),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(6,4)),6).
move(5,((6,4),(7,4)),7).
move(5,((7,4),(7,3)),8).
move(5,((7,3),(8,3)),9).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(7,7)),2).
move(7,((7,7),(7,6)),3).
move(7,((7,6),(7,5)),4).
move(7,((7,5),(7,4)),5).
move(7,((7,4),(7,3)),6).
move(7,((7,3),(8,3)),8).
move(7,((8,3),(9,3)),9).
move(8,((8,9),(8,8)),1).
move(8,((8,8),(8,7)),2).
move(8,((8,7),(8,6)),3).
move(8,((8,6),(8,5)),4).
move(8,((8,5),(8,4)),5).
move(8,((8,4),(8,3)),6).
move(8,((8,3),(9,3)),8).
move(8,((9,3),(10,3)),9).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(9,3)),6).
move(9,((9,3),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(11,5)),6).
move(10,((11,5),(12,5)),7).
move(10,((12,5),(12,4)),8).
move(10,((12,4),(12,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.732s (Solving: 0.07s 1st Model: 0.07s Unsat: 0.00s)
CPU Time     : 4.625s

Choices      : 822      (Domain: 385)
Conflicts    : 21       (Analyzed: 21)
Restarts     : 0       
Model-Level  : 465.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 21       (Deleted: 0)
  Binary     : 7        (Ratio:  33.33%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 21       (Average Length:   35.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 21       (Average: 17.00 Max:  87 Sum:    357)
  Executed   : 21       (Average: 17.00 Max:  87 Sum:    357 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878884   (Original: 822372)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338465  
Disjunctions : 0        (Original: 1)
Bodies       : 566810   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305314   (Atom=Atom: 428 Body=Body: 439 Other: 304447)
Tight        : Yes
Variables    : 567731   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531526  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(2,8)),2).
move(1,((2,8),(2,7)),3).
move(1,((2,7),(2,6)),4).
move(1,((2,6),(2,5)),5).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,4)),8).
move(1,((2,4),(2,3)),9).
move(1,((2,3),(1,3)),11).
move(1,((1,3),(2,3)),12).
move(1,((2,3),(2,4)),13).
move(1,((2,4),(2,5)),14).
move(1,((2,5),(2,4)),16).
move(1,((2,4),(2,3)),19).
move(1,((2,3),(2,4)),21).
move(1,((2,4),(2,5)),23).
move(1,((2,5),(2,4)),25).
move(1,((2,4),(2,5)),26).
move(1,((2,5),(2,6)),28).
move(1,((2,6),(2,7)),29).
move(1,((2,7),(2,6)),30).
move(1,((2,6),(2,7)),31).
move(1,((2,7),(2,6)),32).
move(1,((2,6),(2,5)),33).
move(1,((2,5),(2,4)),34).
move(1,((2,4),(2,5)),35).
move(1,((2,5),(2,4)),37).
move(1,((2,4),(2,5)),38).
move(1,((2,5),(2,4)),39).
move(1,((2,4),(2,3)),40).
move(2,((2,9),(3,9)),2).
move(2,((3,9),(3,8)),3).
move(2,((3,8),(3,7)),4).
move(2,((3,7),(3,6)),5).
move(2,((3,6),(3,5)),6).
move(2,((3,5),(3,4)),8).
move(2,((3,4),(2,4)),9).
move(2,((2,4),(2,5)),10).
move(2,((2,5),(2,6)),11).
move(2,((2,6),(2,5)),12).
move(2,((2,5),(3,5)),13).
move(2,((3,5),(3,4)),14).
move(2,((3,4),(3,3)),15).
move(2,((3,3),(3,4)),18).
move(2,((3,4),(2,4)),19).
move(2,((2,4),(3,4)),20).
move(2,((3,4),(3,3)),21).
move(2,((3,3),(2,3)),22).
move(2,((2,3),(3,3)),23).
move(2,((3,3),(3,4)),25).
move(2,((3,4),(3,5)),27).
move(2,((3,5),(3,4)),28).
move(2,((3,4),(3,3)),29).
move(2,((3,3),(2,3)),30).
move(2,((2,3),(3,3)),31).
move(2,((3,3),(2,3)),32).
move(2,((2,3),(3,3)),33).
move(2,((3,3),(3,4)),34).
move(2,((3,4),(3,5)),35).
move(2,((3,5),(3,6)),36).
move(2,((3,6),(3,5)),38).
move(2,((3,5),(3,4)),39).
move(2,((3,4),(3,3)),40).
move(3,((3,9),(3,8)),2).
move(3,((3,8),(3,7)),3).
move(3,((3,7),(3,6)),4).
move(3,((3,6),(3,5)),5).
move(3,((3,5),(3,4)),6).
move(3,((3,4),(3,3)),8).
move(3,((3,3),(3,4)),10).
move(3,((3,4),(3,5)),11).
move(3,((3,5),(3,6)),12).
move(3,((3,6),(3,7)),13).
move(3,((3,7),(3,8)),14).
move(3,((3,8),(4,8)),15).
move(3,((4,8),(3,8)),16).
move(3,((3,8),(4,8)),17).
move(3,((4,8),(3,8)),18).
move(3,((3,8),(3,7)),19).
move(3,((3,7),(3,6)),20).
move(3,((3,6),(3,5)),21).
move(3,((3,5),(3,4)),22).
move(3,((3,4),(4,4)),24).
move(3,((4,4),(4,3)),25).
move(3,((4,3),(4,4)),26).
move(3,((4,4),(3,4)),27).
move(3,((3,4),(3,3)),28).
move(3,((3,3),(4,3)),29).
move(3,((4,3),(4,4)),30).
move(3,((4,4),(4,5)),31).
move(3,((4,5),(3,5)),32).
move(3,((3,5),(3,6)),33).
move(3,((3,6),(4,6)),35).
move(3,((4,6),(4,5)),36).
move(3,((4,5),(4,4)),37).
move(3,((4,4),(4,5)),38).
move(3,((4,5),(4,4)),39).
move(3,((4,4),(4,3)),40).
move(4,((4,9),(4,8)),3).
move(4,((4,8),(5,8)),4).
move(4,((5,8),(5,9)),5).
move(4,((5,9),(5,8)),6).
move(4,((5,8),(5,7)),7).
move(4,((5,7),(4,7)),8).
move(4,((4,7),(4,8)),9).
move(4,((4,8),(4,7)),11).
move(4,((4,7),(4,6)),12).
move(4,((4,6),(5,6)),13).
move(4,((5,6),(5,7)),14).
move(4,((5,7),(4,7)),18).
move(4,((4,7),(4,6)),19).
move(4,((4,6),(4,5)),20).
move(4,((4,5),(5,5)),21).
move(4,((5,5),(5,4)),22).
move(4,((5,4),(4,4)),23).
move(4,((4,4),(4,3)),24).
move(4,((4,3),(5,3)),25).
move(4,((5,3),(4,3)),26).
move(4,((4,3),(5,3)),27).
move(4,((5,3),(4,3)),28).
move(4,((4,3),(5,3)),29).
move(4,((5,3),(5,4)),30).
move(4,((5,4),(5,5)),31).
move(4,((5,5),(5,6)),32).
move(4,((5,6),(4,6)),33).
move(4,((4,6),(5,6)),35).
move(4,((5,6),(5,7)),36).
move(4,((5,7),(5,6)),37).
move(4,((5,6),(5,5)),38).
move(4,((5,5),(5,4)),39).
move(4,((5,4),(5,3)),40).
move(5,((5,9),(5,8)),3).
move(5,((5,8),(5,7)),4).
move(5,((5,7),(5,6)),5).
move(5,((5,6),(5,5)),6).
move(5,((5,5),(5,4)),7).
move(5,((5,4),(5,3)),8).
move(5,((5,3),(5,4)),9).
move(5,((5,4),(5,5)),10).
move(5,((5,5),(5,6)),11).
move(5,((5,6),(5,7)),12).
move(5,((5,7),(5,8)),13).
move(5,((5,8),(5,7)),18).
move(5,((5,7),(5,6)),19).
move(5,((5,6),(5,7)),20).
move(5,((5,7),(5,6)),25).
move(5,((5,6),(5,7)),26).
move(5,((5,7),(5,6)),28).
move(5,((5,6),(5,5)),29).
move(5,((5,5),(5,6)),30).
move(5,((5,6),(6,6)),31).
move(5,((6,6),(7,6)),33).
move(5,((7,6),(8,6)),34).
move(5,((8,6),(8,5)),35).
move(5,((8,5),(8,4)),36).
move(5,((8,4),(8,3)),37).
move(5,((8,3),(8,4)),38).
move(5,((8,4),(8,3)),40).
move(6,((6,9),(6,8)),3).
move(6,((6,8),(6,7)),4).
move(6,((6,7),(6,6)),5).
move(6,((6,6),(6,5)),6).
move(6,((6,5),(6,4)),7).
move(6,((6,4),(6,3)),8).
move(6,((6,3),(6,4)),9).
move(6,((6,4),(6,5)),10).
move(6,((6,5),(6,6)),11).
move(6,((6,6),(6,7)),12).
move(6,((6,7),(6,6)),35).
move(6,((6,6),(6,5)),36).
move(6,((6,5),(6,4)),37).
move(6,((6,4),(6,3)),38).
move(6,((6,3),(6,4)),39).
move(6,((6,4),(6,3)),40).
move(7,((7,9),(7,8)),3).
move(7,((7,8),(8,8)),4).
move(7,((8,8),(8,7)),5).
move(7,((8,7),(8,6)),6).
move(7,((8,6),(8,5)),7).
move(7,((8,5),(8,4)),8).
move(7,((8,4),(9,4)),9).
move(7,((9,4),(9,3)),10).
move(7,((9,3),(9,4)),12).
move(7,((9,4),(9,5)),13).
move(7,((9,5),(8,5)),14).
move(7,((8,5),(8,6)),15).
move(7,((8,6),(7,6)),16).
move(7,((7,6),(7,7)),17).
move(7,((7,7),(7,6)),18).
move(7,((7,6),(7,7)),19).
move(7,((7,7),(7,6)),20).
move(7,((7,6),(7,5)),21).
move(7,((7,5),(7,4)),23).
move(7,((7,4),(8,4)),24).
move(7,((8,4),(8,5)),25).
move(7,((8,5),(7,5)),26).
move(7,((7,5),(7,6)),27).
move(7,((7,6),(7,7)),28).
move(7,((7,7),(7,8)),29).
move(7,((7,8),(8,8)),30).
move(7,((8,8),(8,7)),31).
move(7,((8,7),(8,6)),32).
move(7,((8,6),(8,5)),33).
move(7,((8,5),(8,4)),34).
move(7,((8,4),(8,3)),35).
move(7,((8,3),(9,3)),36).
move(7,((9,3),(9,4)),37).
move(7,((9,4),(9,5)),38).
move(7,((9,5),(9,4)),39).
move(7,((9,4),(9,3)),40).
move(8,((8,9),(8,8)),3).
move(8,((8,8),(9,8)),4).
move(8,((9,8),(10,8)),6).
move(8,((10,8),(10,7)),7).
move(8,((10,7),(10,6)),8).
move(8,((10,6),(10,7)),9).
move(8,((10,7),(10,8)),10).
move(8,((10,8),(9,8)),11).
move(8,((9,8),(8,8)),12).
move(8,((8,8),(9,8)),13).
move(8,((9,8),(9,7)),15).
move(8,((9,7),(9,6)),16).
move(8,((9,6),(9,5)),17).
move(8,((9,5),(10,5)),18).
move(8,((10,5),(10,4)),19).
move(8,((10,4),(10,5)),20).
move(8,((10,5),(10,4)),21).
move(8,((10,4),(10,3)),22).
move(8,((10,3),(9,3)),23).
move(8,((9,3),(10,3)),24).
move(8,((10,3),(10,4)),25).
move(8,((10,4),(10,3)),26).
move(8,((10,3),(9,3)),27).
move(8,((9,3),(9,4)),28).
move(8,((9,4),(9,3)),29).
move(8,((9,3),(8,3)),30).
move(8,((8,3),(8,4)),31).
move(8,((8,4),(9,4)),32).
move(8,((9,4),(9,5)),33).
move(8,((9,5),(9,4)),34).
move(8,((9,4),(9,3)),35).
move(8,((9,3),(10,3)),36).
move(8,((10,3),(9,3)),37).
move(8,((9,3),(10,3)),38).
move(8,((10,3),(10,4)),39).
move(8,((10,4),(10,3)),40).
move(9,((9,9),(9,8)),2).
move(9,((9,8),(10,8)),3).
move(9,((10,8),(10,7)),4).
move(9,((10,7),(9,7)),5).
move(9,((9,7),(9,6)),7).
move(9,((9,6),(9,5)),8).
move(9,((9,5),(10,5)),9).
move(9,((10,5),(10,4)),10).
move(9,((10,4),(11,4)),11).
move(9,((11,4),(10,4)),12).
move(9,((10,4),(10,5)),13).
move(9,((10,5),(9,5)),14).
move(9,((9,5),(9,4)),15).
move(9,((9,4),(10,4)),16).
move(9,((10,4),(11,4)),17).
move(9,((11,4),(11,3)),18).
move(9,((11,3),(11,4)),19).
move(9,((11,4),(11,3)),20).
move(9,((11,3),(11,4)),21).
move(9,((11,4),(10,4)),22).
move(9,((10,4),(11,4)),23).
move(9,((11,4),(11,3)),24).
move(9,((11,3),(11,4)),25).
move(9,((11,4),(11,3)),26).
move(9,((11,3),(11,4)),29).
move(9,((11,4),(11,5)),30).
move(9,((11,5),(10,5)),31).
move(9,((10,5),(10,4)),32).
move(9,((10,4),(11,4)),33).
move(9,((11,4),(11,3)),34).
move(9,((11,3),(10,3)),37).
move(9,((10,3),(11,3)),38).
move(9,((11,3),(11,4)),39).
move(9,((11,4),(11,3)),40).
move(10,((10,9),(11,9)),6).
move(10,((11,9),(11,8)),7).
move(10,((11,8),(11,7)),8).
move(10,((11,7),(11,6)),9).
move(10,((11,6),(11,5)),10).
move(10,((11,5),(12,5)),11).
move(10,((12,5),(12,6)),13).
move(10,((12,6),(12,7)),14).
move(10,((12,7),(12,6)),15).
move(10,((12,6),(12,5)),16).
move(10,((12,5),(12,4)),17).
move(10,((12,4),(12,3)),18).
move(10,((12,3),(12,4)),21).
move(10,((12,4),(11,4)),22).
move(10,((11,4),(11,3)),23).
move(10,((11,3),(12,3)),24).
move(10,((12,3),(12,4)),25).
move(10,((12,4),(12,3)),26).
move(10,((12,3),(12,4)),27).
move(10,((12,4),(12,3)),28).
move(10,((12,3),(12,4)),29).
move(10,((12,4),(12,5)),30).
move(10,((12,5),(12,4)),31).
move(10,((12,4),(12,3)),32).
move(10,((12,3),(12,4)),33).
move(10,((12,4),(12,3)),35).
move(10,((12,3),(11,3)),37).
move(10,((11,3),(11,4)),38).
move(10,((11,4),(12,4)),39).
move(10,((12,4),(12,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 4.991s (Solving: 0.43s 1st Model: 0.42s Unsat: 0.00s)
CPU Time     : 4.891s

Choices      : 4597     (Domain: 4597)
Conflicts    : 192      (Analyzed: 192)
Restarts     : 0       
Model-Level  : 337.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 192      (Deleted: 0)
  Binary     : 75       (Ratio:  39.06%)
  Ternary    : 32       (Ratio:  16.67%)
  Conflict   : 192      (Average Length:    6.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 192      (Average: 22.19 Max: 224 Sum:   4260)
  Executed   : 192      (Average: 22.19 Max: 224 Sum:   4260 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878862   (Original: 822360)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338444  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,9),(2,9)),2).
move(1,((2,9),(2,8)),4).
move(1,((2,8),(2,7)),6).
move(1,((2,7),(2,6)),7).
move(1,((2,6),(2,5)),8).
move(1,((2,5),(2,4)),9).
move(1,((2,4),(2,3)),10).
move(1,((2,3),(2,2)),11).
move(1,((2,2),(2,1)),12).
move(1,((2,1),(1,1)),13).
move(1,((1,1),(1,2)),14).
move(1,((1,2),(2,2)),15).
move(1,((2,2),(2,3)),16).
move(1,((2,3),(3,3)),17).
move(1,((3,3),(4,3)),18).
move(1,((4,3),(3,3)),20).
move(1,((3,3),(3,4)),22).
move(1,((3,4),(3,5)),23).
move(1,((3,5),(3,4)),24).
move(1,((3,4),(2,4)),25).
move(1,((2,4),(2,3)),26).
move(1,((2,3),(3,3)),28).
move(1,((3,3),(4,3)),29).
move(1,((4,3),(3,3)),30).
move(1,((3,3),(3,2)),31).
move(1,((3,2),(2,2)),32).
move(1,((2,2),(2,3)),33).
move(1,((2,3),(2,4)),34).
move(1,((2,4),(2,5)),36).
move(1,((2,5),(2,6)),37).
move(1,((2,6),(2,5)),38).
move(1,((2,5),(2,4)),39).
move(1,((2,4),(2,3)),40).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(4,9)),2).
move(2,((4,9),(4,8)),3).
move(2,((4,8),(4,7)),4).
move(2,((4,7),(4,6)),5).
move(2,((4,6),(5,6)),6).
move(2,((5,6),(5,5)),7).
move(2,((5,5),(5,4)),8).
move(2,((5,4),(6,4)),9).
move(2,((6,4),(6,3)),10).
move(2,((6,3),(6,2)),11).
move(2,((6,2),(7,2)),13).
move(2,((7,2),(7,3)),15).
move(2,((7,3),(6,3)),16).
move(2,((6,3),(6,4)),17).
move(2,((6,4),(7,4)),18).
move(2,((7,4),(7,5)),19).
move(2,((7,5),(7,6)),20).
move(2,((7,6),(6,6)),21).
move(2,((6,6),(5,6)),22).
move(2,((5,6),(4,6)),23).
move(2,((4,6),(3,6)),24).
move(2,((3,6),(3,7)),25).
move(2,((3,7),(2,7)),26).
move(2,((2,7),(3,7)),28).
move(2,((3,7),(3,6)),29).
move(2,((3,6),(3,5)),31).
move(2,((3,5),(3,4)),32).
move(2,((3,4),(3,5)),33).
move(2,((3,5),(3,4)),35).
move(2,((3,4),(3,3)),36).
move(2,((3,3),(3,2)),37).
move(2,((3,2),(2,2)),38).
move(2,((2,2),(3,2)),39).
move(2,((3,2),(3,3)),40).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(2,8)),2).
move(3,((2,8),(2,7)),3).
move(3,((2,7),(2,6)),4).
move(3,((2,6),(3,6)),5).
move(3,((3,6),(3,5)),6).
move(3,((3,5),(3,4)),8).
move(3,((3,4),(3,3)),9).
move(3,((3,3),(3,2)),10).
move(3,((3,2),(3,1)),11).
move(3,((3,1),(3,2)),12).
move(3,((3,2),(4,2)),14).
move(3,((4,2),(5,2)),15).
move(3,((5,2),(6,2)),16).
move(3,((6,2),(5,2)),17).
move(3,((5,2),(5,1)),18).
move(3,((5,1),(6,1)),19).
move(3,((6,1),(7,1)),20).
move(3,((7,1),(8,1)),21).
move(3,((8,1),(9,1)),22).
move(3,((9,1),(10,1)),23).
move(3,((10,1),(10,2)),24).
move(3,((10,2),(10,3)),25).
move(3,((10,3),(9,3)),26).
move(3,((9,3),(8,3)),27).
move(3,((8,3),(7,3)),28).
move(3,((7,3),(6,3)),29).
move(3,((6,3),(6,2)),30).
move(3,((6,2),(5,2)),31).
move(3,((5,2),(4,2)),32).
move(3,((4,2),(3,2)),33).
move(3,((3,2),(2,2)),34).
move(3,((2,2),(2,3)),35).
move(3,((2,3),(3,3)),37).
move(3,((3,3),(3,2)),38).
move(3,((3,2),(4,2)),39).
move(3,((4,2),(4,3)),40).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(3,8)),2).
move(4,((3,8),(3,7)),3).
move(4,((3,7),(3,6)),4).
move(4,((3,6),(3,5)),5).
move(4,((3,5),(4,5)),6).
move(4,((4,5),(4,4)),7).
move(4,((4,4),(4,3)),8).
move(4,((4,3),(5,3)),9).
move(4,((5,3),(5,4)),10).
move(4,((5,4),(6,4)),11).
move(4,((6,4),(7,4)),12).
move(4,((7,4),(6,4)),13).
move(4,((6,4),(7,4)),14).
move(4,((7,4),(8,4)),15).
move(4,((8,4),(9,4)),16).
move(4,((9,4),(9,3)),18).
move(4,((9,3),(10,3)),19).
move(4,((10,3),(11,3)),20).
move(4,((11,3),(11,2)),21).
move(4,((11,2),(10,2)),22).
move(4,((10,2),(9,2)),24).
move(4,((9,2),(8,2)),25).
move(4,((8,2),(7,2)),26).
move(4,((7,2),(6,2)),27).
move(4,((6,2),(6,3)),28).
move(4,((6,3),(6,2)),29).
move(4,((6,2),(7,2)),30).
move(4,((7,2),(6,2)),31).
move(4,((6,2),(5,2)),32).
move(4,((5,2),(5,3)),33).
move(4,((5,3),(5,4)),34).
move(4,((5,4),(5,5)),36).
move(4,((5,5),(4,5)),37).
move(4,((4,5),(4,4)),38).
move(4,((4,4),(5,4)),39).
move(4,((5,4),(5,3)),40).
move(5,((5,9),(5,8)),3).
move(5,((5,8),(5,7)),4).
move(5,((5,7),(5,6)),5).
move(5,((5,6),(5,5)),6).
move(5,((5,5),(5,4)),7).
move(5,((5,4),(5,3)),8).
move(5,((5,3),(5,2)),9).
move(5,((5,2),(4,2)),10).
move(5,((4,2),(3,2)),11).
move(5,((3,2),(2,2)),12).
move(5,((2,2),(2,3)),13).
move(5,((2,3),(2,4)),14).
move(5,((2,4),(2,3)),15).
move(5,((2,3),(3,3)),16).
move(5,((3,3),(3,4)),17).
move(5,((3,4),(3,3)),18).
move(5,((3,3),(2,3)),19).
move(5,((2,3),(2,2)),20).
move(5,((2,2),(2,3)),21).
move(5,((2,3),(2,2)),22).
move(5,((2,2),(2,3)),23).
move(5,((2,3),(2,4)),24).
move(5,((2,4),(2,5)),25).
move(5,((2,5),(3,5)),26).
move(5,((3,5),(3,6)),27).
move(5,((3,6),(4,6)),28).
move(5,((4,6),(5,6)),29).
move(5,((5,6),(5,5)),30).
move(5,((5,5),(6,5)),31).
move(5,((6,5),(7,5)),32).
move(5,((7,5),(7,4)),33).
move(5,((7,4),(8,4)),34).
move(5,((8,4),(9,4)),35).
move(5,((9,4),(10,4)),36).
move(5,((10,4),(10,3)),37).
move(5,((10,3),(9,3)),39).
move(5,((9,3),(8,3)),40).
move(6,((6,9),(6,8)),3).
move(6,((6,8),(6,7)),4).
move(6,((6,7),(6,6)),5).
move(6,((6,6),(6,5)),6).
move(6,((6,5),(6,4)),7).
move(6,((6,4),(6,3)),8).
move(6,((6,3),(6,2)),9).
move(6,((6,2),(6,1)),10).
move(6,((6,1),(7,1)),11).
move(6,((7,1),(7,2)),12).
move(6,((7,2),(8,2)),13).
move(6,((8,2),(8,1)),14).
move(6,((8,1),(8,2)),15).
move(6,((8,2),(8,3)),16).
move(6,((8,3),(8,4)),17).
move(6,((8,4),(8,5)),18).
move(6,((8,5),(8,6)),19).
move(6,((8,6),(8,5)),20).
move(6,((8,5),(8,4)),21).
move(6,((8,4),(9,4)),22).
move(6,((9,4),(10,4)),23).
move(6,((10,4),(11,4)),24).
move(6,((11,4),(10,4)),25).
move(6,((10,4),(9,4)),26).
move(6,((9,4),(8,4)),27).
move(6,((8,4),(7,4)),28).
move(6,((7,4),(7,3)),29).
move(6,((7,3),(6,3)),30).
move(6,((6,3),(6,2)),32).
move(6,((6,2),(5,2)),33).
move(6,((5,2),(4,2)),34).
move(6,((4,2),(5,2)),35).
move(6,((5,2),(5,3)),37).
move(6,((5,3),(5,2)),38).
move(6,((5,2),(6,2)),39).
move(6,((6,2),(6,3)),40).
move(7,((7,9),(7,8)),1).
move(7,((7,8),(8,8)),2).
move(7,((8,8),(9,8)),3).
move(7,((9,8),(10,8)),4).
move(7,((10,8),(11,8)),5).
move(7,((11,8),(12,8)),6).
move(7,((12,8),(13,8)),7).
move(7,((13,8),(14,8)),8).
move(7,((14,8),(15,8)),9).
move(7,((15,8),(16,8)),10).
move(7,((16,8),(16,7)),11).
move(7,((16,7),(16,6)),12).
move(7,((16,6),(16,5)),13).
move(7,((16,5),(16,4)),14).
move(7,((16,4),(16,3)),15).
move(7,((16,3),(16,2)),16).
move(7,((16,2),(15,2)),17).
move(7,((15,2),(15,1)),18).
move(7,((15,1),(16,1)),19).
move(7,((16,1),(17,1)),20).
move(7,((17,1),(18,1)),21).
move(7,((18,1),(19,1)),22).
move(7,((19,1),(18,1)),23).
move(7,((18,1),(18,2)),24).
move(7,((18,2),(17,2)),25).
move(7,((17,2),(16,2)),26).
move(7,((16,2),(15,2)),28).
move(7,((15,2),(16,2)),29).
move(7,((16,2),(15,2)),30).
move(7,((15,2),(15,3)),31).
move(7,((15,3),(14,3)),32).
move(7,((14,3),(13,3)),33).
move(7,((13,3),(13,4)),34).
move(7,((13,4),(12,4)),35).
move(7,((12,4),(11,4)),36).
move(7,((11,4),(10,4)),37).
move(7,((10,4),(9,4)),39).
move(7,((9,4),(9,3)),40).
move(8,((8,9),(8,8)),3).
move(8,((8,8),(9,8)),4).
move(8,((9,8),(9,7)),5).
move(8,((9,7),(10,7)),6).
move(8,((10,7),(11,7)),7).
move(8,((11,7),(11,6)),9).
move(8,((11,6),(12,6)),10).
move(8,((12,6),(13,6)),11).
move(8,((13,6),(13,5)),12).
move(8,((13,5),(14,5)),13).
move(8,((14,5),(15,5)),14).
move(8,((15,5),(16,5)),15).
move(8,((16,5),(16,4)),16).
move(8,((16,4),(16,3)),17).
move(8,((16,3),(16,2)),18).
move(8,((16,2),(17,2)),19).
move(8,((17,2),(18,2)),20).
move(8,((18,2),(18,3)),21).
move(8,((18,3),(18,2)),22).
move(8,((18,2),(17,2)),24).
move(8,((17,2),(17,3)),25).
move(8,((17,3),(17,4)),26).
move(8,((17,4),(17,5)),27).
move(8,((17,5),(16,5)),28).
move(8,((16,5),(15,5)),29).
move(8,((15,5),(15,4)),30).
move(8,((15,4),(14,4)),31).
move(8,((14,4),(13,4)),32).
move(8,((13,4),(12,4)),33).
move(8,((12,4),(11,4)),34).
move(8,((11,4),(11,3)),35).
move(8,((11,3),(11,2)),36).
move(8,((11,2),(12,2)),37).
move(8,((12,2),(11,2)),38).
move(8,((11,2),(10,2)),39).
move(8,((10,2),(10,3)),40).
move(9,((9,9),(8,9)),3).
move(9,((8,9),(8,8)),4).
move(9,((8,8),(9,8)),5).
move(9,((9,8),(10,8)),6).
move(9,((10,8),(10,7)),7).
move(9,((10,7),(10,6)),8).
move(9,((10,6),(10,5)),9).
move(9,((10,5),(11,5)),10).
move(9,((11,5),(11,4)),11).
move(9,((11,4),(12,4)),12).
move(9,((12,4),(13,4)),13).
move(9,((13,4),(13,3)),14).
move(9,((13,3),(13,2)),15).
move(9,((13,2),(14,2)),16).
move(9,((14,2),(14,1)),17).
move(9,((14,1),(14,2)),18).
move(9,((14,2),(15,2)),19).
move(9,((15,2),(14,2)),20).
move(9,((14,2),(15,2)),21).
move(9,((15,2),(14,2)),22).
move(9,((14,2),(13,2)),23).
move(9,((13,2),(13,3)),24).
move(9,((13,3),(13,4)),25).
move(9,((13,4),(12,4)),26).
move(9,((12,4),(12,5)),27).
move(9,((12,5),(11,5)),28).
move(9,((11,5),(11,6)),29).
move(9,((11,6),(10,6)),30).
move(9,((10,6),(10,5)),31).
move(9,((10,5),(10,4)),32).
move(9,((10,4),(10,3)),33).
move(9,((10,3),(10,2)),34).
move(9,((10,2),(11,2)),35).
move(9,((11,2),(12,2)),36).
move(9,((12,2),(12,3)),37).
move(9,((12,3),(12,2)),38).
move(9,((12,2),(11,2)),39).
move(9,((11,2),(11,3)),40).
move(10,((10,9),(9,9)),3).
move(10,((9,9),(10,9)),4).
move(10,((10,9),(10,8)),5).
move(10,((10,8),(11,8)),6).
move(10,((11,8),(12,8)),8).
move(10,((12,8),(13,8)),9).
move(10,((13,8),(13,7)),10).
move(10,((13,7),(14,7)),11).
move(10,((14,7),(15,7)),12).
move(10,((15,7),(16,7)),13).
move(10,((16,7),(17,7)),14).
move(10,((17,7),(17,6)),15).
move(10,((17,6),(17,5)),16).
move(10,((17,5),(17,4)),17).
move(10,((17,4),(17,3)),18).
move(10,((17,3),(17,4)),20).
move(10,((17,4),(17,3)),21).
move(10,((17,3),(17,2)),22).
move(10,((17,2),(16,2)),23).
move(10,((16,2),(15,2)),24).
move(10,((15,2),(15,3)),25).
move(10,((15,3),(14,3)),26).
move(10,((14,3),(14,4)),27).
move(10,((14,4),(13,4)),28).
move(10,((13,4),(13,3)),29).
move(10,((13,3),(14,3)),30).
move(10,((14,3),(14,2)),31).
move(10,((14,2),(13,2)),32).
move(10,((13,2),(12,2)),33).
move(10,((12,2),(11,2)),34).
move(10,((11,2),(12,2)),35).
move(10,((12,2),(13,2)),36).
move(10,((13,2),(14,2)),37).
move(10,((14,2),(13,2)),38).
move(10,((13,2),(12,2)),39).
move(10,((12,2),(12,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 6.073s (Solving: 0.98s 1st Model: 0.98s Unsat: 0.00s)
CPU Time     : 6.031s

Choices      : 7205     (Domain: 7205)
Conflicts    : 225      (Analyzed: 225)
Restarts     : 0       
Model-Level  : 306.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 225      (Deleted: 0)
  Binary     : 95       (Ratio:  42.22%)
  Ternary    : 18       (Ratio:   8.00%)
  Conflict   : 225      (Average Length:   10.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 225      (Average: 30.66 Max: 237 Sum:   6899)
  Executed   : 225      (Average: 30.66 Max: 237 Sum:   6899 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 878862   (Original: 822360)
  Choice     : 400     
  Heuristic  : 52495    (Original: 52605)
Atoms        : 338444  
Bodies       : 566800   (Original: 510188)
  Count      : 5847     (Original: 6852)
Equivalences : 305313   (Atom=Atom: 428 Body=Body: 439 Other: 304446)
Tight        : Yes
Variables    : 567711   (Eliminated:    0 Frozen: 303750)
Constraints  : 1531406  (Binary:  79.6% Ternary:  15.2% Other:   5.3%)

