%%%%%
%Standard
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(2,3)),5).
move(1,((2,3),(3,3)),6).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),4).
move(2,((4,5),(4,4)),5).
move(2,((4,4),(5,4)),6).
move(2,((5,4),(4,4)),8).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(7,6)),4).
move(3,((7,6),(8,6)),5).
move(3,((8,6),(8,5)),6).
move(3,((8,5),(7,5)),7).
move(3,((7,5),(7,4)),8).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(8,6)),3).
move(5,((8,6),(9,6)),4).
move(5,((9,6),(9,5)),6).
move(5,((9,5),(9,4)),7).
move(5,((9,4),(8,4)),8).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(8,4)),7).
move(6,((8,4),(8,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,2)),4).
move(8,((7,2),(7,3)),5).
move(8,((7,3),(6,3)),7).
move(8,((6,3),(5,3)),8).
move(9,((10,6),(9,6)),8).
move(9,((9,6),(9,5)),9).
move(9,((9,5),(9,4)),10).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(7,4)),3).
move(10,((7,4),(6,4)),6).
move(10,((6,4),(5,4)),8).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(11,3)),3).
move(11,((11,3),(11,2)),4).
move(11,((11,2),(10,2)),5).
move(11,((10,2),(9,2)),6).
move(11,((9,2),(8,2)),7).
move(11,((8,2),(8,1)),8).
move(11,((8,1),(7,1)),9).
move(11,((7,1),(7,2)),10).
move(11,((7,2),(7,3)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.273s (Solving: 0.07s 1st Model: 0.07s Unsat: 0.00s)
CPU Time     : 2.266s

Choices      : 1198    
Conflicts    : 50       (Analyzed: 50)
Restarts     : 0       
Model-Level  : 487.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 50       (Deleted: 0)
  Binary     : 8        (Ratio:  16.00%)
  Ternary    : 1        (Ratio:   2.00%)
  Conflict   : 50       (Average Length:   21.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 50       (Average: 14.22 Max:  99 Sum:    711)
  Executed   : 50       (Average: 14.22 Max:  99 Sum:    711 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353468   (Original: 327181)
  Choice     : 440     
Atoms        : 141635  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(2,3)),4).
move(1,((2,3),(2,4)),5).
move(1,((2,4),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),4).
move(2,((4,5),(4,4)),5).
move(2,((4,4),(5,4)),6).
move(2,((5,4),(4,4)),8).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(5,5)),4).
move(3,((5,5),(5,4)),5).
move(3,((5,4),(5,3)),6).
move(3,((5,3),(6,3)),7).
move(3,((6,3),(7,3)),8).
move(3,((7,3),(7,4)),9).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(5,((7,3),(7,4)),7).
move(5,((7,4),(8,4)),8).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(9,2)),4).
move(6,((9,2),(9,1)),5).
move(6,((9,1),(8,1)),7).
move(6,((8,1),(8,2)),8).
move(6,((8,2),(8,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(7,2)),4).
move(8,((7,2),(6,2)),6).
move(8,((6,2),(5,2)),7).
move(8,((5,2),(5,3)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(6,6)),4).
move(9,((6,6),(7,6)),5).
move(9,((7,6),(7,5)),6).
move(9,((7,5),(8,5)),8).
move(9,((8,5),(9,5)),9).
move(9,((9,5),(9,4)),10).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(7,4)),3).
move(10,((7,4),(7,5)),5).
move(10,((7,5),(6,5)),6).
move(10,((6,5),(5,5)),7).
move(10,((5,5),(5,4)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(8,6)),5).
move(11,((8,6),(8,5)),6).
move(11,((8,5),(8,4)),7).
move(11,((8,4),(8,3)),8).
move(11,((8,3),(7,3)),9).
move(11,((7,3),(7,2)),10).
move(11,((7,2),(7,3)),11).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.372s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 2.297s

Choices      : 1494     (Domain: 100)
Conflicts    : 65       (Analyzed: 65)
Restarts     : 0       
Model-Level  : 578.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 65       (Deleted: 0)
  Binary     : 8        (Ratio:  12.31%)
  Ternary    : 1        (Ratio:   1.54%)
  Conflict   : 65       (Average Length:   20.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 65       (Average: 14.09 Max: 107 Sum:    916)
  Executed   : 65       (Average: 14.09 Max: 107 Sum:    916 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353686   (Original: 327399)
  Choice     : 440     
  Heuristic  : 107     
Atoms        : 141746  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(3,4)),4).
move(1,((3,4),(3,3)),5).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(6,5)),4).
move(3,((6,5),(7,5)),6).
move(3,((7,5),(7,4)),7).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(5,4)),3).
move(4,((5,4),(5,3)),4).
move(4,((5,3),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(4,((7,3),(7,2)),7).
move(4,((7,2),(8,2)),8).
move(4,((8,2),(9,2)),9).
move(4,((9,2),(9,3)),10).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(8,4)),5).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(8,5)),2).
move(6,((8,5),(8,4)),3).
move(6,((8,4),(8,3)),4).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(7,((10,4),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(5,4)),4).
move(8,((5,4),(5,3)),5).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(9,5)),2).
move(9,((9,5),(9,4)),3).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(6,4)),4).
move(10,((6,4),(5,4)),5).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(7,5)),5).
move(11,((7,5),(7,4)),6).
move(11,((7,4),(7,3)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.781s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.766s

Choices      : 440      (Domain: 440)
Conflicts    : 4        (Analyzed: 4)
Restarts     : 0       
Model-Level  : 403.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 4        (Deleted: 0)
  Binary     : 3        (Ratio:  75.00%)
  Ternary    : 1        (Ratio:  25.00%)
  Conflict   : 4        (Average Length:    2.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 4        (Average:  9.25 Max:  27 Sum:     37)
  Executed   : 4        (Average:  9.25 Max:  27 Sum:     37 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378769   (Original: 352614)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141757  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(3,4)),4).
move(1,((3,4),(3,3)),5).
move(1,((3,3),(2,3)),6).
move(1,((2,3),(2,2)),7).
move(1,((2,2),(2,3)),9).
move(1,((2,3),(3,3)),10).
move(2,((2,6),(3,6)),3).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(2,3)),7).
move(2,((2,3),(3,3)),8).
move(2,((3,3),(4,3)),9).
move(2,((4,3),(4,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(6,5)),4).
move(3,((6,5),(6,4)),5).
move(3,((6,4),(7,4)),6).
move(3,((7,4),(6,4)),8).
move(3,((6,4),(7,4)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(8,5)),5).
move(4,((8,5),(9,5)),6).
move(4,((9,5),(9,6)),7).
move(4,((9,6),(9,5)),8).
move(4,((9,5),(9,4)),9).
move(4,((9,4),(9,3)),40).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(6,5)),2).
move(5,((6,5),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(8,4)),5).
move(5,((8,4),(8,5)),6).
move(5,((8,5),(9,5)),7).
move(5,((9,5),(8,5)),8).
move(5,((8,5),(8,4)),40).
move(6,((9,6),(9,5)),3).
move(6,((9,5),(9,4)),4).
move(6,((9,4),(10,4)),5).
move(6,((10,4),(10,3)),7).
move(6,((10,3),(10,2)),8).
move(6,((10,2),(9,2)),9).
move(6,((9,2),(8,2)),10).
move(6,((8,2),(8,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(5,4)),3).
move(7,((5,4),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(7,3)),6).
move(7,((7,3),(8,3)),7).
move(7,((8,3),(9,3)),8).
move(7,((9,3),(10,3)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,6)),4).
move(8,((7,6),(7,5)),5).
move(8,((7,5),(6,5)),6).
move(8,((6,5),(6,4)),7).
move(8,((6,4),(5,4)),8).
move(8,((5,4),(5,3)),40).
move(9,((10,6),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(8,4)),8).
move(9,((8,4),(8,3)),9).
move(9,((8,3),(8,4)),10).
move(9,((8,4),(9,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(5,4)),6).
move(10,((5,4),(5,5)),7).
move(10,((5,5),(5,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(10,4)),3).
move(11,((10,4),(10,3)),4).
move(11,((10,3),(9,3)),5).
move(11,((9,3),(8,3)),6).
move(11,((8,3),(8,4)),7).
move(11,((8,4),(8,3)),8).
move(11,((8,3),(7,3)),9).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.909s (Solving: 0.15s 1st Model: 0.15s Unsat: 0.00s)
CPU Time     : 1.906s

Choices      : 1385     (Domain: 493)
Conflicts    : 112      (Analyzed: 112)
Restarts     : 0       
Model-Level  : 404.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 112      (Deleted: 0)
  Binary     : 23       (Ratio:  20.54%)
  Ternary    : 6        (Ratio:   5.36%)
  Conflict   : 112      (Average Length:   43.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 112      (Average:  8.76 Max:  46 Sum:    981)
  Executed   : 112      (Average:  8.76 Max:  46 Sum:    981 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378769   (Original: 352614)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141757  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(3,4)),4).
move(1,((3,4),(3,3)),5).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(7,6)),4).
move(3,((7,6),(7,5)),5).
move(3,((7,5),(7,4)),6).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(4,((9,4),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(8,4)),5).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(8,5)),2).
move(6,((8,5),(8,4)),3).
move(6,((8,4),(8,3)),4).
move(6,((8,3),(8,2)),5).
move(6,((8,2),(8,3)),7).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(9,5)),4).
move(7,((9,5),(9,4)),5).
move(7,((9,4),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(5,4)),4).
move(8,((5,4),(5,3)),5).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(9,5)),2).
move(9,((9,5),(10,5)),3).
move(9,((10,5),(10,6)),4).
move(9,((10,6),(9,6)),6).
move(9,((9,6),(9,5)),7).
move(9,((9,5),(9,4)),8).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(6,4)),4).
move(10,((6,4),(5,4)),5).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(10,4)),3).
move(11,((10,4),(9,4)),4).
move(11,((9,4),(9,3)),5).
move(11,((9,3),(8,3)),6).
move(11,((8,3),(7,3)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.745s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.750s

Choices      : 459      (Domain: 36)
Conflicts    : 3        (Analyzed: 3)
Restarts     : 0       
Model-Level  : 441.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 3        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 3        (Average Length:   33.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 3        (Average:  6.00 Max:   8 Sum:     18)
  Executed   : 3        (Average:  6.00 Max:   8 Sum:     18 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354385   (Original: 328120)
  Choice     : 440     
  Heuristic  : 736      (Original: 758)
Atoms        : 141816  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(4,5)),4).
move(1,((4,5),(3,5)),5).
move(1,((3,5),(3,4)),6).
move(1,((3,4),(3,3)),7).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(3,4)),3).
move(2,((3,4),(4,4)),4).
move(2,((4,4),(4,5)),5).
move(2,((4,5),(4,4)),6).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(4,5)),2).
move(3,((4,5),(5,5)),3).
move(3,((5,5),(6,5)),4).
move(3,((6,5),(7,5)),5).
move(3,((7,5),(7,4)),7).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(7,3)),6).
move(4,((7,3),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(8,5)),4).
move(5,((8,5),(8,4)),40).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(9,2)),4).
move(6,((9,2),(8,2)),5).
move(6,((8,2),(8,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(10,5)),5).
move(7,((10,5),(10,6)),6).
move(7,((10,6),(10,5)),7).
move(7,((10,5),(10,4)),8).
move(7,((10,4),(10,3)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(6,3)),4).
move(8,((6,3),(5,3)),5).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(9,3)),4).
move(9,((9,3),(8,3)),5).
move(9,((8,3),(8,4)),6).
move(9,((8,4),(9,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(7,4)),3).
move(10,((7,4),(6,4)),4).
move(10,((6,4),(5,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(10,4)),3).
move(11,((10,4),(9,4)),4).
move(11,((9,4),(8,4)),5).
move(11,((8,4),(7,4)),6).
move(11,((7,4),(7,3)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.749s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.703s

Choices      : 1752     (Domain: 999)
Conflicts    : 24       (Analyzed: 24)
Restarts     : 0       
Model-Level  : 1472.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 24       (Deleted: 0)
  Binary     : 2        (Ratio:   8.33%)
  Ternary    : 1        (Ratio:   4.17%)
  Conflict   : 24       (Average Length:   19.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 24       (Average: 11.67 Max:  51 Sum:    280)
  Executed   : 24       (Average: 11.67 Max:  51 Sum:    280 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354615   (Original: 328334)
  Choice     : 440     
  Heuristic  : 1036     (Original: 1042)
Atoms        : 141746  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(1,4)),2).
move(1,((1,4),(1,3)),3).
move(1,((1,3),(1,2)),4).
move(1,((1,2),(1,3)),5).
move(1,((1,3),(1,4)),6).
move(1,((1,4),(1,5)),7).
move(1,((1,5),(2,5)),8).
move(1,((2,5),(3,5)),9).
move(1,((3,5),(3,4)),10).
move(1,((3,4),(3,3)),11).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(5,6)),3).
move(2,((5,6),(6,6)),4).
move(2,((6,6),(7,6)),5).
move(2,((7,6),(7,5)),6).
move(2,((7,5),(6,5)),7).
move(2,((6,5),(5,5)),8).
move(2,((5,5),(4,5)),9).
move(2,((4,5),(4,4)),10).
move(3,((3,6),(4,6)),1).
move(3,((4,6),(5,6)),2).
move(3,((5,6),(6,6)),3).
move(3,((6,6),(7,6)),4).
move(3,((7,6),(8,6)),5).
move(3,((8,6),(7,6)),7).
move(3,((7,6),(7,5)),8).
move(3,((7,5),(7,4)),9).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(8,6)),3).
move(5,((8,6),(9,6)),4).
move(5,((9,6),(9,5)),5).
move(5,((9,5),(8,5)),6).
move(5,((8,5),(8,4)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(8,4)),3).
move(6,((8,4),(7,4)),4).
move(6,((7,4),(7,3)),6).
move(6,((7,3),(7,4)),7).
move(6,((7,4),(7,3)),8).
move(6,((7,3),(8,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),4).
move(7,((7,3),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(7,((9,3),(10,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),4).
move(8,((6,4),(5,4)),5).
move(8,((5,4),(5,3)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(9,6)),3).
move(9,((9,6),(10,6)),4).
move(9,((10,6),(9,6)),5).
move(9,((9,6),(10,6)),6).
move(9,((10,6),(10,5)),7).
move(9,((10,5),(9,5)),9).
move(9,((9,5),(9,4)),10).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(10,((4,4),(5,4)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(8,5)),4).
move(11,((8,5),(8,4)),5).
move(11,((8,4),(8,3)),6).
move(11,((8,3),(8,2)),7).
move(11,((8,2),(7,2)),8).
move(11,((7,2),(7,3)),10).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.811s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 1.812s

Choices      : 1459     (Domain: 825)
Conflicts    : 67       (Analyzed: 67)
Restarts     : 0       
Model-Level  : 490.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 67       (Deleted: 0)
  Binary     : 7        (Ratio:  10.45%)
  Ternary    : 1        (Ratio:   1.49%)
  Conflict   : 67       (Average Length:   22.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 67       (Average: 14.46 Max: 134 Sum:    969)
  Executed   : 67       (Average: 14.46 Max: 134 Sum:    969 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378782   (Original: 352616)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141769  
Disjunctions : 0        (Original: 1)
Bodies       : 247623   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128049   (Atom=Atom: 470 Body=Body: 482 Other: 127097)
Tight        : Yes
Variables    : 246824   (Eliminated:    0 Frozen: 126446)
Constraints  : 678181   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(3,4)),4).
move(1,((3,4),(3,3)),5).
move(1,((3,3),(2,3)),6).
move(1,((2,3),(1,3)),8).
move(1,((1,3),(2,3)),9).
move(1,((2,3),(3,3)),10).
move(1,((3,3),(3,4)),11).
move(1,((3,4),(2,4)),12).
move(1,((2,4),(2,3)),13).
move(1,((2,3),(2,4)),14).
move(1,((2,4),(3,4)),15).
move(1,((3,4),(3,3)),16).
move(1,((3,3),(3,4)),17).
move(1,((3,4),(2,4)),19).
move(1,((2,4),(2,5)),21).
move(1,((2,5),(2,4)),22).
move(1,((2,4),(3,4)),24).
move(1,((3,4),(2,4)),25).
move(1,((2,4),(2,3)),26).
move(1,((2,3),(3,3)),27).
move(1,((3,3),(2,3)),28).
move(1,((2,3),(2,4)),29).
move(1,((2,4),(2,5)),30).
move(1,((2,5),(2,4)),32).
move(1,((2,4),(2,3)),34).
move(1,((2,3),(2,4)),35).
move(1,((2,4),(2,3)),36).
move(1,((2,3),(3,3)),37).
move(1,((3,3),(2,3)),39).
move(1,((2,3),(3,3)),40).
move(2,((2,6),(3,6)),3).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(2,4)),6).
move(2,((2,4),(2,5)),7).
move(2,((2,5),(2,4)),8).
move(2,((2,4),(3,4)),9).
move(2,((3,4),(2,4)),10).
move(2,((2,4),(2,5)),12).
move(2,((2,5),(2,4)),13).
move(2,((2,4),(3,4)),14).
move(2,((3,4),(3,5)),15).
move(2,((3,5),(2,5)),16).
move(2,((2,5),(2,4)),17).
move(2,((2,4),(2,5)),18).
move(2,((2,5),(3,5)),19).
move(2,((3,5),(2,5)),20).
move(2,((2,5),(3,5)),21).
move(2,((3,5),(2,5)),23).
move(2,((2,5),(2,4)),24).
move(2,((2,4),(2,5)),25).
move(2,((2,5),(3,5)),26).
move(2,((3,5),(4,5)),27).
move(2,((4,5),(3,5)),29).
move(2,((3,5),(3,4)),31).
move(2,((3,4),(4,4)),33).
move(2,((4,4),(3,4)),35).
move(2,((3,4),(2,4)),36).
move(2,((2,4),(3,4)),37).
move(2,((3,4),(4,4)),38).
move(2,((4,4),(4,5)),39).
move(2,((4,5),(4,4)),40).
move(3,((3,6),(4,6)),3).
move(3,((4,6),(4,5)),4).
move(3,((4,5),(4,4)),5).
move(3,((4,4),(3,4)),6).
move(3,((3,4),(4,4)),9).
move(3,((4,4),(3,4)),10).
move(3,((3,4),(4,4)),11).
move(3,((4,4),(3,4)),12).
move(3,((3,4),(4,4)),14).
move(3,((4,4),(5,4)),15).
move(3,((5,4),(4,4)),16).
move(3,((4,4),(3,4)),19).
move(3,((3,4),(4,4)),24).
move(3,((4,4),(3,4)),26).
move(3,((3,4),(4,4)),31).
move(3,((4,4),(5,4)),33).
move(3,((5,4),(4,4)),35).
move(3,((4,4),(5,4)),36).
move(3,((5,4),(6,4)),37).
move(3,((6,4),(6,5)),38).
move(3,((6,5),(7,5)),39).
move(3,((7,5),(7,4)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,4)),6).
move(4,((4,4),(4,3)),7).
move(4,((4,3),(5,3)),8).
move(4,((5,3),(4,3)),9).
move(4,((4,3),(5,3)),10).
move(4,((5,3),(5,4)),12).
move(4,((5,4),(4,4)),13).
move(4,((4,4),(4,3)),14).
move(4,((4,3),(4,4)),20).
move(4,((4,4),(4,3)),24).
move(4,((4,3),(4,4)),26).
move(4,((4,4),(4,3)),31).
move(4,((4,3),(5,3)),34).
move(4,((5,3),(6,3)),35).
move(4,((6,3),(6,2)),36).
move(4,((6,2),(7,2)),37).
move(4,((7,2),(8,2)),38).
move(4,((8,2),(9,2)),39).
move(4,((9,2),(9,3)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(6,4)),5).
move(5,((6,4),(7,4)),7).
move(5,((7,4),(7,5)),8).
move(5,((7,5),(7,4)),9).
move(5,((7,4),(6,4)),10).
move(5,((6,4),(6,5)),11).
move(5,((6,5),(5,5)),12).
move(5,((5,5),(5,4)),13).
move(5,((5,4),(5,5)),14).
move(5,((5,5),(5,6)),15).
move(5,((5,6),(5,5)),16).
move(5,((5,5),(6,5)),17).
move(5,((6,5),(6,6)),18).
move(5,((6,6),(5,6)),19).
move(5,((5,6),(6,6)),20).
move(5,((6,6),(7,6)),21).
move(5,((7,6),(7,5)),22).
move(5,((7,5),(8,5)),23).
move(5,((8,5),(7,5)),24).
move(5,((7,5),(6,5)),26).
move(5,((6,5),(5,5)),27).
move(5,((5,5),(5,6)),29).
move(5,((5,6),(5,5)),30).
move(5,((5,5),(6,5)),32).
move(5,((6,5),(6,4)),33).
move(5,((6,4),(7,4)),35).
move(5,((7,4),(7,5)),36).
move(5,((7,5),(6,5)),37).
move(5,((6,5),(7,5)),38).
move(5,((7,5),(7,4)),39).
move(5,((7,4),(8,4)),40).
move(6,((9,6),(9,5)),3).
move(6,((9,5),(9,4)),4).
move(6,((9,4),(9,3)),5).
move(6,((9,3),(9,4)),8).
move(6,((9,4),(9,3)),9).
move(6,((9,3),(9,4)),10).
move(6,((9,4),(9,5)),11).
move(6,((9,5),(9,6)),12).
move(6,((9,6),(9,5)),13).
move(6,((9,5),(9,4)),14).
move(6,((9,4),(8,4)),15).
move(6,((8,4),(8,3)),16).
move(6,((8,3),(8,4)),17).
move(6,((8,4),(8,3)),18).
move(6,((8,3),(9,3)),19).
move(6,((9,3),(9,4)),20).
move(6,((9,4),(8,4)),21).
move(6,((8,4),(8,3)),22).
move(6,((8,3),(9,3)),23).
move(6,((9,3),(8,3)),25).
move(6,((8,3),(9,3)),26).
move(6,((9,3),(8,3)),27).
move(6,((8,3),(8,4)),28).
move(6,((8,4),(8,5)),29).
move(6,((8,5),(8,4)),32).
move(6,((8,4),(8,5)),33).
move(6,((8,5),(8,4)),34).
move(6,((8,4),(9,4)),35).
move(6,((9,4),(9,3)),36).
move(6,((9,3),(8,3)),37).
move(6,((8,3),(8,4)),39).
move(6,((8,4),(8,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,4)),7).
move(7,((6,4),(6,3)),8).
move(7,((6,3),(6,4)),9).
move(7,((6,4),(6,5)),10).
move(7,((6,5),(7,5)),11).
move(7,((7,5),(6,5)),12).
move(7,((6,5),(6,4)),13).
move(7,((6,4),(7,4)),15).
move(7,((7,4),(6,4)),16).
move(7,((6,4),(7,4)),17).
move(7,((7,4),(6,4)),18).
move(7,((6,4),(6,3)),19).
move(7,((6,3),(7,3)),20).
move(7,((7,3),(6,3)),21).
move(7,((6,3),(6,4)),22).
move(7,((6,4),(7,4)),24).
move(7,((7,4),(7,3)),28).
move(7,((7,3),(6,3)),30).
move(7,((6,3),(6,4)),31).
move(7,((6,4),(6,3)),33).
move(7,((6,3),(6,2)),35).
move(7,((6,2),(7,2)),36).
move(7,((7,2),(8,2)),37).
move(7,((8,2),(9,2)),38).
move(7,((9,2),(9,3)),39).
move(7,((9,3),(10,3)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(6,3)),7).
move(8,((6,3),(7,3)),8).
move(8,((7,3),(6,3)),9).
move(8,((6,3),(7,3)),10).
move(8,((7,3),(6,3)),11).
move(8,((6,3),(5,3)),12).
move(8,((5,3),(6,3)),13).
move(8,((6,3),(7,3)),14).
move(8,((7,3),(6,3)),15).
move(8,((6,3),(6,4)),17).
move(8,((6,4),(6,3)),18).
move(8,((6,3),(5,3)),19).
move(8,((5,3),(5,4)),21).
move(8,((5,4),(5,3)),22).
move(8,((5,3),(6,3)),24).
move(8,((6,3),(6,4)),25).
move(8,((6,4),(5,4)),26).
move(8,((5,4),(5,3)),27).
move(8,((5,3),(5,4)),29).
move(8,((5,4),(6,4)),30).
move(8,((6,4),(7,4)),31).
move(8,((7,4),(7,3)),32).
move(8,((7,3),(6,3)),37).
move(8,((6,3),(7,3)),38).
move(8,((7,3),(6,3)),39).
move(8,((6,3),(5,3)),40).
move(9,((10,6),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(10,4)),6).
move(9,((10,4),(10,5)),7).
move(9,((10,5),(9,5)),8).
move(9,((9,5),(10,5)),10).
move(9,((10,5),(10,4)),12).
move(9,((10,4),(9,4)),25).
move(9,((9,4),(9,5)),26).
move(9,((9,5),(9,4)),34).
move(9,((9,4),(9,5)),35).
move(9,((9,5),(10,5)),36).
move(9,((10,5),(10,4)),37).
move(9,((10,4),(9,4)),38).
move(9,((9,4),(10,4)),39).
move(9,((10,4),(9,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(7,4)),6).
move(10,((7,4),(8,4)),7).
move(10,((8,4),(7,4)),11).
move(10,((7,4),(7,5)),12).
move(10,((7,5),(8,5)),13).
move(10,((8,5),(8,6)),14).
move(10,((8,6),(7,6)),16).
move(10,((7,6),(6,6)),17).
move(10,((6,6),(5,6)),18).
move(10,((5,6),(5,5)),19).
move(10,((5,5),(6,5)),21).
move(10,((6,5),(5,5)),23).
move(10,((5,5),(6,5)),25).
move(10,((6,5),(6,4)),26).
move(10,((6,4),(5,4)),28).
move(10,((5,4),(5,5)),29).
move(10,((5,5),(6,5)),30).
move(10,((6,5),(7,5)),32).
move(10,((7,5),(7,4)),33).
move(10,((7,4),(7,5)),34).
move(10,((7,5),(8,5)),35).
move(10,((8,5),(8,4)),36).
move(10,((8,4),(7,4)),37).
move(10,((7,4),(6,4)),39).
move(10,((6,4),(5,4)),40).
move(11,((11,6),(10,6)),3).
move(11,((10,6),(10,5)),4).
move(11,((10,5),(11,5)),6).
move(11,((11,5),(11,4)),7).
move(11,((11,4),(11,3)),8).
move(11,((11,3),(10,3)),9).
move(11,((10,3),(10,4)),10).
move(11,((10,4),(9,4)),12).
move(11,((9,4),(9,3)),14).
move(11,((9,3),(9,4)),15).
move(11,((9,4),(9,5)),20).
move(11,((9,5),(9,4)),21).
move(11,((9,4),(8,4)),23).
move(11,((8,4),(9,4)),24).
move(11,((9,4),(9,3)),25).
move(11,((9,3),(10,3)),26).
move(11,((10,3),(10,4)),27).
move(11,((10,4),(10,3)),28).
move(11,((10,3),(10,4)),29).
move(11,((10,4),(9,4)),32).
move(11,((9,4),(10,4)),34).
move(11,((10,4),(10,3)),37).
move(11,((10,3),(9,3)),38).
move(11,((9,3),(8,3)),39).
move(11,((8,3),(7,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.097s (Solving: 0.25s 1st Model: 0.25s Unsat: 0.00s)
CPU Time     : 2.078s

Choices      : 3489     (Domain: 3489)
Conflicts    : 174      (Analyzed: 174)
Restarts     : 1        (Average: 174.00 Last: 48)
Model-Level  : 390.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 174      (Deleted: 0)
  Binary     : 58       (Ratio:  33.33%)
  Ternary    : 18       (Ratio:  10.34%)
  Conflict   : 174      (Average Length:    4.9 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 174      (Average: 17.14 Max: 240 Sum:   2983)
  Executed   : 174      (Average: 17.14 Max: 240 Sum:   2983 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378758   (Original: 352603)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141746  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(1,2)),9).
move(1,((1,2),(1,1)),10).
move(1,((1,1),(1,2)),11).
move(1,((1,2),(2,2)),12).
move(1,((2,2),(2,3)),13).
move(1,((2,3),(2,4)),14).
move(1,((2,4),(2,5)),36).
move(1,((2,5),(2,4)),37).
move(1,((2,4),(2,3)),39).
move(1,((2,3),(3,3)),40).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(3,2)),7).
move(2,((3,2),(3,1)),8).
move(2,((3,1),(2,1)),9).
move(2,((2,1),(2,2)),10).
move(2,((2,2),(2,3)),11).
move(2,((2,3),(2,4)),12).
move(2,((2,4),(3,4)),14).
move(2,((3,4),(3,3)),35).
move(2,((3,3),(3,4)),36).
move(2,((3,4),(3,5)),37).
move(2,((3,5),(3,4)),38).
move(2,((3,4),(4,4)),40).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),5).
move(3,((3,3),(3,2)),6).
move(3,((3,2),(2,2)),7).
move(3,((2,2),(2,1)),8).
move(3,((2,1),(1,1)),9).
move(3,((1,1),(2,1)),10).
move(3,((2,1),(2,2)),11).
move(3,((2,2),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(4,3)),35).
move(3,((4,3),(5,3)),37).
move(3,((5,3),(6,3)),38).
move(3,((6,3),(6,4)),39).
move(3,((6,4),(7,4)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,2)),6).
move(4,((4,2),(4,1)),7).
move(4,((4,1),(4,2)),8).
move(4,((4,2),(4,3)),9).
move(4,((4,3),(4,4)),11).
move(4,((4,4),(5,4)),35).
move(4,((5,4),(6,4)),36).
move(4,((6,4),(7,4)),37).
move(4,((7,4),(8,4)),38).
move(4,((8,4),(9,4)),39).
move(4,((9,4),(9,3)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(5,2)),8).
move(5,((5,2),(5,3)),9).
move(5,((5,3),(5,4)),10).
move(5,((5,4),(5,3)),35).
move(5,((5,3),(5,4)),37).
move(5,((5,4),(6,4)),38).
move(5,((6,4),(7,4)),39).
move(5,((7,4),(8,4)),40).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,2)),7).
move(6,((9,2),(10,2)),8).
move(6,((10,2),(10,1)),9).
move(6,((10,1),(11,1)),10).
move(6,((11,1),(10,1)),11).
move(6,((10,1),(10,2)),12).
move(6,((10,2),(9,2)),13).
move(6,((9,2),(9,3)),14).
move(6,((9,3),(9,4)),15).
move(6,((9,4),(8,4)),35).
move(6,((8,4),(9,4)),36).
move(6,((9,4),(9,3)),38).
move(6,((9,3),(8,3)),39).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(6,1)),7).
move(7,((6,1),(6,2)),8).
move(7,((6,2),(6,3)),9).
move(7,((6,3),(6,2)),10).
move(7,((6,2),(6,3)),11).
move(7,((6,3),(6,4)),12).
move(7,((6,4),(6,5)),34).
move(7,((6,5),(7,5)),35).
move(7,((7,5),(7,4)),36).
move(7,((7,4),(8,4)),37).
move(7,((8,4),(9,4)),38).
move(7,((9,4),(9,3)),39).
move(7,((9,3),(10,3)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(7,4)),10).
move(8,((7,4),(7,5)),34).
move(8,((7,5),(8,5)),35).
move(8,((8,5),(8,4)),36).
move(8,((8,4),(8,3)),37).
move(8,((8,3),(7,3)),38).
move(8,((7,3),(6,3)),39).
move(8,((6,3),(5,3)),40).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(10,6)),3).
move(9,((10,6),(10,5)),4).
move(9,((10,5),(10,4)),6).
move(9,((10,4),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(9,((11,3),(11,2)),9).
move(9,((11,2),(10,2)),10).
move(9,((10,2),(10,3)),11).
move(9,((10,3),(10,4)),12).
move(9,((10,4),(10,3)),35).
move(9,((10,3),(10,2)),36).
move(9,((10,2),(10,3)),37).
move(9,((10,3),(10,4)),38).
move(9,((10,4),(9,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,3)),5).
move(10,((8,3),(8,2)),6).
move(10,((8,2),(8,1)),7).
move(10,((8,1),(9,1)),8).
move(10,((9,1),(9,2)),9).
move(10,((9,2),(8,2)),10).
move(10,((8,2),(8,3)),11).
move(10,((8,3),(8,4)),12).
move(10,((8,4),(7,4)),34).
move(10,((7,4),(7,3)),35).
move(10,((7,3),(6,3)),36).
move(10,((6,3),(6,4)),37).
move(10,((6,4),(6,5)),38).
move(10,((6,5),(5,5)),39).
move(10,((5,5),(5,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(10,2)),7).
move(11,((10,2),(11,2)),8).
move(11,((11,2),(11,1)),9).
move(11,((11,1),(11,2)),10).
move(11,((11,2),(10,2)),11).
move(11,((10,2),(10,3)),12).
move(11,((10,3),(9,3)),35).
move(11,((9,3),(8,3)),38).
move(11,((8,3),(7,3)),39).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.945s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.906s

Choices      : 492      (Domain: 492)
Conflicts    : 14       (Analyzed: 14)
Restarts     : 0       
Model-Level  : 394.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 14       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 1        (Ratio:   7.14%)
  Conflict   : 14       (Average Length:   14.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 14       (Average:  7.00 Max:  15 Sum:     98)
  Executed   : 14       (Average:  7.00 Max:  15 Sum:     98 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378758   (Original: 352603)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141746  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

