%%%%%
%Standard
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(2,((3,3),(3,4)),5).
move(2,((3,4),(4,4)),6).
move(2,((4,4),(5,4)),7).
move(2,((5,4),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(2,4)),4).
move(3,((2,4),(3,4)),6).
move(3,((3,4),(3,3)),7).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(8,4)),5).
move(5,((8,4),(8,3)),6).
move(5,((8,3),(7,3)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),5).
move(6,((8,3),(7,3)),6).
move(6,((7,3),(6,3)),7).
move(6,((6,3),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),5).
move(7,((9,5),(9,4)),6).
move(7,((9,4),(8,4)),20).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(7,5)),5).
move(9,((7,5),(7,4)),6).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(3,6)),5).
move(10,((3,6),(3,5)),6).
move(10,((3,5),(3,4)),7).
move(10,((3,4),(4,4)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(9,4)),4).
move(11,((9,4),(10,4)),5).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.886s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.859s

Choices      : 845     
Conflicts    : 48       (Analyzed: 48)
Restarts     : 0       
Model-Level  : 248.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 48       (Deleted: 0)
  Binary     : 10       (Ratio:  20.83%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 48       (Average Length:   16.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 48       (Average: 12.44 Max:  60 Sum:    597)
  Executed   : 48       (Average: 12.44 Max:  60 Sum:    597 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165688   (Original: 153701)
  Choice     : 220     
Atoms        : 69035   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(3,4)),3).
move(2,((3,4),(4,4)),4).
move(2,((4,4),(5,4)),5).
move(2,((5,4),(5,3)),6).
move(2,((5,3),(5,2)),7).
move(2,((5,2),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(5,2)),4).
move(5,((5,2),(6,2)),5).
move(5,((6,2),(7,2)),6).
move(5,((7,2),(7,3)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),5).
move(6,((8,3),(7,3)),6).
move(6,((7,3),(6,3)),7).
move(6,((6,3),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(8,4)),5).
move(7,((8,4),(9,4)),6).
move(7,((9,4),(8,4)),20).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(7,5)),5).
move(9,((7,5),(7,4)),6).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(3,6)),5).
move(10,((3,6),(3,5)),6).
move(10,((3,5),(3,4)),7).
move(10,((3,4),(4,4)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(9,4)),4).
move(11,((9,4),(10,4)),5).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.875s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.875s

Choices      : 690     
Conflicts    : 39       (Analyzed: 39)
Restarts     : 0       
Model-Level  : 219.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 39       (Deleted: 0)
  Binary     : 9        (Ratio:  23.08%)
  Ternary    : 1        (Ratio:   2.56%)
  Conflict   : 39       (Average Length:   17.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 39       (Average: 12.08 Max:  52 Sum:    471)
  Executed   : 39       (Average: 12.08 Max:  52 Sum:    471 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165900   (Original: 153913)
  Choice     : 220     
  Heuristic  : 86      
Atoms        : 69161   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(2,((3,3),(3,4)),5).
move(2,((3,4),(4,4)),6).
move(2,((4,4),(5,4)),7).
move(2,((5,4),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(2,4)),4).
move(3,((2,4),(3,4)),6).
move(3,((3,4),(3,3)),7).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(8,4)),5).
move(5,((8,4),(8,3)),6).
move(5,((8,3),(7,3)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),5).
move(6,((8,3),(7,3)),6).
move(6,((7,3),(6,3)),7).
move(6,((6,3),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),5).
move(7,((9,5),(9,4)),6).
move(7,((9,4),(8,4)),20).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(7,5)),5).
move(9,((7,5),(7,4)),6).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(3,6)),5).
move(10,((3,6),(3,5)),6).
move(10,((3,5),(3,4)),7).
move(10,((3,4),(4,4)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(9,4)),4).
move(11,((9,4),(10,4)),5).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.884s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.859s

Choices      : 851     
Conflicts    : 49       (Analyzed: 49)
Restarts     : 0       
Model-Level  : 250.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 49       (Deleted: 0)
  Binary     : 10       (Ratio:  20.41%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 49       (Average Length:   15.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 49       (Average: 12.27 Max:  61 Sum:    601)
  Executed   : 49       (Average: 12.27 Max:  61 Sum:    601 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165825   (Original: 153838)
  Choice     : 220     
Atoms        : 69172   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(2,((3,3),(3,4)),5).
move(2,((3,4),(4,4)),6).
move(2,((4,4),(5,4)),7).
move(2,((5,4),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(2,4)),4).
move(3,((2,4),(3,4)),6).
move(3,((3,4),(3,3)),7).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(8,4)),5).
move(5,((8,4),(8,3)),6).
move(5,((8,3),(7,3)),7).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),5).
move(6,((8,3),(7,3)),6).
move(6,((7,3),(6,3)),7).
move(6,((6,3),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),5).
move(7,((9,5),(9,4)),6).
move(7,((9,4),(8,4)),20).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(2,6)),5).
move(8,((2,6),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(7,5)),5).
move(9,((7,5),(7,4)),6).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(3,6)),5).
move(10,((3,6),(3,5)),6).
move(10,((3,5),(3,4)),7).
move(10,((3,4),(4,4)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(9,4)),4).
move(11,((9,4),(10,4)),5).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.906s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.906s

Choices      : 851     
Conflicts    : 49       (Analyzed: 49)
Restarts     : 0       
Model-Level  : 250.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 49       (Deleted: 0)
  Binary     : 10       (Ratio:  20.41%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 49       (Average Length:   15.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 49       (Average: 12.27 Max:  61 Sum:    601)
  Executed   : 49       (Average: 12.27 Max:  61 Sum:    601 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 165825   (Original: 153838)
  Choice     : 220     
Atoms        : 69172   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(2,((4,4),(5,4)),5).
move(2,((5,4),(4,4)),7).
move(2,((4,4),(5,4)),8).
move(2,((5,4),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),3).
move(7,((7,4),(8,4)),4).
move(7,((8,4),(9,4)),5).
move(7,((9,4),(8,4)),20).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(6,5)),2).
move(8,((6,5),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(3,5)),5).
move(8,((3,5),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(9,5)),2).
move(9,((9,5),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(7,4)),5).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(10,((4,4),(4,3)),7).
move(10,((4,3),(4,4)),8).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(10,4)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.931s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.922s

Choices      : 537     
Conflicts    : 33       (Analyzed: 33)
Restarts     : 0       
Model-Level  : 268.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 33       (Deleted: 0)
  Binary     : 8        (Ratio:  24.24%)
  Ternary    : 2        (Ratio:   6.06%)
  Conflict   : 33       (Average Length:   16.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 33       (Average:  8.15 Max:  27 Sum:    269)
  Executed   : 33       (Average:  8.15 Max:  27 Sum:    269 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 166869   (Original: 154904)
  Choice     : 220     
  Heuristic  : 979      (Original: 1001)
Atoms        : 69237   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(7,4)),8).
move(1,((7,4),(7,3)),9).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(5,5)),4).
move(2,((5,5),(5,4)),5).
move(2,((5,4),(5,3)),6).
move(2,((5,3),(5,2)),7).
move(2,((5,2),(5,3)),8).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),20).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(8,4)),20).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(3,5)),7).
move(8,((3,5),(3,4)),8).
move(8,((3,4),(2,4)),20).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(7,5)),5).
move(9,((7,5),(7,4)),9).
move(9,((7,4),(7,3)),11).
move(9,((7,3),(7,4)),20).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(9,4)),4).
move(11,((9,4),(10,4)),5).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.018s (Solving: 0.04s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.016s

Choices      : 695     
Conflicts    : 34       (Analyzed: 34)
Restarts     : 0       
Model-Level  : 270.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 34       (Deleted: 0)
  Binary     : 8        (Ratio:  23.53%)
  Ternary    : 1        (Ratio:   2.94%)
  Conflict   : 34       (Average Length:   23.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 34       (Average: 12.50 Max: 111 Sum:    425)
  Executed   : 34       (Average: 12.50 Max: 111 Sum:    425 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 166430   (Original: 154446)
  Choice     : 220     
  Heuristic  : 616      (Original: 619)
Atoms        : 69161   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(8,6)),7).
move(1,((8,6),(8,5)),8).
move(1,((8,5),(8,4)),10).
move(1,((8,4),(8,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(3,4)),3).
move(2,((3,4),(4,4)),4).
move(2,((4,4),(5,4)),5).
move(2,((5,4),(5,3)),8).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(7,4)),3).
move(7,((7,4),(8,4)),4).
move(7,((8,4),(9,4)),5).
move(7,((9,4),(8,4)),20).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(5,5)),3).
move(8,((5,5),(4,5)),4).
move(8,((4,5),(4,4)),5).
move(8,((4,4),(3,4)),6).
move(8,((3,4),(2,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(7,5)),5).
move(9,((7,5),(7,4)),6).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(10,4)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.948s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.938s

Choices      : 371      (Domain: 65)
Conflicts    : 29       (Analyzed: 29)
Restarts     : 0       
Model-Level  : 179.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 29       (Deleted: 0)
  Binary     : 3        (Ratio:  10.34%)
  Ternary    : 1        (Ratio:   3.45%)
  Conflict   : 29       (Average Length:   18.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 29       (Average:  6.62 Max:  19 Sum:    192)
  Executed   : 29       (Average:  6.62 Max:  19 Sum:    192 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176495   (Original: 164640)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69183   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(7,4)),8).
move(1,((7,4),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(3,4)),3).
move(2,((3,4),(4,4)),4).
move(2,((4,4),(5,4)),5).
move(2,((5,4),(5,3)),8).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(6,4)),3).
move(5,((6,4),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(7,6)),3).
move(7,((7,6),(8,6)),4).
move(7,((8,6),(8,5)),5).
move(7,((8,5),(8,4)),20).
move(8,((7,6),(6,6)),1).
move(8,((6,6),(5,6)),2).
move(8,((5,6),(4,6)),3).
move(8,((4,6),(3,6)),4).
move(8,((3,6),(3,5)),5).
move(8,((3,5),(2,5)),6).
move(8,((2,5),(2,4)),7).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(8,6)),3).
move(9,((8,6),(8,5)),4).
move(9,((8,5),(7,5)),5).
move(9,((7,5),(7,4)),9).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(10,4)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.982s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.984s

Choices      : 828     
Conflicts    : 40       (Analyzed: 40)
Restarts     : 0       
Model-Level  : 288.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 40       (Deleted: 0)
  Binary     : 9        (Ratio:  22.50%)
  Ternary    : 3        (Ratio:   7.50%)
  Conflict   : 40       (Average Length:   21.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 40       (Average: 13.50 Max: 248 Sum:    540)
  Executed   : 40       (Average: 13.50 Max: 248 Sum:    540 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176473   (Original: 164618)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69161   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(2,1)),9).
move(1,((2,1),(1,1)),10).
move(1,((1,1),(1,2)),11).
move(1,((1,2),(2,2)),12).
move(1,((2,2),(2,3)),13).
move(1,((2,3),(3,3)),14).
move(1,((3,3),(4,3)),16).
move(1,((4,3),(5,3)),17).
move(1,((5,3),(6,3)),18).
move(1,((6,3),(7,3)),19).
move(1,((7,3),(8,3)),20).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(3,2)),7).
move(2,((3,2),(3,1)),8).
move(2,((3,1),(3,2)),9).
move(2,((3,2),(2,2)),10).
move(2,((2,2),(2,3)),11).
move(2,((2,3),(2,4)),12).
move(2,((2,4),(3,4)),13).
move(2,((3,4),(4,4)),14).
move(2,((4,4),(4,5)),15).
move(2,((4,5),(3,5)),16).
move(2,((3,5),(3,4)),17).
move(2,((3,4),(3,3)),18).
move(2,((3,3),(4,3)),19).
move(2,((4,3),(5,3)),20).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),5).
move(3,((3,3),(3,2)),6).
move(3,((3,2),(2,2)),7).
move(3,((2,2),(1,2)),8).
move(3,((1,2),(2,2)),11).
move(3,((2,2),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(3,4)),14).
move(3,((3,4),(3,3)),17).
move(3,((3,3),(3,2)),18).
move(3,((3,2),(3,3)),20).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,2)),6).
move(4,((4,2),(4,1)),7).
move(4,((4,1),(4,2)),8).
move(4,((4,2),(4,3)),9).
move(4,((4,3),(4,4)),10).
move(4,((4,4),(4,3)),13).
move(4,((4,3),(5,3)),15).
move(4,((5,3),(6,3)),17).
move(4,((6,3),(7,3)),18).
move(4,((7,3),(8,3)),19).
move(4,((8,3),(9,3)),20).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(5,2)),8).
move(5,((5,2),(5,3)),9).
move(5,((5,3),(5,4)),10).
move(5,((5,4),(5,3)),13).
move(5,((5,3),(6,3)),14).
move(5,((6,3),(6,4)),15).
move(5,((6,4),(5,4)),16).
move(5,((5,4),(6,4)),17).
move(5,((6,4),(7,4)),18).
move(5,((7,4),(7,3)),20).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,2)),7).
move(6,((9,2),(10,2)),8).
move(6,((10,2),(11,2)),9).
move(6,((11,2),(11,1)),10).
move(6,((11,1),(10,1)),11).
move(6,((10,1),(10,2)),12).
move(6,((10,2),(9,2)),13).
move(6,((9,2),(8,2)),15).
move(6,((8,2),(7,2)),16).
move(6,((7,2),(6,2)),17).
move(6,((6,2),(5,2)),18).
move(6,((5,2),(4,2)),19).
move(6,((4,2),(4,3)),20).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(6,1)),7).
move(7,((6,1),(6,2)),8).
move(7,((6,2),(6,3)),9).
move(7,((6,3),(6,4)),10).
move(7,((6,4),(6,3)),13).
move(7,((6,3),(6,2)),14).
move(7,((6,2),(6,3)),16).
move(7,((6,3),(7,3)),17).
move(7,((7,3),(8,3)),18).
move(7,((8,3),(8,4)),19).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(7,4)),10).
move(8,((7,4),(6,4)),13).
move(8,((6,4),(5,4)),15).
move(8,((5,4),(4,4)),16).
move(8,((4,4),(3,4)),18).
move(8,((3,4),(2,4)),19).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(10,6)),3).
move(9,((10,6),(10,5)),4).
move(9,((10,5),(10,4)),6).
move(9,((10,4),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(9,((11,3),(10,3)),9).
move(9,((10,3),(10,4)),11).
move(9,((10,4),(9,4)),14).
move(9,((9,4),(9,5)),15).
move(9,((9,5),(9,4)),16).
move(9,((9,4),(8,4)),17).
move(9,((8,4),(8,5)),18).
move(9,((8,5),(7,5)),19).
move(9,((7,5),(7,4)),20).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,3)),5).
move(10,((8,3),(8,2)),6).
move(10,((8,2),(8,1)),7).
move(10,((8,1),(9,1)),8).
move(10,((9,1),(9,2)),9).
move(10,((9,2),(8,2)),10).
move(10,((8,2),(8,3)),11).
move(10,((8,3),(8,4)),12).
move(10,((8,4),(7,4)),13).
move(10,((7,4),(7,3)),14).
move(10,((7,3),(7,2)),15).
move(10,((7,2),(6,2)),16).
move(10,((6,2),(5,2)),17).
move(10,((5,2),(5,3)),18).
move(10,((5,3),(5,4)),19).
move(10,((5,4),(4,4)),20).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(10,2)),7).
move(11,((10,2),(10,1)),8).
move(11,((10,1),(10,2)),10).
move(11,((10,2),(10,3)),11).
move(11,((10,3),(9,3)),13).
move(11,((9,3),(8,3)),14).
move(11,((8,3),(8,4)),15).
move(11,((8,4),(8,5)),16).
move(11,((8,5),(9,5)),17).
move(11,((9,5),(9,4)),18).
move(11,((9,4),(10,4)),19).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.053s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.031s

Choices      : 394      (Domain: 394)
Conflicts    : 35       (Analyzed: 35)
Restarts     : 0       
Model-Level  : 166.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 35       (Deleted: 0)
  Binary     : 2        (Ratio:   5.71%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 35       (Average Length:   13.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 35       (Average:  6.51 Max:  29 Sum:    228)
  Executed   : 35       (Average:  6.51 Max:  29 Sum:    228 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 176473   (Original: 164618)
  Choice     : 220     
  Heuristic  : 10659    (Original: 10791)
Atoms        : 69161   
Bodies       : 112652   (Original: 100665)
  Count      : 1378     (Original: 1803)
Equivalences : 62268    (Atom=Atom: 250 Body=Body: 262 Other: 61756)
Tight        : Yes
Variables    : 111522   (Eliminated:    0 Frozen: 61326)
Constraints  : 292738   (Binary:  80.1% Ternary:  14.6% Other:   5.3%)

