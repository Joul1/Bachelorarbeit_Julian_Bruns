%%%%%
%Standard
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(5,9)),4).
move(1,((5,9),(6,9)),5).
move(1,((6,9),(7,9)),6).
move(1,((7,9),(7,8)),7).
move(1,((7,8),(7,9)),9).
move(1,((7,9),(6,9)),10).
move(1,((6,9),(5,9)),11).
move(1,((5,9),(4,9)),12).
move(1,((4,9),(4,8)),14).
move(1,((4,8),(4,7)),15).
move(1,((4,7),(4,6)),16).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(3,4)),6).
move(2,((3,4),(4,4)),7).
move(2,((4,4),(5,4)),8).
move(2,((5,4),(5,3)),9).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(5,9)),1).
move(4,((5,9),(6,9)),2).
move(4,((6,9),(6,8)),4).
move(4,((6,8),(6,7)),5).
move(4,((6,7),(6,6)),6).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(7,8)),2).
move(7,((7,8),(6,8)),3).
move(7,((6,8),(5,8)),4).
move(7,((5,8),(5,7)),5).
move(7,((5,7),(5,6)),6).
move(7,((5,6),(5,5)),7).
move(7,((5,5),(4,5)),8).
move(7,((4,5),(4,4)),9).
move(7,((4,4),(4,3)),10).
move(8,((7,9),(8,9)),1).
move(8,((8,9),(9,9)),2).
move(8,((9,9),(10,9)),3).
move(8,((10,9),(10,8)),4).
move(8,((10,8),(11,8)),5).
move(8,((11,8),(12,8)),6).
move(8,((12,8),(13,8)),7).
move(8,((13,8),(14,8)),8).
move(8,((14,8),(14,7)),9).
move(8,((14,7),(14,6)),12).
move(8,((14,6),(14,5)),13).
move(8,((14,5),(14,4)),14).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(8,8)),2).
move(9,((8,8),(7,8)),3).
move(9,((7,8),(7,7)),5).
move(9,((7,7),(6,7)),6).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),6).
move(10,((11,4),(12,4)),7).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),2).
move(11,((11,7),(12,7)),3).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(13,7)),3).
move(12,((13,7),(14,7)),12).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(14,8)),2).
move(13,((14,8),(15,8)),3).
move(13,((15,8),(15,7)),4).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(5,9)),9).
move(14,((5,9),(5,8)),10).
move(14,((5,8),(5,7)),11).
move(14,((5,7),(4,7)),12).
move(14,((4,7),(4,6)),13).
move(14,((4,6),(3,6)),14).
move(15,((15,9),(14,9)),1).
move(15,((14,9),(13,9)),2).
move(15,((13,9),(12,9)),3).
move(15,((12,9),(11,9)),4).
move(15,((11,9),(10,9)),5).
move(15,((10,9),(9,9)),6).
move(15,((9,9),(8,9)),7).
move(15,((8,9),(7,9)),8).
move(15,((7,9),(6,9)),9).
move(15,((6,9),(5,9)),10).
move(15,((5,9),(4,9)),11).
move(15,((4,9),(3,9)),12).
move(15,((3,9),(3,8)),13).
move(15,((3,8),(3,7)),15).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.876s (Solving: 0.07s 1st Model: 0.07s Unsat: 0.00s)
CPU Time     : 2.891s

Choices      : 1265    
Conflicts    : 49       (Analyzed: 49)
Restarts     : 0       
Model-Level  : 402.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 49       (Deleted: 0)
  Binary     : 11       (Ratio:  22.45%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 49       (Average Length:   43.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 49       (Average: 17.61 Max: 102 Sum:    863)
  Executed   : 49       (Average: 17.61 Max: 102 Sum:    863 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 575569   (Original: 514321)
  Choice     : 300     
Atoms        : 249746   (Original: 235036 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(5,9)),4).
move(1,((5,9),(6,9)),5).
move(1,((6,9),(7,9)),6).
move(1,((7,9),(7,8)),7).
move(1,((7,8),(7,9)),9).
move(1,((7,9),(6,9)),10).
move(1,((6,9),(5,9)),11).
move(1,((5,9),(4,9)),12).
move(1,((4,9),(4,8)),14).
move(1,((4,8),(4,7)),15).
move(1,((4,7),(4,6)),16).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(3,4)),6).
move(2,((3,4),(4,4)),7).
move(2,((4,4),(5,4)),8).
move(2,((5,4),(5,3)),9).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(5,6)),5).
move(4,((5,6),(6,6)),6).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((8,9),(7,9)),1).
move(7,((7,9),(6,9)),2).
move(7,((6,9),(5,9)),3).
move(7,((5,9),(5,8)),4).
move(7,((5,8),(5,7)),5).
move(7,((5,7),(5,6)),6).
move(7,((5,6),(5,5)),7).
move(7,((5,5),(4,5)),8).
move(7,((4,5),(4,4)),9).
move(7,((4,4),(4,3)),10).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(8,8)),2).
move(8,((8,8),(9,8)),3).
move(8,((9,8),(10,8)),4).
move(8,((10,8),(11,8)),5).
move(8,((11,8),(12,8)),6).
move(8,((12,8),(13,8)),7).
move(8,((13,8),(14,8)),8).
move(8,((14,8),(14,7)),9).
move(8,((14,7),(14,6)),12).
move(8,((14,6),(14,5)),13).
move(8,((14,5),(14,4)),14).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(6,9)),3).
move(9,((6,9),(6,8)),4).
move(9,((6,8),(6,7)),5).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),6).
move(10,((11,4),(12,4)),7).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),2).
move(11,((11,7),(12,7)),3).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(13,7)),3).
move(12,((13,7),(14,7)),12).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(14,8)),2).
move(13,((14,8),(15,8)),3).
move(13,((15,8),(15,7)),4).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(5,9)),9).
move(14,((5,9),(5,8)),10).
move(14,((5,8),(5,7)),11).
move(14,((5,7),(4,7)),12).
move(14,((4,7),(4,6)),13).
move(14,((4,6),(3,6)),14).
move(15,((15,9),(14,9)),1).
move(15,((14,9),(13,9)),2).
move(15,((13,9),(12,9)),3).
move(15,((12,9),(11,9)),4).
move(15,((11,9),(10,9)),5).
move(15,((10,9),(9,9)),6).
move(15,((9,9),(8,9)),7).
move(15,((8,9),(7,9)),8).
move(15,((7,9),(6,9)),9).
move(15,((6,9),(5,9)),10).
move(15,((5,9),(4,9)),11).
move(15,((4,9),(3,9)),12).
move(15,((3,9),(3,8)),13).
move(15,((3,8),(3,7)),15).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.833s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 2.828s

Choices      : 1250    
Conflicts    : 50       (Analyzed: 50)
Restarts     : 0       
Model-Level  : 403.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 50       (Deleted: 0)
  Binary     : 12       (Ratio:  24.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 50       (Average Length:   42.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 50       (Average: 16.94 Max: 102 Sum:    847)
  Executed   : 50       (Average: 16.94 Max: 102 Sum:    847 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 575943   (Original: 514695)
  Choice     : 300     
  Heuristic  : 161     
Atoms        : 249959   (Original: 235249 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(5,9)),4).
move(1,((5,9),(6,9)),5).
move(1,((6,9),(7,9)),6).
move(1,((7,9),(7,8)),7).
move(1,((7,8),(7,9)),9).
move(1,((7,9),(6,9)),10).
move(1,((6,9),(5,9)),11).
move(1,((5,9),(4,9)),12).
move(1,((4,9),(4,8)),14).
move(1,((4,8),(4,7)),15).
move(1,((4,7),(4,6)),16).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(3,4)),6).
move(2,((3,4),(4,4)),7).
move(2,((4,4),(5,4)),8).
move(2,((5,4),(5,3)),9).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(5,9)),1).
move(4,((5,9),(6,9)),2).
move(4,((6,9),(6,8)),4).
move(4,((6,8),(6,7)),5).
move(4,((6,7),(6,6)),6).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(7,8)),2).
move(7,((7,8),(6,8)),3).
move(7,((6,8),(5,8)),4).
move(7,((5,8),(5,7)),5).
move(7,((5,7),(5,6)),6).
move(7,((5,6),(5,5)),7).
move(7,((5,5),(4,5)),8).
move(7,((4,5),(4,4)),9).
move(7,((4,4),(4,3)),10).
move(8,((7,9),(8,9)),1).
move(8,((8,9),(9,9)),2).
move(8,((9,9),(10,9)),3).
move(8,((10,9),(10,8)),4).
move(8,((10,8),(11,8)),5).
move(8,((11,8),(12,8)),6).
move(8,((12,8),(13,8)),7).
move(8,((13,8),(14,8)),8).
move(8,((14,8),(14,7)),9).
move(8,((14,7),(14,6)),12).
move(8,((14,6),(14,5)),13).
move(8,((14,5),(14,4)),14).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(8,8)),2).
move(9,((8,8),(7,8)),3).
move(9,((7,8),(7,7)),5).
move(9,((7,7),(6,7)),6).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),6).
move(10,((11,4),(12,4)),7).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),2).
move(11,((11,7),(12,7)),3).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(13,7)),3).
move(12,((13,7),(14,7)),12).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(14,8)),2).
move(13,((14,8),(15,8)),3).
move(13,((15,8),(15,7)),4).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(5,9)),9).
move(14,((5,9),(5,8)),10).
move(14,((5,8),(5,7)),11).
move(14,((5,7),(4,7)),12).
move(14,((4,7),(4,6)),13).
move(14,((4,6),(3,6)),14).
move(15,((15,9),(14,9)),1).
move(15,((14,9),(13,9)),2).
move(15,((13,9),(12,9)),3).
move(15,((12,9),(11,9)),4).
move(15,((11,9),(10,9)),5).
move(15,((10,9),(9,9)),6).
move(15,((9,9),(8,9)),7).
move(15,((8,9),(7,9)),8).
move(15,((7,9),(6,9)),9).
move(15,((6,9),(5,9)),10).
move(15,((5,9),(4,9)),11).
move(15,((4,9),(3,9)),12).
move(15,((3,9),(3,8)),13).
move(15,((3,8),(3,7)),15).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.559s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 2.547s

Choices      : 1270    
Conflicts    : 49       (Analyzed: 49)
Restarts     : 0       
Model-Level  : 402.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 49       (Deleted: 0)
  Binary     : 11       (Ratio:  22.45%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 49       (Average Length:   43.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 49       (Average: 17.71 Max: 102 Sum:    868)
  Executed   : 49       (Average: 17.71 Max: 102 Sum:    868 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 575797   (Original: 514549)
  Choice     : 300     
Atoms        : 249974   (Original: 235264 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(5,9)),4).
move(1,((5,9),(6,9)),5).
move(1,((6,9),(7,9)),6).
move(1,((7,9),(7,8)),7).
move(1,((7,8),(7,9)),9).
move(1,((7,9),(6,9)),10).
move(1,((6,9),(5,9)),11).
move(1,((5,9),(4,9)),12).
move(1,((4,9),(4,8)),14).
move(1,((4,8),(4,7)),15).
move(1,((4,7),(4,6)),16).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(3,4)),6).
move(2,((3,4),(4,4)),7).
move(2,((4,4),(5,4)),8).
move(2,((5,4),(5,3)),9).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(5,9)),1).
move(4,((5,9),(6,9)),2).
move(4,((6,9),(6,8)),4).
move(4,((6,8),(6,7)),5).
move(4,((6,7),(6,6)),6).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(7,8)),2).
move(7,((7,8),(6,8)),3).
move(7,((6,8),(5,8)),4).
move(7,((5,8),(5,7)),5).
move(7,((5,7),(5,6)),6).
move(7,((5,6),(5,5)),7).
move(7,((5,5),(4,5)),8).
move(7,((4,5),(4,4)),9).
move(7,((4,4),(4,3)),10).
move(8,((7,9),(8,9)),1).
move(8,((8,9),(9,9)),2).
move(8,((9,9),(10,9)),3).
move(8,((10,9),(10,8)),4).
move(8,((10,8),(11,8)),5).
move(8,((11,8),(12,8)),6).
move(8,((12,8),(13,8)),7).
move(8,((13,8),(14,8)),8).
move(8,((14,8),(14,7)),9).
move(8,((14,7),(14,6)),12).
move(8,((14,6),(14,5)),13).
move(8,((14,5),(14,4)),14).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(8,8)),2).
move(9,((8,8),(7,8)),3).
move(9,((7,8),(7,7)),5).
move(9,((7,7),(6,7)),6).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),6).
move(10,((11,4),(12,4)),7).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),2).
move(11,((11,7),(12,7)),3).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(13,7)),3).
move(12,((13,7),(14,7)),12).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(14,8)),2).
move(13,((14,8),(15,8)),3).
move(13,((15,8),(15,7)),4).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(5,9)),9).
move(14,((5,9),(5,8)),10).
move(14,((5,8),(5,7)),11).
move(14,((5,7),(4,7)),12).
move(14,((4,7),(4,6)),13).
move(14,((4,6),(3,6)),14).
move(15,((15,9),(14,9)),1).
move(15,((14,9),(13,9)),2).
move(15,((13,9),(12,9)),3).
move(15,((12,9),(11,9)),4).
move(15,((11,9),(10,9)),5).
move(15,((10,9),(9,9)),6).
move(15,((9,9),(8,9)),7).
move(15,((8,9),(7,9)),8).
move(15,((7,9),(6,9)),9).
move(15,((6,9),(5,9)),10).
move(15,((5,9),(4,9)),11).
move(15,((4,9),(3,9)),12).
move(15,((3,9),(3,8)),13).
move(15,((3,8),(3,7)),15).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.606s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 2.609s

Choices      : 1270    
Conflicts    : 49       (Analyzed: 49)
Restarts     : 0       
Model-Level  : 402.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 49       (Deleted: 0)
  Binary     : 11       (Ratio:  22.45%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 49       (Average Length:   43.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 49       (Average: 17.71 Max: 102 Sum:    868)
  Executed   : 49       (Average: 17.71 Max: 102 Sum:    868 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 575797   (Original: 514549)
  Choice     : 300     
Atoms        : 249974   (Original: 235264 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(4,8)),14).
move(1,((4,8),(4,7)),15).
move(1,((4,7),(4,6)),16).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(3,3)),8).
move(2,((3,3),(4,3)),10).
move(2,((4,3),(5,3)),11).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(4,6)),4).
move(3,((4,6),(4,5)),5).
move(3,((4,5),(5,5)),6).
move(3,((5,5),(6,5)),8).
move(3,((6,5),(6,4)),9).
move(3,((6,4),(5,4)),11).
move(3,((5,4),(4,4)),12).
move(3,((4,4),(3,4)),13).
move(3,((3,4),(3,3)),14).
move(4,((4,9),(5,9)),1).
move(4,((5,9),(5,8)),2).
move(4,((5,8),(5,7)),3).
move(4,((5,7),(6,7)),4).
move(4,((6,7),(6,6)),5).
move(4,((6,6),(6,5)),7).
move(4,((6,5),(6,4)),8).
move(4,((6,4),(6,3)),9).
move(4,((6,3),(6,4)),11).
move(4,((6,4),(6,5)),12).
move(4,((6,5),(6,6)),13).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(5,((6,3),(7,3)),8).
move(5,((7,3),(6,3)),11).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(7,4)),6).
move(6,((7,4),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((8,9),(7,9)),1).
move(7,((7,9),(6,9)),2).
move(7,((6,9),(5,9)),3).
move(7,((5,9),(5,8)),5).
move(7,((5,8),(5,7)),6).
move(7,((5,7),(5,6)),7).
move(7,((5,6),(5,5)),8).
move(7,((5,5),(4,5)),9).
move(7,((4,5),(4,4)),10).
move(7,((4,4),(4,3)),11).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(8,8)),2).
move(8,((8,8),(9,8)),3).
move(8,((9,8),(10,8)),4).
move(8,((10,8),(11,8)),5).
move(8,((11,8),(12,8)),6).
move(8,((12,8),(12,7)),7).
move(8,((12,7),(12,6)),8).
move(8,((12,6),(13,6)),9).
move(8,((13,6),(13,5)),11).
move(8,((13,5),(13,4)),12).
move(8,((13,4),(14,4)),13).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(8,4)),6).
move(9,((8,4),(8,5)),7).
move(9,((8,5),(8,6)),8).
move(9,((8,6),(8,7)),10).
move(9,((8,7),(7,7)),11).
move(9,((7,7),(6,7)),12).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(11,5)),5).
move(10,((11,5),(12,5)),6).
move(10,((12,5),(12,4)),7).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),2).
move(11,((11,7),(11,6)),3).
move(11,((11,6),(11,5)),4).
move(11,((11,5),(12,5)),5).
move(11,((12,5),(12,6)),6).
move(11,((12,6),(13,6)),7).
move(11,((13,6),(13,7)),9).
move(11,((13,7),(14,7)),10).
move(11,((14,7),(13,7)),11).
move(11,((13,7),(12,7)),12).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(13,8)),2).
move(12,((13,8),(13,9)),3).
move(12,((13,9),(14,9)),5).
move(12,((14,9),(15,9)),6).
move(12,((15,9),(14,9)),9).
move(12,((14,9),(14,8)),10).
move(12,((14,8),(14,7)),11).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(14,8)),2).
move(13,((14,8),(15,8)),3).
move(13,((15,8),(15,7)),4).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(8,8)),7).
move(14,((8,8),(7,8)),8).
move(14,((7,8),(7,7)),9).
move(14,((7,7),(6,7)),10).
move(14,((6,7),(5,7)),11).
move(14,((5,7),(4,7)),12).
move(14,((4,7),(4,6)),13).
move(14,((4,6),(3,6)),14).
move(15,((15,9),(14,9)),1).
move(15,((14,9),(13,9)),2).
move(15,((13,9),(12,9)),3).
move(15,((12,9),(11,9)),4).
move(15,((11,9),(10,9)),5).
move(15,((10,9),(9,9)),6).
move(15,((9,9),(8,9)),7).
move(15,((8,9),(7,9)),8).
move(15,((7,9),(6,9)),9).
move(15,((6,9),(5,9)),10).
move(15,((5,9),(5,8)),11).
move(15,((5,8),(4,8)),12).
move(15,((4,8),(4,7)),13).
move(15,((4,7),(3,7)),14).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.809s (Solving: 0.17s 1st Model: 0.17s Unsat: 0.00s)
CPU Time     : 2.812s

Choices      : 3999    
Conflicts    : 91       (Analyzed: 91)
Restarts     : 0       
Model-Level  : 448.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 91       (Deleted: 0)
  Binary     : 17       (Ratio:  18.68%)
  Ternary    : 4        (Ratio:   4.40%)
  Conflict   : 91       (Average Length:   43.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 91       (Average: 39.02 Max: 285 Sum:   3551)
  Executed   : 91       (Average: 39.02 Max: 285 Sum:   3551 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 579509   (Original: 518291)
  Choice     : 300     
  Heuristic  : 3598     (Original: 3628)
Atoms        : 250088   (Original: 235378 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(1,5)),4).
move(1,((1,5),(1,4)),5).
move(1,((1,4),(1,3)),6).
move(1,((1,3),(1,2)),7).
move(1,((1,2),(1,1)),8).
move(1,((1,1),(2,1)),9).
move(1,((2,1),(2,2)),10).
move(1,((2,2),(2,3)),11).
move(1,((2,3),(2,4)),12).
move(1,((2,4),(3,4)),13).
move(1,((3,4),(4,4)),14).
move(1,((4,4),(4,5)),15).
move(1,((4,5),(4,6)),16).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(1,4)),6).
move(2,((1,4),(2,4)),9).
move(2,((2,4),(3,4)),10).
move(2,((3,4),(3,3)),11).
move(2,((3,3),(3,2)),12).
move(2,((3,2),(4,2)),13).
move(2,((4,2),(5,2)),14).
move(2,((5,2),(5,3)),15).
move(3,((3,9),(4,9)),1).
move(3,((4,9),(5,9)),2).
move(3,((5,9),(6,9)),3).
move(3,((6,9),(6,8)),4).
move(3,((6,8),(6,7)),5).
move(3,((6,7),(6,6)),6).
move(3,((6,6),(6,5)),7).
move(3,((6,5),(6,4)),9).
move(3,((6,4),(5,4)),10).
move(3,((5,4),(4,4)),11).
move(3,((4,4),(3,4)),12).
move(3,((3,4),(3,3)),13).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(5,7)),3).
move(4,((5,7),(6,7)),4).
move(4,((6,7),(7,7)),5).
move(4,((7,7),(7,6)),6).
move(4,((7,6),(6,6)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(5,2)),7).
move(5,((5,2),(5,3)),8).
move(5,((5,3),(4,3)),9).
move(5,((4,3),(5,3)),10).
move(5,((5,3),(6,3)),11).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),8).
move(6,((7,3),(8,3)),9).
move(7,((8,9),(7,9)),1).
move(7,((7,9),(6,9)),2).
move(7,((6,9),(6,8)),3).
move(7,((6,8),(5,8)),4).
move(7,((5,8),(4,8)),5).
move(7,((4,8),(4,7)),6).
move(7,((4,7),(4,6)),7).
move(7,((4,6),(4,5)),8).
move(7,((4,5),(4,4)),9).
move(7,((4,4),(4,3)),10).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(8,8)),2).
move(8,((8,8),(9,8)),3).
move(8,((9,8),(10,8)),4).
move(8,((10,8),(10,7)),5).
move(8,((10,7),(11,7)),6).
move(8,((11,7),(12,7)),7).
move(8,((12,7),(12,6)),8).
move(8,((12,6),(12,5)),9).
move(8,((12,5),(13,5)),10).
move(8,((13,5),(13,4)),11).
move(8,((13,4),(14,4)),12).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),3).
move(9,((7,9),(6,9)),4).
move(9,((6,9),(6,8)),5).
move(9,((6,8),(6,7)),6).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),6).
move(10,((11,4),(12,4)),8).
move(11,((11,9),(12,9)),1).
move(11,((12,9),(12,8)),2).
move(11,((12,8),(12,7)),8).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(12,6)),3).
move(12,((12,6),(13,6)),4).
move(12,((13,6),(14,6)),5).
move(12,((14,6),(14,7)),6).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(14,8)),2).
move(13,((14,8),(14,7)),4).
move(13,((14,7),(15,7)),5).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(5,9)),9).
move(14,((5,9),(4,9)),10).
move(14,((4,9),(3,9)),11).
move(14,((3,9),(3,8)),12).
move(14,((3,8),(3,7)),13).
move(14,((3,7),(3,6)),14).
move(15,((15,9),(14,9)),1).
move(15,((14,9),(13,9)),2).
move(15,((13,9),(12,9)),3).
move(15,((12,9),(11,9)),4).
move(15,((11,9),(10,9)),5).
move(15,((10,9),(9,9)),6).
move(15,((9,9),(8,9)),7).
move(15,((8,9),(7,9)),8).
move(15,((7,9),(6,9)),9).
move(15,((6,9),(5,9)),10).
move(15,((5,9),(4,9)),11).
move(15,((4,9),(3,9)),12).
move(15,((3,9),(3,8)),13).
move(15,((3,8),(3,7)),14).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.609s (Solving: 0.10s 1st Model: 0.10s Unsat: 0.00s)
CPU Time     : 2.609s

Choices      : 2322    
Conflicts    : 89       (Analyzed: 89)
Restarts     : 0       
Model-Level  : 594.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 89       (Deleted: 0)
  Binary     : 15       (Ratio:  16.85%)
  Ternary    : 3        (Ratio:   3.37%)
  Conflict   : 89       (Average Length:   41.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 89       (Average: 19.42 Max: 168 Sum:   1728)
  Executed   : 89       (Average: 19.42 Max: 168 Sum:   1728 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 576703   (Original: 515464)
  Choice     : 300     
  Heuristic  : 921      (Original: 930)
Atoms        : 249959   (Original: 235249 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(2,7)),4).
move(1,((2,7),(2,6)),5).
move(1,((2,6),(3,6)),6).
move(1,((3,6),(4,6)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(2,((3,3),(4,3)),8).
move(2,((4,3),(5,3)),9).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),8).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(5,6)),5).
move(4,((5,6),(6,6)),6).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(6,4)),7).
move(5,((6,4),(6,3)),8).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),8).
move(6,((7,3),(8,3)),9).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(7,8)),2).
move(7,((7,8),(6,8)),3).
move(7,((6,8),(5,8)),4).
move(7,((5,8),(5,7)),5).
move(7,((5,7),(5,6)),6).
move(7,((5,6),(5,5)),7).
move(7,((5,5),(5,4)),8).
move(7,((5,4),(4,4)),9).
move(7,((4,4),(4,3)),10).
move(8,((7,9),(8,9)),1).
move(8,((8,9),(9,9)),2).
move(8,((9,9),(10,9)),3).
move(8,((10,9),(10,8)),4).
move(8,((10,8),(11,8)),5).
move(8,((11,8),(12,8)),6).
move(8,((12,8),(13,8)),7).
move(8,((13,8),(13,7)),8).
move(8,((13,7),(13,6)),9).
move(8,((13,6),(13,5)),10).
move(8,((13,5),(14,5)),11).
move(8,((14,5),(14,4)),12).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(9,7)),2).
move(9,((9,7),(8,7)),3).
move(9,((8,7),(7,7)),5).
move(9,((7,7),(6,7)),6).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),6).
move(10,((11,4),(12,4)),7).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),2).
move(11,((11,7),(12,7)),3).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(13,7)),3).
move(12,((13,7),(14,7)),4).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(14,8)),2).
move(13,((14,8),(15,8)),3).
move(13,((15,8),(15,7)),4).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(5,9)),9).
move(14,((5,9),(5,8)),10).
move(14,((5,8),(5,7)),11).
move(14,((5,7),(4,7)),12).
move(14,((4,7),(3,7)),13).
move(14,((3,7),(3,6)),14).
move(15,((15,9),(14,9)),1).
move(15,((14,9),(13,9)),2).
move(15,((13,9),(12,9)),3).
move(15,((12,9),(11,9)),4).
move(15,((11,9),(10,9)),5).
move(15,((10,9),(9,9)),6).
move(15,((9,9),(8,9)),7).
move(15,((8,9),(7,9)),8).
move(15,((7,9),(6,9)),9).
move(15,((6,9),(5,9)),10).
move(15,((5,9),(4,9)),11).
move(15,((4,9),(3,9)),12).
move(15,((3,9),(3,8)),13).
move(15,((3,8),(3,7)),14).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.570s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 2.578s

Choices      : 616      (Domain: 103)
Conflicts    : 43       (Analyzed: 43)
Restarts     : 0       
Model-Level  : 262.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 43       (Deleted: 0)
  Binary     : 1        (Ratio:   2.33%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 43       (Average Length:   50.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 43       (Average:  8.23 Max:  50 Sum:    354)
  Executed   : 43       (Average:  8.23 Max:  50 Sum:    354 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 604034   (Original: 543030)
  Choice     : 300     
  Heuristic  : 28222    (Original: 28466)
Atoms        : 249989   (Original: 235279 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),4).
move(1,((4,9),(4,8)),5).
move(1,((4,8),(5,8)),6).
move(1,((5,8),(5,7)),7).
move(1,((5,7),(5,6)),8).
move(1,((5,6),(6,6)),9).
move(1,((6,6),(5,6)),10).
move(1,((5,6),(4,6)),11).
move(1,((4,6),(4,5)),12).
move(1,((4,5),(4,6)),14).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(2,((3,3),(4,3)),8).
move(2,((4,3),(5,3)),9).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),8).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(5,8)),2).
move(4,((5,8),(5,7)),3).
move(4,((5,7),(6,7)),5).
move(4,((6,7),(6,6)),10).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(6,4)),6).
move(5,((6,4),(6,3)),8).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),5).
move(6,((6,5),(7,5)),6).
move(6,((7,5),(8,5)),7).
move(6,((8,5),(8,4)),8).
move(6,((8,4),(8,3)),9).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(8,7)),2).
move(7,((8,7),(8,6)),3).
move(7,((8,6),(8,5)),5).
move(7,((8,5),(8,4)),6).
move(7,((8,4),(7,4)),7).
move(7,((7,4),(6,4)),8).
move(7,((6,4),(5,4)),9).
move(7,((5,4),(4,4)),10).
move(7,((4,4),(4,3)),11).
move(8,((7,9),(8,9)),1).
move(8,((8,9),(9,9)),2).
move(8,((9,9),(9,8)),3).
move(8,((9,8),(10,8)),4).
move(8,((10,8),(11,8)),5).
move(8,((11,8),(12,8)),6).
move(8,((12,8),(12,7)),7).
move(8,((12,7),(12,6)),8).
move(8,((12,6),(12,5)),9).
move(8,((12,5),(12,4)),10).
move(8,((12,4),(13,4)),11).
move(8,((13,4),(14,4)),12).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(8,8)),2).
move(9,((8,8),(7,8)),3).
move(9,((7,8),(6,8)),4).
move(9,((6,8),(6,7)),11).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),7).
move(10,((11,4),(12,4)),11).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),2).
move(11,((11,7),(12,7)),8).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(13,7)),3).
move(12,((13,7),(14,7)),4).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(14,8)),3).
move(13,((14,8),(15,8)),4).
move(13,((15,8),(15,7)),5).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(7,8)),8).
move(14,((7,8),(7,7)),9).
move(14,((7,7),(6,7)),10).
move(14,((6,7),(5,7)),11).
move(14,((5,7),(4,7)),12).
move(14,((4,7),(4,6)),13).
move(14,((4,6),(3,6)),14).
move(15,((15,9),(14,9)),1).
move(15,((14,9),(13,9)),2).
move(15,((13,9),(12,9)),3).
move(15,((12,9),(11,9)),4).
move(15,((11,9),(10,9)),5).
move(15,((10,9),(9,9)),6).
move(15,((9,9),(8,9)),7).
move(15,((8,9),(7,9)),8).
move(15,((7,9),(6,9)),9).
move(15,((6,9),(5,9)),10).
move(15,((5,9),(5,8)),11).
move(15,((5,8),(4,8)),12).
move(15,((4,8),(4,7)),13).
move(15,((4,7),(3,7)),14).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.616s (Solving: 0.10s 1st Model: 0.10s Unsat: 0.00s)
CPU Time     : 2.625s

Choices      : 1359    
Conflicts    : 63       (Analyzed: 63)
Restarts     : 0       
Model-Level  : 274.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 63       (Deleted: 0)
  Binary     : 14       (Ratio:  22.22%)
  Ternary    : 5        (Ratio:   7.94%)
  Conflict   : 63       (Average Length:   38.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 63       (Average: 17.22 Max: 141 Sum:   1085)
  Executed   : 63       (Average: 17.22 Max: 141 Sum:   1085 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 604004   (Original: 543000)
  Choice     : 300     
  Heuristic  : 28222    (Original: 28466)
Atoms        : 249959   (Original: 235249 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,9),(1,8)),3).
move(1,((1,8),(1,7)),4).
move(1,((1,7),(1,6)),5).
move(1,((1,6),(1,5)),6).
move(1,((1,5),(1,4)),7).
move(1,((1,4),(2,4)),8).
move(1,((2,4),(2,3)),9).
move(1,((2,3),(2,2)),11).
move(1,((2,2),(2,1)),12).
move(1,((2,1),(2,2)),13).
move(1,((2,2),(3,2)),14).
move(1,((3,2),(3,3)),15).
move(1,((3,3),(3,4)),16).
move(1,((3,4),(4,4)),17).
move(1,((4,4),(4,5)),18).
move(1,((4,5),(4,6)),20).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(3,3)),8).
move(2,((3,3),(3,2)),10).
move(2,((3,2),(3,1)),11).
move(2,((3,1),(3,2)),12).
move(2,((3,2),(3,3)),13).
move(2,((3,3),(3,4)),14).
move(2,((3,4),(2,4)),15).
move(2,((2,4),(3,4)),17).
move(2,((3,4),(4,4)),18).
move(2,((4,4),(5,4)),19).
move(2,((5,4),(5,3)),20).
move(3,((3,9),(2,9)),1).
move(3,((2,9),(2,8)),2).
move(3,((2,8),(2,7)),3).
move(3,((2,7),(2,6)),4).
move(3,((2,6),(2,5)),5).
move(3,((2,5),(3,5)),6).
move(3,((3,5),(3,4)),7).
move(3,((3,4),(2,4)),10).
move(3,((2,4),(2,3)),11).
move(3,((2,3),(2,2)),12).
move(3,((2,2),(1,2)),13).
move(3,((1,2),(2,2)),14).
move(3,((2,2),(3,2)),15).
move(3,((3,2),(2,2)),16).
move(3,((2,2),(2,3)),17).
move(3,((2,3),(2,4)),18).
move(3,((2,4),(2,3)),19).
move(3,((2,3),(3,3)),20).
move(4,((4,9),(3,9)),2).
move(4,((3,9),(3,8)),3).
move(4,((3,8),(3,7)),4).
move(4,((3,7),(3,6)),5).
move(4,((3,6),(2,6)),6).
move(4,((2,6),(2,5)),7).
move(4,((2,5),(2,4)),9).
move(4,((2,4),(1,4)),10).
move(4,((1,4),(1,3)),11).
move(4,((1,3),(2,3)),12).
move(4,((2,3),(3,3)),14).
move(4,((3,3),(4,3)),15).
move(4,((4,3),(5,3)),16).
move(4,((5,3),(6,3)),17).
move(4,((6,3),(6,4)),18).
move(4,((6,4),(6,5)),19).
move(4,((6,5),(6,6)),20).
move(5,((5,9),(5,8)),3).
move(5,((5,8),(5,7)),4).
move(5,((5,7),(5,6)),5).
move(5,((5,6),(5,5)),6).
move(5,((5,5),(5,4)),7).
move(5,((5,4),(5,3)),8).
move(5,((5,3),(5,2)),9).
move(5,((5,2),(5,1)),10).
move(5,((5,1),(5,2)),11).
move(5,((5,2),(5,3)),13).
move(5,((5,3),(5,4)),14).
move(5,((5,4),(6,4)),16).
move(5,((6,4),(5,4)),17).
move(5,((5,4),(5,3)),18).
move(5,((5,3),(6,3)),19).
move(6,((6,9),(6,8)),3).
move(6,((6,8),(6,7)),4).
move(6,((6,7),(6,6)),5).
move(6,((6,6),(6,5)),6).
move(6,((6,5),(6,4)),7).
move(6,((6,4),(6,3)),8).
move(6,((6,3),(6,2)),9).
move(6,((6,2),(6,1)),10).
move(6,((6,1),(5,1)),11).
move(6,((5,1),(4,1)),12).
move(6,((4,1),(4,2)),13).
move(6,((4,2),(4,3)),14).
move(6,((4,3),(5,3)),15).
move(6,((5,3),(6,3)),16).
move(6,((6,3),(6,4)),17).
move(6,((6,4),(7,4)),18).
move(6,((7,4),(8,4)),19).
move(6,((8,4),(8,3)),20).
move(7,((8,9),(8,8)),3).
move(7,((8,8),(8,7)),4).
move(7,((8,7),(8,6)),5).
move(7,((8,6),(8,5)),6).
move(7,((8,5),(8,4)),7).
move(7,((8,4),(8,3)),8).
move(7,((8,3),(8,2)),9).
move(7,((8,2),(8,1)),10).
move(7,((8,1),(8,2)),11).
move(7,((8,2),(8,3)),12).
move(7,((8,3),(8,4)),13).
move(7,((8,4),(8,5)),14).
move(7,((8,5),(7,5)),15).
move(7,((7,5),(6,5)),16).
move(7,((6,5),(5,5)),17).
move(7,((5,5),(5,4)),18).
move(7,((5,4),(5,3)),19).
move(7,((5,3),(4,3)),20).
move(8,((7,9),(7,8)),3).
move(8,((7,8),(7,7)),4).
move(8,((7,7),(7,6)),5).
move(8,((7,6),(7,5)),6).
move(8,((7,5),(7,4)),7).
move(8,((7,4),(7,3)),8).
move(8,((7,3),(7,2)),9).
move(8,((7,2),(7,1)),10).
move(8,((7,1),(7,2)),11).
move(8,((7,2),(8,2)),12).
move(8,((8,2),(9,2)),13).
move(8,((9,2),(10,2)),14).
move(8,((10,2),(11,2)),15).
move(8,((11,2),(12,2)),16).
move(8,((12,2),(13,2)),17).
move(8,((13,2),(14,2)),18).
move(8,((14,2),(14,3)),19).
move(8,((14,3),(14,4)),20).
move(9,((9,9),(9,8)),3).
move(9,((9,8),(9,7)),4).
move(9,((9,7),(9,6)),5).
move(9,((9,6),(9,5)),6).
move(9,((9,5),(9,4)),7).
move(9,((9,4),(9,3)),8).
move(9,((9,3),(9,2)),9).
move(9,((9,2),(9,1)),10).
move(9,((9,1),(9,2)),11).
move(9,((9,2),(9,3)),12).
move(9,((9,3),(8,3)),13).
move(9,((8,3),(7,3)),14).
move(9,((7,3),(7,4)),15).
move(9,((7,4),(7,5)),16).
move(9,((7,5),(7,6)),17).
move(9,((7,6),(7,7)),18).
move(9,((7,7),(6,7)),20).
move(10,((10,9),(10,8)),3).
move(10,((10,8),(10,7)),4).
move(10,((10,7),(10,6)),5).
move(10,((10,6),(10,5)),6).
move(10,((10,5),(10,4)),7).
move(10,((10,4),(10,3)),8).
move(10,((10,3),(10,2)),9).
move(10,((10,2),(10,1)),10).
move(10,((10,1),(10,2)),11).
move(10,((10,2),(10,3)),12).
move(10,((10,3),(9,3)),13).
move(10,((9,3),(8,3)),14).
move(10,((8,3),(9,3)),15).
move(10,((9,3),(10,3)),16).
move(10,((10,3),(11,3)),17).
move(10,((11,3),(12,3)),18).
move(10,((12,3),(12,4)),19).
move(11,((11,9),(11,8)),3).
move(11,((11,8),(11,7)),4).
move(11,((11,7),(11,6)),5).
move(11,((11,6),(11,5)),6).
move(11,((11,5),(11,4)),7).
move(11,((11,4),(11,3)),8).
move(11,((11,3),(11,2)),9).
move(11,((11,2),(11,1)),10).
move(11,((11,1),(11,2)),11).
move(11,((11,2),(11,3)),12).
move(11,((11,3),(11,4)),13).
move(11,((11,4),(12,4)),14).
move(11,((12,4),(11,4)),15).
move(11,((11,4),(11,5)),16).
move(11,((11,5),(11,6)),17).
move(11,((11,6),(11,7)),18).
move(11,((11,7),(12,7)),20).
move(12,((12,9),(12,8)),2).
move(12,((12,8),(13,8)),4).
move(12,((13,8),(14,8)),5).
move(12,((14,8),(15,8)),6).
move(12,((15,8),(16,8)),7).
move(12,((16,8),(16,7)),8).
move(12,((16,7),(17,7)),9).
move(12,((17,7),(18,7)),10).
move(12,((18,7),(18,6)),11).
move(12,((18,6),(17,6)),12).
move(12,((17,6),(16,6)),13).
move(12,((16,6),(16,5)),14).
move(12,((16,5),(16,6)),15).
move(12,((16,6),(16,7)),16).
move(12,((16,7),(15,7)),17).
move(12,((15,7),(14,7)),18).
move(12,((14,7),(14,8)),19).
move(12,((14,8),(14,7)),20).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(13,9)),2).
move(13,((13,9),(13,8)),3).
move(13,((13,8),(13,7)),4).
move(13,((13,7),(13,6)),6).
move(13,((13,6),(13,7)),7).
move(13,((13,7),(14,7)),8).
move(13,((14,7),(15,7)),9).
move(13,((15,7),(16,7)),10).
move(13,((16,7),(17,7)),11).
move(13,((17,7),(17,8)),12).
move(13,((17,8),(18,8)),13).
move(13,((18,8),(18,7)),15).
move(13,((18,7),(18,8)),16).
move(13,((18,8),(17,8)),17).
move(13,((17,8),(17,7)),18).
move(13,((17,7),(16,7)),19).
move(13,((16,7),(15,7)),20).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(7,9)),9).
move(14,((7,9),(6,9)),10).
move(14,((6,9),(5,9)),11).
move(14,((5,9),(5,8)),12).
move(14,((5,8),(5,7)),13).
move(14,((5,7),(4,7)),14).
move(14,((4,7),(4,6)),15).
move(14,((4,6),(4,5)),16).
move(14,((4,5),(3,5)),17).
move(14,((3,5),(2,5)),18).
move(14,((2,5),(2,6)),19).
move(14,((2,6),(3,6)),20).
move(15,((15,9),(14,9)),2).
move(15,((14,9),(13,9)),3).
move(15,((13,9),(12,9)),4).
move(15,((12,9),(12,8)),5).
move(15,((12,8),(11,8)),6).
move(15,((11,8),(10,8)),7).
move(15,((10,8),(9,8)),8).
move(15,((9,8),(8,8)),9).
move(15,((8,8),(7,8)),10).
move(15,((7,8),(6,8)),11).
move(15,((6,8),(6,7)),12).
move(15,((6,7),(6,6)),13).
move(15,((6,6),(5,6)),15).
move(15,((5,6),(4,6)),16).
move(15,((4,6),(3,6)),17).
move(15,((3,6),(3,5)),18).
move(15,((3,5),(3,6)),19).
move(15,((3,6),(3,7)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.667s (Solving: 0.13s 1st Model: 0.13s Unsat: 0.00s)
CPU Time     : 2.672s

Choices      : 1020     (Domain: 1020)
Conflicts    : 68       (Analyzed: 68)
Restarts     : 0       
Model-Level  : 214.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 68       (Deleted: 0)
  Binary     : 20       (Ratio:  29.41%)
  Ternary    : 4        (Ratio:   5.88%)
  Conflict   : 68       (Average Length:   15.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 68       (Average: 11.85 Max:  84 Sum:    806)
  Executed   : 68       (Average: 11.85 Max:  84 Sum:    806 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 604004   (Original: 543000)
  Choice     : 300     
  Heuristic  : 28222    (Original: 28466)
Atoms        : 249959   (Original: 235249 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

