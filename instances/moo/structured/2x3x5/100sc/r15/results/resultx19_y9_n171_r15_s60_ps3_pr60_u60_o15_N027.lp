%%%%%
%Standard
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(5,9)),4).
move(1,((5,9),(6,9)),5).
move(1,((6,9),(6,8)),6).
move(1,((6,8),(5,8)),7).
move(1,((5,8),(5,7)),8).
move(1,((5,7),(5,6)),9).
move(1,((5,6),(4,6)),14).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(3,5)),6).
move(2,((3,5),(4,5)),7).
move(2,((4,5),(5,5)),8).
move(2,((5,5),(5,4)),9).
move(2,((5,4),(5,3)),10).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(5,8)),2).
move(4,((5,8),(5,7)),5).
move(4,((5,7),(5,6)),6).
move(4,((5,6),(6,6)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(8,7)),2).
move(7,((8,7),(8,6)),3).
move(7,((8,6),(8,5)),4).
move(7,((8,5),(7,5)),5).
move(7,((7,5),(6,5)),6).
move(7,((6,5),(5,5)),7).
move(7,((5,5),(5,4)),8).
move(7,((5,4),(5,3)),9).
move(7,((5,3),(4,3)),10).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(8,8)),2).
move(8,((8,8),(9,8)),3).
move(8,((9,8),(10,8)),4).
move(8,((10,8),(11,8)),5).
move(8,((11,8),(12,8)),6).
move(8,((12,8),(13,8)),7).
move(8,((13,8),(14,8)),8).
move(8,((14,8),(14,7)),9).
move(8,((14,7),(14,6)),12).
move(8,((14,6),(14,5)),13).
move(8,((14,5),(14,4)),14).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(6,9)),3).
move(9,((6,9),(6,8)),4).
move(9,((6,8),(6,7)),6).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),6).
move(10,((11,4),(12,4)),7).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),2).
move(11,((11,7),(11,8)),3).
move(11,((11,8),(12,8)),4).
move(11,((12,8),(12,7)),5).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(12,6)),3).
move(12,((12,6),(13,6)),5).
move(12,((13,6),(13,7)),6).
move(12,((13,7),(14,7)),12).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(13,7)),2).
move(13,((13,7),(13,6)),3).
move(13,((13,6),(14,6)),4).
move(13,((14,6),(15,6)),5).
move(13,((15,6),(15,7)),6).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(5,9)),9).
move(14,((5,9),(5,8)),10).
move(14,((5,8),(5,7)),11).
move(14,((5,7),(4,7)),12).
move(14,((4,7),(4,6)),13).
move(14,((4,6),(3,6)),14).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(15,7)),2).
move(15,((15,7),(15,6)),3).
move(15,((15,6),(16,6)),4).
move(15,((16,6),(17,6)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.561s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 2.562s

Choices      : 1270    
Conflicts    : 57       (Analyzed: 57)
Restarts     : 0       
Model-Level  : 446.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 57       (Deleted: 0)
  Binary     : 15       (Ratio:  26.32%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 57       (Average Length:   33.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 57       (Average: 14.46 Max:  78 Sum:    824)
  Executed   : 57       (Average: 14.46 Max:  78 Sum:    824 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 575569   (Original: 514321)
  Choice     : 300     
Atoms        : 249746   (Original: 235036 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(5,9)),4).
move(1,((5,9),(5,8)),7).
move(1,((5,8),(5,7)),8).
move(1,((5,7),(5,6)),9).
move(1,((5,6),(4,6)),14).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(3,5)),5).
move(2,((3,5),(4,5)),6).
move(2,((4,5),(5,5)),8).
move(2,((5,5),(5,4)),9).
move(2,((5,4),(5,3)),10).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(5,6)),5).
move(4,((5,6),(6,6)),6).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((8,9),(7,9)),1).
move(7,((7,9),(6,9)),2).
move(7,((6,9),(5,9)),3).
move(7,((5,9),(5,8)),4).
move(7,((5,8),(5,7)),5).
move(7,((5,7),(5,6)),6).
move(7,((5,6),(5,5)),7).
move(7,((5,5),(5,4)),8).
move(7,((5,4),(5,3)),9).
move(7,((5,3),(4,3)),10).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(8,8)),2).
move(8,((8,8),(9,8)),3).
move(8,((9,8),(10,8)),4).
move(8,((10,8),(11,8)),5).
move(8,((11,8),(12,8)),6).
move(8,((12,8),(13,8)),7).
move(8,((13,8),(14,8)),8).
move(8,((14,8),(14,7)),9).
move(8,((14,7),(14,6)),12).
move(8,((14,6),(14,5)),13).
move(8,((14,5),(14,4)),14).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(6,9)),3).
move(9,((6,9),(6,8)),4).
move(9,((6,8),(6,7)),5).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),6).
move(10,((11,4),(12,4)),7).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),2).
move(11,((11,7),(12,7)),4).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(13,7)),3).
move(12,((13,7),(14,7)),12).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(13,7)),2).
move(13,((13,7),(13,6)),3).
move(13,((13,6),(14,6)),4).
move(13,((14,6),(15,6)),5).
move(13,((15,6),(15,7)),6).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(5,9)),9).
move(14,((5,9),(5,8)),10).
move(14,((5,8),(5,7)),11).
move(14,((5,7),(4,7)),12).
move(14,((4,7),(4,6)),13).
move(14,((4,6),(3,6)),14).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(15,7)),2).
move(15,((15,7),(15,6)),3).
move(15,((15,6),(16,6)),5).
move(15,((16,6),(17,6)),6).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.621s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 2.609s

Choices      : 1168    
Conflicts    : 46       (Analyzed: 46)
Restarts     : 0       
Model-Level  : 454.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 46       (Deleted: 0)
  Binary     : 10       (Ratio:  21.74%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 46       (Average Length:   39.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 46       (Average: 15.52 Max:  57 Sum:    714)
  Executed   : 46       (Average: 15.52 Max:  57 Sum:    714 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 575835   (Original: 514587)
  Choice     : 300     
  Heuristic  : 82      
Atoms        : 249930   (Original: 235220 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(5,9)),4).
move(1,((5,9),(6,9)),5).
move(1,((6,9),(6,8)),6).
move(1,((6,8),(5,8)),7).
move(1,((5,8),(5,7)),8).
move(1,((5,7),(5,6)),9).
move(1,((5,6),(4,6)),14).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(3,5)),6).
move(2,((3,5),(4,5)),7).
move(2,((4,5),(5,5)),8).
move(2,((5,5),(5,4)),9).
move(2,((5,4),(5,3)),10).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(5,8)),2).
move(4,((5,8),(5,7)),5).
move(4,((5,7),(5,6)),6).
move(4,((5,6),(6,6)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(8,7)),2).
move(7,((8,7),(8,6)),3).
move(7,((8,6),(8,5)),4).
move(7,((8,5),(7,5)),5).
move(7,((7,5),(6,5)),6).
move(7,((6,5),(5,5)),7).
move(7,((5,5),(5,4)),8).
move(7,((5,4),(5,3)),9).
move(7,((5,3),(4,3)),10).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(8,8)),2).
move(8,((8,8),(9,8)),3).
move(8,((9,8),(10,8)),4).
move(8,((10,8),(11,8)),5).
move(8,((11,8),(12,8)),6).
move(8,((12,8),(13,8)),7).
move(8,((13,8),(14,8)),8).
move(8,((14,8),(14,7)),9).
move(8,((14,7),(14,6)),12).
move(8,((14,6),(14,5)),13).
move(8,((14,5),(14,4)),14).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(6,9)),3).
move(9,((6,9),(6,8)),4).
move(9,((6,8),(6,7)),6).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),6).
move(10,((11,4),(12,4)),7).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),2).
move(11,((11,7),(11,8)),3).
move(11,((11,8),(12,8)),4).
move(11,((12,8),(12,7)),5).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(12,6)),3).
move(12,((12,6),(13,6)),5).
move(12,((13,6),(13,7)),6).
move(12,((13,7),(14,7)),12).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(13,7)),2).
move(13,((13,7),(13,6)),3).
move(13,((13,6),(14,6)),4).
move(13,((14,6),(15,6)),5).
move(13,((15,6),(15,7)),6).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(5,9)),9).
move(14,((5,9),(5,8)),10).
move(14,((5,8),(5,7)),11).
move(14,((5,7),(4,7)),12).
move(14,((4,7),(4,6)),13).
move(14,((4,6),(3,6)),14).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(15,7)),2).
move(15,((15,7),(15,6)),3).
move(15,((15,6),(16,6)),4).
move(15,((16,6),(17,6)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.556s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 2.562s

Choices      : 1268    
Conflicts    : 57       (Analyzed: 57)
Restarts     : 0       
Model-Level  : 446.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 57       (Deleted: 0)
  Binary     : 15       (Ratio:  26.32%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 57       (Average Length:   33.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 57       (Average: 14.42 Max:  78 Sum:    822)
  Executed   : 57       (Average: 14.42 Max:  78 Sum:    822 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 575768   (Original: 514520)
  Choice     : 300     
Atoms        : 249945   (Original: 235235 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,9),(2,9)),1).
move(1,((2,9),(3,9)),2).
move(1,((3,9),(4,9)),3).
move(1,((4,9),(5,9)),4).
move(1,((5,9),(6,9)),5).
move(1,((6,9),(6,8)),6).
move(1,((6,8),(5,8)),7).
move(1,((5,8),(5,7)),8).
move(1,((5,7),(5,6)),9).
move(1,((5,6),(4,6)),14).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(3,5)),6).
move(2,((3,5),(4,5)),7).
move(2,((4,5),(5,5)),8).
move(2,((5,5),(5,4)),9).
move(2,((5,4),(5,3)),10).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(5,8)),2).
move(4,((5,8),(5,7)),5).
move(4,((5,7),(5,6)),6).
move(4,((5,6),(6,6)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(8,7)),2).
move(7,((8,7),(8,6)),3).
move(7,((8,6),(8,5)),4).
move(7,((8,5),(7,5)),5).
move(7,((7,5),(6,5)),6).
move(7,((6,5),(5,5)),7).
move(7,((5,5),(5,4)),8).
move(7,((5,4),(5,3)),9).
move(7,((5,3),(4,3)),10).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(8,8)),2).
move(8,((8,8),(9,8)),3).
move(8,((9,8),(10,8)),4).
move(8,((10,8),(11,8)),5).
move(8,((11,8),(12,8)),6).
move(8,((12,8),(13,8)),7).
move(8,((13,8),(14,8)),8).
move(8,((14,8),(14,7)),9).
move(8,((14,7),(14,6)),12).
move(8,((14,6),(14,5)),13).
move(8,((14,5),(14,4)),14).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(6,9)),3).
move(9,((6,9),(6,8)),4).
move(9,((6,8),(6,7)),6).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),6).
move(10,((11,4),(12,4)),7).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),2).
move(11,((11,7),(11,8)),3).
move(11,((11,8),(12,8)),4).
move(11,((12,8),(12,7)),5).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(12,6)),3).
move(12,((12,6),(13,6)),5).
move(12,((13,6),(13,7)),6).
move(12,((13,7),(14,7)),12).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(13,7)),2).
move(13,((13,7),(13,6)),3).
move(13,((13,6),(14,6)),4).
move(13,((14,6),(15,6)),5).
move(13,((15,6),(15,7)),6).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(5,9)),9).
move(14,((5,9),(5,8)),10).
move(14,((5,8),(5,7)),11).
move(14,((5,7),(4,7)),12).
move(14,((4,7),(4,6)),13).
move(14,((4,6),(3,6)),14).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(15,7)),2).
move(15,((15,7),(15,6)),3).
move(15,((15,6),(16,6)),4).
move(15,((16,6),(17,6)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.551s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 2.547s

Choices      : 1268    
Conflicts    : 57       (Analyzed: 57)
Restarts     : 0       
Model-Level  : 446.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 57       (Deleted: 0)
  Binary     : 15       (Ratio:  26.32%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 57       (Average Length:   33.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 57       (Average: 14.42 Max:  78 Sum:    822)
  Executed   : 57       (Average: 14.42 Max:  78 Sum:    822 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 575768   (Original: 514520)
  Choice     : 300     
Atoms        : 249945   (Original: 235235 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,9),(2,9)),10).
move(1,((2,9),(3,9)),11).
move(1,((3,9),(4,9)),12).
move(1,((4,9),(4,8)),14).
move(1,((4,8),(4,7)),15).
move(1,((4,7),(4,6)),16).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(2,((3,3),(4,3)),8).
move(2,((4,3),(5,3)),9).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(3,3)),9).
move(4,((4,9),(5,9)),2).
move(4,((5,9),(5,8)),3).
move(4,((5,8),(4,8)),4).
move(4,((4,8),(4,7)),5).
move(4,((4,7),(4,6)),6).
move(4,((4,6),(5,6)),7).
move(4,((5,6),(6,6)),8).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(7,3)),7).
move(6,((7,3),(8,3)),8).
move(7,((8,9),(7,9)),1).
move(7,((7,9),(7,8)),2).
move(7,((7,8),(6,8)),4).
move(7,((6,8),(5,8)),5).
move(7,((5,8),(4,8)),6).
move(7,((4,8),(4,7)),7).
move(7,((4,7),(4,6)),8).
move(7,((4,6),(4,5)),9).
move(7,((4,5),(4,4)),10).
move(7,((4,4),(4,3)),11).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(7,7)),2).
move(8,((7,7),(7,6)),3).
move(8,((7,6),(8,6)),4).
move(8,((8,6),(9,6)),5).
move(8,((9,6),(10,6)),6).
move(8,((10,6),(11,6)),7).
move(8,((11,6),(12,6)),8).
move(8,((12,6),(12,5)),9).
move(8,((12,5),(13,5)),10).
move(8,((13,5),(14,5)),11).
move(8,((14,5),(14,4)),12).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(6,9)),3).
move(9,((6,9),(5,9)),4).
move(9,((5,9),(5,8)),6).
move(9,((5,8),(5,7)),7).
move(9,((5,7),(6,7)),11).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(11,5)),5).
move(10,((11,5),(11,4)),6).
move(10,((11,4),(12,4)),7).
move(11,((11,9),(10,9)),1).
move(11,((10,9),(10,8)),2).
move(11,((10,8),(9,8)),3).
move(11,((9,8),(10,8)),4).
move(11,((10,8),(11,8)),5).
move(11,((11,8),(11,7)),7).
move(11,((11,7),(12,7)),8).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(13,8)),2).
move(12,((13,8),(14,8)),3).
move(12,((14,8),(15,8)),4).
move(12,((15,8),(14,8)),5).
move(12,((14,8),(14,7)),6).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(13,7)),2).
move(13,((13,7),(13,6)),3).
move(13,((13,6),(13,5)),4).
move(13,((13,5),(14,5)),5).
move(13,((14,5),(15,5)),6).
move(13,((15,5),(15,6)),7).
move(13,((15,6),(15,7)),8).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(5,9)),9).
move(14,((5,9),(4,9)),10).
move(14,((4,9),(4,8)),11).
move(14,((4,8),(4,7)),12).
move(14,((4,7),(4,6)),13).
move(14,((4,6),(3,6)),14).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(16,8)),2).
move(15,((16,8),(16,7)),4).
move(15,((16,7),(15,7)),5).
move(15,((15,7),(15,6)),6).
move(15,((15,6),(16,6)),7).
move(15,((16,6),(17,6)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.566s (Solving: 0.09s 1st Model: 0.09s Unsat: 0.00s)
CPU Time     : 2.562s

Choices      : 1772    
Conflicts    : 87       (Analyzed: 87)
Restarts     : 0       
Model-Level  : 470.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 87       (Deleted: 0)
  Binary     : 14       (Ratio:  16.09%)
  Ternary    : 9        (Ratio:  10.34%)
  Conflict   : 87       (Average Length:   28.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 87       (Average: 14.97 Max: 111 Sum:   1302)
  Executed   : 87       (Average: 14.97 Max: 111 Sum:   1302 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 578731   (Original: 517513)
  Choice     : 300     
  Heuristic  : 2858     (Original: 2888)
Atoms        : 250050   (Original: 235340 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(1,6)),3).
move(1,((1,6),(2,6)),4).
move(1,((2,6),(3,6)),5).
move(1,((3,6),(4,6)),6).
move(1,((4,6),(5,6)),7).
move(1,((5,6),(4,6)),8).
move(2,((2,9),(3,9)),1).
move(2,((3,9),(3,8)),2).
move(2,((3,8),(3,7)),3).
move(2,((3,7),(4,7)),4).
move(2,((4,7),(5,7)),5).
move(2,((5,7),(6,7)),6).
move(2,((6,7),(5,7)),9).
move(2,((5,7),(5,6)),10).
move(2,((5,6),(5,5)),11).
move(2,((5,5),(5,4)),12).
move(2,((5,4),(5,3)),13).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,4)),9).
move(3,((3,4),(3,3)),10).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(5,6)),5).
move(4,((5,6),(6,6)),6).
move(4,((6,6),(6,5)),10).
move(4,((6,5),(6,6)),11).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(7,2)),8).
move(6,((7,2),(7,3)),9).
move(6,((7,3),(8,3)),10).
move(7,((8,9),(7,9)),1).
move(7,((7,9),(6,9)),2).
move(7,((6,9),(5,9)),3).
move(7,((5,9),(4,9)),4).
move(7,((4,9),(4,8)),5).
move(7,((4,8),(4,7)),6).
move(7,((4,7),(4,6)),7).
move(7,((4,6),(4,5)),8).
move(7,((4,5),(4,4)),9).
move(7,((4,4),(4,3)),10).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(8,8)),2).
move(8,((8,8),(9,8)),3).
move(8,((9,8),(10,8)),4).
move(8,((10,8),(11,8)),5).
move(8,((11,8),(12,8)),6).
move(8,((12,8),(12,7)),7).
move(8,((12,7),(12,6)),8).
move(8,((12,6),(12,5)),9).
move(8,((12,5),(13,5)),10).
move(8,((13,5),(13,4)),11).
move(8,((13,4),(14,4)),12).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(6,9)),3).
move(9,((6,9),(6,8)),4).
move(9,((6,8),(6,7)),9).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(10,3)),6).
move(10,((10,3),(11,3)),7).
move(10,((11,3),(11,4)),8).
move(10,((11,4),(12,4)),9).
move(11,((11,9),(12,9)),1).
move(11,((12,9),(12,8)),2).
move(11,((12,8),(12,9)),3).
move(11,((12,9),(12,8)),7).
move(11,((12,8),(12,7)),8).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(13,7)),4).
move(12,((13,7),(14,7)),5).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(14,8)),2).
move(13,((14,8),(14,7)),4).
move(13,((14,7),(15,7)),5).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(5,9)),9).
move(14,((5,9),(4,9)),10).
move(14,((4,9),(3,9)),11).
move(14,((3,9),(3,8)),12).
move(14,((3,8),(3,7)),13).
move(14,((3,7),(3,6)),14).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(15,7)),2).
move(15,((15,7),(16,7)),3).
move(15,((16,7),(17,7)),4).
move(15,((17,7),(17,6)),5).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.624s (Solving: 0.11s 1st Model: 0.11s Unsat: 0.00s)
CPU Time     : 2.625s

Choices      : 3613    
Conflicts    : 69       (Analyzed: 69)
Restarts     : 0       
Model-Level  : 544.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 69       (Deleted: 0)
  Binary     : 18       (Ratio:  26.09%)
  Ternary    : 2        (Ratio:   2.90%)
  Conflict   : 69       (Average Length:   35.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 69       (Average: 44.48 Max: 344 Sum:   3069)
  Executed   : 69       (Average: 44.48 Max: 344 Sum:   3069 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 576487   (Original: 515246)
  Choice     : 300     
  Heuristic  : 734      (Original: 741)
Atoms        : 249930   (Original: 235220 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,9),(1,8)),1).
move(1,((1,8),(1,7)),2).
move(1,((1,7),(2,7)),4).
move(1,((2,7),(2,6)),5).
move(1,((2,6),(3,6)),6).
move(1,((3,6),(4,6)),7).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(3,4)),6).
move(2,((3,4),(4,4)),7).
move(2,((4,4),(4,3)),8).
move(2,((4,3),(5,3)),9).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(4,((4,9),(4,8)),1).
move(4,((4,8),(4,7)),2).
move(4,((4,7),(4,6)),3).
move(4,((4,6),(4,5)),4).
move(4,((4,5),(5,5)),5).
move(4,((5,5),(6,5)),6).
move(4,((6,5),(6,6)),7).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(7,7)),4).
move(6,((7,7),(7,6)),5).
move(6,((7,6),(8,6)),6).
move(6,((8,6),(8,5)),7).
move(6,((8,5),(8,4)),8).
move(6,((8,4),(8,3)),9).
move(7,((8,9),(7,9)),1).
move(7,((7,9),(6,9)),2).
move(7,((6,9),(5,9)),3).
move(7,((5,9),(5,8)),4).
move(7,((5,8),(5,7)),5).
move(7,((5,7),(5,6)),6).
move(7,((5,6),(5,5)),7).
move(7,((5,5),(5,4)),8).
move(7,((5,4),(4,4)),9).
move(7,((4,4),(4,3)),10).
move(8,((7,9),(7,8)),1).
move(8,((7,8),(8,8)),2).
move(8,((8,8),(9,8)),3).
move(8,((9,8),(10,8)),4).
move(8,((10,8),(10,7)),5).
move(8,((10,7),(10,6)),6).
move(8,((10,6),(11,6)),7).
move(8,((11,6),(12,6)),8).
move(8,((12,6),(13,6)),9).
move(8,((13,6),(13,5)),10).
move(8,((13,5),(14,5)),11).
move(8,((14,5),(14,4)),12).
move(9,((9,9),(8,9)),1).
move(9,((8,9),(7,9)),2).
move(9,((7,9),(6,9)),3).
move(9,((6,9),(6,8)),4).
move(9,((6,8),(6,7)),5).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(10,4)),5).
move(10,((10,4),(11,4)),6).
move(10,((11,4),(12,4)),7).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),2).
move(11,((11,7),(12,7)),3).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(12,7)),2).
move(12,((12,7),(13,7)),3).
move(12,((13,7),(14,7)),4).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(13,7)),2).
move(13,((13,7),(14,7)),3).
move(13,((14,7),(15,7)),4).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(7,9)),7).
move(14,((7,9),(6,9)),8).
move(14,((6,9),(5,9)),9).
move(14,((5,9),(5,8)),10).
move(14,((5,8),(5,7)),11).
move(14,((5,7),(4,7)),12).
move(14,((4,7),(3,7)),13).
move(14,((3,7),(3,6)),14).
move(15,((15,9),(15,8)),1).
move(15,((15,8),(15,7)),2).
move(15,((15,7),(16,7)),3).
move(15,((16,7),(17,7)),4).
move(15,((17,7),(17,6)),5).
move(15,((17,6),(17,7)),6).
move(15,((17,7),(17,6)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.734s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 2.734s

Choices      : 1057     (Domain: 131)
Conflicts    : 49       (Analyzed: 49)
Restarts     : 0       
Model-Level  : 683.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 49       (Deleted: 0)
  Binary     : 2        (Ratio:   4.08%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 49       (Average Length:   42.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 49       (Average:  7.63 Max:  38 Sum:    374)
  Executed   : 49       (Average:  7.63 Max:  38 Sum:    374 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 604005   (Original: 543001)
  Choice     : 300     
  Heuristic  : 28222    (Original: 28466)
Atoms        : 249960   (Original: 235250 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,9),(2,9)),2).
move(1,((2,9),(2,8)),3).
move(1,((2,8),(3,8)),4).
move(1,((3,8),(4,8)),5).
move(1,((4,8),(5,8)),6).
move(1,((5,8),(5,7)),7).
move(1,((5,7),(5,6)),8).
move(1,((5,6),(5,5)),9).
move(1,((5,5),(4,5)),10).
move(1,((4,5),(4,6)),14).
move(2,((2,9),(2,8)),1).
move(2,((2,8),(2,7)),2).
move(2,((2,7),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),7).
move(2,((3,3),(4,3)),8).
move(2,((4,3),(5,3)),9).
move(3,((3,9),(3,8)),1).
move(3,((3,8),(3,7)),2).
move(3,((3,7),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),8).
move(4,((4,9),(5,9)),2).
move(4,((5,9),(5,8)),3).
move(4,((5,8),(6,8)),4).
move(4,((6,8),(6,7)),5).
move(4,((6,7),(6,6)),6).
move(5,((5,9),(5,8)),1).
move(5,((5,8),(5,7)),2).
move(5,((5,7),(5,6)),3).
move(5,((5,6),(5,5)),4).
move(5,((5,5),(5,4)),5).
move(5,((5,4),(5,3)),6).
move(5,((5,3),(6,3)),8).
move(6,((6,9),(6,8)),1).
move(6,((6,8),(6,7)),2).
move(6,((6,7),(6,6)),3).
move(6,((6,6),(6,5)),5).
move(6,((6,5),(6,4)),6).
move(6,((6,4),(7,4)),7).
move(6,((7,4),(8,4)),8).
move(6,((8,4),(8,3)),9).
move(7,((8,9),(8,8)),1).
move(7,((8,8),(7,8)),2).
move(7,((7,8),(7,7)),4).
move(7,((7,7),(7,6)),5).
move(7,((7,6),(7,5)),6).
move(7,((7,5),(6,5)),7).
move(7,((6,5),(6,4)),8).
move(7,((6,4),(5,4)),9).
move(7,((5,4),(4,4)),10).
move(7,((4,4),(4,3)),11).
move(8,((7,9),(8,9)),1).
move(8,((8,9),(9,9)),2).
move(8,((9,9),(10,9)),3).
move(8,((10,9),(10,8)),4).
move(8,((10,8),(11,8)),5).
move(8,((11,8),(12,8)),6).
move(8,((12,8),(12,7)),7).
move(8,((12,7),(12,6)),8).
move(8,((12,6),(12,5)),9).
move(8,((12,5),(13,5)),10).
move(8,((13,5),(14,5)),11).
move(8,((14,5),(14,4)),12).
move(9,((9,9),(9,8)),1).
move(9,((9,8),(8,8)),2).
move(9,((8,8),(7,8)),4).
move(9,((7,8),(6,8)),5).
move(9,((6,8),(6,7)),11).
move(10,((10,9),(10,8)),1).
move(10,((10,8),(10,7)),2).
move(10,((10,7),(10,6)),3).
move(10,((10,6),(10,5)),4).
move(10,((10,5),(11,5)),5).
move(10,((11,5),(11,4)),6).
move(10,((11,4),(12,4)),7).
move(11,((11,9),(11,8)),1).
move(11,((11,8),(11,7)),2).
move(11,((11,7),(11,6)),4).
move(11,((11,6),(11,7)),5).
move(11,((11,7),(11,8)),6).
move(11,((11,8),(11,7)),7).
move(11,((11,7),(12,7)),8).
move(12,((12,9),(12,8)),1).
move(12,((12,8),(13,8)),3).
move(12,((13,8),(14,8)),4).
move(12,((14,8),(14,7)),5).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(14,8)),3).
move(13,((14,8),(15,8)),4).
move(13,((15,8),(15,7)),5).
move(14,((14,9),(13,9)),1).
move(14,((13,9),(12,9)),2).
move(14,((12,9),(11,9)),3).
move(14,((11,9),(10,9)),4).
move(14,((10,9),(9,9)),5).
move(14,((9,9),(8,9)),6).
move(14,((8,9),(8,8)),7).
move(14,((8,8),(7,8)),8).
move(14,((7,8),(7,7)),9).
move(14,((7,7),(6,7)),10).
move(14,((6,7),(5,7)),11).
move(14,((5,7),(4,7)),12).
move(14,((4,7),(4,6)),13).
move(14,((4,6),(3,6)),14).
move(15,((15,9),(16,9)),1).
move(15,((16,9),(17,9)),3).
move(15,((17,9),(17,8)),4).
move(15,((17,8),(17,7)),5).
move(15,((17,7),(17,6)),6).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.625s (Solving: 0.08s 1st Model: 0.07s Unsat: 0.00s)
CPU Time     : 2.625s

Choices      : 2334    
Conflicts    : 73       (Analyzed: 73)
Restarts     : 0       
Model-Level  : 567.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 73       (Deleted: 0)
  Binary     : 13       (Ratio:  17.81%)
  Ternary    : 6        (Ratio:   8.22%)
  Conflict   : 73       (Average Length:   29.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 73       (Average: 24.21 Max: 322 Sum:   1767)
  Executed   : 73       (Average: 24.21 Max: 322 Sum:   1767 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 603975   (Original: 542971)
  Choice     : 300     
  Heuristic  : 28222    (Original: 28466)
Atoms        : 249930   (Original: 235220 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,9),(2,9)),3).
move(1,((2,9),(2,8)),4).
move(1,((2,8),(2,7)),6).
move(1,((2,7),(2,6)),7).
move(1,((2,6),(2,5)),8).
move(1,((2,5),(2,4)),9).
move(1,((2,4),(1,4)),10).
move(1,((1,4),(2,4)),11).
move(1,((2,4),(2,5)),13).
move(1,((2,5),(2,6)),14).
move(1,((2,6),(2,7)),15).
move(1,((2,7),(3,7)),16).
move(1,((3,7),(3,6)),17).
move(1,((3,6),(4,6)),18).
move(1,((4,6),(4,7)),19).
move(1,((4,7),(4,6)),20).
move(2,((2,9),(3,9)),3).
move(2,((3,9),(3,8)),4).
move(2,((3,8),(3,7)),5).
move(2,((3,7),(3,6)),6).
move(2,((3,6),(3,5)),7).
move(2,((3,5),(3,4)),8).
move(2,((3,4),(3,3)),9).
move(2,((3,3),(3,2)),10).
move(2,((3,2),(2,2)),11).
move(2,((2,2),(2,1)),12).
move(2,((2,1),(1,1)),13).
move(2,((1,1),(2,1)),14).
move(2,((2,1),(2,2)),15).
move(2,((2,2),(3,2)),17).
move(2,((3,2),(4,2)),18).
move(2,((4,2),(4,3)),19).
move(2,((4,3),(5,3)),20).
move(3,((3,9),(3,8)),2).
move(3,((3,8),(3,7)),3).
move(3,((3,7),(3,6)),4).
move(3,((3,6),(3,5)),5).
move(3,((3,5),(3,4)),7).
move(3,((3,4),(3,3)),8).
move(3,((3,3),(3,2)),9).
move(3,((3,2),(2,2)),10).
move(3,((2,2),(1,2)),11).
move(3,((1,2),(2,2)),13).
move(3,((2,2),(2,3)),14).
move(3,((2,3),(2,4)),15).
move(3,((2,4),(2,5)),16).
move(3,((2,5),(2,4)),17).
move(3,((2,4),(3,4)),19).
move(3,((3,4),(3,3)),20).
move(4,((4,9),(3,9)),2).
move(4,((3,9),(3,8)),3).
move(4,((3,8),(3,7)),4).
move(4,((3,7),(3,6)),5).
move(4,((3,6),(2,6)),6).
move(4,((2,6),(2,5)),7).
move(4,((2,5),(2,4)),8).
move(4,((2,4),(2,3)),9).
move(4,((2,3),(1,3)),11).
move(4,((1,3),(2,3)),12).
move(4,((2,3),(3,3)),14).
move(4,((3,3),(3,4)),15).
move(4,((3,4),(4,4)),16).
move(4,((4,4),(5,4)),17).
move(4,((5,4),(6,4)),18).
move(4,((6,4),(6,5)),19).
move(4,((6,5),(6,6)),20).
move(5,((5,9),(5,8)),3).
move(5,((5,8),(5,7)),4).
move(5,((5,7),(5,6)),5).
move(5,((5,6),(5,5)),6).
move(5,((5,5),(5,4)),7).
move(5,((5,4),(5,3)),8).
move(5,((5,3),(5,2)),9).
move(5,((5,2),(5,1)),10).
move(5,((5,1),(5,2)),11).
move(5,((5,2),(6,2)),13).
move(5,((6,2),(6,3)),14).
move(5,((6,3),(5,3)),15).
move(5,((5,3),(5,4)),18).
move(5,((5,4),(6,4)),19).
move(5,((6,4),(6,3)),20).
move(6,((6,9),(6,8)),3).
move(6,((6,8),(6,7)),4).
move(6,((6,7),(6,6)),5).
move(6,((6,6),(6,5)),6).
move(6,((6,5),(6,4)),7).
move(6,((6,4),(6,3)),8).
move(6,((6,3),(6,2)),9).
move(6,((6,2),(6,1)),10).
move(6,((6,1),(6,2)),11).
move(6,((6,2),(7,2)),12).
move(6,((7,2),(8,2)),13).
move(6,((8,2),(9,2)),14).
move(6,((9,2),(10,2)),15).
move(6,((10,2),(11,2)),16).
move(6,((11,2),(11,3)),17).
move(6,((11,3),(10,3)),18).
move(6,((10,3),(9,3)),19).
move(6,((9,3),(8,3)),20).
move(7,((8,9),(8,8)),3).
move(7,((8,8),(8,7)),4).
move(7,((8,7),(8,6)),5).
move(7,((8,6),(8,5)),6).
move(7,((8,5),(8,4)),7).
move(7,((8,4),(8,3)),8).
move(7,((8,3),(8,2)),9).
move(7,((8,2),(8,1)),10).
move(7,((8,1),(7,1)),11).
move(7,((7,1),(6,1)),12).
move(7,((6,1),(5,1)),13).
move(7,((5,1),(5,2)),14).
move(7,((5,2),(4,2)),15).
move(7,((4,2),(4,3)),16).
move(7,((4,3),(4,2)),17).
move(7,((4,2),(5,2)),18).
move(7,((5,2),(4,2)),19).
move(7,((4,2),(4,3)),20).
move(8,((7,9),(7,8)),3).
move(8,((7,8),(7,7)),4).
move(8,((7,7),(7,6)),5).
move(8,((7,6),(7,5)),6).
move(8,((7,5),(7,4)),7).
move(8,((7,4),(7,3)),8).
move(8,((7,3),(7,2)),9).
move(8,((7,2),(8,2)),10).
move(8,((8,2),(9,2)),11).
move(8,((9,2),(10,2)),12).
move(8,((10,2),(11,2)),13).
move(8,((11,2),(12,2)),14).
move(8,((12,2),(13,2)),15).
move(8,((13,2),(14,2)),16).
move(8,((14,2),(15,2)),17).
move(8,((15,2),(15,3)),18).
move(8,((15,3),(15,4)),19).
move(8,((15,4),(14,4)),20).
move(9,((9,9),(9,8)),3).
move(9,((9,8),(9,7)),4).
move(9,((9,7),(9,6)),5).
move(9,((9,6),(9,5)),6).
move(9,((9,5),(9,4)),7).
move(9,((9,4),(9,3)),8).
move(9,((9,3),(9,2)),9).
move(9,((9,2),(9,1)),10).
move(9,((9,1),(8,1)),11).
move(9,((8,1),(8,2)),12).
move(9,((8,2),(8,3)),13).
move(9,((8,3),(8,4)),14).
move(9,((8,4),(8,5)),15).
move(9,((8,5),(8,6)),16).
move(9,((8,6),(8,7)),17).
move(9,((8,7),(7,7)),19).
move(9,((7,7),(6,7)),20).
move(10,((10,9),(10,8)),3).
move(10,((10,8),(10,7)),4).
move(10,((10,7),(10,6)),5).
move(10,((10,6),(10,5)),6).
move(10,((10,5),(10,4)),7).
move(10,((10,4),(10,3)),8).
move(10,((10,3),(10,2)),9).
move(10,((10,2),(10,1)),10).
move(10,((10,1),(10,2)),11).
move(10,((10,2),(10,3)),12).
move(10,((10,3),(11,3)),13).
move(10,((11,3),(11,2)),14).
move(10,((11,2),(11,3)),15).
move(10,((11,3),(11,4)),17).
move(10,((11,4),(11,5)),18).
move(10,((11,5),(12,5)),19).
move(10,((12,5),(12,4)),20).
move(11,((11,9),(11,8)),3).
move(11,((11,8),(11,7)),4).
move(11,((11,7),(11,6)),5).
move(11,((11,6),(11,5)),6).
move(11,((11,5),(11,4)),7).
move(11,((11,4),(11,3)),8).
move(11,((11,3),(11,2)),9).
move(11,((11,2),(11,1)),10).
move(11,((11,1),(11,2)),11).
move(11,((11,2),(11,3)),12).
move(11,((11,3),(11,4)),13).
move(11,((11,4),(11,5)),14).
move(11,((11,5),(11,6)),15).
move(11,((11,6),(11,7)),17).
move(11,((11,7),(12,7)),20).
move(12,((12,9),(13,9)),1).
move(12,((13,9),(14,9)),2).
move(12,((14,9),(14,8)),3).
move(12,((14,8),(14,7)),4).
move(12,((14,7),(14,6)),5).
move(12,((14,6),(15,6)),7).
move(12,((15,6),(15,5)),8).
move(12,((15,5),(16,5)),10).
move(12,((16,5),(17,5)),11).
move(12,((17,5),(17,4)),12).
move(12,((17,4),(16,4)),13).
move(12,((16,4),(16,5)),14).
move(12,((16,5),(16,6)),15).
move(12,((16,6),(16,7)),16).
move(12,((16,7),(15,7)),17).
move(12,((15,7),(14,7)),18).
move(12,((14,7),(14,8)),19).
move(12,((14,8),(14,7)),20).
move(13,((13,9),(13,8)),1).
move(13,((13,8),(13,7)),2).
move(13,((13,7),(14,7)),3).
move(13,((14,7),(15,7)),4).
move(13,((15,7),(16,7)),5).
move(13,((16,7),(15,7)),6).
move(13,((15,7),(15,6)),8).
move(13,((15,6),(16,6)),9).
move(13,((16,6),(17,6)),10).
move(13,((17,6),(18,6)),11).
move(13,((18,6),(18,7)),12).
move(13,((18,7),(18,8)),14).
move(13,((18,8),(18,7)),15).
move(13,((18,7),(18,8)),16).
move(13,((18,8),(17,8)),17).
move(13,((17,8),(17,7)),18).
move(13,((17,7),(16,7)),19).
move(13,((16,7),(15,7)),20).
move(14,((14,9),(14,8)),2).
move(14,((14,8),(13,8)),3).
move(14,((13,8),(12,8)),5).
move(14,((12,8),(11,8)),6).
move(14,((11,8),(10,8)),7).
move(14,((10,8),(9,8)),8).
move(14,((9,8),(8,8)),9).
move(14,((8,8),(8,7)),10).
move(14,((8,7),(7,7)),11).
move(14,((7,7),(6,7)),12).
move(14,((6,7),(5,7)),13).
move(14,((5,7),(4,7)),14).
move(14,((4,7),(4,6)),15).
move(14,((4,6),(4,5)),16).
move(14,((4,5),(3,5)),17).
move(14,((3,5),(2,5)),18).
move(14,((2,5),(2,6)),19).
move(14,((2,6),(3,6)),20).
move(15,((15,9),(14,9)),3).
move(15,((14,9),(14,8)),4).
move(15,((14,8),(14,7)),6).
move(15,((14,7),(14,6)),7).
move(15,((14,6),(14,5)),8).
move(15,((14,5),(14,4)),9).
move(15,((14,4),(14,3)),10).
move(15,((14,3),(14,2)),11).
move(15,((14,2),(15,2)),12).
move(15,((15,2),(16,2)),13).
move(15,((16,2),(17,2)),14).
move(15,((17,2),(18,2)),15).
move(15,((18,2),(17,2)),16).
move(15,((17,2),(17,3)),17).
move(15,((17,3),(17,4)),18).
move(15,((17,4),(17,5)),19).
move(15,((17,5),(17,6)),20).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.683s (Solving: 0.14s 1st Model: 0.14s Unsat: 0.00s)
CPU Time     : 2.672s

Choices      : 1199     (Domain: 1199)
Conflicts    : 90       (Analyzed: 90)
Restarts     : 0       
Model-Level  : 210.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 90       (Deleted: 0)
  Binary     : 25       (Ratio:  27.78%)
  Ternary    : 4        (Ratio:   4.44%)
  Conflict   : 90       (Average Length:   16.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 90       (Average: 10.99 Max:  57 Sum:    989)
  Executed   : 90       (Average: 10.99 Max:  57 Sum:    989 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 603975   (Original: 542971)
  Choice     : 300     
  Heuristic  : 28222    (Original: 28466)
Atoms        : 249930   (Original: 235220 Auxiliary: 14710)
Bodies       : 367586   (Original: 321138)
  Count      : 2582     (Original: 3492)
Equivalences : 218229   (Atom=Atom: 343 Body=Body: 359 Other: 217527)
Tight        : Yes
Variables    : 366312   (Eliminated:    0 Frozen: 216126)
Constraints  : 922107   (Binary:  82.8% Ternary:  13.0% Other:   4.2%)

