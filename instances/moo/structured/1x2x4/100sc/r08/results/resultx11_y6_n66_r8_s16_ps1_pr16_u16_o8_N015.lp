%%%%%
%Standard
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(5,4)),5).
move(1,((5,4),(4,4)),6).
move(1,((4,4),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(2,4)),3).
move(2,((2,4),(3,4)),7).
move(2,((3,4),(4,4)),8).
move(2,((4,4),(5,4)),9).
move(2,((5,4),(5,3)),10).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(3,3)),4).
move(3,((3,3),(4,3)),5).
move(3,((4,3),(5,3)),6).
move(3,((5,3),(5,2)),7).
move(3,((5,2),(5,1)),8).
move(3,((5,1),(4,1)),9).
move(3,((4,1),(4,2)),10).
move(3,((4,2),(4,3)),11).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(8,6)),5).
move(4,((8,6),(8,5)),7).
move(4,((8,5),(8,4)),8).
move(4,((8,4),(7,4)),9).
move(4,((7,4),(7,3)),10).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(4,4)),2).
move(5,((4,4),(4,3)),3).
move(5,((4,3),(5,3)),4).
move(5,((5,3),(6,3)),5).
move(5,((6,3),(7,3)),8).
move(5,((7,3),(8,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(4,5)),2).
move(6,((4,5),(3,5)),3).
move(6,((3,5),(2,5)),4).
move(6,((2,5),(2,4)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(6,2)),4).
move(7,((6,2),(7,2)),5).
move(7,((7,2),(8,2)),6).
move(7,((8,2),(9,2)),7).
move(7,((9,2),(9,3)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),6).
move(8,((8,3),(9,3)),7).
move(8,((9,3),(10,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.238s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.234s

Choices      : 801     
Conflicts    : 39       (Analyzed: 39)
Restarts     : 0       
Model-Level  : 356.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 39       (Deleted: 0)
  Binary     : 9        (Ratio:  23.08%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 39       (Average Length:   22.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 39       (Average: 11.41 Max:  55 Sum:    445)
  Executed   : 39       (Average: 11.41 Max:  55 Sum:    445 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261077   (Original: 241134)
  Choice     : 320     
Atoms        : 106367  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(4,5)),5).
move(1,((4,5),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(1,4)),2).
move(2,((1,4),(2,4)),3).
move(2,((2,4),(3,4)),4).
move(2,((3,4),(4,4)),6).
move(2,((4,4),(5,4)),7).
move(2,((5,4),(5,3)),8).
move(2,((5,3),(6,3)),9).
move(2,((6,3),(5,3)),10).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(3,5)),2).
move(3,((3,5),(2,5)),4).
move(3,((2,5),(2,4)),5).
move(3,((2,4),(2,5)),6).
move(3,((2,5),(3,5)),7).
move(3,((3,5),(3,4)),8).
move(3,((3,4),(4,4)),9).
move(3,((4,4),(4,3)),10).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(3,3)),3).
move(4,((3,3),(3,2)),4).
move(4,((3,2),(4,2)),5).
move(4,((4,2),(4,3)),6).
move(4,((4,3),(5,3)),7).
move(4,((5,3),(6,3)),8).
move(4,((6,3),(7,3)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(8,6)),4).
move(5,((8,6),(8,5)),6).
move(5,((8,5),(8,4)),7).
move(5,((8,4),(8,3)),8).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(4,5)),2).
move(6,((4,5),(4,6)),3).
move(6,((4,6),(3,6)),4).
move(6,((3,6),(3,5)),5).
move(6,((3,5),(3,4)),6).
move(6,((3,4),(2,4)),7).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(6,3)),3).
move(7,((6,3),(7,3)),5).
move(7,((7,3),(8,3)),6).
move(7,((8,3),(9,3)),7).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),5).
move(8,((8,3),(9,3)),6).
move(8,((9,3),(10,3)),7).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.382s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.344s

Choices      : 1041     (Domain: 180)
Conflicts    : 42       (Analyzed: 42)
Restarts     : 0       
Model-Level  : 550.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 42       (Deleted: 0)
  Binary     : 11       (Ratio:  26.19%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 42       (Average Length:   18.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 42       (Average: 11.69 Max: 109 Sum:    491)
  Executed   : 42       (Average: 11.69 Max: 109 Sum:    491 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261357   (Original: 241414)
  Choice     : 320     
  Heuristic  : 189     
Atoms        : 106458  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hDistance.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(6,6)),2).
move(1,((6,6),(5,6)),3).
move(1,((5,6),(4,6)),4).
move(1,((4,6),(3,6)),5).
move(1,((3,6),(3,5)),6).
move(1,((3,5),(3,4)),7).
move(1,((3,4),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(2,5)),2).
move(2,((2,5),(2,4)),3).
move(2,((2,4),(3,4)),4).
move(2,((3,4),(4,4)),5).
move(2,((4,4),(5,4)),6).
move(2,((5,4),(5,3)),7).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(4,5)),3).
move(3,((4,5),(4,4)),4).
move(3,((4,4),(4,3)),5).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(5,5)),3).
move(4,((5,5),(6,5)),4).
move(4,((6,5),(6,4)),5).
move(4,((6,4),(6,3)),6).
move(4,((6,3),(7,3)),7).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(7,5)),4).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(7,3)),6).
move(5,((7,3),(8,3)),7).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(4,5)),2).
move(6,((4,5),(3,5)),3).
move(6,((3,5),(2,5)),4).
move(6,((2,5),(2,4)),5).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(7,4)),3).
move(7,((7,4),(8,4)),4).
move(7,((8,4),(8,3)),5).
move(7,((8,3),(9,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),4).
move(8,((8,3),(9,3)),5).
move(8,((9,3),(10,3)),6).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.439s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.406s

Choices      : 308      (Domain: 308)
Conflicts    : 2        (Analyzed: 2)
Restarts     : 0       
Model-Level  : 293.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 2        (Deleted: 0)
  Binary     : 2        (Ratio: 100.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 2        (Average Length:    2.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 2        (Average:  7.50 Max:  11 Sum:     15)
  Executed   : 2        (Average:  7.50 Max:  11 Sum:     15 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279632   (Original: 259761)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106466  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(5,4)),5).
move(1,((5,4),(4,4)),6).
move(1,((4,4),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(1,((3,3),(2,3)),10).
move(1,((2,3),(2,2)),11).
move(1,((2,2),(3,2)),39).
move(1,((3,2),(3,3)),40).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(3,5)),5).
move(2,((3,5),(3,4)),6).
move(2,((3,4),(4,4)),7).
move(2,((4,4),(3,4)),8).
move(2,((3,4),(4,4)),10).
move(2,((4,4),(5,4)),11).
move(2,((5,4),(5,3)),12).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),3).
move(3,((3,4),(2,4)),5).
move(3,((2,4),(2,3)),6).
move(3,((2,3),(2,2)),8).
move(3,((2,2),(1,2)),9).
move(3,((1,2),(2,2)),10).
move(3,((2,2),(3,2)),11).
move(3,((3,2),(4,2)),12).
move(3,((4,2),(3,2)),13).
move(3,((3,2),(3,3)),14).
move(3,((3,3),(3,2)),19).
move(3,((3,2),(3,3)),20).
move(3,((3,3),(3,2)),21).
move(3,((3,2),(4,2)),22).
move(3,((4,2),(4,3)),23).
move(3,((4,3),(4,2)),25).
move(3,((4,2),(4,3)),30).
move(3,((4,3),(3,3)),31).
move(3,((3,3),(3,2)),34).
move(3,((3,2),(3,3)),35).
move(3,((3,3),(3,2)),36).
move(3,((3,2),(4,2)),37).
move(3,((4,2),(4,3)),40).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(6,5)),4).
move(4,((6,5),(6,4)),5).
move(4,((6,4),(6,3)),6).
move(4,((6,3),(7,3)),7).
move(4,((7,3),(7,2)),11).
move(4,((7,2),(6,2)),12).
move(4,((6,2),(7,2)),24).
move(4,((7,2),(7,3)),40).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(3,5)),4).
move(5,((3,5),(3,4)),5).
move(5,((3,4),(3,3)),6).
move(5,((3,3),(3,2)),7).
move(5,((3,2),(4,2)),8).
move(5,((4,2),(5,2)),9).
move(5,((5,2),(6,2)),10).
move(5,((6,2),(6,3)),11).
move(5,((6,3),(7,3)),12).
move(5,((7,3),(8,3)),15).
move(5,((8,3),(7,3)),16).
move(5,((7,3),(7,2)),17).
move(5,((7,2),(8,2)),18).
move(5,((8,2),(9,2)),19).
move(5,((9,2),(8,2)),20).
move(5,((8,2),(8,3)),23).
move(5,((8,3),(7,3)),24).
move(5,((7,3),(8,3)),40).
move(6,((5,6),(5,5)),2).
move(6,((5,5),(4,5)),4).
move(6,((4,5),(3,5)),6).
move(6,((3,5),(3,4)),7).
move(6,((3,4),(2,4)),8).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(9,5)),4).
move(7,((9,5),(9,4)),6).
move(7,((9,4),(9,3)),7).
move(8,((7,6),(8,6)),1).
move(8,((8,6),(9,6)),2).
move(8,((9,6),(9,5)),3).
move(8,((9,5),(9,4)),4).
move(8,((9,4),(10,4)),5).
move(8,((10,4),(10,3)),6).
move(8,((10,3),(10,4)),7).
move(8,((10,4),(10,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.033s (Solving: 0.24s 1st Model: 0.24s Unsat: 0.00s)
CPU Time     : 2.031s

Choices      : 2806     (Domain: 883)
Conflicts    : 158      (Analyzed: 158)
Restarts     : 2        (Average: 79.00 Last: 10)
Model-Level  : 332.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 158      (Deleted: 0)
  Binary     : 47       (Ratio:  29.75%)
  Ternary    : 13       (Ratio:   8.23%)
  Conflict   : 158      (Average Length:   14.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 158      (Average: 14.12 Max: 293 Sum:   2231)
  Executed   : 158      (Average: 14.12 Max: 293 Sum:   2231 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279632   (Original: 259761)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106466  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((8,6),(7,6)),1).
move(1,((7,6),(8,6)),3).
move(1,((8,6),(7,6)),4).
move(1,((7,6),(7,5)),5).
move(1,((7,5),(7,4)),6).
move(1,((7,4),(7,3)),7).
move(1,((7,3),(6,3)),8).
move(1,((6,3),(5,3)),9).
move(1,((5,3),(4,3)),10).
move(1,((4,3),(3,3)),40).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(5,5)),5).
move(2,((5,5),(5,4)),6).
move(2,((5,4),(6,4)),8).
move(2,((6,4),(6,3)),9).
move(2,((6,3),(5,3)),10).
move(3,((2,6),(3,6)),1).
move(3,((3,6),(4,6)),2).
move(3,((4,6),(4,5)),3).
move(3,((4,5),(4,4)),4).
move(3,((4,4),(4,3)),40).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(6,5)),4).
move(4,((6,5),(6,4)),5).
move(4,((6,4),(6,3)),6).
move(4,((6,3),(6,4)),7).
move(4,((6,4),(7,4)),8).
move(4,((7,4),(7,3)),9).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(7,5)),4).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(7,3)),6).
move(5,((7,3),(8,3)),7).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(4,5)),2).
move(6,((4,5),(3,5)),3).
move(6,((3,5),(3,4)),4).
move(6,((3,4),(2,4)),5).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(8,4)),4).
move(7,((8,4),(9,4)),5).
move(7,((9,4),(9,3)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(9,4)),4).
move(8,((9,4),(9,3)),5).
move(8,((9,3),(10,3)),6).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.792s (Solving: 0.05s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.781s

Choices      : 318      (Domain: 31)
Conflicts    : 3        (Analyzed: 3)
Restarts     : 0       
Model-Level  : 306.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 3        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 3        (Average Length:   36.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 3        (Average:  4.00 Max:   7 Sum:     12)
  Executed   : 3        (Average:  4.00 Max:   7 Sum:     12 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 262010   (Original: 242083)
  Choice     : 320     
  Heuristic  : 783      (Original: 799)
Atoms        : 106517  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(8,4)),2).
move(1,((8,4),(7,4)),3).
move(1,((7,4),(6,4)),4).
move(1,((6,4),(5,4)),5).
move(1,((5,4),(4,4)),6).
move(1,((4,4),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(2,((1,6),(1,5)),1).
move(2,((1,5),(2,5)),2).
move(2,((2,5),(3,5)),3).
move(2,((3,5),(4,5)),4).
move(2,((4,5),(5,5)),5).
move(2,((5,5),(6,5)),6).
move(2,((6,5),(6,4)),7).
move(2,((6,4),(7,4)),8).
move(2,((7,4),(6,4)),9).
move(2,((6,4),(5,4)),11).
move(2,((5,4),(5,3)),12).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(3,5)),2).
move(3,((3,5),(4,5)),3).
move(3,((4,5),(5,5)),4).
move(3,((5,5),(5,6)),5).
move(3,((5,6),(5,5)),6).
move(3,((5,5),(5,4)),9).
move(3,((5,4),(5,3)),10).
move(3,((5,3),(4,3)),11).
move(4,((3,6),(3,5)),1).
move(4,((3,5),(4,5)),2).
move(4,((4,5),(5,5)),3).
move(4,((5,5),(6,5)),4).
move(4,((6,5),(7,5)),5).
move(4,((7,5),(8,5)),6).
move(4,((8,5),(8,4)),7).
move(4,((8,4),(8,3)),8).
move(4,((8,3),(7,3)),9).
move(5,((4,6),(4,5)),1).
move(5,((4,5),(5,5)),2).
move(5,((5,5),(6,5)),3).
move(5,((6,5),(7,5)),4).
move(5,((7,5),(7,4)),5).
move(5,((7,4),(6,4)),6).
move(5,((6,4),(7,4)),7).
move(5,((7,4),(8,4)),8).
move(5,((8,4),(8,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(5,3)),3).
move(6,((5,3),(4,3)),4).
move(6,((4,3),(4,4)),5).
move(6,((4,4),(3,4)),6).
move(6,((3,4),(2,4)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(8,5)),3).
move(7,((8,5),(9,5)),4).
move(7,((9,5),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(7,((10,4),(9,4)),7).
move(7,((9,4),(9,3)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(6,4)),3).
move(8,((6,4),(6,3)),4).
move(8,((6,3),(7,3)),5).
move(8,((7,3),(8,3)),6).
move(8,((8,3),(9,3)),7).
move(8,((9,3),(10,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.653s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.656s

Choices      : 1775     (Domain: 705)
Conflicts    : 48       (Analyzed: 48)
Restarts     : 0       
Model-Level  : 1025.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 48       (Deleted: 0)
  Binary     : 10       (Ratio:  20.83%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 48       (Average Length:   20.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 48       (Average: 15.62 Max: 119 Sum:    750)
  Executed   : 48       (Average: 15.62 Max: 119 Sum:    750 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 261907   (Original: 241964)
  Choice     : 320     
  Heuristic  : 739     
Atoms        : 106458  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((8,6),(8,5)),1).
move(1,((8,5),(7,5)),2).
move(1,((7,5),(6,5)),3).
move(1,((6,5),(5,5)),4).
move(1,((5,5),(5,4)),5).
move(1,((5,4),(4,4)),6).
move(1,((4,4),(4,3)),7).
move(1,((4,3),(3,3)),8).
move(2,((1,6),(2,6)),1).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(4,6)),3).
move(2,((4,6),(5,6)),4).
move(2,((5,6),(5,5)),5).
move(2,((5,5),(5,4)),6).
move(2,((5,4),(5,3)),7).
move(3,((2,6),(2,5)),1).
move(3,((2,5),(2,4)),2).
move(3,((2,4),(2,3)),3).
move(3,((2,3),(3,3)),4).
move(3,((3,3),(4,3)),5).
move(3,((4,3),(5,3)),6).
move(3,((5,3),(5,2)),7).
move(3,((5,2),(5,1)),8).
move(3,((5,1),(4,1)),9).
move(3,((4,1),(4,2)),10).
move(3,((4,2),(4,3)),11).
move(4,((3,6),(4,6)),1).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(6,6)),3).
move(4,((6,6),(7,6)),4).
move(4,((7,6),(7,5)),7).
move(4,((7,5),(7,4)),9).
move(4,((7,4),(7,3)),10).
move(5,((4,6),(5,6)),1).
move(5,((5,6),(6,6)),2).
move(5,((6,6),(7,6)),3).
move(5,((7,6),(8,6)),4).
move(5,((8,6),(9,6)),5).
move(5,((9,6),(8,6)),6).
move(5,((8,6),(8,5)),7).
move(5,((8,5),(8,4)),8).
move(5,((8,4),(8,3)),9).
move(6,((5,6),(5,5)),1).
move(6,((5,5),(5,4)),2).
move(6,((5,4),(4,4)),3).
move(6,((4,4),(3,4)),4).
move(6,((3,4),(2,4)),5).
move(7,((6,6),(7,6)),1).
move(7,((7,6),(8,6)),2).
move(7,((8,6),(9,6)),3).
move(7,((9,6),(10,6)),4).
move(7,((10,6),(10,5)),5).
move(7,((10,5),(10,4)),6).
move(7,((10,4),(9,4)),7).
move(7,((9,4),(9,3)),8).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),6).
move(8,((8,3),(9,3)),7).
move(8,((9,3),(10,3)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.758s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.766s

Choices      : 960      (Domain: 570)
Conflicts    : 35       (Analyzed: 35)
Restarts     : 0       
Model-Level  : 390.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 35       (Deleted: 0)
  Binary     : 8        (Ratio:  22.86%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 35       (Average Length:   22.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 35       (Average: 16.29 Max: 102 Sum:    570)
  Executed   : 35       (Average: 16.29 Max: 102 Sum:    570 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279642   (Original: 259763)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106475  
Disjunctions : 0        (Original: 1)
Bodies       : 183368   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93247    (Atom=Atom: 342 Body=Body: 351 Other: 92554)
Tight        : Yes
Variables    : 182697   (Eliminated:    0 Frozen: 92083)
Constraints  : 500665   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((8,6),(8,5)),3).
move(1,((8,5),(8,6)),4).
move(1,((8,6),(8,5)),5).
move(1,((8,5),(8,4)),7).
move(1,((8,4),(8,3)),9).
move(1,((8,3),(7,3)),10).
move(1,((7,3),(8,3)),11).
move(1,((8,3),(8,4)),12).
move(1,((8,4),(8,3)),15).
move(1,((8,3),(8,4)),16).
move(1,((8,4),(8,5)),18).
move(1,((8,5),(8,4)),19).
move(1,((8,4),(8,3)),21).
move(1,((8,3),(8,4)),22).
move(1,((8,4),(8,5)),24).
move(1,((8,5),(8,4)),25).
move(1,((8,4),(8,3)),32).
move(1,((8,3),(7,3)),33).
move(1,((7,3),(6,3)),35).
move(1,((6,3),(6,2)),36).
move(1,((6,2),(5,2)),37).
move(1,((5,2),(4,2)),38).
move(1,((4,2),(3,2)),39).
move(1,((3,2),(3,3)),40).
move(2,((1,6),(2,6)),3).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(1,5)),6).
move(2,((1,5),(1,4)),7).
move(2,((1,4),(1,3)),8).
move(2,((1,3),(2,3)),9).
move(2,((2,3),(3,3)),12).
move(2,((3,3),(2,3)),13).
move(2,((2,3),(3,3)),14).
move(2,((3,3),(2,3)),15).
move(2,((2,3),(3,3)),19).
move(2,((3,3),(3,4)),20).
move(2,((3,4),(3,5)),21).
move(2,((3,5),(3,4)),22).
move(2,((3,4),(4,4)),26).
move(2,((4,4),(3,4)),27).
move(2,((3,4),(3,3)),32).
move(2,((3,3),(2,3)),33).
move(2,((2,3),(1,3)),36).
move(2,((1,3),(2,3)),37).
move(2,((2,3),(3,3)),38).
move(2,((3,3),(4,3)),39).
move(2,((4,3),(5,3)),40).
move(3,((2,6),(3,6)),3).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(2,4)),6).
move(3,((2,4),(2,3)),7).
move(3,((2,3),(2,4)),8).
move(3,((2,4),(2,3)),38).
move(3,((2,3),(3,3)),39).
move(3,((3,3),(4,3)),40).
move(4,((3,6),(3,5)),3).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(3,3)),5).
move(4,((3,3),(3,4)),7).
move(4,((3,4),(4,4)),12).
move(4,((4,4),(3,4)),13).
move(4,((3,4),(4,4)),18).
move(4,((4,4),(3,4)),19).
move(4,((3,4),(4,4)),20).
move(4,((4,4),(3,4)),21).
move(4,((3,4),(4,4)),22).
move(4,((4,4),(4,3)),23).
move(4,((4,3),(3,3)),24).
move(4,((3,3),(3,4)),26).
move(4,((3,4),(3,3)),27).
move(4,((3,3),(4,3)),30).
move(4,((4,3),(3,3)),31).
move(4,((3,3),(4,3)),32).
move(4,((4,3),(3,3)),33).
move(4,((3,3),(3,4)),34).
move(4,((3,4),(3,3)),36).
move(4,((3,3),(4,3)),37).
move(4,((4,3),(5,3)),38).
move(4,((5,3),(6,3)),39).
move(4,((6,3),(7,3)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(5,3)),6).
move(5,((5,3),(6,3)),7).
move(5,((6,3),(5,3)),8).
move(5,((5,3),(4,3)),9).
move(5,((4,3),(4,4)),10).
move(5,((4,4),(4,3)),12).
move(5,((4,3),(4,4)),13).
move(5,((4,4),(4,3)),14).
move(5,((4,3),(4,4)),15).
move(5,((4,4),(4,3)),17).
move(5,((4,3),(4,4)),19).
move(5,((4,4),(4,3)),20).
move(5,((4,3),(4,4)),21).
move(5,((4,4),(4,5)),22).
move(5,((4,5),(4,4)),24).
move(5,((4,4),(4,5)),26).
move(5,((4,5),(4,4)),27).
move(5,((4,4),(4,3)),29).
move(5,((4,3),(4,4)),30).
move(5,((4,4),(4,5)),32).
move(5,((4,5),(4,4)),33).
move(5,((4,4),(4,3)),35).
move(5,((4,3),(5,3)),36).
move(5,((5,3),(6,3)),37).
move(5,((6,3),(7,3)),38).
move(5,((7,3),(8,3)),40).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(5,4)),4).
move(6,((5,4),(4,4)),6).
move(6,((4,4),(5,4)),7).
move(6,((5,4),(4,4)),38).
move(6,((4,4),(3,4)),39).
move(6,((3,4),(2,4)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),5).
move(7,((6,4),(6,3)),6).
move(7,((6,3),(6,4)),7).
move(7,((6,4),(7,4)),24).
move(7,((7,4),(6,4)),25).
move(7,((6,4),(7,4)),37).
move(7,((7,4),(8,4)),38).
move(7,((8,4),(9,4)),39).
move(7,((9,4),(9,3)),40).
move(8,((7,6),(7,5)),4).
move(8,((7,5),(7,4)),6).
move(8,((7,4),(7,3)),7).
move(8,((7,3),(8,3)),8).
move(8,((8,3),(9,3)),9).
move(8,((9,3),(10,3)),10).
move(8,((10,3),(9,3)),11).
move(8,((9,3),(8,3)),12).
move(8,((8,3),(7,3)),13).
move(8,((7,3),(8,3)),14).
move(8,((8,3),(7,3)),15).
move(8,((7,3),(7,4)),16).
move(8,((7,4),(8,4)),21).
move(8,((8,4),(7,4)),22).
move(8,((7,4),(7,3)),24).
move(8,((7,3),(7,4)),25).
move(8,((7,4),(7,3)),26).
move(8,((7,3),(7,4)),27).
move(8,((7,4),(7,3)),37).
move(8,((7,3),(8,3)),38).
move(8,((8,3),(9,3)),39).
move(8,((9,3),(10,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.774s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.719s

Choices      : 315      (Domain: 315)
Conflicts    : 12       (Analyzed: 12)
Restarts     : 0       
Model-Level  : 288.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 12       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 1        (Ratio:   8.33%)
  Conflict   : 12       (Average Length:   14.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 12       (Average:  2.25 Max:   5 Sum:     27)
  Executed   : 12       (Average:  2.25 Max:   5 Sum:     27 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279624   (Original: 259753)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106458  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

%%%%%
%hStrange.lp
%%%%%
move(1,((8,6),(7,6)),2).
move(1,((7,6),(7,5)),5).
move(1,((7,5),(7,4)),6).
move(1,((7,4),(8,4)),7).
move(1,((8,4),(8,3)),8).
move(1,((8,3),(8,2)),9).
move(1,((8,2),(9,2)),10).
move(1,((9,2),(10,2)),11).
move(1,((10,2),(10,1)),12).
move(1,((10,1),(11,1)),13).
move(1,((11,1),(10,1)),14).
move(1,((10,1),(10,2)),15).
move(1,((10,2),(9,2)),16).
move(1,((9,2),(8,2)),17).
move(1,((8,2),(8,3)),18).
move(1,((8,3),(8,4)),19).
move(1,((8,4),(7,4)),35).
move(1,((7,4),(6,4)),36).
move(1,((6,4),(5,4)),37).
move(1,((5,4),(4,4)),38).
move(1,((4,4),(4,3)),39).
move(1,((4,3),(3,3)),40).
move(2,((1,6),(2,6)),2).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(2,2)),8).
move(2,((2,2),(1,2)),9).
move(2,((1,2),(1,1)),10).
move(2,((1,1),(1,2)),11).
move(2,((1,2),(2,2)),12).
move(2,((2,2),(2,3)),13).
move(2,((2,3),(2,4)),14).
move(2,((2,4),(3,4)),35).
move(2,((3,4),(3,3)),36).
move(2,((3,3),(3,2)),37).
move(2,((3,2),(4,2)),38).
move(2,((4,2),(5,2)),39).
move(2,((5,2),(5,3)),40).
move(3,((2,6),(3,6)),2).
move(3,((3,6),(3,5)),4).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,2)),7).
move(3,((3,2),(3,1)),8).
move(3,((3,1),(2,1)),9).
move(3,((2,1),(2,2)),10).
move(3,((2,2),(2,3)),11).
move(3,((2,3),(2,4)),12).
move(3,((2,4),(3,4)),14).
move(3,((3,4),(3,3)),20).
move(3,((3,3),(4,3)),21).
move(3,((4,3),(5,3)),22).
move(3,((5,3),(5,2)),23).
move(3,((5,2),(4,2)),24).
move(3,((4,2),(3,2)),25).
move(3,((3,2),(2,2)),26).
move(3,((2,2),(2,3)),27).
move(3,((2,3),(2,2)),34).
move(3,((2,2),(3,2)),36).
move(3,((3,2),(4,2)),37).
move(3,((4,2),(4,3)),38).
move(3,((4,3),(4,2)),39).
move(3,((4,2),(4,3)),40).
move(4,((3,6),(3,5)),2).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(3,3)),5).
move(4,((3,3),(3,2)),6).
move(4,((3,2),(2,2)),7).
move(4,((2,2),(1,2)),8).
move(4,((1,2),(1,1)),9).
move(4,((1,1),(2,1)),10).
move(4,((2,1),(2,2)),11).
move(4,((2,2),(3,2)),12).
move(4,((3,2),(3,3)),13).
move(4,((3,3),(3,2)),20).
move(4,((3,2),(3,3)),21).
move(4,((3,3),(3,4)),22).
move(4,((3,4),(4,4)),34).
move(4,((4,4),(4,3)),35).
move(4,((4,3),(4,2)),36).
move(4,((4,2),(4,3)),37).
move(4,((4,3),(5,3)),38).
move(4,((5,3),(6,3)),39).
move(4,((6,3),(7,3)),40).
move(5,((4,6),(4,5)),3).
move(5,((4,5),(4,4)),4).
move(5,((4,4),(4,3)),5).
move(5,((4,3),(4,2)),6).
move(5,((4,2),(4,1)),7).
move(5,((4,1),(4,2)),8).
move(5,((4,2),(4,3)),9).
move(5,((4,3),(4,4)),10).
move(5,((4,4),(4,3)),34).
move(5,((4,3),(5,3)),35).
move(5,((5,3),(5,2)),36).
move(5,((5,2),(6,2)),37).
move(5,((6,2),(7,2)),38).
move(5,((7,2),(8,2)),39).
move(5,((8,2),(8,3)),40).
move(6,((5,6),(5,5)),3).
move(6,((5,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(7,2)),8).
move(6,((7,2),(7,1)),9).
move(6,((7,1),(8,1)),10).
move(6,((8,1),(9,1)),11).
move(6,((9,1),(9,2)),12).
move(6,((9,2),(8,2)),13).
move(6,((8,2),(7,2)),14).
move(6,((7,2),(6,2)),15).
move(6,((6,2),(5,2)),16).
move(6,((5,2),(5,3)),17).
move(6,((5,3),(5,4)),18).
move(6,((5,4),(4,4)),35).
move(6,((4,4),(3,4)),36).
move(6,((3,4),(2,4)),37).
move(6,((2,4),(3,4)),38).
move(6,((3,4),(2,4)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(7,5)),4).
move(7,((7,5),(8,5)),5).
move(7,((8,5),(9,5)),7).
move(7,((9,5),(9,4)),8).
move(7,((9,4),(9,3)),9).
move(7,((9,3),(10,3)),10).
move(7,((10,3),(11,3)),11).
move(7,((11,3),(11,2)),12).
move(7,((11,2),(10,2)),13).
move(7,((10,2),(9,2)),14).
move(7,((9,2),(8,2)),15).
move(7,((8,2),(7,2)),16).
move(7,((7,2),(6,2)),17).
move(7,((6,2),(6,3)),18).
move(7,((6,3),(6,4)),19).
move(7,((6,4),(6,5)),35).
move(7,((6,5),(7,5)),36).
move(7,((7,5),(8,5)),37).
move(7,((8,5),(8,4)),38).
move(7,((8,4),(9,4)),39).
move(7,((9,4),(9,3)),40).
move(8,((7,6),(7,5)),2).
move(8,((7,5),(7,4)),3).
move(8,((7,4),(6,4)),4).
move(8,((6,4),(7,4)),5).
move(8,((7,4),(7,3)),6).
move(8,((7,3),(7,4)),8).
move(8,((7,4),(7,5)),21).
move(8,((7,5),(7,4)),22).
move(8,((7,4),(7,3)),35).
move(8,((7,3),(8,3)),36).
move(8,((8,3),(8,4)),37).
move(8,((8,4),(9,4)),38).
move(8,((9,4),(10,4)),39).
move(8,((10,4),(10,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.652s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.625s

Choices      : 451      (Domain: 451)
Conflicts    : 29       (Analyzed: 29)
Restarts     : 0       
Model-Level  : 291.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 29       (Deleted: 0)
  Binary     : 1        (Ratio:   3.45%)
  Ternary    : 1        (Ratio:   3.45%)
  Conflict   : 29       (Average Length:   13.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 29       (Average:  5.52 Max:  21 Sum:    160)
  Executed   : 29       (Average:  5.52 Max:  21 Sum:    160 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 279624   (Original: 259753)
  Choice     : 320     
  Heuristic  : 18456    (Original: 18528)
Atoms        : 106458  
Bodies       : 183360   (Original: 163417)
  Count      : 2812     (Original: 3369)
Equivalences : 93246    (Atom=Atom: 342 Body=Body: 351 Other: 92553)
Tight        : Yes
Variables    : 182681   (Eliminated:    0 Frozen: 92083)
Constraints  : 500585   (Binary:  78.2% Ternary:  15.8% Other:   6.0%)

