%%%%%
%Standard
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),5).
move(2,((4,4),(5,4)),7).
move(2,((5,4),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(4,3)),4).
move(3,((4,3),(5,3)),5).
move(3,((5,3),(4,3)),7).
move(3,((4,3),(3,3)),8).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),4).
move(4,((5,3),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(4,((7,3),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(5,2)),4).
move(5,((5,2),(6,2)),5).
move(5,((6,2),(6,3)),6).
move(5,((6,3),(7,3)),7).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(5,4)),3).
move(7,((5,4),(4,4)),4).
move(7,((4,4),(3,4)),5).
move(7,((3,4),(3,3)),6).
move(7,((3,3),(3,4)),7).
move(7,((3,4),(2,4)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(9,6)),4).
move(8,((9,6),(10,6)),5).
move(8,((10,6),(10,5)),6).
move(8,((10,5),(10,4)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(10,2)),4).
move(9,((10,2),(10,3)),5).
move(9,((10,3),(10,4)),6).
move(9,((10,4),(9,4)),7).
move(9,((9,4),(8,4)),8).
move(9,((8,4),(7,4)),9).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(2,6)),9).
move(11,((2,6),(2,5)),10).
move(11,((2,5),(2,4)),11).
move(11,((2,4),(2,3)),12).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.680s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 916     
Conflicts    : 45       (Analyzed: 45)
Restarts     : 0       
Model-Level  : 448.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 45       (Deleted: 0)
  Binary     : 7        (Ratio:  15.56%)
  Ternary    : 3        (Ratio:   6.67%)
  Conflict   : 45       (Average Length:   23.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 45       (Average: 10.40 Max:  67 Sum:    468)
  Executed   : 45       (Average: 10.40 Max:  67 Sum:    468 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353468   (Original: 327181)
  Choice     : 440     
Atoms        : 141635  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(1,5)),1).
move(1,((1,5),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(2,2)),4).
move(2,((2,2),(3,2)),6).
move(2,((3,2),(4,2)),7).
move(2,((4,2),(5,2)),8).
move(2,((5,2),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(4,5)),2).
move(3,((4,5),(5,5)),4).
move(3,((5,5),(5,4)),5).
move(3,((5,4),(5,3)),6).
move(3,((5,3),(4,3)),7).
move(3,((4,3),(3,3)),8).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),4).
move(4,((5,3),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(4,((7,3),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(5,2)),4).
move(5,((5,2),(6,2)),5).
move(5,((6,2),(6,3)),6).
move(5,((6,3),(7,3)),7).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(5,6)),1).
move(7,((5,6),(4,6)),2).
move(7,((4,6),(3,6)),3).
move(7,((3,6),(3,5)),4).
move(7,((3,5),(3,4)),5).
move(7,((3,4),(3,3)),6).
move(7,((3,3),(3,4)),7).
move(7,((3,4),(2,4)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(9,6)),4).
move(8,((9,6),(9,5)),5).
move(8,((9,5),(9,4)),6).
move(8,((9,4),(10,4)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(10,2)),4).
move(9,((10,2),(9,2)),5).
move(9,((9,2),(9,3)),6).
move(9,((9,3),(9,4)),7).
move(9,((9,4),(8,4)),8).
move(9,((8,4),(7,4)),9).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(2,6)),9).
move(11,((2,6),(2,5)),10).
move(11,((2,5),(2,4)),11).
move(11,((2,4),(2,3)),12).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.692s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 1.703s

Choices      : 1417     (Domain: 284)
Conflicts    : 55       (Analyzed: 55)
Restarts     : 0       
Model-Level  : 710.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 55       (Deleted: 0)
  Binary     : 10       (Ratio:  18.18%)
  Ternary    : 3        (Ratio:   5.45%)
  Conflict   : 55       (Average Length:   22.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 55       (Average: 12.85 Max:  71 Sum:    707)
  Executed   : 55       (Average: 12.85 Max:  71 Sum:    707 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353915   (Original: 327628)
  Choice     : 440     
  Heuristic  : 301     
Atoms        : 141781  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(2,5)),2).
move(1,((2,5),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(3,5)),2).
move(2,((3,5),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(2,((4,4),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(6,2)),7).
move(6,((6,2),(5,2)),8).
move(6,((5,2),(4,2)),9).
move(6,((4,2),(4,3)),10).
move(7,((6,6),(5,6)),1).
move(7,((5,6),(4,6)),2).
move(7,((4,6),(3,6)),3).
move(7,((3,6),(3,5)),4).
move(7,((3,5),(3,4)),5).
move(7,((3,4),(2,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(10,5)),4).
move(8,((10,5),(10,4)),5).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(8,4)),4).
move(9,((8,4),(7,4)),5).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(10,5)),2).
move(11,((10,5),(10,4)),3).
move(11,((10,4),(9,4)),4).
move(11,((9,4),(9,3)),5).
move(11,((9,3),(8,3)),6).
move(11,((8,3),(8,2)),7).
move(11,((8,2),(7,2)),8).
move(11,((7,2),(6,2)),9).
move(11,((6,2),(5,2)),10).
move(11,((5,2),(4,2)),11).
move(11,((4,2),(3,2)),12).
move(11,((3,2),(2,2)),13).
move(11,((2,2),(2,3)),14).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.681s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 394      (Domain: 394)
Conflicts    : 2        (Analyzed: 2)
Restarts     : 0       
Model-Level  : 383.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 2        (Deleted: 0)
  Binary     : 2        (Ratio: 100.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 2        (Average Length:    2.0 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 2        (Average:  5.50 Max:   6 Sum:     11)
  Executed   : 2        (Average:  5.50 Max:   6 Sum:     11 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378804   (Original: 352649)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141792  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),4).
move(1,((4,6),(4,5)),5).
move(1,((4,5),(5,5)),6).
move(1,((5,5),(6,5)),7).
move(1,((6,5),(6,4)),8).
move(1,((6,4),(7,4)),9).
move(1,((7,4),(6,4)),10).
move(1,((6,4),(7,4)),11).
move(1,((7,4),(7,3)),12).
move(1,((7,3),(8,3)),13).
move(1,((8,3),(9,3)),14).
move(1,((9,3),(9,2)),15).
move(1,((9,2),(8,2)),31).
move(1,((8,2),(8,3)),40).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,6)),2).
move(2,((2,6),(2,5)),3).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(3,3)),8).
move(2,((3,3),(4,3)),9).
move(2,((4,3),(5,3)),10).
move(2,((5,3),(5,4)),11).
move(2,((5,4),(5,3)),40).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(2,5)),2).
move(3,((2,5),(2,4)),3).
move(3,((2,4),(2,3)),4).
move(3,((2,3),(2,2)),5).
move(3,((2,2),(2,1)),9).
move(3,((2,1),(3,1)),10).
move(3,((3,1),(3,2)),11).
move(3,((3,2),(3,3)),12).
move(3,((3,3),(3,2)),39).
move(3,((3,2),(3,3)),40).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(3,4)),5).
move(4,((3,4),(3,3)),6).
move(4,((3,3),(3,2)),7).
move(4,((3,2),(4,2)),8).
move(4,((4,2),(5,2)),10).
move(4,((5,2),(6,2)),11).
move(4,((6,2),(7,2)),12).
move(4,((7,2),(7,3)),13).
move(4,((7,3),(6,3)),26).
move(4,((6,3),(7,3)),28).
move(4,((7,3),(7,4)),29).
move(4,((7,4),(7,3)),30).
move(4,((7,3),(8,3)),39).
move(4,((8,3),(9,3)),40).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(5,2)),8).
move(5,((5,2),(6,2)),9).
move(5,((6,2),(6,3)),11).
move(5,((6,3),(5,3)),26).
move(5,((5,3),(6,3)),28).
move(5,((6,3),(7,3)),29).
move(5,((7,3),(8,3)),30).
move(5,((8,3),(8,4)),32).
move(5,((8,4),(7,4)),33).
move(5,((7,4),(6,4)),34).
move(5,((6,4),(7,4)),37).
move(5,((7,4),(7,3)),40).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,6)),3).
move(6,((9,6),(9,5)),4).
move(6,((9,5),(8,5)),6).
move(6,((8,5),(8,4)),7).
move(6,((8,4),(8,3)),8).
move(6,((8,3),(7,3)),9).
move(6,((7,3),(7,2)),10).
move(6,((7,2),(7,1)),11).
move(6,((7,1),(6,1)),12).
move(6,((6,1),(5,1)),13).
move(6,((5,1),(4,1)),14).
move(6,((4,1),(3,1)),15).
move(6,((3,1),(3,2)),16).
move(6,((3,2),(4,2)),28).
move(6,((4,2),(4,3)),40).
move(7,((6,6),(5,6)),1).
move(7,((5,6),(4,6)),2).
move(7,((4,6),(4,5)),3).
move(7,((4,5),(3,5)),4).
move(7,((3,5),(2,5)),5).
move(7,((2,5),(2,4)),6).
move(7,((2,4),(1,4)),7).
move(7,((1,4),(1,3)),8).
move(7,((1,3),(2,3)),9).
move(7,((2,3),(2,4)),10).
move(7,((2,4),(2,5)),11).
move(7,((2,5),(2,4)),40).
move(8,((7,6),(7,5)),2).
move(8,((7,5),(7,4)),3).
move(8,((7,4),(7,3)),4).
move(8,((7,3),(8,3)),5).
move(8,((8,3),(8,2)),6).
move(8,((8,2),(9,2)),7).
move(8,((9,2),(9,3)),8).
move(8,((9,3),(9,4)),9).
move(8,((9,4),(10,4)),40).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),6).
move(9,((7,5),(7,4)),7).
move(9,((7,4),(7,5)),8).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(8,4)),2).
move(10,((8,4),(9,4)),3).
move(10,((9,4),(8,4)),4).
move(10,((8,4),(9,4)),5).
move(10,((9,4),(9,3)),6).
move(10,((9,3),(10,3)),7).
move(10,((10,3),(10,2)),8).
move(10,((10,2),(11,2)),9).
move(10,((11,2),(11,1)),10).
move(10,((11,1),(11,2)),11).
move(10,((11,2),(10,2)),12).
move(10,((10,2),(9,2)),13).
move(10,((9,2),(8,2)),15).
move(10,((8,2),(8,3)),18).
move(10,((8,3),(8,4)),21).
move(10,((8,4),(7,4)),22).
move(10,((7,4),(6,4)),25).
move(10,((6,4),(6,3)),29).
move(10,((6,3),(6,2)),30).
move(10,((6,2),(6,3)),31).
move(10,((6,3),(5,3)),33).
move(10,((5,3),(4,3)),35).
move(10,((4,3),(4,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(3,5)),9).
move(11,((3,5),(3,4)),10).
move(11,((3,4),(2,4)),11).
move(11,((2,4),(2,3)),12).
move(11,((2,3),(2,4)),39).
move(11,((2,4),(2,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.900s (Solving: 0.23s 1st Model: 0.23s Unsat: 0.00s)
CPU Time     : 1.906s

Choices      : 4701     (Domain: 663)
Conflicts    : 129      (Analyzed: 129)
Restarts     : 1        (Average: 129.00 Last: 69)
Model-Level  : 697.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 129      (Deleted: 0)
  Binary     : 29       (Ratio:  22.48%)
  Ternary    : 8        (Ratio:   6.20%)
  Conflict   : 129      (Average Length:   39.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 129      (Average: 28.50 Max: 573 Sum:   3677)
  Executed   : 129      (Average: 28.50 Max: 573 Sum:   3677 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378804   (Original: 352649)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141792  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(7,4)),8).
move(1,((7,4),(7,3)),9).
move(1,((7,3),(8,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(3,5)),2).
move(2,((3,5),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(2,((4,4),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(4,4)),3).
move(3,((4,4),(5,4)),4).
move(3,((5,4),(4,4)),5).
move(3,((4,4),(4,3)),6).
move(3,((4,3),(3,3)),8).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(6,4)),5).
move(5,((6,4),(7,4)),9).
move(5,((7,4),(7,3)),40).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(5,6)),4).
move(6,((5,6),(4,6)),5).
move(6,((4,6),(4,5)),6).
move(6,((4,5),(4,4)),7).
move(6,((4,4),(4,3)),8).
move(7,((6,6),(5,6)),1).
move(7,((5,6),(4,6)),2).
move(7,((4,6),(3,6)),3).
move(7,((3,6),(3,5)),4).
move(7,((3,5),(3,4)),5).
move(7,((3,4),(3,3)),7).
move(7,((3,3),(2,3)),8).
move(7,((2,3),(2,4)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(9,4)),4).
move(8,((9,4),(10,4)),5).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(8,4)),4).
move(9,((8,4),(7,4)),5).
move(9,((7,4),(8,4)),7).
move(9,((8,4),(7,4)),40).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(10,((4,4),(3,4)),7).
move(10,((3,4),(4,4)),8).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(2,6)),9).
move(11,((2,6),(2,5)),10).
move(11,((2,5),(2,4)),11).
move(11,((2,4),(1,4)),12).
move(11,((1,4),(1,3)),13).
move(11,((1,3),(2,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.705s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 1.703s

Choices      : 609      (Domain: 42)
Conflicts    : 15       (Analyzed: 15)
Restarts     : 0       
Model-Level  : 449.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 15       (Deleted: 0)
  Binary     : 1        (Ratio:   6.67%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 15       (Average Length:   33.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 15       (Average: 10.67 Max:  28 Sum:    160)
  Executed   : 15       (Average: 10.67 Max:  28 Sum:    160 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354956   (Original: 328691)
  Choice     : 440     
  Heuristic  : 1257     (Original: 1279)
Atoms        : 141866  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(7,5)),7).
move(1,((7,5),(7,4)),8).
move(1,((7,4),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(2,((3,3),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(4,4)),3).
move(3,((4,4),(4,3)),6).
move(3,((4,3),(3,3)),40).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(9,4)),7).
move(4,((9,4),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(8,5)),2).
move(6,((8,5),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(4,5)),6).
move(6,((4,5),(4,4)),7).
move(6,((4,4),(4,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(3,5)),4).
move(7,((3,5),(2,5)),5).
move(7,((2,5),(2,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(8,4)),3).
move(8,((8,4),(9,4)),5).
move(8,((9,4),(10,4)),6).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(9,4)),3).
move(9,((9,4),(9,5)),5).
move(9,((9,5),(8,5)),6).
move(9,((8,5),(8,4)),10).
move(9,((8,4),(7,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(5,4)),5).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(9,5)),3).
move(11,((9,5),(8,5)),4).
move(11,((8,5),(7,5)),5).
move(11,((7,5),(6,5)),6).
move(11,((6,5),(5,5)),7).
move(11,((5,5),(4,5)),8).
move(11,((4,5),(3,5)),9).
move(11,((3,5),(3,4)),10).
move(11,((3,4),(3,3)),12).
move(11,((3,3),(2,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.694s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 1970     (Domain: 1480)
Conflicts    : 14       (Analyzed: 14)
Restarts     : 0       
Model-Level  : 1938.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 14       (Deleted: 0)
  Binary     : 1        (Ratio:   7.14%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 14       (Average Length:   35.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 14       (Average:  2.29 Max:   6 Sum:     32)
  Executed   : 14       (Average:  2.29 Max:   6 Sum:     32 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 355184   (Original: 328900)
  Choice     : 440     
  Heuristic  : 1570     (Original: 1573)
Atoms        : 141781  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(8,5)),8).
move(1,((8,5),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(4,6)),2).
move(2,((4,6),(4,5)),3).
move(2,((4,5),(4,4)),5).
move(2,((4,4),(5,4)),7).
move(2,((5,4),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(4,3)),7).
move(3,((4,3),(3,3)),8).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(4,3)),3).
move(4,((4,3),(5,3)),4).
move(4,((5,3),(6,3)),5).
move(4,((6,3),(7,3)),6).
move(4,((7,3),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(5,2)),4).
move(5,((5,2),(6,2)),5).
move(5,((6,2),(6,3)),6).
move(5,((6,3),(7,3)),7).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(5,4)),3).
move(7,((5,4),(4,4)),4).
move(7,((4,4),(3,4)),5).
move(7,((3,4),(3,5)),6).
move(7,((3,5),(3,4)),7).
move(7,((3,4),(2,4)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(9,6)),4).
move(8,((9,6),(10,6)),5).
move(8,((10,6),(10,5)),6).
move(8,((10,5),(10,4)),7).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(10,2)),4).
move(9,((10,2),(9,2)),5).
move(9,((9,2),(9,3)),6).
move(9,((9,3),(9,4)),7).
move(9,((9,4),(8,4)),8).
move(9,((8,4),(7,4)),9).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(8,6)),3).
move(11,((8,6),(7,6)),4).
move(11,((7,6),(6,6)),5).
move(11,((6,6),(5,6)),6).
move(11,((5,6),(4,6)),7).
move(11,((4,6),(3,6)),8).
move(11,((3,6),(2,6)),9).
move(11,((2,6),(2,5)),10).
move(11,((2,5),(2,4)),11).
move(11,((2,4),(2,3)),12).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.732s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1.734s

Choices      : 975      (Domain: 452)
Conflicts    : 48       (Analyzed: 48)
Restarts     : 0       
Model-Level  : 455.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 48       (Deleted: 0)
  Binary     : 7        (Ratio:  14.58%)
  Ternary    : 3        (Ratio:   6.25%)
  Conflict   : 48       (Average Length:   24.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 48       (Average: 10.83 Max:  67 Sum:    520)
  Executed   : 48       (Average: 10.83 Max:  67 Sum:    520 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378817   (Original: 352651)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141804  
Disjunctions : 0        (Original: 1)
Bodies       : 247623   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128049   (Atom=Atom: 470 Body=Body: 482 Other: 127097)
Tight        : Yes
Variables    : 246824   (Eliminated:    0 Frozen: 126446)
Constraints  : 678181   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(1,5)),3).
move(1,((1,5),(1,4)),4).
move(1,((1,4),(2,4)),5).
move(1,((2,4),(2,3)),6).
move(1,((2,3),(1,3)),7).
move(1,((1,3),(2,3)),9).
move(1,((2,3),(2,4)),10).
move(1,((2,4),(2,5)),11).
move(1,((2,5),(3,5)),12).
move(1,((3,5),(2,5)),13).
move(1,((2,5),(3,5)),17).
move(1,((3,5),(2,5)),23).
move(1,((2,5),(2,4)),24).
move(1,((2,4),(2,5)),25).
move(1,((2,5),(2,4)),29).
move(1,((2,4),(2,3)),31).
move(1,((2,3),(2,2)),32).
move(1,((2,2),(3,2)),34).
move(1,((3,2),(4,2)),35).
move(1,((4,2),(5,2)),36).
move(1,((5,2),(6,2)),37).
move(1,((6,2),(6,3)),38).
move(1,((6,3),(7,3)),39).
move(1,((7,3),(8,3)),40).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(3,3)),8).
move(2,((3,3),(4,3)),9).
move(2,((4,3),(3,3)),10).
move(2,((3,3),(2,3)),11).
move(2,((2,3),(3,3)),12).
move(2,((3,3),(2,3)),14).
move(2,((2,3),(2,4)),15).
move(2,((2,4),(2,5)),17).
move(2,((2,5),(2,4)),23).
move(2,((2,4),(2,3)),24).
move(2,((2,3),(3,3)),26).
move(2,((3,3),(2,3)),32).
move(2,((2,3),(2,4)),33).
move(2,((2,4),(2,3)),37).
move(2,((2,3),(3,3)),38).
move(2,((3,3),(4,3)),39).
move(2,((4,3),(5,3)),40).
move(3,((3,6),(3,5)),3).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,4)),7).
move(3,((3,4),(3,3)),9).
move(3,((3,3),(3,4)),10).
move(3,((3,4),(3,3)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,4)),6).
move(4,((4,4),(5,4)),7).
move(4,((5,4),(4,4)),8).
move(4,((4,4),(4,5)),9).
move(4,((4,5),(5,5)),18).
move(4,((5,5),(5,4)),20).
move(4,((5,4),(6,4)),21).
move(4,((6,4),(6,5)),22).
move(4,((6,5),(5,5)),23).
move(4,((5,5),(4,5)),24).
move(4,((4,5),(4,4)),25).
move(4,((4,4),(4,3)),27).
move(4,((4,3),(5,3)),28).
move(4,((5,3),(4,3)),29).
move(4,((4,3),(4,4)),30).
move(4,((4,4),(4,3)),32).
move(4,((4,3),(5,3)),33).
move(4,((5,3),(6,3)),34).
move(4,((6,3),(6,4)),36).
move(4,((6,4),(6,3)),37).
move(4,((6,3),(7,3)),38).
move(4,((7,3),(8,3)),39).
move(4,((8,3),(9,3)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,4)),6).
move(5,((5,4),(6,4)),7).
move(5,((6,4),(7,4)),8).
move(5,((7,4),(6,4)),9).
move(5,((6,4),(5,4)),10).
move(5,((5,4),(6,4)),18).
move(5,((6,4),(6,3)),20).
move(5,((6,3),(5,3)),21).
move(5,((5,3),(6,3)),22).
move(5,((6,3),(5,3)),23).
move(5,((5,3),(5,4)),24).
move(5,((5,4),(5,3)),38).
move(5,((5,3),(6,3)),39).
move(5,((6,3),(7,3)),40).
move(6,((9,6),(9,5)),3).
move(6,((9,5),(9,4)),4).
move(6,((9,4),(9,3)),5).
move(6,((9,3),(8,3)),7).
move(6,((8,3),(9,3)),8).
move(6,((9,3),(9,4)),10).
move(6,((9,4),(9,3)),11).
move(6,((9,3),(9,4)),12).
move(6,((9,4),(9,3)),13).
move(6,((9,3),(9,4)),14).
move(6,((9,4),(9,5)),16).
move(6,((9,5),(9,4)),18).
move(6,((9,4),(9,3)),21).
move(6,((9,3),(9,4)),22).
move(6,((9,4),(9,3)),25).
move(6,((9,3),(9,4)),27).
move(6,((9,4),(9,3)),28).
move(6,((9,3),(9,4)),29).
move(6,((9,4),(9,3)),30).
move(6,((9,3),(9,4)),31).
move(6,((9,4),(9,3)),32).
move(6,((9,3),(8,3)),33).
move(6,((8,3),(7,3)),35).
move(6,((7,3),(6,3)),36).
move(6,((6,3),(5,3)),37).
move(6,((5,3),(4,3)),38).
move(6,((4,3),(4,4)),39).
move(6,((4,4),(4,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,5)),5).
move(7,((6,5),(5,5)),7).
move(7,((5,5),(5,4)),8).
move(7,((5,4),(4,4)),10).
move(7,((4,4),(5,4)),18).
move(7,((5,4),(4,4)),20).
move(7,((4,4),(5,4)),21).
move(7,((5,4),(6,4)),22).
move(7,((6,4),(6,5)),25).
move(7,((6,5),(5,5)),26).
move(7,((5,5),(4,5)),28).
move(7,((4,5),(5,5)),29).
move(7,((5,5),(6,5)),30).
move(7,((6,5),(6,4)),31).
move(7,((6,4),(6,5)),33).
move(7,((6,5),(5,5)),36).
move(7,((5,5),(4,5)),37).
move(7,((4,5),(3,5)),38).
move(7,((3,5),(2,5)),39).
move(7,((2,5),(2,4)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(8,4)),5).
move(8,((8,4),(8,5)),7).
move(8,((8,5),(9,5)),8).
move(8,((9,5),(9,4)),9).
move(8,((9,4),(8,4)),10).
move(8,((8,4),(7,4)),12).
move(8,((7,4),(8,4)),25).
move(8,((8,4),(9,4)),26).
move(8,((9,4),(8,4)),27).
move(8,((8,4),(9,4)),28).
move(8,((9,4),(8,4)),29).
move(8,((8,4),(9,4)),30).
move(8,((9,4),(8,4)),31).
move(8,((8,4),(9,4)),32).
move(8,((9,4),(8,4)),33).
move(8,((8,4),(7,4)),34).
move(8,((7,4),(8,4)),37).
move(8,((8,4),(9,4)),38).
move(8,((9,4),(10,4)),39).
move(9,((10,6),(9,6)),3).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(10,4)),6).
move(9,((10,4),(9,4)),7).
move(9,((9,4),(8,4)),8).
move(9,((8,4),(8,5)),9).
move(9,((8,5),(9,5)),10).
move(9,((9,5),(9,4)),11).
move(9,((9,4),(10,4)),12).
move(9,((10,4),(9,4)),16).
move(9,((9,4),(10,4)),18).
move(9,((10,4),(10,5)),36).
move(9,((10,5),(9,5)),37).
move(9,((9,5),(8,5)),38).
move(9,((8,5),(8,4)),39).
move(9,((8,4),(7,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,5)),5).
move(10,((8,5),(7,5)),6).
move(10,((7,5),(7,4)),7).
move(10,((7,4),(7,5)),8).
move(10,((7,5),(7,4)),9).
move(10,((7,4),(7,5)),10).
move(10,((7,5),(8,5)),11).
move(10,((8,5),(8,4)),12).
move(10,((8,4),(8,5)),20).
move(10,((8,5),(8,4)),21).
move(10,((8,4),(8,5)),25).
move(10,((8,5),(8,4)),26).
move(10,((8,4),(7,4)),27).
move(10,((7,4),(8,4)),28).
move(10,((8,4),(7,4)),29).
move(10,((7,4),(8,4)),30).
move(10,((8,4),(7,4)),31).
move(10,((7,4),(8,4)),32).
move(10,((8,4),(7,4)),33).
move(10,((7,4),(7,5)),34).
move(10,((7,5),(8,5)),35).
move(10,((8,5),(7,5)),36).
move(10,((7,5),(7,4)),37).
move(10,((7,4),(6,4)),38).
move(10,((6,4),(5,4)),39).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(10,6)),3).
move(11,((10,6),(10,5)),4).
move(11,((10,5),(10,4)),5).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(11,3)),8).
move(11,((11,3),(10,3)),9).
move(11,((10,3),(10,4)),10).
move(11,((10,4),(10,3)),12).
move(11,((10,3),(9,3)),15).
move(11,((9,3),(10,3)),16).
move(11,((10,3),(10,4)),17).
move(11,((10,4),(10,3)),18).
move(11,((10,3),(9,3)),24).
move(11,((9,3),(10,3)),25).
move(11,((10,3),(9,3)),29).
move(11,((9,3),(8,3)),30).
move(11,((8,3),(7,3)),31).
move(11,((7,3),(6,3)),32).
move(11,((6,3),(6,2)),33).
move(11,((6,2),(5,2)),34).
move(11,((5,2),(5,3)),35).
move(11,((5,3),(4,3)),36).
move(11,((4,3),(3,3)),37).
move(11,((3,3),(3,2)),38).
move(11,((3,2),(3,3)),39).
move(11,((3,3),(2,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.691s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 441      (Domain: 441)
Conflicts    : 28       (Analyzed: 28)
Restarts     : 0       
Model-Level  : 389.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 28       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 1        (Ratio:   3.57%)
  Conflict   : 28       (Average Length:   22.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 28       (Average:  1.86 Max:   6 Sum:     52)
  Executed   : 28       (Average:  1.86 Max:   6 Sum:     52 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378793   (Original: 352638)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141781  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),2).
move(1,((2,6),(2,5)),4).
move(1,((2,5),(2,4)),6).
move(1,((2,4),(2,3)),7).
move(1,((2,3),(2,2)),8).
move(1,((2,2),(1,2)),9).
move(1,((1,2),(1,1)),10).
move(1,((1,1),(1,2)),11).
move(1,((1,2),(2,2)),12).
move(1,((2,2),(2,3)),13).
move(1,((2,3),(2,4)),14).
move(1,((2,4),(3,4)),34).
move(1,((3,4),(4,4)),35).
move(1,((4,4),(5,4)),36).
move(1,((5,4),(6,4)),37).
move(1,((6,4),(7,4)),38).
move(1,((7,4),(8,4)),39).
move(1,((8,4),(8,3)),40).
move(2,((2,6),(3,6)),2).
move(2,((3,6),(3,5)),4).
move(2,((3,5),(3,4)),5).
move(2,((3,4),(3,3)),6).
move(2,((3,3),(3,2)),7).
move(2,((3,2),(3,1)),8).
move(2,((3,1),(2,1)),9).
move(2,((2,1),(2,2)),10).
move(2,((2,2),(2,3)),11).
move(2,((2,3),(2,4)),12).
move(2,((2,4),(3,4)),14).
move(2,((3,4),(3,3)),33).
move(2,((3,3),(2,3)),34).
move(2,((2,3),(3,3)),36).
move(2,((3,3),(4,3)),37).
move(2,((4,3),(4,4)),38).
move(2,((4,4),(5,4)),39).
move(2,((5,4),(5,3)),40).
move(3,((3,6),(3,5)),2).
move(3,((3,5),(3,4)),4).
move(3,((3,4),(3,3)),5).
move(3,((3,3),(3,2)),6).
move(3,((3,2),(2,2)),7).
move(3,((2,2),(2,1)),8).
move(3,((2,1),(1,1)),9).
move(3,((1,1),(2,1)),10).
move(3,((2,1),(2,2)),11).
move(3,((2,2),(3,2)),12).
move(3,((3,2),(3,3)),13).
move(3,((3,3),(2,3)),33).
move(3,((2,3),(2,4)),34).
move(3,((2,4),(3,4)),36).
move(3,((3,4),(4,4)),37).
move(3,((4,4),(3,4)),38).
move(3,((3,4),(3,3)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,2)),6).
move(4,((4,2),(4,1)),7).
move(4,((4,1),(4,2)),8).
move(4,((4,2),(4,3)),9).
move(4,((4,3),(4,4)),11).
move(4,((4,4),(4,3)),33).
move(4,((4,3),(4,4)),34).
move(4,((4,4),(5,4)),35).
move(4,((5,4),(6,4)),36).
move(4,((6,4),(7,4)),37).
move(4,((7,4),(8,4)),38).
move(4,((8,4),(9,4)),39).
move(4,((9,4),(9,3)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(5,2)),6).
move(5,((5,2),(5,1)),7).
move(5,((5,1),(5,2)),8).
move(5,((5,2),(5,3)),9).
move(5,((5,3),(5,4)),10).
move(5,((5,4),(6,4)),33).
move(5,((6,4),(5,4)),34).
move(5,((5,4),(5,5)),35).
move(5,((5,5),(5,4)),37).
move(5,((5,4),(6,4)),38).
move(5,((6,4),(6,3)),39).
move(5,((6,3),(7,3)),40).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),5).
move(6,((9,4),(9,3)),6).
move(6,((9,3),(9,2)),7).
move(6,((9,2),(10,2)),8).
move(6,((10,2),(10,1)),9).
move(6,((10,1),(11,1)),10).
move(6,((11,1),(10,1)),11).
move(6,((10,1),(10,2)),12).
move(6,((10,2),(9,2)),13).
move(6,((9,2),(9,3)),14).
move(6,((9,3),(9,4)),15).
move(6,((9,4),(9,3)),35).
move(6,((9,3),(8,3)),36).
move(6,((8,3),(7,3)),37).
move(6,((7,3),(6,3)),38).
move(6,((6,3),(5,3)),39).
move(6,((5,3),(4,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,3)),5).
move(7,((6,3),(6,2)),6).
move(7,((6,2),(6,1)),7).
move(7,((6,1),(6,2)),8).
move(7,((6,2),(6,3)),9).
move(7,((6,3),(6,2)),10).
move(7,((6,2),(6,3)),11).
move(7,((6,3),(6,4)),12).
move(7,((6,4),(6,3)),33).
move(7,((6,3),(5,3)),34).
move(7,((5,3),(4,3)),35).
move(7,((4,3),(4,2)),36).
move(7,((4,2),(3,2)),37).
move(7,((3,2),(2,2)),38).
move(7,((2,2),(2,3)),39).
move(7,((2,3),(2,4)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(7,2)),8).
move(8,((7,2),(7,3)),9).
move(8,((7,3),(7,4)),10).
move(8,((7,4),(7,5)),34).
move(8,((7,5),(8,5)),35).
move(8,((8,5),(7,5)),36).
move(8,((7,5),(8,5)),37).
move(8,((8,5),(9,5)),38).
move(8,((9,5),(10,5)),39).
move(8,((10,5),(10,4)),40).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(10,6)),3).
move(9,((10,6),(10,5)),4).
move(9,((10,5),(10,4)),6).
move(9,((10,4),(10,3)),7).
move(9,((10,3),(11,3)),8).
move(9,((11,3),(11,2)),9).
move(9,((11,2),(10,2)),10).
move(9,((10,2),(10,3)),11).
move(9,((10,3),(10,4)),12).
move(9,((10,4),(9,4)),35).
move(9,((9,4),(8,4)),36).
move(9,((8,4),(8,3)),37).
move(9,((8,3),(7,3)),38).
move(9,((7,3),(7,4)),39).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,3)),5).
move(10,((8,3),(8,2)),6).
move(10,((8,2),(8,1)),7).
move(10,((8,1),(9,1)),8).
move(10,((9,1),(9,2)),9).
move(10,((9,2),(8,2)),10).
move(10,((8,2),(8,3)),11).
move(10,((8,3),(8,4)),12).
move(10,((8,4),(8,3)),33).
move(10,((8,3),(8,2)),34).
move(10,((8,2),(7,2)),35).
move(10,((7,2),(6,2)),36).
move(10,((6,2),(5,2)),37).
move(10,((5,2),(4,2)),38).
move(10,((4,2),(4,3)),39).
move(10,((4,3),(4,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),3).
move(11,((10,5),(10,4)),4).
move(11,((10,4),(10,3)),6).
move(11,((10,3),(10,2)),7).
move(11,((10,2),(11,2)),8).
move(11,((11,2),(11,1)),9).
move(11,((11,1),(11,2)),10).
move(11,((11,2),(10,2)),11).
move(11,((10,2),(10,3)),12).
move(11,((10,3),(9,3)),33).
move(11,((9,3),(8,3)),34).
move(11,((8,3),(7,3)),35).
move(11,((7,3),(6,3)),36).
move(11,((6,3),(5,3)),37).
move(11,((5,3),(4,3)),38).
move(11,((4,3),(3,3)),39).
move(11,((3,3),(2,3)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.691s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.688s

Choices      : 572      (Domain: 572)
Conflicts    : 23       (Analyzed: 23)
Restarts     : 0       
Model-Level  : 383.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 23       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 23       (Average Length:   19.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 23       (Average:  8.22 Max:  22 Sum:    189)
  Executed   : 23       (Average:  8.22 Max:  22 Sum:    189 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378793   (Original: 352638)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141781  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

