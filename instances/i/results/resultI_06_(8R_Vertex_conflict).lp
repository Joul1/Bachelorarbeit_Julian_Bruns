%%%%%
%Standard
%%%%%
move(1,((1,3),(2,3)),1).
move(1,((2,3),(3,3)),2).
move(1,((3,3),(4,3)),4).
move(1,((4,3),(5,3)),40).
move(2,((5,3),(4,3)),1).
move(2,((4,3),(4,4)),2).
move(2,((4,4),(3,4)),3).
move(2,((3,4),(2,4)),4).
move(2,((2,4),(2,3)),39).
move(2,((2,3),(1,3)),40).
move(3,((3,1),(3,2)),1).
move(3,((3,2),(4,2)),2).
move(3,((4,2),(4,3)),3).
move(3,((4,3),(4,4)),4).
move(3,((4,4),(3,4)),5).
move(3,((3,4),(3,5)),6).
move(3,((3,5),(3,4)),7).
move(3,((3,4),(3,5)),9).
move(3,((3,5),(3,4)),10).
move(3,((3,4),(3,5)),12).
move(3,((3,5),(3,4)),13).
move(3,((3,4),(3,5)),14).
move(3,((3,5),(3,4)),15).
move(3,((3,4),(3,5)),16).
move(3,((3,5),(3,4)),17).
move(3,((3,4),(3,5)),18).
move(3,((3,5),(3,4)),19).
move(3,((3,4),(3,5)),20).
move(3,((3,5),(3,4)),21).
move(3,((3,4),(3,5)),22).
move(3,((3,5),(3,4)),23).
move(3,((3,4),(3,5)),24).
move(3,((3,5),(3,4)),25).
move(3,((3,4),(3,5)),26).
move(3,((3,5),(3,4)),27).
move(3,((3,4),(3,5)),28).
move(3,((3,5),(3,4)),29).
move(3,((3,4),(3,5)),30).
move(3,((3,5),(3,4)),31).
move(3,((3,4),(3,5)),32).
move(3,((3,5),(3,4)),33).
move(3,((3,4),(3,5)),34).
move(3,((3,5),(3,4)),35).
move(3,((3,4),(3,5)),36).
move(3,((3,5),(3,4)),37).
move(3,((3,4),(3,5)),39).
move(4,((3,5),(3,4)),1).
move(4,((3,4),(2,4)),2).
move(4,((2,4),(2,3)),3).
move(4,((2,3),(3,3)),4).
move(4,((3,3),(3,2)),5).
move(4,((3,2),(2,2)),6).
move(4,((2,2),(3,2)),7).
move(4,((3,2),(3,1)),8).
move(4,((3,1),(3,2)),9).
move(4,((3,2),(3,1)),10).
move(4,((3,1),(3,2)),11).
move(4,((3,2),(2,2)),12).
move(4,((2,2),(3,2)),13).
move(4,((3,2),(2,2)),14).
move(4,((2,2),(3,2)),15).
move(4,((3,2),(3,1)),16).
move(4,((3,1),(3,2)),17).
move(4,((3,2),(2,2)),18).
move(4,((2,2),(3,2)),19).
move(4,((3,2),(2,2)),20).
move(4,((2,2),(3,2)),21).
move(4,((3,2),(2,2)),22).
move(4,((2,2),(3,2)),23).
move(4,((3,2),(3,1)),24).
move(4,((3,1),(3,2)),25).
move(4,((3,2),(2,2)),26).
move(4,((2,2),(3,2)),27).
move(4,((3,2),(2,2)),28).
move(4,((2,2),(3,2)),29).
move(4,((3,2),(2,2)),30).
move(4,((2,2),(3,2)),31).
move(4,((3,2),(3,1)),32).
move(4,((3,1),(3,2)),33).
move(4,((3,2),(2,2)),34).
move(4,((2,2),(3,2)),35).
move(4,((3,2),(2,2)),36).
move(4,((2,2),(3,2)),37).
move(4,((3,2),(3,1)),38).
move(4,((3,1),(3,2)),39).
move(4,((3,2),(3,1)),40).
move(5,((2,2),(3,2)),2).
move(5,((3,2),(3,1)),4).
move(5,((3,1),(3,2)),6).
move(5,((3,2),(3,3)),7).
move(5,((3,3),(3,4)),9).
move(5,((3,4),(4,4)),10).
move(6,((4,4),(3,4)),2).
move(6,((3,4),(2,4)),3).
move(6,((2,4),(2,3)),4).
move(6,((2,3),(1,3)),5).
move(6,((1,3),(2,3)),9).
move(6,((2,3),(2,2)),37).
move(7,((2,4),(2,3)),2).
move(7,((2,3),(2,2)),3).
move(7,((2,2),(3,2)),4).
move(7,((3,2),(4,2)),5).
move(8,((4,2),(4,3)),2).
move(8,((4,3),(4,4)),3).
move(8,((4,4),(3,4)),4).
move(8,((3,4),(3,3)),5).
move(8,((3,3),(2,3)),6).
move(8,((2,3),(3,3)),9).
move(8,((3,3),(3,4)),39).
move(8,((3,4),(2,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.218s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.219s

Choices      : 485     
Conflicts    : 18       (Analyzed: 18)
Restarts     : 0       
Model-Level  : 220.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 18       (Deleted: 0)
  Binary     : 3        (Ratio:  16.67%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 18       (Average Length:  160.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 18       (Average: 14.72 Max: 106 Sum:    265)
  Executed   : 18       (Average: 14.72 Max: 106 Sum:    265 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 42815    (Original: 38995)
  Choice     : 320     
Atoms        : 18380   
Bodies       : 30648    (Original: 26828)
  Count      : 1115     (Original: 1467)
Equivalences : 15291    (Atom=Atom: 331 Body=Body: 340 Other: 14620)
Tight        : Yes
Variables    : 29588    (Eliminated:    0 Frozen: 14196)
Constraints  : 81079    (Binary:  75.3% Ternary:  17.8% Other:   6.9%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,3),(2,3)),2).
move(1,((2,3),(3,3)),3).
move(1,((3,3),(4,3)),4).
move(1,((4,3),(5,3)),40).
move(2,((5,3),(4,3)),1).
move(2,((4,3),(3,3)),2).
move(2,((3,3),(3,4)),3).
move(2,((3,4),(2,4)),4).
move(2,((2,4),(2,3)),39).
move(2,((2,3),(1,3)),40).
move(3,((3,1),(3,2)),1).
move(3,((3,2),(4,2)),2).
move(3,((4,2),(4,3)),3).
move(3,((4,3),(4,4)),4).
move(3,((4,4),(3,4)),5).
move(3,((3,4),(3,5)),7).
move(3,((3,5),(3,4)),8).
move(3,((3,4),(3,5)),9).
move(3,((3,5),(3,4)),10).
move(3,((3,4),(3,5)),11).
move(3,((3,5),(3,4)),12).
move(3,((3,4),(3,5)),13).
move(3,((3,5),(3,4)),14).
move(3,((3,4),(3,5)),15).
move(3,((3,5),(3,4)),16).
move(3,((3,4),(3,5)),17).
move(3,((3,5),(3,4)),18).
move(3,((3,4),(3,5)),19).
move(3,((3,5),(3,4)),20).
move(3,((3,4),(3,5)),21).
move(3,((3,5),(3,4)),22).
move(3,((3,4),(3,5)),23).
move(3,((3,5),(3,4)),24).
move(3,((3,4),(3,5)),25).
move(3,((3,5),(3,4)),26).
move(3,((3,4),(3,5)),27).
move(3,((3,5),(3,4)),28).
move(3,((3,4),(3,5)),29).
move(3,((3,5),(3,4)),30).
move(3,((3,4),(3,5)),31).
move(3,((3,5),(3,4)),32).
move(3,((3,4),(3,5)),33).
move(3,((3,5),(3,4)),34).
move(3,((3,4),(3,5)),35).
move(3,((3,5),(3,4)),36).
move(3,((3,4),(3,5)),37).
move(3,((3,5),(3,4)),38).
move(3,((3,4),(3,5)),39).
move(4,((3,5),(3,4)),1).
move(4,((3,4),(2,4)),2).
move(4,((2,4),(2,3)),3).
move(4,((2,3),(3,3)),4).
move(4,((3,3),(3,2)),5).
move(4,((3,2),(3,3)),6).
move(4,((3,3),(3,2)),9).
move(4,((3,2),(3,3)),10).
move(4,((3,3),(3,2)),11).
move(4,((3,2),(3,1)),13).
move(4,((3,1),(3,2)),15).
move(4,((3,2),(3,3)),16).
move(4,((3,3),(3,2)),18).
move(4,((3,2),(2,2)),19).
move(4,((2,2),(3,2)),21).
move(4,((3,2),(2,2)),22).
move(4,((2,2),(3,2)),23).
move(4,((3,2),(3,3)),24).
move(4,((3,3),(3,2)),26).
move(4,((3,2),(2,2)),27).
move(4,((2,2),(3,2)),29).
move(4,((3,2),(3,1)),31).
move(4,((3,1),(3,2)),32).
move(4,((3,2),(2,2)),33).
move(4,((2,2),(3,2)),35).
move(4,((3,2),(3,3)),36).
move(4,((3,3),(3,2)),38).
move(4,((3,2),(3,1)),39).
move(5,((2,2),(3,2)),2).
move(5,((3,2),(3,1)),4).
move(5,((3,1),(3,2)),10).
move(5,((3,2),(2,2)),11).
move(5,((2,2),(2,3)),12).
move(5,((2,3),(3,3)),18).
move(5,((3,3),(3,4)),19).
move(5,((3,4),(4,4)),20).
move(6,((4,4),(3,4)),2).
move(6,((3,4),(2,4)),3).
move(6,((2,4),(2,3)),4).
move(6,((2,3),(2,2)),5).
move(6,((2,2),(3,2)),6).
move(6,((3,2),(2,2)),7).
move(6,((2,2),(2,3)),9).
move(6,((2,3),(3,3)),12).
move(6,((3,3),(3,2)),13).
move(6,((3,2),(2,2)),14).
move(6,((2,2),(3,2)),16).
move(6,((3,2),(3,1)),17).
move(6,((3,1),(3,2)),22).
move(6,((3,2),(3,3)),23).
move(6,((3,3),(2,3)),24).
move(6,((2,3),(3,3)),34).
move(6,((3,3),(2,3)),36).
move(6,((2,3),(2,2)),37).
move(6,((2,2),(2,3)),38).
move(6,((2,3),(2,2)),39).
move(7,((2,4),(2,3)),1).
move(7,((2,3),(2,2)),2).
move(7,((2,2),(3,2)),4).
move(7,((3,2),(4,2)),5).
move(8,((4,2),(4,3)),2).
move(8,((4,3),(4,4)),3).
move(8,((4,4),(3,4)),4).
move(8,((3,4),(3,3)),5).
move(8,((3,3),(2,3)),6).
move(8,((2,3),(1,3)),9).
move(8,((1,3),(2,3)),37).
move(8,((2,3),(3,3)),38).
move(8,((3,3),(3,4)),39).
move(8,((3,4),(2,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.244s (Solving: 0.02s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 0.234s

Choices      : 632     
Conflicts    : 68       (Analyzed: 68)
Restarts     : 0       
Model-Level  : 229.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 68       (Deleted: 0)
  Binary     : 3        (Ratio:   4.41%)
  Ternary    : 7        (Ratio:  10.29%)
  Conflict   : 68       (Average Length:   69.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 68       (Average:  5.93 Max: 106 Sum:    403)
  Executed   : 68       (Average:  5.93 Max: 106 Sum:    403 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 43000    (Original: 39180)
  Choice     : 320     
  Heuristic  : 115     
Atoms        : 18450   
Bodies       : 30648    (Original: 26828)
  Count      : 1115     (Original: 1467)
Equivalences : 15291    (Atom=Atom: 331 Body=Body: 340 Other: 14620)
Tight        : Yes
Variables    : 29588    (Eliminated:    0 Frozen: 14196)
Constraints  : 81079    (Binary:  75.3% Ternary:  17.8% Other:   6.9%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,3),(2,3)),1).
move(1,((2,3),(3,3)),2).
move(1,((3,3),(4,3)),4).
move(1,((4,3),(5,3)),40).
move(2,((5,3),(4,3)),1).
move(2,((4,3),(4,4)),2).
move(2,((4,4),(3,4)),3).
move(2,((3,4),(2,4)),4).
move(2,((2,4),(2,3)),39).
move(2,((2,3),(1,3)),40).
move(3,((3,1),(3,2)),1).
move(3,((3,2),(4,2)),2).
move(3,((4,2),(4,3)),3).
move(3,((4,3),(4,4)),4).
move(3,((4,4),(3,4)),5).
move(3,((3,4),(3,5)),6).
move(3,((3,5),(3,4)),8).
move(3,((3,4),(3,5)),9).
move(3,((3,5),(3,4)),10).
move(3,((3,4),(3,5)),12).
move(3,((3,5),(3,4)),13).
move(3,((3,4),(3,5)),14).
move(3,((3,5),(3,4)),15).
move(3,((3,4),(3,5)),16).
move(3,((3,5),(3,4)),17).
move(3,((3,4),(3,5)),18).
move(3,((3,5),(3,4)),19).
move(3,((3,4),(3,5)),20).
move(3,((3,5),(3,4)),21).
move(3,((3,4),(3,5)),22).
move(3,((3,5),(3,4)),23).
move(3,((3,4),(3,5)),24).
move(3,((3,5),(3,4)),25).
move(3,((3,4),(3,5)),26).
move(3,((3,5),(3,4)),27).
move(3,((3,4),(3,5)),28).
move(3,((3,5),(3,4)),29).
move(3,((3,4),(3,5)),30).
move(3,((3,5),(3,4)),31).
move(3,((3,4),(3,5)),32).
move(3,((3,5),(3,4)),33).
move(3,((3,4),(3,5)),34).
move(3,((3,5),(3,4)),35).
move(3,((3,4),(3,5)),36).
move(3,((3,5),(3,4)),37).
move(3,((3,4),(3,5)),39).
move(4,((3,5),(3,4)),1).
move(4,((3,4),(2,4)),2).
move(4,((2,4),(2,3)),3).
move(4,((2,3),(3,3)),4).
move(4,((3,3),(3,2)),5).
move(4,((3,2),(3,1)),6).
move(4,((3,1),(3,2)),7).
move(4,((3,2),(4,2)),8).
move(4,((4,2),(3,2)),10).
move(4,((3,2),(3,3)),11).
move(4,((3,3),(3,2)),12).
move(4,((3,2),(3,1)),14).
move(4,((3,1),(3,2)),15).
move(4,((3,2),(4,2)),16).
move(4,((4,2),(3,2)),17).
move(4,((3,2),(3,1)),18).
move(4,((3,1),(3,2)),19).
move(4,((3,2),(3,3)),20).
move(4,((3,3),(3,2)),21).
move(4,((3,2),(2,2)),22).
move(4,((2,2),(3,2)),23).
move(4,((3,2),(4,2)),24).
move(4,((4,2),(3,2)),25).
move(4,((3,2),(2,2)),26).
move(4,((2,2),(3,2)),27).
move(4,((3,2),(2,2)),28).
move(4,((2,2),(3,2)),29).
move(4,((3,2),(2,2)),30).
move(4,((2,2),(3,2)),31).
move(4,((3,2),(3,1)),32).
move(4,((3,1),(3,2)),33).
move(4,((3,2),(2,2)),34).
move(4,((2,2),(3,2)),35).
move(4,((3,2),(4,2)),36).
move(4,((4,2),(3,2)),38).
move(4,((3,2),(3,1)),39).
move(5,((2,2),(3,2)),2).
move(5,((3,2),(4,2)),4).
move(5,((4,2),(3,2)),6).
move(5,((3,2),(3,3)),7).
move(5,((3,3),(3,4)),9).
move(5,((3,4),(4,4)),10).
move(6,((4,4),(3,4)),2).
move(6,((3,4),(2,4)),3).
move(6,((2,4),(2,3)),4).
move(6,((2,3),(1,3)),5).
move(6,((1,3),(2,3)),36).
move(6,((2,3),(2,2)),39).
move(7,((2,4),(2,3)),2).
move(7,((2,3),(2,2)),3).
move(7,((2,2),(3,2)),4).
move(7,((3,2),(2,2)),5).
move(7,((2,2),(3,2)),9).
move(7,((3,2),(3,3)),10).
move(7,((3,3),(2,3)),11).
move(7,((2,3),(3,3)),15).
move(7,((3,3),(3,2)),18).
move(7,((3,2),(2,2)),19).
move(7,((2,2),(2,3)),22).
move(7,((2,3),(2,2)),23).
move(7,((2,2),(2,3)),26).
move(7,((2,3),(2,2)),29).
move(7,((2,2),(2,3)),30).
move(7,((2,3),(2,2)),31).
move(7,((2,2),(2,3)),34).
move(7,((2,3),(2,2)),36).
move(7,((2,2),(3,2)),39).
move(7,((3,2),(4,2)),40).
move(8,((4,2),(4,3)),2).
move(8,((4,3),(4,4)),3).
move(8,((4,4),(3,4)),4).
move(8,((3,4),(3,3)),5).
move(8,((3,3),(2,3)),6).
move(8,((2,3),(2,2)),9).
move(8,((2,2),(2,3)),15).
move(8,((2,3),(3,3)),21).
move(8,((3,3),(3,2)),37).
move(8,((3,2),(3,3)),38).
move(8,((3,3),(3,4)),39).
move(8,((3,4),(2,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.270s (Solving: 0.05s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 0.234s

Choices      : 586     
Conflicts    : 51       (Analyzed: 51)
Restarts     : 0       
Model-Level  : 211.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 51       (Deleted: 0)
  Binary     : 4        (Ratio:   7.84%)
  Ternary    : 2        (Ratio:   3.92%)
  Conflict   : 51       (Average Length:   90.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 51       (Average:  7.35 Max: 106 Sum:    375)
  Executed   : 51       (Average:  7.35 Max: 106 Sum:    375 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 42893    (Original: 39073)
  Choice     : 320     
Atoms        : 18458   
Bodies       : 30648    (Original: 26828)
  Count      : 1115     (Original: 1467)
Equivalences : 15291    (Atom=Atom: 331 Body=Body: 340 Other: 14620)
Tight        : Yes
Variables    : 29588    (Eliminated:    0 Frozen: 14196)
Constraints  : 81079    (Binary:  75.3% Ternary:  17.8% Other:   6.9%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,3),(2,3)),1).
move(1,((2,3),(3,3)),2).
move(1,((3,3),(4,3)),4).
move(1,((4,3),(5,3)),40).
move(2,((5,3),(4,3)),1).
move(2,((4,3),(4,4)),2).
move(2,((4,4),(3,4)),3).
move(2,((3,4),(2,4)),4).
move(2,((2,4),(2,3)),39).
move(2,((2,3),(1,3)),40).
move(3,((3,1),(3,2)),1).
move(3,((3,2),(4,2)),2).
move(3,((4,2),(4,3)),3).
move(3,((4,3),(4,4)),4).
move(3,((4,4),(3,4)),5).
move(3,((3,4),(3,5)),6).
move(3,((3,5),(3,4)),8).
move(3,((3,4),(3,5)),9).
move(3,((3,5),(3,4)),10).
move(3,((3,4),(3,5)),12).
move(3,((3,5),(3,4)),13).
move(3,((3,4),(3,5)),14).
move(3,((3,5),(3,4)),15).
move(3,((3,4),(3,5)),16).
move(3,((3,5),(3,4)),17).
move(3,((3,4),(3,5)),18).
move(3,((3,5),(3,4)),19).
move(3,((3,4),(3,5)),20).
move(3,((3,5),(3,4)),21).
move(3,((3,4),(3,5)),22).
move(3,((3,5),(3,4)),23).
move(3,((3,4),(3,5)),24).
move(3,((3,5),(3,4)),25).
move(3,((3,4),(3,5)),26).
move(3,((3,5),(3,4)),27).
move(3,((3,4),(3,5)),28).
move(3,((3,5),(3,4)),29).
move(3,((3,4),(3,5)),30).
move(3,((3,5),(3,4)),31).
move(3,((3,4),(3,5)),32).
move(3,((3,5),(3,4)),33).
move(3,((3,4),(3,5)),34).
move(3,((3,5),(3,4)),35).
move(3,((3,4),(3,5)),36).
move(3,((3,5),(3,4)),37).
move(3,((3,4),(3,5)),39).
move(4,((3,5),(3,4)),1).
move(4,((3,4),(2,4)),2).
move(4,((2,4),(2,3)),3).
move(4,((2,3),(3,3)),4).
move(4,((3,3),(3,2)),5).
move(4,((3,2),(3,1)),6).
move(4,((3,1),(3,2)),7).
move(4,((3,2),(4,2)),8).
move(4,((4,2),(3,2)),10).
move(4,((3,2),(3,3)),11).
move(4,((3,3),(3,2)),12).
move(4,((3,2),(3,1)),14).
move(4,((3,1),(3,2)),15).
move(4,((3,2),(4,2)),16).
move(4,((4,2),(3,2)),17).
move(4,((3,2),(3,1)),18).
move(4,((3,1),(3,2)),19).
move(4,((3,2),(3,3)),20).
move(4,((3,3),(3,2)),21).
move(4,((3,2),(2,2)),22).
move(4,((2,2),(3,2)),23).
move(4,((3,2),(4,2)),24).
move(4,((4,2),(3,2)),25).
move(4,((3,2),(2,2)),26).
move(4,((2,2),(3,2)),27).
move(4,((3,2),(2,2)),28).
move(4,((2,2),(3,2)),29).
move(4,((3,2),(2,2)),30).
move(4,((2,2),(3,2)),31).
move(4,((3,2),(3,1)),32).
move(4,((3,1),(3,2)),33).
move(4,((3,2),(2,2)),34).
move(4,((2,2),(3,2)),35).
move(4,((3,2),(4,2)),36).
move(4,((4,2),(3,2)),38).
move(4,((3,2),(3,1)),39).
move(5,((2,2),(3,2)),2).
move(5,((3,2),(4,2)),4).
move(5,((4,2),(3,2)),6).
move(5,((3,2),(3,3)),7).
move(5,((3,3),(3,4)),9).
move(5,((3,4),(4,4)),10).
move(6,((4,4),(3,4)),2).
move(6,((3,4),(2,4)),3).
move(6,((2,4),(2,3)),4).
move(6,((2,3),(1,3)),5).
move(6,((1,3),(2,3)),36).
move(6,((2,3),(2,2)),39).
move(7,((2,4),(2,3)),2).
move(7,((2,3),(2,2)),3).
move(7,((2,2),(3,2)),4).
move(7,((3,2),(2,2)),5).
move(7,((2,2),(3,2)),9).
move(7,((3,2),(3,3)),10).
move(7,((3,3),(2,3)),11).
move(7,((2,3),(3,3)),15).
move(7,((3,3),(3,2)),18).
move(7,((3,2),(2,2)),19).
move(7,((2,2),(2,3)),22).
move(7,((2,3),(2,2)),23).
move(7,((2,2),(2,3)),26).
move(7,((2,3),(2,2)),29).
move(7,((2,2),(2,3)),30).
move(7,((2,3),(2,2)),31).
move(7,((2,2),(2,3)),34).
move(7,((2,3),(2,2)),36).
move(7,((2,2),(3,2)),39).
move(7,((3,2),(4,2)),40).
move(8,((4,2),(4,3)),2).
move(8,((4,3),(4,4)),3).
move(8,((4,4),(3,4)),4).
move(8,((3,4),(3,3)),5).
move(8,((3,3),(2,3)),6).
move(8,((2,3),(2,2)),9).
move(8,((2,2),(2,3)),15).
move(8,((2,3),(3,3)),21).
move(8,((3,3),(3,2)),37).
move(8,((3,2),(3,3)),38).
move(8,((3,3),(3,4)),39).
move(8,((3,4),(2,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.273s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.281s

Choices      : 586     
Conflicts    : 51       (Analyzed: 51)
Restarts     : 0       
Model-Level  : 211.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 51       (Deleted: 0)
  Binary     : 4        (Ratio:   7.84%)
  Ternary    : 2        (Ratio:   3.92%)
  Conflict   : 51       (Average Length:   90.5 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 51       (Average:  7.35 Max: 106 Sum:    375)
  Executed   : 51       (Average:  7.35 Max: 106 Sum:    375 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 42893    (Original: 39073)
  Choice     : 320     
Atoms        : 18458   
Bodies       : 30648    (Original: 26828)
  Count      : 1115     (Original: 1467)
Equivalences : 15291    (Atom=Atom: 331 Body=Body: 340 Other: 14620)
Tight        : Yes
Variables    : 29588    (Eliminated:    0 Frozen: 14196)
Constraints  : 81079    (Binary:  75.3% Ternary:  17.8% Other:   6.9%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,3),(2,3)),1).
move(1,((2,3),(3,3)),2).
move(1,((3,3),(4,3)),3).
move(1,((4,3),(5,3)),4).
move(2,((5,3),(4,3)),1).
move(2,((4,3),(4,4)),2).
move(2,((4,4),(3,4)),3).
move(2,((3,4),(2,4)),4).
move(2,((2,4),(2,3)),39).
move(2,((2,3),(1,3)),40).
move(3,((3,1),(3,2)),2).
move(3,((3,2),(3,3)),3).
move(3,((3,3),(3,4)),4).
move(3,((3,4),(3,5)),5).
move(3,((3,5),(3,4)),6).
move(3,((3,4),(3,5)),8).
move(3,((3,5),(3,4)),9).
move(3,((3,4),(3,5)),10).
move(3,((3,5),(3,4)),11).
move(3,((3,4),(3,5)),12).
move(3,((3,5),(3,4)),13).
move(3,((3,4),(3,5)),14).
move(3,((3,5),(3,4)),15).
move(3,((3,4),(3,5)),16).
move(3,((3,5),(3,4)),17).
move(3,((3,4),(3,5)),18).
move(3,((3,5),(3,4)),19).
move(3,((3,4),(3,5)),20).
move(3,((3,5),(3,4)),21).
move(3,((3,4),(3,5)),22).
move(3,((3,5),(3,4)),23).
move(3,((3,4),(3,5)),24).
move(3,((3,5),(3,4)),25).
move(3,((3,4),(3,5)),26).
move(3,((3,5),(3,4)),27).
move(3,((3,4),(3,5)),28).
move(3,((3,5),(3,4)),29).
move(3,((3,4),(3,5)),30).
move(3,((3,5),(3,4)),31).
move(3,((3,4),(3,5)),32).
move(3,((3,5),(3,4)),33).
move(3,((3,4),(3,5)),34).
move(3,((3,5),(3,4)),35).
move(3,((3,4),(3,5)),36).
move(3,((3,5),(3,4)),37).
move(3,((3,4),(3,5)),38).
move(3,((3,5),(3,4)),39).
move(3,((3,4),(3,5)),40).
move(4,((3,5),(3,4)),1).
move(4,((3,4),(2,4)),2).
move(4,((2,4),(2,3)),3).
move(4,((2,3),(3,3)),4).
move(4,((3,3),(3,2)),5).
move(4,((3,2),(3,1)),9).
move(5,((2,2),(3,2)),1).
move(5,((3,2),(4,2)),2).
move(5,((4,2),(4,3)),4).
move(5,((4,3),(4,2)),5).
move(5,((4,2),(4,3)),6).
move(5,((4,3),(3,3)),7).
move(5,((3,3),(4,3)),8).
move(5,((4,3),(4,2)),9).
move(5,((4,2),(4,3)),10).
move(5,((4,3),(3,3)),11).
move(5,((3,3),(4,3)),12).
move(5,((4,3),(4,4)),13).
move(5,((4,4),(4,3)),14).
move(5,((4,3),(4,4)),15).
move(5,((4,4),(4,3)),16).
move(5,((4,3),(4,2)),17).
move(5,((4,2),(4,3)),18).
move(5,((4,3),(3,3)),19).
move(5,((3,3),(4,3)),20).
move(5,((4,3),(4,2)),21).
move(5,((4,2),(4,3)),22).
move(5,((4,3),(3,3)),23).
move(5,((3,3),(4,3)),24).
move(5,((4,3),(4,2)),25).
move(5,((4,2),(4,3)),26).
move(5,((4,3),(4,4)),27).
move(5,((4,4),(4,3)),28).
move(5,((4,3),(4,4)),29).
move(5,((4,4),(4,3)),30).
move(5,((4,3),(4,4)),31).
move(5,((4,4),(4,3)),32).
move(5,((4,3),(4,2)),33).
move(5,((4,2),(4,3)),34).
move(5,((4,3),(4,4)),35).
move(5,((4,4),(4,3)),36).
move(5,((4,3),(4,4)),37).
move(5,((4,4),(4,3)),38).
move(5,((4,3),(4,4)),39).
move(6,((4,4),(3,4)),2).
move(6,((3,4),(2,4)),3).
move(6,((2,4),(2,3)),4).
move(6,((2,3),(2,2)),37).
move(7,((2,4),(2,3)),2).
move(7,((2,3),(2,2)),3).
move(7,((2,2),(3,2)),37).
move(7,((3,2),(4,2)),39).
move(8,((4,2),(4,3)),2).
move(8,((4,3),(4,4)),3).
move(8,((4,4),(4,3)),11).
move(8,((4,3),(4,2)),12).
move(8,((4,2),(3,2)),17).
move(8,((3,2),(3,3)),37).
move(8,((3,3),(3,4)),38).
move(8,((3,4),(2,4)),39).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.220s (Solving: 0.01s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 0.219s

Choices      : 472     
Conflicts    : 9        (Analyzed: 9)
Restarts     : 0       
Model-Level  : 251.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 9        (Deleted: 0)
  Binary     : 1        (Ratio:  11.11%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 9        (Average Length:  254.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 9        (Average: 24.56 Max: 106 Sum:    221)
  Executed   : 9        (Average: 24.56 Max: 106 Sum:    221 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 43069    (Original: 39265)
  Choice     : 320     
  Heuristic  : 144      (Original: 160)
Atoms        : 18490   
Bodies       : 30648    (Original: 26828)
  Count      : 1115     (Original: 1467)
Equivalences : 15291    (Atom=Atom: 331 Body=Body: 340 Other: 14620)
Tight        : Yes
Variables    : 29588    (Eliminated:    0 Frozen: 14196)
Constraints  : 81079    (Binary:  75.3% Ternary:  17.8% Other:   6.9%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,3),(2,3)),1).
move(1,((2,3),(3,3)),2).
move(1,((3,3),(4,3)),4).
move(1,((4,3),(3,3)),8).
move(1,((3,3),(2,3)),9).
move(1,((2,3),(1,3)),10).
move(1,((1,3),(2,3)),21).
move(1,((2,3),(3,3)),22).
move(1,((3,3),(3,4)),25).
move(1,((3,4),(2,4)),26).
move(1,((2,4),(3,4)),33).
move(1,((3,4),(4,4)),34).
move(1,((4,4),(3,4)),36).
move(1,((3,4),(4,4)),37).
move(1,((4,4),(4,3)),39).
move(1,((4,3),(5,3)),40).
move(2,((5,3),(4,3)),1).
move(2,((4,3),(5,3)),2).
move(2,((5,3),(4,3)),9).
move(2,((4,3),(3,3)),10).
move(2,((3,3),(4,3)),12).
move(2,((4,3),(5,3)),20).
move(2,((5,3),(4,3)),33).
move(2,((4,3),(5,3)),34).
move(2,((5,3),(4,3)),35).
move(2,((4,3),(3,3)),36).
move(2,((3,3),(2,3)),38).
move(2,((2,3),(1,3)),39).
move(3,((3,1),(3,2)),1).
move(3,((3,2),(2,2)),2).
move(3,((2,2),(2,3)),3).
move(3,((2,3),(2,4)),4).
move(3,((2,4),(3,4)),12).
move(3,((3,4),(4,4)),13).
move(3,((4,4),(4,3)),30).
move(3,((4,3),(3,3)),31).
move(3,((3,3),(3,4)),32).
move(3,((3,4),(3,5)),33).
move(3,((3,5),(3,4)),38).
move(3,((3,4),(3,5)),39).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(3,3)),4).
move(4,((3,3),(3,2)),5).
move(4,((3,2),(4,2)),8).
move(4,((4,2),(3,2)),10).
move(4,((3,2),(3,3)),28).
move(4,((3,3),(4,3)),29).
move(4,((4,3),(3,3)),30).
move(4,((3,3),(3,4)),31).
move(4,((3,4),(4,4)),32).
move(4,((4,4),(4,3)),34).
move(4,((4,3),(3,3)),35).
move(4,((3,3),(3,2)),36).
move(4,((3,2),(4,2)),37).
move(4,((4,2),(3,2)),38).
move(4,((3,2),(3,1)),39).
move(5,((2,2),(2,3)),2).
move(5,((2,3),(2,4)),3).
move(5,((2,4),(3,4)),4).
move(5,((3,4),(3,5)),12).
move(5,((3,5),(3,4)),13).
move(5,((3,4),(2,4)),14).
move(5,((2,4),(3,4)),15).
move(5,((3,4),(2,4)),22).
move(5,((2,4),(3,4)),23).
move(5,((3,4),(3,5)),25).
move(5,((3,5),(3,4)),27).
move(5,((3,4),(3,3)),29).
move(5,((3,3),(3,2)),30).
move(5,((3,2),(3,1)),31).
move(5,((3,1),(3,2)),33).
move(5,((3,2),(3,3)),34).
move(5,((3,3),(2,3)),35).
move(5,((2,3),(1,3)),36).
move(5,((1,3),(2,3)),37).
move(5,((2,3),(2,4)),38).
move(5,((2,4),(3,4)),39).
move(5,((3,4),(4,4)),40).
move(6,((4,4),(4,3)),2).
move(6,((4,3),(4,2)),3).
move(6,((4,2),(3,2)),4).
move(6,((3,2),(3,1)),5).
move(6,((3,1),(3,2)),8).
move(6,((3,2),(3,3)),9).
move(6,((3,3),(2,3)),10).
move(6,((2,3),(3,3)),12).
move(6,((3,3),(2,3)),13).
move(6,((2,3),(2,4)),21).
move(6,((2,4),(2,3)),22).
move(6,((2,3),(2,2)),33).
move(6,((2,2),(3,2)),34).
move(6,((3,2),(3,1)),35).
move(6,((3,1),(3,2)),37).
move(6,((3,2),(2,2)),38).
move(6,((2,2),(3,2)),39).
move(6,((3,2),(2,2)),40).
move(7,((2,4),(3,4)),1).
move(7,((3,4),(4,4)),2).
move(7,((4,4),(4,3)),3).
move(7,((4,3),(4,2)),4).
move(7,((4,2),(4,3)),8).
move(7,((4,3),(4,4)),9).
move(7,((4,4),(4,3)),10).
move(7,((4,3),(4,2)),11).
move(7,((4,2),(4,3)),37).
move(7,((4,3),(4,2)),38).
move(8,((4,2),(3,2)),2).
move(8,((3,2),(2,2)),3).
move(8,((2,2),(2,3)),12).
move(8,((2,3),(2,2)),13).
move(8,((2,2),(3,2)),32).
move(8,((3,2),(3,3)),33).
move(8,((3,3),(3,4)),34).
move(8,((3,4),(2,4)),35).
move(8,((2,4),(3,4)),37).
move(8,((3,4),(3,3)),38).
move(8,((3,3),(2,3)),39).
move(8,((2,3),(2,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.264s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 0.266s

Choices      : 4063    
Conflicts    : 188      (Analyzed: 188)
Restarts     : 2        (Average: 94.00 Last: 47)
Model-Level  : 948.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 188      (Deleted: 0)
  Binary     : 5        (Ratio:   2.66%)
  Ternary    : 3        (Ratio:   1.60%)
  Conflict   : 188      (Average Length:   72.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 188      (Average: 11.84 Max: 296 Sum:   2225)
  Executed   : 188      (Average: 11.84 Max: 296 Sum:   2225 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 43620    (Original: 39804)
  Choice     : 320     
  Heuristic  : 735      (Original: 739)
Atoms        : 18450   
Bodies       : 30648    (Original: 26828)
  Count      : 1115     (Original: 1467)
Equivalences : 15291    (Atom=Atom: 331 Body=Body: 340 Other: 14620)
Tight        : Yes
Variables    : 29588    (Eliminated:    0 Frozen: 14196)
Constraints  : 81079    (Binary:  75.3% Ternary:  17.8% Other:   6.9%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,3),(2,3)),1).
move(1,((2,3),(3,3)),2).
move(1,((3,3),(4,3)),3).
move(1,((4,3),(5,3)),4).
move(2,((5,3),(4,3)),1).
move(2,((4,3),(4,2)),2).
move(2,((4,2),(3,2)),3).
move(2,((3,2),(2,2)),4).
move(2,((2,2),(2,3)),39).
move(2,((2,3),(1,3)),40).
move(3,((3,1),(3,2)),4).
move(3,((3,2),(4,2)),5).
move(3,((4,2),(4,3)),7).
move(3,((4,3),(3,3)),8).
move(3,((3,3),(4,3)),9).
move(3,((4,3),(4,4)),10).
move(3,((4,4),(3,4)),12).
move(3,((3,4),(3,5)),13).
move(3,((3,5),(3,4)),32).
move(3,((3,4),(2,4)),33).
move(3,((2,4),(3,4)),34).
move(3,((3,4),(4,4)),35).
move(3,((4,4),(3,4)),36).
move(3,((3,4),(3,5)),37).
move(4,((3,5),(3,4)),3).
move(4,((3,4),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(3,3)),6).
move(4,((3,3),(3,2)),7).
move(4,((3,2),(4,2)),14).
move(4,((4,2),(3,2)),15).
move(4,((3,2),(4,2)),16).
move(4,((4,2),(3,2)),17).
move(4,((3,2),(4,2)),18).
move(4,((4,2),(3,2)),19).
move(4,((3,2),(3,1)),20).
move(4,((3,1),(3,2)),21).
move(4,((3,2),(4,2)),22).
move(4,((4,2),(3,2)),23).
move(4,((3,2),(3,1)),24).
move(4,((3,1),(3,2)),28).
move(4,((3,2),(3,1)),30).
move(4,((3,1),(3,2)),31).
move(4,((3,2),(3,1)),33).
move(4,((3,1),(3,2)),39).
move(4,((3,2),(3,1)),40).
move(5,((2,2),(2,3)),2).
move(5,((2,3),(3,3)),3).
move(5,((3,3),(3,4)),4).
move(5,((3,4),(3,3)),5).
move(5,((3,3),(3,4)),6).
move(5,((3,4),(3,3)),7).
move(5,((3,3),(3,4)),8).
move(5,((3,4),(2,4)),12).
move(5,((2,4),(3,4)),13).
move(5,((3,4),(3,3)),14).
move(5,((3,3),(3,4)),15).
move(5,((3,4),(2,4)),22).
move(5,((2,4),(3,4)),23).
move(5,((3,4),(3,3)),26).
move(5,((3,3),(3,4)),27).
move(5,((3,4),(3,3)),29).
move(5,((3,3),(4,3)),30).
move(5,((4,3),(4,4)),31).
move(5,((4,4),(3,4)),33).
move(5,((3,4),(3,5)),34).
move(5,((3,5),(3,4)),35).
move(5,((3,4),(3,3)),36).
move(5,((3,3),(3,4)),37).
move(5,((3,4),(4,4)),38).
move(5,((4,4),(4,3)),39).
move(5,((4,3),(4,4)),40).
move(6,((4,4),(3,4)),1).
move(6,((3,4),(2,4)),3).
move(6,((2,4),(2,3)),12).
move(6,((2,3),(1,3)),23).
move(6,((1,3),(2,3)),36).
move(6,((2,3),(3,3)),37).
move(6,((3,3),(3,2)),38).
move(6,((3,2),(2,2)),39).
move(7,((2,4),(2,3)),3).
move(7,((2,3),(1,3)),4).
move(7,((1,3),(2,3)),11).
move(7,((2,3),(3,3)),12).
move(7,((3,3),(4,3)),14).
move(7,((4,3),(3,3)),17).
move(7,((3,3),(4,3)),19).
move(7,((4,3),(3,3)),20).
move(7,((3,3),(3,2)),22).
move(7,((3,2),(3,3)),23).
move(7,((3,3),(4,3)),24).
move(7,((4,3),(4,4)),25).
move(7,((4,4),(3,4)),26).
move(7,((3,4),(4,4)),27).
move(7,((4,4),(3,4)),29).
move(7,((3,4),(3,3)),31).
move(7,((3,3),(4,3)),34).
move(7,((4,3),(4,2)),39).
move(8,((4,2),(3,2)),2).
move(8,((3,2),(2,2)),3).
move(8,((2,2),(2,3)),4).
move(8,((2,3),(3,3)),10).
move(8,((3,3),(4,3)),11).
move(8,((4,3),(4,4)),12).
move(8,((4,4),(4,3)),17).
move(8,((4,3),(4,2)),19).
move(8,((4,2),(4,3)),20).
move(8,((4,3),(3,3)),22).
move(8,((3,3),(2,3)),23).
move(8,((2,3),(3,3)),24).
move(8,((3,3),(2,3)),26).
move(8,((2,3),(2,4)),27).
move(8,((2,4),(2,3)),30).
move(8,((2,3),(2,4)),34).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.323s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.266s

Choices      : 681      (Domain: 10)
Conflicts    : 26       (Analyzed: 26)
Restarts     : 0       
Model-Level  : 229.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 26       (Deleted: 0)
  Binary     : 1        (Ratio:   3.85%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 26       (Average Length:  136.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 26       (Average: 17.38 Max: 142 Sum:    452)
  Executed   : 26       (Average: 17.38 Max: 142 Sum:    452 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 46829    (Original: 43081)
  Choice     : 320     
  Heuristic  : 3928     (Original: 4000)
Atoms        : 18466   
Bodies       : 30648    (Original: 26828)
  Count      : 1115     (Original: 1467)
Equivalences : 15291    (Atom=Atom: 331 Body=Body: 340 Other: 14620)
Tight        : Yes
Variables    : 29588    (Eliminated:    0 Frozen: 14196)
Constraints  : 81079    (Binary:  75.3% Ternary:  17.8% Other:   6.9%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,3),(2,3)),1).
move(1,((2,3),(3,3)),2).
move(1,((3,3),(4,3)),4).
move(1,((4,3),(5,3)),40).
move(2,((5,3),(4,3)),1).
move(2,((4,3),(4,4)),2).
move(2,((4,4),(3,4)),3).
move(2,((3,4),(2,4)),4).
move(2,((2,4),(2,3)),5).
move(2,((2,3),(1,3)),6).
move(2,((1,3),(2,3)),7).
move(2,((2,3),(1,3)),8).
move(2,((1,3),(2,3)),9).
move(2,((2,3),(1,3)),10).
move(2,((1,3),(2,3)),11).
move(2,((2,3),(1,3)),12).
move(2,((1,3),(2,3)),13).
move(2,((2,3),(1,3)),14).
move(2,((1,3),(2,3)),15).
move(2,((2,3),(2,2)),16).
move(2,((2,2),(2,3)),17).
move(2,((2,3),(1,3)),18).
move(2,((1,3),(2,3)),19).
move(2,((2,3),(2,2)),20).
move(2,((2,2),(2,3)),21).
move(2,((2,3),(2,2)),22).
move(2,((2,2),(2,3)),23).
move(2,((2,3),(2,2)),24).
move(2,((2,2),(2,3)),25).
move(2,((2,3),(1,3)),26).
move(2,((1,3),(2,3)),27).
move(2,((2,3),(2,2)),28).
move(2,((2,2),(2,3)),29).
move(2,((2,3),(2,2)),30).
move(2,((2,2),(2,3)),31).
move(2,((2,3),(2,2)),32).
move(2,((2,2),(2,3)),33).
move(2,((2,3),(1,3)),34).
move(2,((1,3),(2,3)),35).
move(2,((2,3),(2,2)),36).
move(2,((2,2),(2,3)),37).
move(2,((2,3),(2,4)),38).
move(2,((2,4),(2,3)),39).
move(2,((2,3),(1,3)),40).
move(3,((3,1),(3,2)),4).
move(3,((3,2),(3,3)),5).
move(3,((3,3),(3,4)),12).
move(3,((3,4),(3,5)),13).
move(4,((3,5),(3,4)),1).
move(4,((3,4),(2,4)),2).
move(4,((2,4),(2,3)),3).
move(4,((2,3),(2,2)),4).
move(4,((2,2),(3,2)),5).
move(4,((3,2),(3,1)),32).
move(4,((3,1),(3,2)),39).
move(4,((3,2),(3,1)),40).
move(5,((2,2),(3,2)),1).
move(5,((3,2),(3,3)),4).
move(5,((3,3),(3,4)),5).
move(5,((3,4),(4,4)),12).
move(5,((4,4),(3,4)),13).
move(5,((3,4),(3,3)),14).
move(5,((3,3),(3,4)),15).
move(5,((3,4),(2,4)),22).
move(5,((2,4),(3,4)),23).
move(5,((3,4),(3,3)),26).
move(5,((3,3),(3,4)),27).
move(5,((3,4),(2,4)),35).
move(5,((2,4),(3,4)),36).
move(5,((3,4),(4,4)),39).
move(6,((4,4),(3,4)),2).
move(6,((3,4),(3,5)),3).
move(6,((3,5),(3,4)),4).
move(6,((3,4),(2,4)),5).
move(6,((2,4),(2,3)),22).
move(6,((2,3),(2,4)),23).
move(6,((2,4),(2,3)),34).
move(6,((2,3),(3,3)),35).
move(6,((3,3),(2,3)),36).
move(6,((2,3),(1,3)),37).
move(6,((1,3),(2,3)),38).
move(6,((2,3),(2,2)),39).
move(7,((2,4),(2,3)),2).
move(7,((2,3),(1,3)),3).
move(7,((1,3),(2,3)),4).
move(7,((2,3),(2,2)),5).
move(7,((2,2),(2,3)),14).
move(7,((2,3),(3,3)),15).
move(7,((3,3),(2,3)),26).
move(7,((2,3),(3,3)),27).
move(7,((3,3),(2,3)),28).
move(7,((2,3),(1,3)),29).
move(7,((1,3),(2,3)),30).
move(7,((2,3),(3,3)),31).
move(7,((3,3),(3,2)),33).
move(7,((3,2),(4,2)),34).
move(7,((4,2),(3,2)),36).
move(7,((3,2),(4,2)),37).
move(7,((4,2),(3,2)),38).
move(7,((3,2),(4,2)),39).
move(8,((4,2),(3,2)),32).
move(8,((3,2),(2,2)),33).
move(8,((2,2),(3,2)),34).
move(8,((3,2),(3,3)),36).
move(8,((3,3),(3,4)),39).
move(8,((3,4),(2,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.282s (Solving: 0.02s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 0.281s

Choices      : 461     
Conflicts    : 19       (Analyzed: 19)
Restarts     : 0       
Model-Level  : 184.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 19       (Deleted: 0)
  Binary     : 2        (Ratio:  10.53%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 19       (Average Length:  133.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 19       (Average: 14.58 Max: 106 Sum:    277)
  Executed   : 19       (Average: 14.58 Max: 106 Sum:    277 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 46813    (Original: 43065)
  Choice     : 320     
  Heuristic  : 3928     (Original: 4000)
Atoms        : 18450   
Bodies       : 30648    (Original: 26828)
  Count      : 1115     (Original: 1467)
Equivalences : 15291    (Atom=Atom: 331 Body=Body: 340 Other: 14620)
Tight        : Yes
Variables    : 29588    (Eliminated:    0 Frozen: 14196)
Constraints  : 81079    (Binary:  75.3% Ternary:  17.8% Other:   6.9%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,3),(2,3)),2).
move(1,((2,3),(1,3)),3).
move(1,((1,3),(2,3)),4).
move(1,((2,3),(2,2)),12).
move(1,((2,2),(3,2)),14).
move(1,((3,2),(3,3)),38).
move(1,((3,3),(4,3)),39).
move(1,((4,3),(5,3)),40).
move(2,((5,3),(4,3)),2).
move(2,((4,3),(5,3)),3).
move(2,((5,3),(4,3)),4).
move(2,((4,3),(5,3)),13).
move(2,((5,3),(4,3)),14).
move(2,((4,3),(3,3)),37).
move(2,((3,3),(2,3)),38).
move(2,((2,3),(1,3)),40).
move(3,((3,1),(3,2)),2).
move(3,((3,2),(3,1)),3).
move(3,((3,1),(3,2)),4).
move(3,((3,2),(3,1)),10).
move(3,((3,1),(3,2)),12).
move(3,((3,2),(3,3)),14).
move(3,((3,3),(3,4)),37).
move(3,((3,4),(3,5)),39).
move(4,((3,5),(3,4)),2).
move(4,((3,4),(3,5)),3).
move(4,((3,5),(3,4)),4).
move(4,((3,4),(3,3)),5).
move(4,((3,3),(3,4)),11).
move(4,((3,4),(3,3)),13).
move(4,((3,3),(2,3)),14).
move(4,((2,3),(2,2)),37).
move(4,((2,2),(3,2)),38).
move(4,((3,2),(3,1)),39).
move(5,((2,2),(3,2)),11).
move(5,((3,2),(3,3)),12).
move(5,((3,3),(2,3)),13).
move(5,((2,3),(2,4)),14).
move(5,((2,4),(3,4)),15).
move(5,((3,4),(4,4)),37).
move(6,((4,4),(3,4)),5).
move(6,((3,4),(4,4)),11).
move(6,((4,4),(4,3)),13).
move(6,((4,3),(4,2)),14).
move(6,((4,2),(3,2)),39).
move(6,((3,2),(2,2)),40).
move(7,((2,4),(3,4)),13).
move(7,((3,4),(4,4)),15).
move(7,((4,4),(4,3)),37).
move(7,((4,3),(4,2)),39).
move(8,((4,2),(3,2)),10).
move(8,((3,2),(3,3)),11).
move(8,((3,3),(2,3)),12).
move(8,((2,3),(1,3)),13).
move(8,((1,3),(2,3)),37).
move(8,((2,3),(2,4)),38).
move(8,((2,4),(3,4)),39).
move(8,((3,4),(2,4)),40).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 0.187s (Solving: 0.01s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 0.188s

Choices      : 191      (Domain: 191)
Conflicts    : 6        (Analyzed: 6)
Restarts     : 0       
Model-Level  : 184.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 6        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 6        (Average Length:   15.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 6        (Average:  1.17 Max:   2 Sum:      7)
  Executed   : 6        (Average:  1.17 Max:   2 Sum:      7 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 46813    (Original: 43065)
  Choice     : 320     
  Heuristic  : 3928     (Original: 4000)
Atoms        : 18450   
Bodies       : 30648    (Original: 26828)
  Count      : 1115     (Original: 1467)
Equivalences : 15291    (Atom=Atom: 331 Body=Body: 340 Other: 14620)
Tight        : Yes
Variables    : 29588    (Eliminated:    0 Frozen: 14196)
Constraints  : 81079    (Binary:  75.3% Ternary:  17.8% Other:   6.9%)

