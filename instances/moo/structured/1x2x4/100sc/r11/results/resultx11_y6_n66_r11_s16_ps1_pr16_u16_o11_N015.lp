%%%%%
%Standard
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(4,5)),5).
move(1,((4,5),(4,4)),6).
move(1,((4,4),(5,4)),7).
move(1,((5,4),(6,4)),8).
move(1,((6,4),(7,4)),9).
move(1,((7,4),(7,3)),10).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(2,((3,3),(4,3)),5).
move(2,((4,3),(4,2)),7).
move(2,((4,2),(5,2)),8).
move(2,((5,2),(5,3)),9).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(3,3)),5).
move(3,((3,3),(3,4)),6).
move(3,((3,4),(3,3)),7).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(5,((7,3),(6,3)),6).
move(5,((6,3),(7,3)),40).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(5,4)),3).
move(7,((5,4),(4,4)),4).
move(7,((4,4),(3,4)),5).
move(7,((3,4),(2,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(8,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(7,5)),4).
move(9,((7,5),(7,4)),6).
move(9,((7,4),(7,5)),9).
move(9,((7,5),(7,4)),10).
move(9,((7,4),(7,3)),11).
move(9,((7,3),(7,4)),40).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),5).
move(10,((4,6),(4,5)),6).
move(10,((4,5),(4,4)),7).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(9,4)),4).
move(11,((9,4),(10,4)),5).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.703s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 1.703s

Choices      : 971     
Conflicts    : 49       (Analyzed: 49)
Restarts     : 0       
Model-Level  : 462.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 49       (Deleted: 0)
  Binary     : 9        (Ratio:  18.37%)
  Ternary    : 5        (Ratio:  10.20%)
  Conflict   : 49       (Average Length:   19.3 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 49       (Average: 10.39 Max:  64 Sum:    509)
  Executed   : 49       (Average: 10.39 Max:  64 Sum:    509 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353468   (Original: 327181)
  Choice     : 440     
Atoms        : 141635  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDirectionalNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(7,4)),9).
move(1,((7,4),(7,3)),10).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(3,3)),4).
move(2,((3,3),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(2,((5,3),(5,2)),7).
move(2,((5,2),(5,3)),8).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(3,((3,3),(3,2)),4).
move(3,((3,2),(3,3)),5).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),5).
move(5,((6,3),(7,3)),40).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(5,4)),6).
move(6,((5,4),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(6,4)),2).
move(7,((6,4),(5,4)),3).
move(7,((5,4),(4,4)),4).
move(7,((4,4),(3,4)),5).
move(7,((3,4),(2,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(8,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),4).
move(9,((7,6),(7,5)),5).
move(9,((7,5),(7,4)),6).
move(9,((7,4),(7,5)),9).
move(9,((7,5),(7,4)),10).
move(9,((7,4),(7,3)),11).
move(9,((7,3),(7,4)),40).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(5,4)),5).
move(10,((5,4),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(9,6)),2).
move(11,((9,6),(9,5)),3).
move(11,((9,5),(9,4)),4).
move(11,((9,4),(10,4)),5).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.725s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 1.734s

Choices      : 1073     (Domain: 174)
Conflicts    : 37       (Analyzed: 37)
Restarts     : 0       
Model-Level  : 624.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 37       (Deleted: 0)
  Binary     : 5        (Ratio:  13.51%)
  Ternary    : 2        (Ratio:   5.41%)
  Conflict   : 37       (Average Length:   21.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 37       (Average: 12.14 Max:  59 Sum:    449)
  Executed   : 37       (Average: 12.14 Max:  59 Sum:    449 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 353774   (Original: 327487)
  Choice     : 440     
  Heuristic  : 184     
Atoms        : 141757  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(5,4)),6).
move(1,((5,4),(6,4)),7).
move(1,((6,4),(6,3)),8).
move(1,((6,3),(6,2)),9).
move(1,((6,2),(7,2)),10).
move(1,((7,2),(8,2)),11).
move(1,((8,2),(8,3)),12).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(3,5)),2).
move(2,((3,5),(3,4)),3).
move(2,((3,4),(4,4)),4).
move(2,((4,4),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(5,6)),1).
move(4,((5,6),(6,6)),2).
move(4,((6,6),(7,6)),3).
move(4,((7,6),(8,6)),4).
move(4,((8,6),(9,6)),5).
move(4,((9,6),(9,5)),6).
move(4,((9,5),(9,4)),7).
move(4,((9,4),(9,3)),8).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(7,6)),2).
move(5,((7,6),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(7,3)),5).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(8,3)),4).
move(6,((8,3),(8,2)),5).
move(6,((8,2),(7,2)),6).
move(6,((7,2),(6,2)),7).
move(6,((6,2),(5,2)),8).
move(6,((5,2),(4,2)),9).
move(6,((4,2),(4,3)),10).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(3,5)),4).
move(7,((3,5),(3,4)),5).
move(7,((3,4),(2,4)),6).
move(8,((7,6),(8,6)),1).
move(8,((8,6),(8,5)),2).
move(8,((8,5),(8,4)),3).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(7,5)),4).
move(9,((7,5),(7,4)),5).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(6,4)),4).
move(10,((6,4),(5,4)),5).
move(10,((5,4),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(10,5)),2).
move(11,((10,5),(10,4)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.760s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.750s

Choices      : 445      (Domain: 445)
Conflicts    : 4        (Analyzed: 4)
Restarts     : 0       
Model-Level  : 391.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 4        (Deleted: 0)
  Binary     : 3        (Ratio:  75.00%)
  Ternary    : 1        (Ratio:  25.00%)
  Conflict   : 4        (Average Length:    2.2 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 4        (Average: 13.50 Max:  26 Sum:     54)
  Executed   : 4        (Average: 13.50 Max:  26 Sum:     54 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378780   (Original: 352625)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141768  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hForbiddenNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(7,6)),6).
move(1,((7,6),(7,5)),7).
move(1,((7,5),(7,4)),8).
move(1,((7,4),(8,4)),9).
move(1,((8,4),(8,3)),11).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(3,5)),2).
move(2,((3,5),(3,4)),3).
move(2,((3,4),(4,4)),4).
move(2,((4,4),(5,4)),5).
move(2,((5,4),(5,3)),8).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(9,4)),7).
move(4,((9,4),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(6,4)),3).
move(5,((6,4),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(6,3)),6).
move(6,((6,3),(5,3)),7).
move(6,((5,3),(4,3)),8).
move(7,((6,6),(5,6)),1).
move(7,((5,6),(4,6)),2).
move(7,((4,6),(4,5)),3).
move(7,((4,5),(3,5)),4).
move(7,((3,5),(2,5)),5).
move(7,((2,5),(2,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(8,4)),40).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(7,5)),4).
move(9,((7,5),(6,5)),5).
move(9,((6,5),(6,4)),7).
move(9,((6,4),(7,4)),9).
move(9,((7,4),(7,5)),10).
move(9,((7,5),(7,4)),40).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(5,5)),4).
move(10,((5,5),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(10,5)),2).
move(11,((10,5),(10,4)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.771s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 1.781s

Choices      : 640      (Domain: 86)
Conflicts    : 42       (Analyzed: 42)
Restarts     : 0       
Model-Level  : 395.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 42       (Deleted: 0)
  Binary     : 15       (Ratio:  35.71%)
  Ternary    : 2        (Ratio:   4.76%)
  Conflict   : 42       (Average Length:   27.4 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 42       (Average:  5.83 Max:  28 Sum:    245)
  Executed   : 42       (Average:  5.83 Max:  28 Sum:    245 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378780   (Original: 352625)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141768  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNaivePathDistance.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(7,5)),7).
move(1,((7,5),(7,4)),8).
move(1,((7,4),(7,3)),9).
move(1,((7,3),(8,3)),10).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(3,5)),2).
move(2,((3,5),(4,5)),3).
move(2,((4,5),(4,4)),4).
move(2,((4,4),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(8,5)),5).
move(4,((8,5),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(6,5)),2).
move(5,((6,5),(7,5)),3).
move(5,((7,5),(7,4)),4).
move(5,((7,4),(6,4)),5).
move(5,((6,4),(6,3)),6).
move(5,((6,3),(7,3)),40).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(5,6)),4).
move(6,((5,6),(4,6)),5).
move(6,((4,6),(4,5)),6).
move(6,((4,5),(4,4)),7).
move(6,((4,4),(4,3)),8).
move(7,((6,6),(5,6)),1).
move(7,((5,6),(4,6)),2).
move(7,((4,6),(3,6)),3).
move(7,((3,6),(3,5)),4).
move(7,((3,5),(3,4)),5).
move(7,((3,4),(2,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(8,5)),2).
move(8,((8,5),(9,5)),3).
move(8,((9,5),(9,6)),4).
move(8,((9,6),(8,6)),5).
move(8,((8,6),(8,5)),7).
move(8,((8,5),(8,4)),8).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(8,5)),3).
move(9,((8,5),(8,4)),4).
move(9,((8,4),(7,4)),5).
move(9,((7,4),(7,5)),6).
move(9,((7,5),(7,6)),7).
move(9,((7,6),(7,5)),9).
move(9,((7,5),(7,4)),10).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(4,5)),5).
move(10,((4,5),(4,4)),6).
move(10,((4,4),(3,4)),7).
move(10,((3,4),(4,4)),8).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(10,5)),2).
move(11,((10,5),(10,4)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.707s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.703s

Choices      : 559      (Domain: 38)
Conflicts    : 8        (Analyzed: 8)
Restarts     : 0       
Model-Level  : 451.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 8        (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 8        (Average Length:   36.1 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 8        (Average: 13.50 Max:  41 Sum:    108)
  Executed   : 8        (Average: 13.50 Max:  41 Sum:    108 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354583   (Original: 328318)
  Choice     : 440     
  Heuristic  : 919      (Original: 941)
Atoms        : 141831  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNarrowNode.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(6,6)),5).
move(1,((6,6),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(7,4)),8).
move(1,((7,4),(8,4)),9).
move(1,((8,4),(8,3)),10).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(3,4)),3).
move(2,((3,4),(4,4)),4).
move(2,((4,4),(4,3)),5).
move(2,((4,3),(5,3)),6).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(4,4)),2).
move(4,((4,4),(5,4)),3).
move(4,((5,4),(6,4)),4).
move(4,((6,4),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(6,3)),4).
move(5,((6,3),(7,3)),5).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(8,5)),2).
move(6,((8,5),(7,5)),3).
move(6,((7,5),(6,5)),4).
move(6,((6,5),(5,5)),5).
move(6,((5,5),(4,5)),6).
move(6,((4,5),(4,4)),7).
move(6,((4,4),(4,3)),8).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(5,5)),2).
move(7,((5,5),(4,5)),3).
move(7,((4,5),(3,5)),4).
move(7,((3,5),(2,5)),5).
move(7,((2,5),(2,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,3)),3).
move(8,((7,3),(8,3)),4).
move(8,((8,3),(9,3)),5).
move(8,((9,3),(9,4)),6).
move(8,((9,4),(8,4)),40).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(9,5)),2).
move(9,((9,5),(8,5)),3).
move(9,((8,5),(8,4)),10).
move(9,((8,4),(7,4)),40).
move(10,((8,6),(8,5)),1).
move(10,((8,5),(7,5)),2).
move(10,((7,5),(6,5)),3).
move(10,((6,5),(5,5)),4).
move(10,((5,5),(5,4)),5).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(10,4)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.695s (Solving: 0.04s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 1.703s

Choices      : 1663     (Domain: 1159)
Conflicts    : 10       (Analyzed: 10)
Restarts     : 0       
Model-Level  : 1603.0  
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 10       (Deleted: 0)
  Binary     : 1        (Ratio:  10.00%)
  Ternary    : 0        (Ratio:   0.00%)
  Conflict   : 10       (Average Length:   22.8 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 10       (Average:  6.00 Max:  20 Sum:     60)
  Executed   : 10       (Average:  6.00 Max:  20 Sum:     60 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 354813   (Original: 328529)
  Choice     : 440     
  Heuristic  : 1223     (Original: 1226)
Atoms        : 141757  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hNodeCost.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(3,5)),3).
move(1,((3,5),(4,5)),4).
move(1,((4,5),(5,5)),5).
move(1,((5,5),(6,5)),6).
move(1,((6,5),(6,4)),7).
move(1,((6,4),(7,4)),8).
move(1,((7,4),(7,3)),9).
move(1,((7,3),(8,3)),11).
move(2,((2,6),(2,5)),1).
move(2,((2,5),(2,4)),2).
move(2,((2,4),(2,3)),3).
move(2,((2,3),(2,2)),4).
move(2,((2,2),(2,1)),5).
move(2,((2,1),(3,1)),6).
move(2,((3,1),(4,1)),7).
move(2,((4,1),(5,1)),8).
move(2,((5,1),(5,2)),9).
move(2,((5,2),(5,3)),10).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(3,4)),2).
move(3,((3,4),(3,3)),3).
move(4,((4,6),(4,5)),1).
move(4,((4,5),(5,5)),2).
move(4,((5,5),(6,5)),3).
move(4,((6,5),(7,5)),4).
move(4,((7,5),(7,4)),5).
move(4,((7,4),(8,4)),6).
move(4,((8,4),(8,3)),7).
move(4,((8,3),(9,3)),8).
move(5,((5,6),(5,5)),1).
move(5,((5,5),(5,4)),2).
move(5,((5,4),(5,3)),3).
move(5,((5,3),(5,2)),4).
move(5,((5,2),(5,3)),5).
move(5,((5,3),(6,3)),7).
move(5,((6,3),(7,3)),40).
move(6,((9,6),(8,6)),1).
move(6,((8,6),(7,6)),2).
move(6,((7,6),(6,6)),3).
move(6,((6,6),(6,5)),4).
move(6,((6,5),(6,4)),5).
move(6,((6,4),(5,4)),7).
move(6,((5,4),(5,3)),8).
move(6,((5,3),(4,3)),9).
move(7,((6,6),(5,6)),1).
move(7,((5,6),(4,6)),2).
move(7,((4,6),(3,6)),3).
move(7,((3,6),(2,6)),4).
move(7,((2,6),(2,5)),5).
move(7,((2,5),(2,4)),6).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,4)),2).
move(8,((7,4),(7,5)),3).
move(8,((7,5),(8,5)),4).
move(8,((8,5),(8,4)),5).
move(8,((8,4),(8,5)),6).
move(8,((8,5),(8,4)),7).
move(9,((10,6),(9,6)),1).
move(9,((9,6),(8,6)),2).
move(9,((8,6),(7,6)),3).
move(9,((7,6),(7,5)),5).
move(9,((7,5),(7,4)),6).
move(9,((7,4),(7,5)),8).
move(9,((7,5),(7,4)),9).
move(9,((7,4),(7,3)),11).
move(9,((7,3),(7,4)),40).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(5,6)),3).
move(10,((5,6),(4,6)),4).
move(10,((4,6),(3,6)),5).
move(10,((3,6),(3,5)),6).
move(10,((3,5),(3,4)),7).
move(10,((3,4),(4,4)),8).
move(11,((11,6),(11,5)),1).
move(11,((11,5),(11,4)),2).
move(11,((11,4),(10,4)),3).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.740s (Solving: 0.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 1.734s

Choices      : 1168     (Domain: 527)
Conflicts    : 56       (Analyzed: 56)
Restarts     : 0       
Model-Level  : 449.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 56       (Deleted: 0)
  Binary     : 12       (Ratio:  21.43%)
  Ternary    : 3        (Ratio:   5.36%)
  Conflict   : 56       (Average Length:   17.7 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 56       (Average: 12.84 Max:  57 Sum:    719)
  Executed   : 56       (Average: 12.84 Max:  57 Sum:    719 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378793   (Original: 352627)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141780  
Disjunctions : 0        (Original: 1)
Bodies       : 247623   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128049   (Atom=Atom: 470 Body=Body: 482 Other: 127097)
Tight        : Yes
Variables    : 246824   (Eliminated:    0 Frozen: 126446)
Constraints  : 678181   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hPathArea.lp
%%%%%
move(1,((1,6),(1,5)),3).
move(1,((1,5),(1,4)),4).
move(1,((1,4),(2,4)),5).
move(1,((2,4),(2,3)),6).
move(1,((2,3),(1,3)),7).
move(1,((1,3),(1,4)),9).
move(1,((1,4),(1,5)),10).
move(1,((1,5),(2,5)),11).
move(1,((2,5),(3,5)),12).
move(1,((3,5),(2,5)),13).
move(1,((2,5),(3,5)),17).
move(1,((3,5),(2,5)),23).
move(1,((2,5),(3,5)),24).
move(1,((3,5),(2,5)),25).
move(1,((2,5),(3,5)),26).
move(1,((3,5),(2,5)),32).
move(1,((2,5),(3,5)),33).
move(1,((3,5),(4,5)),34).
move(1,((4,5),(4,4)),35).
move(1,((4,4),(4,3)),36).
move(1,((4,3),(5,3)),37).
move(1,((5,3),(6,3)),38).
move(1,((6,3),(7,3)),39).
move(1,((7,3),(8,3)),40).
move(2,((2,6),(2,5)),4).
move(2,((2,5),(2,4)),6).
move(2,((2,4),(2,3)),7).
move(2,((2,3),(3,3)),8).
move(2,((3,3),(2,3)),9).
move(2,((2,3),(2,4)),10).
move(2,((2,4),(2,3)),11).
move(2,((2,3),(3,3)),12).
move(2,((3,3),(2,3)),14).
move(2,((2,3),(2,4)),15).
move(2,((2,4),(2,5)),17).
move(2,((2,5),(2,4)),23).
move(2,((2,4),(2,5)),26).
move(2,((2,5),(2,4)),32).
move(2,((2,4),(2,5)),34).
move(2,((2,5),(2,4)),35).
move(2,((2,4),(2,3)),37).
move(2,((2,3),(3,3)),38).
move(2,((3,3),(4,3)),39).
move(2,((4,3),(5,3)),40).
move(3,((3,6),(3,5)),3).
move(3,((3,5),(3,4)),5).
move(3,((3,4),(3,3)),6).
move(3,((3,3),(3,4)),7).
move(3,((3,4),(3,3)),40).
move(4,((4,6),(4,5)),3).
move(4,((4,5),(4,4)),4).
move(4,((4,4),(4,3)),5).
move(4,((4,3),(4,4)),6).
move(4,((4,4),(5,4)),7).
move(4,((5,4),(5,3)),8).
move(4,((5,3),(5,4)),10).
move(4,((5,4),(5,5)),11).
move(4,((5,5),(4,5)),12).
move(4,((4,5),(4,4)),17).
move(4,((4,4),(4,5)),18).
move(4,((4,5),(5,5)),19).
move(4,((5,5),(5,4)),20).
move(4,((5,4),(5,3)),21).
move(4,((5,3),(4,3)),22).
move(4,((4,3),(4,4)),23).
move(4,((4,4),(4,3)),24).
move(4,((4,3),(4,4)),25).
move(4,((4,4),(4,3)),27).
move(4,((4,3),(5,3)),28).
move(4,((5,3),(4,3)),29).
move(4,((4,3),(4,4)),30).
move(4,((4,4),(4,3)),33).
move(4,((4,3),(4,4)),34).
move(4,((4,4),(4,3)),35).
move(4,((4,3),(5,3)),36).
move(4,((5,3),(6,3)),37).
move(4,((6,3),(7,3)),38).
move(4,((7,3),(8,3)),39).
move(4,((8,3),(9,3)),40).
move(5,((5,6),(5,5)),3).
move(5,((5,5),(5,4)),4).
move(5,((5,4),(5,3)),5).
move(5,((5,3),(6,3)),8).
move(5,((6,3),(6,4)),9).
move(5,((6,4),(5,4)),11).
move(5,((5,4),(5,3)),17).
move(5,((5,3),(6,3)),18).
move(5,((6,3),(6,4)),19).
move(5,((6,4),(6,3)),20).
move(5,((6,3),(6,4)),21).
move(5,((6,4),(6,3)),22).
move(5,((6,3),(6,4)),23).
move(5,((6,4),(5,4)),24).
move(5,((5,4),(5,3)),38).
move(5,((5,3),(6,3)),39).
move(5,((6,3),(7,3)),40).
move(6,((9,6),(9,5)),2).
move(6,((9,5),(9,4)),4).
move(6,((9,4),(9,3)),5).
move(6,((9,3),(8,3)),7).
move(6,((8,3),(8,4)),8).
move(6,((8,4),(8,3)),9).
move(6,((8,3),(9,3)),10).
move(6,((9,3),(8,3)),11).
move(6,((8,3),(9,3)),12).
move(6,((9,3),(8,3)),16).
move(6,((8,3),(9,3)),18).
move(6,((9,3),(8,3)),34).
move(6,((8,3),(7,3)),35).
move(6,((7,3),(6,3)),36).
move(6,((6,3),(6,4)),37).
move(6,((6,4),(5,4)),38).
move(6,((5,4),(4,4)),39).
move(6,((4,4),(4,3)),40).
move(7,((6,6),(6,5)),3).
move(7,((6,5),(6,4)),4).
move(7,((6,4),(6,5)),5).
move(7,((6,5),(5,5)),7).
move(7,((5,5),(6,5)),8).
move(7,((6,5),(5,5)),9).
move(7,((5,5),(4,5)),11).
move(7,((4,5),(4,4)),12).
move(7,((4,4),(5,4)),17).
move(7,((5,4),(4,4)),20).
move(7,((4,4),(5,4)),21).
move(7,((5,4),(6,4)),22).
move(7,((6,4),(5,4)),23).
move(7,((5,4),(4,4)),24).
move(7,((4,4),(4,5)),25).
move(7,((4,5),(5,5)),26).
move(7,((5,5),(4,5)),28).
move(7,((4,5),(5,5)),29).
move(7,((5,5),(6,5)),30).
move(7,((6,5),(6,4)),31).
move(7,((6,4),(6,5)),33).
move(7,((6,5),(6,4)),34).
move(7,((6,4),(6,5)),35).
move(7,((6,5),(5,5)),36).
move(7,((5,5),(4,5)),37).
move(7,((4,5),(3,5)),38).
move(7,((3,5),(2,5)),39).
move(7,((2,5),(2,4)),40).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(8,4)),7).
move(8,((8,4),(8,5)),8).
move(8,((8,5),(8,4)),9).
move(8,((8,4),(7,4)),10).
move(8,((7,4),(7,5)),38).
move(8,((7,5),(8,5)),39).
move(8,((8,5),(8,4)),40).
move(9,((10,6),(9,6)),2).
move(9,((9,6),(9,5)),4).
move(9,((9,5),(9,4)),5).
move(9,((9,4),(8,4)),16).
move(9,((8,4),(9,4)),18).
move(9,((9,4),(8,4)),39).
move(9,((8,4),(7,4)),40).
move(10,((8,6),(8,5)),3).
move(10,((8,5),(8,4)),4).
move(10,((8,4),(8,5)),7).
move(10,((8,5),(7,5)),8).
move(10,((7,5),(6,5)),9).
move(10,((6,5),(7,5)),10).
move(10,((7,5),(8,5)),11).
move(10,((8,5),(8,4)),13).
move(10,((8,4),(8,5)),16).
move(10,((8,5),(8,4)),18).
move(10,((8,4),(8,5)),19).
move(10,((8,5),(7,5)),20).
move(10,((7,5),(8,5)),22).
move(10,((8,5),(8,4)),23).
move(10,((8,4),(8,5)),25).
move(10,((8,5),(8,4)),26).
move(10,((8,4),(8,5)),29).
move(10,((8,5),(8,4)),30).
move(10,((8,4),(8,5)),33).
move(10,((8,5),(7,5)),34).
move(10,((7,5),(6,5)),36).
move(10,((6,5),(5,5)),38).
move(10,((5,5),(4,5)),39).
move(10,((4,5),(4,4)),40).
move(11,((11,6),(10,6)),2).
move(11,((10,6),(10,5)),4).
move(11,((10,5),(10,4)),6).
move(11,((10,4),(11,4)),7).
move(11,((11,4),(10,4)),8).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 1.700s (Solving: 0.03s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1.703s

Choices      : 435      (Domain: 435)
Conflicts    : 13       (Analyzed: 13)
Restarts     : 0       
Model-Level  : 389.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 13       (Deleted: 0)
  Binary     : 0        (Ratio:   0.00%)
  Ternary    : 2        (Ratio:  15.38%)
  Conflict   : 13       (Average Length:   18.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 13       (Average:  3.54 Max:   7 Sum:     46)
  Executed   : 13       (Average:  3.54 Max:   7 Sum:     46 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378769   (Original: 352614)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141757  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

%%%%%
%hStrange.lp
%%%%%
move(1,((1,6),(2,6)),1).
move(1,((2,6),(3,6)),2).
move(1,((3,6),(4,6)),3).
move(1,((4,6),(5,6)),4).
move(1,((5,6),(5,5)),5).
move(1,((5,5),(4,5)),6).
move(1,((4,5),(5,5)),8).
move(1,((5,5),(5,4)),9).
move(1,((5,4),(5,3)),10).
move(1,((5,3),(4,3)),11).
move(1,((4,3),(4,2)),12).
move(1,((4,2),(4,1)),13).
move(1,((4,1),(5,1)),14).
move(1,((5,1),(6,1)),15).
move(1,((6,1),(7,1)),16).
move(1,((7,1),(8,1)),17).
move(1,((8,1),(8,2)),18).
move(1,((8,2),(8,3)),19).
move(1,((8,3),(8,4)),20).
move(1,((8,4),(8,5)),22).
move(1,((8,5),(9,5)),23).
move(1,((9,5),(9,4)),26).
move(1,((9,4),(8,4)),27).
move(1,((8,4),(7,4)),28).
move(1,((7,4),(8,4)),30).
move(1,((8,4),(8,3)),31).
move(1,((8,3),(7,3)),32).
move(1,((7,3),(7,4)),34).
move(1,((7,4),(6,4)),35).
move(1,((6,4),(6,3)),36).
move(1,((6,3),(6,4)),37).
move(1,((6,4),(7,4)),38).
move(1,((7,4),(7,3)),39).
move(1,((7,3),(8,3)),40).
move(2,((2,6),(3,6)),1).
move(2,((3,6),(3,5)),2).
move(2,((3,5),(2,5)),4).
move(2,((2,5),(2,4)),5).
move(2,((2,4),(2,3)),6).
move(2,((2,3),(2,2)),7).
move(2,((2,2),(1,2)),8).
move(2,((1,2),(1,3)),9).
move(2,((1,3),(1,4)),10).
move(2,((1,4),(2,4)),11).
move(2,((2,4),(2,5)),12).
move(2,((2,5),(3,5)),13).
move(2,((3,5),(4,5)),14).
move(2,((4,5),(5,5)),15).
move(2,((5,5),(4,5)),16).
move(2,((4,5),(5,5)),17).
move(2,((5,5),(6,5)),18).
move(2,((6,5),(7,5)),19).
move(2,((7,5),(6,5)),21).
move(2,((6,5),(7,5)),22).
move(2,((7,5),(7,4)),23).
move(2,((7,4),(7,3)),24).
move(2,((7,3),(7,2)),25).
move(2,((7,2),(7,3)),26).
move(2,((7,3),(6,3)),28).
move(2,((6,3),(6,2)),29).
move(2,((6,2),(6,1)),30).
move(2,((6,1),(7,1)),31).
move(2,((7,1),(7,2)),33).
move(2,((7,2),(7,1)),34).
move(2,((7,1),(6,1)),35).
move(2,((6,1),(7,1)),36).
move(2,((7,1),(6,1)),37).
move(2,((6,1),(5,1)),38).
move(2,((5,1),(5,2)),39).
move(2,((5,2),(5,3)),40).
move(3,((3,6),(3,5)),1).
move(3,((3,5),(2,5)),2).
move(3,((2,5),(2,4)),4).
move(3,((2,4),(3,4)),5).
move(3,((3,4),(4,4)),6).
move(3,((4,4),(5,4)),7).
move(3,((5,4),(6,4)),8).
move(3,((6,4),(7,4)),9).
move(3,((7,4),(7,3)),10).
move(3,((7,3),(8,3)),11).
move(3,((8,3),(9,3)),12).
move(3,((9,3),(9,4)),13).
move(3,((9,4),(9,3)),14).
move(3,((9,3),(10,3)),15).
move(3,((10,3),(11,3)),16).
move(3,((11,3),(11,2)),17).
move(3,((11,2),(10,2)),18).
move(3,((10,2),(10,3)),19).
move(3,((10,3),(9,3)),20).
move(3,((9,3),(9,4)),21).
move(3,((9,4),(10,4)),22).
move(3,((10,4),(9,4)),23).
move(3,((9,4),(8,4)),24).
move(3,((8,4),(8,5)),25).
move(3,((8,5),(7,5)),26).
move(3,((7,5),(6,5)),27).
move(3,((6,5),(5,5)),28).
move(3,((5,5),(4,5)),29).
move(3,((4,5),(4,4)),30).
move(3,((4,4),(4,5)),31).
move(3,((4,5),(3,5)),32).
move(3,((3,5),(2,5)),33).
move(3,((2,5),(2,4)),34).
move(3,((2,4),(2,3)),35).
move(3,((2,3),(2,2)),36).
move(3,((2,2),(2,3)),37).
move(3,((2,3),(3,3)),38).
move(3,((3,3),(3,2)),39).
move(3,((3,2),(3,3)),40).
move(4,((4,6),(5,6)),2).
move(4,((5,6),(5,5)),3).
move(4,((5,5),(5,4)),4).
move(4,((5,4),(5,3)),5).
move(4,((5,3),(4,3)),6).
move(4,((4,3),(4,4)),7).
move(4,((4,4),(3,4)),8).
move(4,((3,4),(4,4)),9).
move(4,((4,4),(4,3)),10).
move(4,((4,3),(4,4)),11).
move(4,((4,4),(4,5)),12).
move(4,((4,5),(5,5)),13).
move(4,((5,5),(5,4)),15).
move(4,((5,4),(6,4)),16).
move(4,((6,4),(6,5)),17).
move(4,((6,5),(7,5)),18).
move(4,((7,5),(7,4)),19).
move(4,((7,4),(7,3)),21).
move(4,((7,3),(8,3)),22).
move(4,((8,3),(9,3)),25).
move(4,((9,3),(9,2)),26).
move(4,((9,2),(8,2)),27).
move(4,((8,2),(7,2)),28).
move(4,((7,2),(7,3)),29).
move(4,((7,3),(6,3)),30).
move(4,((6,3),(5,3)),31).
move(4,((5,3),(4,3)),32).
move(4,((4,3),(4,4)),33).
move(4,((4,4),(5,4)),35).
move(4,((5,4),(6,4)),36).
move(4,((6,4),(7,4)),37).
move(4,((7,4),(8,4)),38).
move(4,((8,4),(9,4)),39).
move(4,((9,4),(9,3)),40).
move(5,((5,6),(6,6)),1).
move(5,((6,6),(6,5)),2).
move(5,((6,5),(6,4)),3).
move(5,((6,4),(6,3)),4).
move(5,((6,3),(6,2)),5).
move(5,((6,2),(5,2)),6).
move(5,((5,2),(5,3)),7).
move(5,((5,3),(6,3)),8).
move(5,((6,3),(6,4)),9).
move(5,((6,4),(5,4)),10).
move(5,((5,4),(4,4)),12).
move(5,((4,4),(4,5)),13).
move(5,((4,5),(4,4)),14).
move(5,((4,4),(4,5)),15).
move(5,((4,5),(4,4)),16).
move(5,((4,4),(3,4)),17).
move(5,((3,4),(3,3)),18).
move(5,((3,3),(4,3)),19).
move(5,((4,3),(5,3)),20).
move(5,((5,3),(6,3)),21).
move(5,((6,3),(7,3)),22).
move(5,((7,3),(7,2)),24).
move(5,((7,2),(6,2)),25).
move(5,((6,2),(6,3)),27).
move(5,((6,3),(6,4)),28).
move(5,((6,4),(6,5)),29).
move(5,((6,5),(6,6)),30).
move(5,((6,6),(5,6)),31).
move(5,((5,6),(5,5)),32).
move(5,((5,5),(5,4)),33).
move(5,((5,4),(5,3)),34).
move(5,((5,3),(6,3)),35).
move(5,((6,3),(6,2)),36).
move(5,((6,2),(7,2)),37).
move(5,((7,2),(6,2)),38).
move(5,((6,2),(6,3)),39).
move(5,((6,3),(7,3)),40).
move(6,((9,6),(9,5)),1).
move(6,((9,5),(9,4)),2).
move(6,((9,4),(9,3)),3).
move(6,((9,3),(10,3)),4).
move(6,((10,3),(10,2)),5).
move(6,((10,2),(9,2)),7).
move(6,((9,2),(8,2)),9).
move(6,((8,2),(8,1)),10).
move(6,((8,1),(7,1)),11).
move(6,((7,1),(7,2)),12).
move(6,((7,2),(6,2)),13).
move(6,((6,2),(6,3)),14).
move(6,((6,3),(5,3)),15).
move(6,((5,3),(4,3)),16).
move(6,((4,3),(3,3)),17).
move(6,((3,3),(3,2)),18).
move(6,((3,2),(3,3)),19).
move(6,((3,3),(3,4)),21).
move(6,((3,4),(2,4)),22).
move(6,((2,4),(2,5)),24).
move(6,((2,5),(2,6)),26).
move(6,((2,6),(3,6)),27).
move(6,((3,6),(4,6)),28).
move(6,((4,6),(5,6)),29).
move(6,((5,6),(5,5)),30).
move(6,((5,5),(6,5)),32).
move(6,((6,5),(7,5)),33).
move(6,((7,5),(8,5)),34).
move(6,((8,5),(8,4)),35).
move(6,((8,4),(7,4)),36).
move(6,((7,4),(7,3)),37).
move(6,((7,3),(6,3)),38).
move(6,((6,3),(5,3)),39).
move(6,((5,3),(4,3)),40).
move(7,((6,6),(6,5)),1).
move(7,((6,5),(7,5)),2).
move(7,((7,5),(7,4)),3).
move(7,((7,4),(7,3)),4).
move(7,((7,3),(7,2)),5).
move(7,((7,2),(6,2)),6).
move(7,((6,2),(7,2)),7).
move(7,((7,2),(7,1)),8).
move(7,((7,1),(7,2)),10).
move(7,((7,2),(7,3)),11).
move(7,((7,3),(7,4)),12).
move(7,((7,4),(7,5)),13).
move(7,((7,5),(6,5)),14).
move(7,((6,5),(6,6)),15).
move(7,((6,6),(5,6)),16).
move(7,((5,6),(4,6)),17).
move(7,((4,6),(3,6)),18).
move(7,((3,6),(2,6)),19).
move(7,((2,6),(2,5)),20).
move(7,((2,5),(2,4)),21).
move(7,((2,4),(2,5)),22).
move(7,((2,5),(3,5)),23).
move(7,((3,5),(3,4)),24).
move(7,((3,4),(3,5)),25).
move(7,((3,5),(3,4)),26).
move(7,((3,4),(2,4)),27).
move(7,((2,4),(2,3)),28).
move(7,((2,3),(2,4)),29).
move(7,((2,4),(3,4)),30).
move(7,((3,4),(4,4)),31).
move(7,((4,4),(5,4)),32).
move(7,((5,4),(6,4)),33).
move(7,((6,4),(6,5)),35).
move(7,((6,5),(5,5)),36).
move(7,((5,5),(4,5)),37).
move(7,((4,5),(3,5)),38).
move(7,((3,5),(2,5)),39).
move(7,((2,5),(2,4)),40).
move(8,((7,6),(7,5)),1).
move(8,((7,5),(7,6)),2).
move(8,((7,6),(7,5)),3).
move(8,((7,5),(7,4)),4).
move(8,((7,4),(7,3)),5).
move(8,((7,3),(7,2)),6).
move(8,((7,2),(7,1)),7).
move(8,((7,1),(6,1)),8).
move(8,((6,1),(6,2)),9).
move(8,((6,2),(6,3)),10).
move(8,((6,3),(6,4)),11).
move(8,((6,4),(5,4)),12).
move(8,((5,4),(6,4)),13).
move(8,((6,4),(5,4)),14).
move(8,((5,4),(6,4)),15).
move(8,((6,4),(7,4)),16).
move(8,((7,4),(8,4)),17).
move(8,((8,4),(9,4)),19).
move(8,((9,4),(10,4)),20).
move(8,((10,4),(10,3)),21).
move(8,((10,3),(10,2)),22).
move(8,((10,2),(10,3)),24).
move(8,((10,3),(10,4)),25).
move(8,((10,4),(10,5)),26).
move(8,((10,5),(10,6)),27).
move(8,((10,6),(9,6)),28).
move(8,((9,6),(8,6)),29).
move(8,((8,6),(7,6)),30).
move(8,((7,6),(6,6)),31).
move(8,((6,6),(5,6)),32).
move(8,((5,6),(5,5)),33).
move(8,((5,5),(6,5)),34).
move(8,((6,5),(7,5)),35).
move(8,((7,5),(6,5)),36).
move(8,((6,5),(7,5)),37).
move(8,((7,5),(8,5)),39).
move(8,((8,5),(8,4)),40).
move(9,((10,6),(10,5)),1).
move(9,((10,5),(10,4)),2).
move(9,((10,4),(10,3)),3).
move(9,((10,3),(10,4)),4).
move(9,((10,4),(9,4)),5).
move(9,((9,4),(9,5)),6).
move(9,((9,5),(8,5)),7).
move(9,((8,5),(9,5)),8).
move(9,((9,5),(9,4)),10).
move(9,((9,4),(8,4)),11).
move(9,((8,4),(8,3)),12).
move(9,((8,3),(8,2)),14).
move(9,((8,2),(7,2)),15).
move(9,((7,2),(6,2)),16).
move(9,((6,2),(5,2)),17).
move(9,((5,2),(4,2)),18).
move(9,((4,2),(4,3)),21).
move(9,((4,3),(3,3)),22).
move(9,((3,3),(2,3)),23).
move(9,((2,3),(3,3)),24).
move(9,((3,3),(4,3)),26).
move(9,((4,3),(3,3)),27).
move(9,((3,3),(4,3)),28).
move(9,((4,3),(5,3)),29).
move(9,((5,3),(5,4)),31).
move(9,((5,4),(6,4)),32).
move(9,((6,4),(7,4)),33).
move(9,((7,4),(7,5)),34).
move(9,((7,5),(8,5)),35).
move(9,((8,5),(9,5)),37).
move(9,((9,5),(8,5)),38).
move(9,((8,5),(8,4)),39).
move(9,((8,4),(7,4)),40).
move(10,((8,6),(7,6)),1).
move(10,((7,6),(6,6)),2).
move(10,((6,6),(6,5)),3).
move(10,((6,5),(6,4)),4).
move(10,((6,4),(6,3)),5).
move(10,((6,3),(5,3)),6).
move(10,((5,3),(4,3)),7).
move(10,((4,3),(5,3)),9).
move(10,((5,3),(5,2)),10).
move(10,((5,2),(5,3)),11).
move(10,((5,3),(6,3)),12).
move(10,((6,3),(5,3)),13).
move(10,((5,3),(4,3)),14).
move(10,((4,3),(4,4)),15).
move(10,((4,4),(3,4)),16).
move(10,((3,4),(3,5)),17).
move(10,((3,5),(4,5)),18).
move(10,((4,5),(3,5)),19).
move(10,((3,5),(4,5)),20).
move(10,((4,5),(4,4)),21).
move(10,((4,4),(5,4)),22).
move(10,((5,4),(5,3)),23).
move(10,((5,3),(4,3)),24).
move(10,((4,3),(5,3)),25).
move(10,((5,3),(6,3)),26).
move(10,((6,3),(6,4)),27).
move(10,((6,4),(6,5)),28).
move(10,((6,5),(7,5)),29).
move(10,((7,5),(8,5)),30).
move(10,((8,5),(9,5)),32).
move(10,((9,5),(9,4)),33).
move(10,((9,4),(8,4)),34).
move(10,((8,4),(7,4)),35).
move(10,((7,4),(7,3)),36).
move(10,((7,3),(6,3)),37).
move(10,((6,3),(6,4)),38).
move(10,((6,4),(5,4)),39).
move(10,((5,4),(4,4)),40).
move(11,((11,6),(10,6)),1).
move(11,((10,6),(10,5)),2).
move(11,((10,5),(9,5)),3).
move(11,((9,5),(9,4)),4).
move(11,((9,4),(9,3)),5).
move(11,((9,3),(9,2)),6).
move(11,((9,2),(8,2)),7).
move(11,((8,2),(7,2)),8).
move(11,((7,2),(7,3)),9).
move(11,((7,3),(8,3)),10).
move(11,((8,3),(8,2)),11).
move(11,((8,2),(9,2)),12).
move(11,((9,2),(8,2)),13).
move(11,((8,2),(7,2)),14).
move(11,((7,2),(7,3)),15).
move(11,((7,3),(8,3)),16).
move(11,((8,3),(8,2)),17).
move(11,((8,2),(7,2)),18).
move(11,((7,2),(6,2)),19).
move(11,((6,2),(6,3)),22).
move(11,((6,3),(6,4)),23).
move(11,((6,4),(7,4)),24).
move(11,((7,4),(6,4)),25).
move(11,((6,4),(5,4)),26).
move(11,((5,4),(4,4)),27).
move(11,((4,4),(5,4)),28).
move(11,((5,4),(6,4)),29).
move(11,((6,4),(6,5)),30).
move(11,((6,5),(6,4)),31).
move(11,((6,4),(6,3)),32).
move(11,((6,3),(6,2)),33).
move(11,((6,2),(7,2)),34).
move(11,((7,2),(7,3)),35).
move(11,((7,3),(8,3)),36).
move(11,((8,3),(9,3)),37).
move(11,((9,3),(10,3)),38).
move(11,((10,3),(10,4)),39).
SATISFIABLE

Models       : 1+
Calls        : 1
Time         : 2.332s (Solving: 0.68s 1st Model: 0.68s Unsat: 0.00s)
CPU Time     : 2.328s

Choices      : 11749    (Domain: 11749)
Conflicts    : 464      (Analyzed: 464)
Restarts     : 2        (Average: 232.00 Last: 183)
Model-Level  : 299.0   
Problems     : 1        (Average Length: 0.00 Splits: 0)
Lemmas       : 464      (Deleted: 0)
  Binary     : 121      (Ratio:  26.08%)
  Ternary    : 64       (Ratio:  13.79%)
  Conflict   : 464      (Average Length:   12.6 Ratio: 100.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 0        (Average Length:    0.0 Ratio:   0.00%) 
Backjumps    : 464      (Average: 24.58 Max: 267 Sum:  11407)
  Executed   : 464      (Average: 24.58 Max: 267 Sum:  11407 Ratio: 100.00%)
  Bounded    : 0        (Average:  0.00 Max:   0 Sum:      0 Ratio:   0.00%)

Rules        : 378769   (Original: 352614)
  Choice     : 440     
  Heuristic  : 25179    (Original: 25311)
Atoms        : 141757  
Bodies       : 247612   (Original: 221325)
  Count      : 3138     (Original: 3783)
Equivalences : 128048   (Atom=Atom: 470 Body=Body: 482 Other: 127096)
Tight        : Yes
Variables    : 246802   (Eliminated:    0 Frozen: 126446)
Constraints  : 678038   (Binary:  78.6% Ternary:  15.9% Other:   5.4%)

